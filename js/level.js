let body=[],map=[],cons=[],consBB=[],composite=[];const level={fallMode:"",defaultZoom:1400,onLevel:-1,levelsCleared:0,isFlipped:!1,uniqueLevels:["initial","reservoir","factory","interferometer","reactor","subway","final"],playableLevels:["labs","rooftops","skyscrapers","warehouse","highrise","office","aerie","satellite","sewers","testChamber","pavilion","lock","towers","flocculation","gravitron","substructure","corridor","furnace","superstructure"],communityLevels:["gauntlet","stronghold","basement","crossfire","vats","run","ngon","house","perplex","coliseum","tunnel","islands","temple","dripp","biohazard","stereoMadness","yingYang","staircase","fortress","commandeer","clock","buttonbutton","downpour","superNgonBros","underpass","cantilever","tlinat","ruins","ace","crimsonTowers","LaunchSite","shipwreck","unchartedCave","dojo","arena","soft","flappyGon","rings","trial"],trainingLevels:["walk","crouch","jump","hold","throw","throwAt","deflect","heal","fire","nailGun","shotGun","superBall","matterWave","missile","stack","mine","grenades","harpoon"],levels:[],start(){if(level.setConstraints(),0===level.levelsCleared?level[simulation.isTraining?"walk":"initial"]():(spawn.setSpawnList(),level[level.levels[level.onLevel]](),simulation.isCheating||build.isExperimentRun||simulation.isTraining||(localSettings.runCount+=level.levelsCleared,localSettings.levelsClearedLastGame=level.levelsCleared,localSettings.isAllowed&&localStorage.setItem("localSettings",JSON.stringify(localSettings)))),setupCanvas(),simulation.setupCamera(player.position),simulation.setZoom(),level.addToWorld(),simulation.draw.setPaths(),b.respawnBots(),m.resetHistory(),m.fieldCDcycle=m.cycle+15,tech.isDeathTechTriggered=!1,m.health<0&&tech.isNoDeath)if(tech.isDeathAvoid&&powerUps.research.count>0&&!tech.isDeathAvoidedThisLevel){tech.isDeathAvoidedThisLevel=!0,m.health=.05,powerUps.research.changeRerolls(-1),simulation.inGameConsole(`<span class='color-var'>m</span>.<span class='color-r'>research</span><span class='color-symbol'>--</span><br>${powerUps.research.count}`);for(let e=0;e<16;e++)powerUps.spawn(m.pos.x+100*(Math.random()-.5),m.pos.y+100*(Math.random()-.5),"heal",!1);m.immuneCycle<m.cycle+300&&(m.immuneCycle=m.cycle+300),simulation.wipe=function(){ctx.fillStyle="rgba(255,255,255,0.03)",ctx.fillRect(0,0,canvas.width,canvas.height)},setTimeout(function(){simulation.wipe=function(){ctx.clearRect(0,0,canvas.width,canvas.height)}},3e3)}else m.health=0,m.displayHealth(),m.death();if(tech.isDeathAvoidedThisLevel=!1,tech.isForeverDrones)if(tech.isDroneRadioactive)for(let e=0;e<.25*tech.isForeverDrones;e++)b.droneRadioactive({x:m.pos.x+30*(Math.random()-.5),y:m.pos.y+30*(Math.random()-.5)},5),bullet[bullet.length-1].endCycle=1/0;else for(let e=0;e<tech.isForeverDrones;e++)b.drone({x:m.pos.x+30*(Math.random()-.5),y:m.pos.y+30*(Math.random()-.5)},5),bullet[bullet.length-1].endCycle=1/0;tech.isDarkMatter&&spawn.darkMatter();for(let e=0;e<tech.wimpCount;e++){spawn.WIMP(),mob[mob.length-1].isDecoupling=!0;for(let e=0,t=7;e<t;e++)powerUps.spawn(level.exit.x+100*(Math.random()-.5),level.exit.y-100+100*(Math.random()-.5),"research",!1)}if(m.plasmaBall&&m.plasmaBall.fire(),localSettings.entanglement&&localSettings.entanglement.levelName===level.levels[level.onLevel]){const e=localSettings.entanglement.isHorizontalFlipped===simulation.isHorizontalFlipped?1:-1;powerUps.directSpawn(e*localSettings.entanglement.position.x,localSettings.entanglement.position.y,"entanglement",!1)}8===m.fieldMode&&(Matter.Body.setPosition(m.fieldUpgrades[8].collider,m.pos),m.fieldPosition={x:m.pos.x,y:m.pos.y},m.lastFieldPosition={x:m.pos.x,y:m.pos.y}),tech.isBlockDup&&(tech.blockDupCount=0,simulation.inGameConsole("<span class='color-var'>duplicationChance</span> <span class='color-symbol'>=</span> 0 //for anyon")),level.newLevelOrPhase(),simulation.isTraining?simulation.difficultyMode=1:(simulation.inGameConsole(`<span class='color-var'>level</span>.onLevel <span class='color-symbol'>=</span> "<span class='color-text'>${level.levels[level.onLevel]}</span>"`),document.title="n-gon: "+level.levelAnnounce())},newLevelOrPhase(){if(tech.cancelTechCount=0,tech.tokamakHealCount=0,tech.buffedGun++,tech.buffedGun>b.inventory.length-1&&(tech.buffedGun=0),(tech.isGunCycle||tech.isGunChoice)&&null!==b.activeGun&&void 0!==b.activeGun&&b.inventory.length&&(b.inventoryGun=tech.buffedGun,simulation.switchGun()),tech.isSwitchReality&&0!==level.levelsCleared&&(simulation.inGameConsole(`simulation.amplitude <span class='color-symbol'>=</span> ${Math.random()}`),m.switchWorlds("many-worlds"),simulation.trails(),powerUps.spawn(player.position.x+50,player.position.y-50*Math.random(),"tech",!1)),tech.isHealLowHealth){const e=tech.isEnergyHealth?5*Math.max(0,m.maxEnergy-m.energy):5*Math.max(0,m.maxHealth-m.health);powerUps.spawnDelay("heal",Math.floor(e),8)}if(tech.interestRate>0){let e=tech.interestRate;if(level.onLevel<level.levels.length-1){const t=level.levels[level.onLevel];"final"===t&&(e*=.2),"subway"===t&&(e*=.2)}if(powerUps.research.count>0&&e>0){const t=Math.ceil(e*powerUps.research.count);simulation.inGameConsole(`${(100*e).toFixed(0)}<span class='color-symbol'>%</span> <span class='color-m'>interest</span> on <span class='color-r'>research</span> <span class='color-symbol'>=</span> ${t>20?t+powerUps.orb.research(1):powerUps.orb.research(t)}`),powerUps.spawnDelay("research",t,4)}if(m.coupling>0&&e>0){const t=Math.ceil(e*m.coupling/3);powerUps.spawnDelay("coupling",t,4),simulation.inGameConsole(`${(100*e).toFixed(0)}<span class='color-symbol'>%</span> <span class='color-m'>interest</span> on <span class='color-coupling'>coupling</span> <span class='color-symbol'>=</span> ${t>20?t+powerUps.orb.coupling(1):powerUps.orb.coupling(t)}`)}}if(tech.isEjectOld){let e=null;for(let t=0;t<tech.tech.length;t++)tech.tech[t].count>0&&!tech.tech[t].isInstant&&(e=t);if(null!==e){const t=Math.pow(1.1,tech.tech[e].count);simulation.inGameConsole(`<strong>${t.toFixed(2)}x</strong> <strong class='color-d'>damage</strong> <em>//from obsolescence</em>`,360),m.damageDone*=t,powerUps.ejectTech(e)}}},trainingText(e){simulation.lastLogTime=0,simulation.isTextLogOpen=!0,simulation.inGameConsole(`<span style="font-size: 120%;line-height: 120%;"><span style="color:#51f;">supervised.learning</span>(<span style="color:#777; font-size: 80%;">${(Date.now()/1e3).toFixed(0)} s</span>)<span class='color-symbol'>:</span><br>${e}</span>`,1/0),simulation.isTextLogOpen=!1},trainingBackgroundColor:"#e1e1e1",custom(){},customTopLayer(){},updateDifficulty(){if(simulation.difficulty=level.levelsCleared*simulation.difficultyMode,simulation.isTraining)simulation.difficulty=1,simulation.difficultyMode=1;else{simulation.difficultyMode}simulation.healScale=1/(1+.043*simulation.difficulty),1===simulation.difficultyMode?(simulation.accelScale=1.1,simulation.CDScale=.9):(simulation.accelScale=Math.min(6,Math.pow(1.024,simulation.difficulty)),simulation.CDScale=Math.max(.15,Math.pow(.964,simulation.difficulty)))},constraintIndex:0,constraintPopUp(){simulation.paused||(simulation.paused=!0,simulation.isChoosing=!0,document.body.style.cursor="auto",document.getElementById("choose-grid").style.pointerEvents="auto",document.getElementById("choose-grid").style.transitionDuration="0s"),document.getElementById("choose-grid").classList.add("choose-grid-no-images"),document.getElementById("choose-grid").classList.remove("choose-grid"),document.getElementById("choose-grid").style.gridTemplateColumns="auto";let e=`<div class="constraint-module metallic-sparkle">${level.constraintDescription1}</div>`;level.constraintDescription2&&(e+=`<div class="constraint-module metallic-sparkle"><span>${level.constraintDescription2}</div>`),e+='<div class="choose-grid-module" id = "choose-unPause" style="font-size: 1em;text-align: center;padding: 13px;border-radius:5px;">continue</div>',document.getElementById("choose-grid").innerHTML=e,document.getElementById("choose-grid").style.opacity="1",document.getElementById("choose-grid").style.transitionDuration="0.25s",document.getElementById("choose-grid").style.visibility="visible",document.getElementById("choose-unPause").addEventListener("click",()=>{level.unPause(),document.body.style.cursor="none",localSettings.isHideImages?(document.getElementById("choose-grid").classList.add("choose-grid-no-images"),document.getElementById("choose-grid").classList.remove("choose-grid")):(document.getElementById("choose-grid").classList.add("choose-grid"),document.getElementById("choose-grid").classList.remove("choose-grid-no-images"))}),requestAnimationFrame(()=>{ctx.fillStyle="rgba(150,150,150,0.9)",ctx.fillRect(0,0,canvas.width,canvas.height)})},setConstraints(){level.constraintDescription1=level.constraintDescription2="";const e=[];for(let t=0;t<level.constraint.length;t++)level.constraint[t].remove(),e.push(t);"final"!==level.levels[level.onLevel]&&"null"!==level.levels[level.onLevel]&&"initial"!==level.levels[level.onLevel]&&!simulation.isTraining&&m.alive&&level.levelsCleared&&simulation.difficultyMode>4&&e.length?(level.constraint[level.constraintIndex].effect(),e.splice(level.constraintIndex,1),level.constraintDescription1=level.constraint[level.constraintIndex].description,level.constraintIndex++,level.constraintIndex>level.constraint.length-1&&(level.constraintIndex=0),simulation.difficultyMode>6&&e.length&&(level.constraint[level.constraintIndex].effect(),e.splice(level.constraintIndex,1),level.constraintDescription2+=level.constraint[level.constraintIndex].description,level.constraintIndex++,level.constraintIndex>level.constraint.length-1&&(level.constraintIndex=0)),document.getElementById("right-HUD-constraint").style.display="block",localSettings.isHideHUD||requestAnimationFrame(()=>{document.getElementById("right-HUD-constraint").style.opacity=1,document.getElementById("right-HUD-constraint").style.fontSize="23px",document.getElementById("right-HUD-constraint").style.top=simulation.difficultyMode>6?"6px":"9px",setTimeout(()=>{m.alive&&(document.getElementById("right-HUD-constraint").style.opacity=.35,document.getElementById("right-HUD-constraint").style.fontSize="20px",document.getElementById("right-HUD-constraint").style.top="12px")},5e3)})):document.getElementById("right-HUD-constraint").style.display="none";let t=`${level.constraintDescription1}`;level.constraintDescription1&&simulation.inGameConsole(`level<span class='color-symbol'>.</span>constraint<span class='color-symbol'>.</span>description<span class='color-symbol'>:</span> "<span style="color:#624;background-color: rgba(255, 215, 241, 0.4);border-radius:6px;padding:3px;">${level.constraintDescription1}</span>"`),simulation.difficultyMode>6&&level.constraintDescription2&&(t+=`<br>${level.constraintDescription2}`,level.constraintDescription2&&simulation.inGameConsole(`level<span class='color-symbol'>.</span>constraint<span class='color-symbol'>.</span>description<span class='color-symbol'>:</span> "<span style="color:#624;background-color: rgba(255, 215, 241, 0.4);border-radius:6px;padding:3px;">${level.constraintDescription2}</span>"`)),document.getElementById("right-HUD-constraint").innerHTML=t,level.constraintDescription1?level.constraintDescription2?document.getElementById("right-HUD").style.top="80px":document.getElementById("right-HUD").style.top="57px":document.getElementById("right-HUD").style.top="15px"},announceText(e,t,a=!1){let o=e;localSettings.isHideHUD||(level.constraintDescription1?(simulation.draw.font.word=new Path2D,a&&(o-=29*level.constraintDescription1.length/2),simulation.draw.font.drawString(level.constraintDescription1,o,t),simulation.ephemera.push({count:300,do(){ctx.beginPath();const s=this.count>280?Math.min(.05*(300-this.count),1):Math.min(this.count/20,1);ctx.strokeStyle=`rgba(255, 83, 177,${s})`,ctx.lineWidth=3,ctx.stroke(simulation.draw.font.word),this.count--,this.count<0&&(simulation.removeEphemera(this),level.constraintDescription2&&(simulation.draw.font.word=new Path2D,a&&(o=e-29*level.constraintDescription2.length/2),simulation.draw.font.drawString(level.constraintDescription2,o,t),simulation.ephemera.push({count:300,do(){const e=this.count>280?Math.min(.05*(300-this.count),1):Math.min(this.count/20,1);ctx.strokeStyle=`rgba(255, 83, 177,${e})`,ctx.lineWidth=3,ctx.beginPath(),ctx.stroke(simulation.draw.font.word),this.count--,this.count<0&&simulation.removeEphemera(this)}})))}})):(simulation.draw.font.word=new Path2D,a&&(o-=29*level.levels[level.onLevel].length/2),simulation.draw.font.drawString(level.levels[level.onLevel],o,t),simulation.ephemera.push({count:240,do(){ctx.strokeStyle=`rgba(255, 255, 255,${Math.min(this.count/20,1)})`,ctx.lineWidth=3,ctx.beginPath(),ctx.stroke(simulation.draw.font.word),this.count--,this.count<0&&simulation.removeEphemera(this)}})))},announceTextTraining(e,t,a){let o=e-29*a.length/2;simulation.draw.font.word=new Path2D,simulation.draw.font.drawString(a,o,t),simulation.ephemera.push({onLevel:level.levels[level.onLevel],do(){m.alive&&this.onLevel===level.levels[level.onLevel]||simulation.removeEphemera(this),ctx.strokeStyle="rgb(200, 200, 200)",ctx.lineWidth=2+Math.random(),ctx.beginPath(),ctx.stroke(simulation.draw.font.word)}})},constraintDescription1:"",constraintDescription2:"",constraint:[{description:"reduced healing",effect(){level.isLowHeal=!0},remove(){level.isLowHeal=!1}},{description:"no health bar",effect(){level.isHideHealth=!0,document.getElementById("health").style.display="none",document.getElementById("health-bg").style.display="none"},remove(){level.isHideHealth=!1,tech.isEnergyHealth?(document.getElementById("health").style.display="none",document.getElementById("health-bg").style.display="none"):level.isHideHealth||(document.getElementById("health").style.display="inline",document.getElementById("health-bg").style.display="inline")}},{description:"reduced energy regen",effect(){level.isReducedRegen=.5},remove(){level.isReducedRegen=1}},{description:"lower max health",effect(){level.isReducedHealth=!0,m.setMaxHealth()},remove(){level.isReducedHealth?(level.isReducedHealth=!1,m.setMaxHealth(),m.addHealth(level.reducedHealthLost/simulation.healScale),level.reducedHealthLost=0):level.isReducedHealth=!1}},{description:"spawn wimps",effect(){simulation.ephemera.push({time:0,levelName:level.levels[level.onLevel],do(){this.time++,level.levels[level.onLevel]===this.levelName?this.time>3e3&&!(this.time%540)&&spawn.WIMP(level.enter.x,level.enter.y):simulation.removeEphemera(this)}})},remove(){}},{description:"low damage after power ups",effect(){level.isNoDamage=!0,level.noDamageCycle=0},remove(){level.isNoDamage=!1,level.noDamageCycle=0}},{description:"taking damage heals mobs",effect(){level.isMobHealPlayerDamage=!0},remove(){level.isMobHealPlayerDamage=!1}},{description:"death heals mobs",effect(){level.isMobDeathHeal=!0},remove(){level.isMobDeathHeal=!1}},{description:"more shielded mobs",effect(){level.isMobShields=!0},remove(){level.isMobShields=!1}},{description:"higher JUNK chance",effect(){level.junkAdded=.4},remove(){level.junkAdded=0}},{description:"fewer choices",effect(){level.fewerChoices=!0},remove(){level.fewerChoices=!1}},{description:"power ups in stasis",effect(){level.isNextLevelPowerUps=!0;for(let e=powerUp.length-1;e>-1;e--)powerUps.powerUpStorage.push({name:powerUp[e].name,size:powerUp[e].size}),Matter.Composite.remove(engine.world,powerUp[e]),powerUp.splice(e,1)},remove(){if(level.isNextLevelPowerUps=!1,powerUps.powerUpStorage.length){const e=10;let t=0,a=()=>{if(powerUps.powerUpStorage.length&&m.alive&&powerUp.length<300){if(requestAnimationFrame(a),!(simulation.paused||simulation.isChoosing||simulation.cycle%e)){const e={x:m.pos.x+70*(Math.random()-.5),y:m.pos.y+70*(Math.random()-.5)};powerUps.directSpawn(e.x,e.y,powerUps.powerUpStorage[t].name,!0,powerUps.powerUpStorage[t].size),powerUps.powerUpStorage.splice(t,1)}}else powerUps.powerUpStorage=[]};requestAnimationFrame(a)}}},{description:"some mobs respawn",effect(){level.isMobRespawn=!0},remove(){level.isMobRespawn=!1}},{description:"no duplication",effect(){level.isNoDuplicate=!0},remove(){level.isNoDuplicate=!1}},{description:"double ammo cost",effect(){level.is2xAmmo=!0},remove(){level.is2xAmmo=!1}},{description:"lower max energy",effect(){level.isReducedEnergy=!0,m.setMaxEnergy()},remove(){level.isReducedEnergy?(level.isReducedEnergy=!1,m.setMaxEnergy()):level.isReducedEnergy=!1}},{description:"slow bots",effect(){requestAnimationFrame(()=>{level.isSlowBots=!0,b.clearPermanentBots(),b.respawnBots()})},remove(){level.isSlowBots?(level.isSlowBots=!1,b.clearPermanentBots(),b.respawnBots()):level.isSlowBots=!1}},{description:"blurry choices",effect(){level.blurryChoices=!0},remove(){level.blurryChoices=!1}}],isMobShields:!1,junkAdded:0,isNextLevelPowerUps:!1,isMobRespawn:!1,fewerChoices:!1,blurryChoices:!1,isNoDuplicate:!1,is2xAmmo:!1,isReducedEnergy:!1,isSlowBots:!1,isMobDeathHeal:!1,isMobHealPlayerDamage:!1,isNoDamage:!1,noDamageCycle:0,reducedHealthLost:0,isReducedHealth:!1,isReducedRegen:1,isHideHealth:!1,isNoPause:!1,isLowHeal:!1,levelAnnounce(){const e=simulation.isCheating?"(testing)":"";return 0===level.levelsCleared?`initial ${e}`:`${level.levelsCleared} ${level.levels[level.onLevel]} ${e}`},announceMobTypes(){simulation.inGameConsole(`spawn<span class='color-symbol'>.</span>${spawn.pickList[0]}<span class='color-symbol'>(</span>x<span class='color-symbol'>,</span>y<span class='color-symbol'>)</span> //Tier ${spawn.mobTierSpawnOrder[level.levelsCleared-1]}`),simulation.inGameConsole(`spawn<span class='color-symbol'>.</span>${spawn.pickList[1]}<span class='color-symbol'>(</span>x<span class='color-symbol'>,</span>y<span class='color-symbol'>)</span> //Tier ${spawn.mobTierSpawnOrder[level.levelsCleared]}`)},disableExit:!1,nextLevel(){if(!level.disableExit){if(level.levelsCleared++,level.onLevel++,level.updateDifficulty(),simulation.isTraining){if(level.levelsCleared=1,level.onLevel>level.levels.length-1)return level.disableExit=!0,document.getElementById("health").style.display="none",document.getElementById("health-bg").style.display="none",document.getElementById("defense-bar").style.display="none",document.getElementById("damage-bar").style.display="none",document.getElementById("text-log").style.display="none",document.getElementById("fade-out").style.opacity=1,void setTimeout(function(){simulation.paused=!0,level.disableExit=!1,engine.world.bodies.forEach(e=>{Matter.Composite.remove(engine.world,e)}),Engine.clear(engine),simulation.splashReturn()},6e3)}else level.onLevel>level.levels.length-1&&(level.onLevel=0);for(let e=0;e<tech.tech.length;e++)tech.tech[e].isLost&&(tech.tech[e].isLost=!1);if(simulation.updateTechHUD(),simulation.clearNow=!0,!localSettings.isHideHUD&&m.alive&&("final"===level.levels[level.onLevel]||"reactor"===level.levels[level.onLevel])){simulation.paused||(simulation.paused=!0,simulation.isChoosing=!0),document.getElementById("choose-grid").style.gridTemplateColumns="250px";let e='<div class="card-background" style="height:auto; border: none; background-color: transparent; line-height: 160%; background-color: var(--card-color); font-size: 1.15em;"> <div class="card-text">';for(let t=0;t<level.levels.length;t++)t<level.levelsCleared?e+=`<div style="user-select: none;">${level.levels[t]}</div>`:t===level.levelsCleared?e+=`<div class="unblur" style="user-select: none;"><strong>${level.levels[t]}</strong></div>`:e+=`<div class= "blur-text" style="user-select: none;">${level.levels[t]}</div>`;e+="</div></div>",document.getElementById("choose-grid").innerHTML=e,document.getElementById("choose-grid").style.opacity="1",document.getElementById("choose-grid").style.transitionDuration="0.25s",document.getElementById("choose-grid").style.visibility="visible",simulation.draw.cons(),simulation.draw.body(),level.customTopLayer();let t=countMax=simulation.testing?0:240,a=()=>{t--,t>0?requestAnimationFrame(a):(m.immuneCycle<m.cycle+15&&(m.immuneCycle=m.cycle+30),simulation.paused&&requestAnimationFrame(cycle),m.alive&&(simulation.paused=!1),simulation.isChoosing=!1,build.unPauseGrid(),document.getElementById("choose-grid").style.opacity="0",setTimeout(()=>{document.getElementById("choose-grid").style.visibility="hidden"},1e3)),simulation.wipe(),m.look(),simulation.camera();ctx.setLineDash([15*(countMax-t),15*t]),simulation.draw.wireFrame(),ctx.setLineDash([]),ctx.restore(),simulation.drawCursor()};requestAnimationFrame(a)}}},unPause(){m.immuneCycle<m.cycle+15&&(m.immuneCycle=m.cycle+30),simulation.paused&&requestAnimationFrame(cycle),m.alive&&(simulation.paused=!1),simulation.isChoosing=!1,build.unPauseGrid(),document.getElementById("choose-grid").style.opacity="0",document.getElementById("choose-grid").style.visibility="hidden"},populateLevels(){if(document.getElementById("banned").value){const e=document.getElementById("banned").value.replace(/,/g," ").replace(/\s\s+/g," ").replace(/[^\w\s]/g,"").split(" ");for(let t=0;t<e.length;t++){const a=level.communityLevels.indexOf(e[t]);-1!==a&&(level.communityLevels.splice(a,1),requestAnimationFrame(()=>{simulation.inGameConsole(`banned level: <strong style="color: '#f00';">${e[t]}</strong>`)}))}for(let t=0;t<e.length&&!(level.playableLevels.length+level.communityLevels.length*simulation.isCommunityMaps<10);t++){const a=level.playableLevels.indexOf(e[t]);-1!==a&&(level.playableLevels.splice(a,1),requestAnimationFrame(()=>{simulation.inGameConsole(`banned level: <strong style="color: '#f00';">${e[t]}</strong>`)}))}}document.getElementById("seed").value&&(Math.initialSeed=String(document.getElementById("seed").value)),Math.seed=Math.abs(Math.hash(Math.initialSeed)),simulation.isTraining?(simulation.isHorizontalFlipped=!1,level.levels=level.trainingLevels.slice(0),simulation.isCommunityMaps&&level.trainingLevels.push("diamagnetism")):(level.levels=level.playableLevels.slice(0),simulation.isCommunityMaps?(level.levels=level.levels.concat(level.communityLevels),simulation.isHorizontalFlipped=!1):simulation.isHorizontalFlipped=Math.seededRandom()<.5,level.levels=seededShuffle(level.levels),level.levels.length=9,pick=["interferometer","factory","reservoir"],level.levels.splice(6,0,"reactor"),level.levels.push(pick[Math.floor(Math.random()*pick.length)]),(!build.isExperimentSelection||build.hasExperimentalMode&&!simulation.isCheating)&&(level.levels.unshift("initial"),level.levels.push("subway"),level.levels.push("final")))},flipHorizontal(){const e=e=>{for(let t=0,a=e.length;t<a;t++)Matter.Body.setPosition(e[t],{x:-e[t].position.x,y:e[t].position.y})};e(map),e(body),e(mob),e(powerUp);for(let e=0,t=cons.length;e<t;e++)cons[e].pointA.x*=-1,cons[e].pointB.x*=-1;for(let e=0,t=consBB.length;e<t;e++)consBB[e].pointA.x*=-1,consBB[e].pointB.x*=-1;level.exit.x=-level.exit.x-100},flipVertical(){const e=e=>{for(let t=0,a=e.length;t<a;t++)Matter.Body.setPosition(e[t],{x:e[t].position.x,y:-e[t].position.y-player.position.y})};e(map),e(body),e(mob),e(powerUp),Matter.Body.setPosition(player,{x:player.position.x,y:-2*player.position.y})},exitCount:0,setPosToSpawn(e,t){m.spawnPos.x=m.pos.x=e,m.spawnPos.y=m.pos.y=t,level.enter.x=m.spawnPos.x-50,level.enter.y=m.spawnPos.y+20,m.transX=m.transSmoothX=canvas.width2-m.pos.x,m.transY=m.transSmoothY=canvas.height2-m.pos.y,m.Vx=m.spawnVel.x,m.Vy=m.spawnVel.y,player.force.x=0,player.force.y=0,Matter.Body.setPosition(player,m.spawnPos),Matter.Body.setVelocity(player,m.spawnVel),m.fieldPosition={x:m.pos.x,y:m.pos.y},m.fieldAngle=m.angle},enter:{x:0,y:0,draw(){ctx.beginPath(),ctx.moveTo(level.enter.x,level.enter.y+30),ctx.lineTo(level.enter.x,level.enter.y-80),ctx.bezierCurveTo(level.enter.x,level.enter.y-170,level.enter.x+100,level.enter.y-170,level.enter.x+100,level.enter.y-80),ctx.lineTo(level.enter.x+100,level.enter.y+30),ctx.lineTo(level.enter.x,level.enter.y+30),ctx.fillStyle="#ccc",ctx.fill()}},exit:{x:0,y:0,drawAndCheck(){if(player.position.x>level.exit.x&&player.position.x<level.exit.x+100&&player.position.y>level.exit.y-150&&player.position.y<level.exit.y-0&&player.velocity.y<.15?level.exitCount+=m.health<0?.5:3:level.exitCount>0&&(level.exitCount-=3),ctx.beginPath(),ctx.moveTo(level.exit.x,level.exit.y+30),ctx.lineTo(level.exit.x,level.exit.y-80),ctx.bezierCurveTo(level.exit.x,level.exit.y-170,level.exit.x+100,level.exit.y-170,level.exit.x+100,level.exit.y-80),ctx.lineTo(level.exit.x+100,level.exit.y+30),ctx.lineTo(level.exit.x,level.exit.y+30),ctx.fillStyle="#0ff",ctx.fill(),level.exitCount>0&&(ctx.beginPath(),ctx.moveTo(level.exit.x,level.exit.y+40),ctx.lineTo(level.exit.x,level.exit.y-80),ctx.bezierCurveTo(level.exit.x,level.exit.y-148,level.exit.x+50,level.exit.y-148,level.exit.x+50,level.exit.y-148),ctx.moveTo(level.exit.x+100,level.exit.y+40),ctx.lineTo(level.exit.x+100,level.exit.y-80),ctx.bezierCurveTo(level.exit.x+100,level.exit.y-148,level.exit.x+50,level.exit.y-148,level.exit.x+50,level.exit.y-148),ctx.setLineDash([200,200]),ctx.lineDashOffset=Math.max(-15,185-2.1*level.exitCount),m.health<0?(ctx.strokeStyle="#f00",ctx.lineWidth=6+.1*level.exitCount):(ctx.strokeStyle="#444",ctx.lineWidth=2),ctx.stroke(),ctx.setLineDash([0,0]),level.exitCount>100))if(level.exitCount=0,simulation.isChoosing||!m.alive||simulation.isTraining||simulation.isCheating||0!==b.inventory.length||0!==level.levelsCleared||!localSettings.isTrainingNotAttempted)level.nextLevel();else{simulation.paused||(simulation.paused=!0,simulation.isChoosing=!0,document.body.style.cursor="auto",document.getElementById("choose-grid").style.pointerEvents="auto",document.getElementById("choose-grid").style.transitionDuration="0s"),document.getElementById("choose-grid").classList.add("choose-grid-no-images"),document.getElementById("choose-grid").classList.remove("choose-grid"),document.getElementById("choose-grid").style.gridTemplateColumns="350px";let e=`\n                            <div class="choose-grid-module" id = "choose-training" style = "font-size: 1em; padding:10px;color:#333;">\n                                <h2 style="text-align: center;letter-spacing: 5px;">training</h2>\n                                Begin the <strong>guided tutorial</strong> that shows how to use ${powerUps.orb.field()} and ${powerUps.orb.gun()}.\n                            </div>\n                            <div class="choose-grid-module" id = "choose-unPause" style = "font-size: 1em; padding:10px;color:#333;">\n                                <h2 style="text-align: center; letter-spacing: 7px;">play</h2>\n                                Begin the <strong>standard game</strong> where you progress through <strong>13</strong> random levels and beat the final boss.\n                            </div>`;document.getElementById("choose-grid").innerHTML=e,document.getElementById("choose-grid").style.opacity="1",document.getElementById("choose-grid").style.transitionDuration="0.25s",document.getElementById("choose-grid").style.visibility="visible",document.getElementById("choose-training").addEventListener("click",()=>{level.unPause(),document.body.style.cursor="none",simulation.isTraining=!0,level.levelsCleared--,level.onLevel--,simulation.isHorizontalFlipped=!1,level.levels=level.trainingLevels.slice(0),level.nextLevel(),localSettings.isHideImages?(document.getElementById("choose-grid").classList.add("choose-grid-no-images"),document.getElementById("choose-grid").classList.remove("choose-grid")):(document.getElementById("choose-grid").classList.add("choose-grid"),document.getElementById("choose-grid").classList.remove("choose-grid-no-images"))}),document.getElementById("choose-unPause").addEventListener("click",()=>{level.unPause(),document.body.style.cursor="none",level.nextLevel(),localSettings.isHideImages?(document.getElementById("choose-grid").classList.add("choose-grid-no-images"),document.getElementById("choose-grid").classList.remove("choose-grid")):(document.getElementById("choose-grid").classList.add("choose-grid"),document.getElementById("choose-grid").classList.remove("choose-grid-no-images"))}),requestAnimationFrame(()=>{ctx.fillStyle="rgba(150,150,150,0.9)",ctx.fillRect(0,0,canvas.width,canvas.height)})}}},addToWorld(){for(let e=0;e<map.length;e++)map[e].collisionFilter.category=cat.map,map[e].collisionFilter.mask=cat.player|cat.map|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet,Matter.Body.setStatic(map[e],!0),Composite.add(engine.world,map[e])},spinner(e,t,a,o,s=.001,n=0,l=.001,i=0){e+=a/2,t+=o/2;const c=body[body.length]=Bodies.rectangle(e,t,a,o,{collisionFilter:{category:cat.body,mask:cat.player|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet},isNotHoldable:!0,frictionAir:l,friction:1,frictionStatic:1,restitution:0});Matter.Body.setAngle(c,n),Matter.Body.setAngularVelocity(c,i),Matter.Body.setDensity(c,s),Composite.add(engine.world,c),c.classType="body";const p=Constraint.create({pointA:{x:c.position.x,y:c.position.y},bodyB:c,stiffness:1,damping:1});return Composite.add(engine.world,p),p},rotor(e,t,a,o,s=.001,n=0,l=.001,i=0,c=5e-4){e+=a/2,t+=o/2;const p=body[body.length]=Bodies.rectangle(e,t,a,o,{isRotor:!0,collisionFilter:{category:cat.body,mask:cat.player|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet},isNotHoldable:!0,frictionAir:l,friction:1,frictionStatic:1,restitution:0,rotationForce:c});Matter.Body.setAngle(p,n),Matter.Body.setAngularVelocity(p,i),Matter.Body.setDensity(p,s);const r=Constraint.create({pointA:{x:p.position.x,y:p.position.y},bodyB:p,stiffness:1,damping:1});return Composite.add(engine.world,r),p.center={x:p.position.x,y:p.position.y},p.rotate=function(){m.isTimeDilated?Matter.Body.setAngularVelocity(this,0):Matter.Body.applyForce(this,{x:this.position.x+100,y:this.position.y+100},{x:this.rotationForce*this.mass,y:0})},Composite.add(engine.world,p),p.classType="body",p},boost:(e,t,a=1e3,o=Math.PI/2)=>o!==Math.PI/2?(o*=-1,who=map[map.length]=Matter.Bodies.fromVertices(e+50,t+35,Vertices.fromPath("80 40 -80 40 -50 -40 50 -40"),{collisionFilter:{category:cat.body,mask:cat.player|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet},query(){const e=Vector.add(this.position,Vector.rotate({x:100,y:0},o));query=t=>{const s=Matter.Query.ray(t,this.position,e,100);s.length>0&&Matter.Body.setVelocity(s[0].bodyA,Vector.rotate({x:1.21*Math.sqrt(Math.abs(a)),y:0},o))},query(body),query(mob),query(bullet),query(powerUp);Matter.Query.ray([player],this.position,e,100).length>0&&(Matter.Body.setVelocity(player,Vector.rotate({x:1.21*Math.sqrt(Math.abs(a)),y:0},o)),m.buttonCD_jump=0,m.hardLandCD=0);const t=this.vertices[0],s=this.vertices[1];let n=Vector.rotate({x:60,y:0},o),l=Vector.add(s,n),i=Vector.add(t,n);ctx.beginPath(),ctx.moveTo(t.x,t.y),ctx.lineTo(s.x,s.y),ctx.lineTo(l.x,l.y),ctx.lineTo(i.x,i.y),ctx.fillStyle="rgba(200,0,255,0.05)",ctx.fill(),n=Vector.rotate({x:20,y:0},o),l=Vector.add(s,n),i=Vector.add(t,n),ctx.beginPath(),ctx.moveTo(t.x,t.y),ctx.lineTo(s.x,s.y),ctx.lineTo(l.x,l.y),ctx.lineTo(i.x,i.y),ctx.fillStyle="rgba(200,0,255,0.15)",ctx.fill()}}),Matter.Body.rotate(who,o+Math.PI/2),who):(who=map[map.length]=Matter.Bodies.fromVertices(e+50,t+35,Vertices.fromPath("120 40 -120 40 -50 -40 50 -40"),{collisionFilter:{category:cat.body,mask:cat.player|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet},boostBounds:{min:{x:e,y:t-20},max:{x:e+100,y:t}},query(){query=e=>{Matter.Query.region(e,this.boostBounds).length>0&&(list=Matter.Query.region(e,this.boostBounds),Matter.Body.setVelocity(list[0],{x:list[0].velocity.x+2.5*(Math.random()-.5),y:-1.21*Math.sqrt(Math.abs(a))}))},query(body),query(mob),query(bullet),query(powerUp),Matter.Query.region([player],this.boostBounds).length>0&&!input.down&&(m.buttonCD_jump=0,m.hardLandCD=0,player.velocity.y>26?Matter.Body.setVelocity(player,{x:player.velocity.x,y:-15}):Matter.Body.setVelocity(player,{x:player.velocity.x+2.5*(Math.random()-.5),y:-1.21*Math.sqrt(Math.abs(a))})),ctx.fillStyle="rgba(200,0,255,0.15)",ctx.fillRect(this.boostBounds.min.x,this.boostBounds.min.y-10,100,30),ctx.fillStyle="rgba(200,0,255,0.05)",ctx.fillRect(this.boostBounds.min.x,this.boostBounds.min.y-50,100,70)}}),who),elevator(e,t,a,o,s,n=.003,l={up:.01,down:.2},i=!1){e+=a/2;const c=(s+=o/2)-(t+=o/2);n+=simulation.g;const p=body[body.length]=Bodies.rectangle(e,i?s:t,a,o,{collisionFilter:{category:cat.body,mask:cat.player|cat.body|cat.bullet|cat.mob|cat.mobBullet},inertia:1/0,isNotHoldable:!0,friction:1,frictionStatic:1,restitution:0,frictionAir:.001,holdX:e,move(){m.isTimeDilated||(this.isUp?(this.force.y-=n*this.mass,this.position.y<s&&(this.isUp=!1,this.frictionAir=l.down,Matter.Body.setPosition(this,{x:this.holdX,y:s}),Matter.Body.setVelocity(this,{x:0,y:0}))):this.position.y+10*this.velocity.y>t&&(Matter.Body.setVelocity(this,{x:0,y:.7*this.velocity.y}),this.position.y+this.velocity.y>t&&(this.isUp=!0,this.frictionAir=l.up)),Matter.Body.setVelocity(this,{x:0,y:this.velocity.y})),this.position.y<s?Matter.Body.setPosition(this,{x:this.holdX,y:s}):this.position.y>t&&Matter.Body.setPosition(this,{x:this.holdX,y:t}),Matter.Body.setPosition(this,{x:this.holdX,y:this.position.y})},moveOnTouch(){m.isTimeDilated||(this.isUp?(this.force.y-=n*this.mass,this.position.y<s&&(this.isUp=!1,this.frictionAir=l.down,Matter.Body.setPosition(this,{x:this.holdX,y:s}),Matter.Body.setVelocity(this,{x:0,y:0}))):this.position.y+10*this.velocity.y>t&&Matter.Body.setVelocity(this,{x:0,y:.7*this.velocity.y}),Matter.Body.setVelocity(this,{x:0,y:this.velocity.y})),ctx.beginPath(),ctx.moveTo(e,t+o/2),ctx.lineTo(e,s-o/2),ctx.strokeStyle="rgba(0,0,0,0.2)",ctx.lineWidth="2",ctx.stroke(),ctx.beginPath(),ctx.moveTo(this.vertices[0].x,this.vertices[0].y);for(let e=1;e<this.vertices.length;e++)ctx.lineTo(this.vertices[e].x,this.vertices[e].y);ctx.lineTo(this.vertices[0].x,this.vertices[0].y),ctx.lineWidth="2",ctx.strokeStyle="#333",ctx.fillStyle="rgba(200,200,200,1)",this.position.y<s?Matter.Body.setPosition(this,{x:this.holdX,y:s}):this.position.y>t&&(ctx.fillStyle=`rgba(255,255,255,${.5+.15*Math.random()})`,Matter.Body.setPosition(this,{x:this.holdX,y:t}),this.force.y-=this.mass*simulation.g,Matter.Query.collides(this,[player]).length&&(this.isUp=!0,this.frictionAir=l.up)),ctx.fill(),ctx.stroke(),Matter.Body.setPosition(this,{x:this.holdX,y:this.position.y})},off(){Matter.Body.setPosition(this,{x:this.holdX,y:this.position.y}),Matter.Body.setVelocity(this,{x:0,y:this.velocity.y})},constraint:this.null,addConstraint(){this.constraint=Constraint.create({pointA:{x:this.position.x,y:this.position.y},bodyB:this,stiffness:.01,damping:.3}),Composite.add(engine.world,this.constraint)},removeConstraint(){Composite.remove(engine.world,this.constraint,!0)},drawTrack(){ctx.fillStyle="#ccc",ctx.fillRect(this.holdX,t,5,c)}});return Matter.Body.setDensity(p,.01),Composite.add(engine.world,p),p.classType="body",p},toggle(e,t,a=!1,o=!1){spawn.mapVertex(e+65,t+2,"70 10 -70 10 -40 -10 40 -10"),map[map.length-1].restitution=0,map[map.length-1].friction=1,map[map.length-1].frictionStatic=1;body[body.length]=Bodies.rectangle(e+60,t+7.5,120,15,{friction:.05,frictionAir:.01});let s=body[body.length-1];return s.collisionFilter.category=cat.body,s.collisionFilter.mask=cat.player|cat.body,s.isNotHoldable=!0,s.restitution=0,Matter.Body.setDensity(s,.003),a?Matter.Body.setAngle(s,-.25*Math.PI):Matter.Body.setAngle(s,-.75*Math.PI),cons[cons.length]=Constraint.create({pointA:{x:e+65,y:t-5},bodyB:s,stiffness:1,length:0}),Composite.add(engine.world,[cons[cons.length-1]]),Composite.add(engine.world,s),s.classType="body",{flip:s,isOn:a,query(){const e={right:-.75*Math.PI,left:-.25*Math.PI};if(s.angle<e.right?(Matter.Body.setAngle(s,e.right),Matter.Body.setAngularVelocity(s,0),o||(this.isOn=!1)):s.angle>e.left&&(Matter.Body.setAngle(s,e.left),Matter.Body.setAngularVelocity(s,0),this.isOn=!0),this.isOn){ctx.beginPath(),ctx.moveTo(s.vertices[0].x,s.vertices[0].y);for(let e=1;e<s.vertices.length;e++)ctx.lineTo(s.vertices[e].x,s.vertices[e].y);ctx.lineTo(s.vertices[0].x,s.vertices[0].y),ctx.fillStyle="#3df",ctx.fill(),ctx.lineWidth=1,ctx.strokeStyle=color.blockS,ctx.stroke()}}}},button:(e,t,a=126,o=!0,s=!1,n="hsl(0, 100%, 70%)")=>(o&&(s?spawn.mapVertex(e+65,t-3,"100 -10 -100 -10 -70 10 70 10"):spawn.mapVertex(e+65,t+2,"100 10 -100 10 -70 -10 70 -10"),map[map.length-1].restitution=0,map[map.length-1].friction=1,map[map.length-1].frictionStatic=1),s?{isUp:!1,min:{x:e+2,y:t-1},max:{x:e+a,y:t},width:a,height:20,query(){if(0===Matter.Query.region(body,this).length&&0===Matter.Query.region([player],this).length)this.isUp=!0;else{if(!0===this.isUp){const e=Matter.Query.region(body,this);e.length>0&&(e[0].bounds.max.x-e[0].bounds.min.x<150&&e[0].bounds.max.y-e[0].bounds.min.y<150&&Matter.Body.setPosition(e[0],{x:this.min.x+a/2,y:e[0].position.y}),Matter.Body.setVelocity(e[0],{x:0,y:0}))}this.isUp=!1}},queryRemove(){if(0===Matter.Query.region(body,this).length&&0===Matter.Query.region([player],this).length)this.isUp=!0;else{if(!0===this.isUp){const e=Matter.Query.region(body,this);if(e.length>0){Matter.Composite.remove(engine.world,e[0]);for(let t=0;t<body.length;t++)if(body[t]===e[0]){body.splice(t,1);break}Matter.Body.setVelocity(e[0],{x:0,y:0})}}this.isUp=!1}},queryPlayer(){0===Matter.Query.region([player],this).length?this.isUp=!0:this.isUp=!1},draw(){ctx.fillStyle=n,this.isUp?ctx.fillRect(this.min.x,this.min.y,this.width,20):ctx.fillRect(this.min.x,this.min.y-12,this.width,25)}}:{isUp:!1,min:{x:e+2,y:t-11},max:{x:e+a,y:t-10},width:a,height:20,query(){if(0===Matter.Query.region(body,this).length&&0===Matter.Query.region([player],this).length)this.isUp=!0;else{if(!0===this.isUp){const e=Matter.Query.region(body,this);e.length>0&&(e[0].bounds.max.x-e[0].bounds.min.x<150&&e[0].bounds.max.y-e[0].bounds.min.y<150&&Matter.Body.setPosition(e[0],{x:this.min.x+a/2,y:e[0].position.y}),Matter.Body.setVelocity(e[0],{x:0,y:0}))}this.isUp=!1}},queryRemove(){if(0===Matter.Query.region(body,this).length&&0===Matter.Query.region([player],this).length)this.isUp=!0;else{if(!0===this.isUp){const e=Matter.Query.region(body,this);if(e.length>0){Matter.Composite.remove(engine.world,e[0]);for(let t=0;t<body.length;t++)if(body[t]===e[0]){body.splice(t,1);break}Matter.Body.setVelocity(e[0],{x:0,y:0})}}this.isUp=!1}},queryPlayer(){0===Matter.Query.region([player],this).length?this.isUp=!0:this.isUp=!1},draw(){ctx.fillStyle=n,this.isUp?ctx.fillRect(this.min.x,this.min.y-10,this.width,20):ctx.fillRect(this.min.x,this.min.y-3,this.width,25)}}),vanish(e,t,a,o,s=!1,n={x:0,y:400}){const l=[{x:e+=a/2,y:t+=o/2,index:0,isInternal:!1},{x:e+a,y:t,index:1,isInternal:!1},{x:e+a,y:t+o,index:4,isInternal:!1},{x:e,y:t+o,index:3,isInternal:!1}],i=body[body.length]=Bodies.fromVertices(e,t,l,{collisionFilter:{category:cat.map,mask:cat.player|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet},inertia:1/0,isNotHoldable:!0,isNonStick:!0,isTouched:!1,fadeTime:10+Math.ceil(.25*a),fadeCount:null,isThere:!0,returnTime:120,returnCount:0,shrinkVertices:n=>s?[{x:e,y:t*n,index:0,isInternal:!1},{x:e+a,y:t*n,index:1,isInternal:!1},{x:e+a,y:(t+o)*n,index:4,isInternal:!1},{x:e,y:(t+o)*n,index:3,isInternal:!1}]:[{x:e*n,y:t,index:0,isInternal:!1},{x:(e+a)*n,y:t,index:1,isInternal:!1},{x:(e+a)*n,y:t+o,index:4,isInternal:!1},{x:e*n,y:t+o,index:3,isInternal:!1}],query(){if(this.isThere)this.isTouched?(m.isTimeDilated||(this.fadeCount--,Matter.Body.setVertices(this,this.shrinkVertices(Math.max(this.fadeCount/this.fadeTime,.03)))),this.fadeCount<1&&(Matter.Body.setPosition(this,n),this.isThere=!1,this.isTouched=!1,this.collisionFilter.mask=0,this.returnCount=this.returnTime,Matter.Body.setVertices(this,this.shrinkVertices(1)),Matter.Body.setVertices(this,l))):Matter.Query.collides(this,[player]).length&&(this.isTouched=!0,this.fadeCount=this.fadeTime);else if(!m.isTimeDilated&&(this.returnCount--,this.returnCount<1))if(Matter.Body.setPosition(this,{x:e,y:t}),Matter.Query.collides(this,[player]).length)Matter.Body.setPosition(this,n),this.returnCount=15;else{this.isThere=!0,this.collisionFilter.mask=cat.player|cat.mob|cat.body|cat.bullet|cat.powerUp|cat.mobBullet,this.fadeCount=this.fadeTime;const e=Matter.Query.collides(this,body);for(let t=0;t<e.length;t++)if(e[t].bodyB!==this&&e[t].bodyB!==m.holdingTarget){Matter.Composite.remove(engine.world,e[t].bodyB),e[t].bodyB.isRemoveMeNow=!0;for(let e=1;e<body.length;e++)if(body[e].isRemoveMeNow){body.splice(e,1);break}}}ctx.beginPath();const a=this.vertices;ctx.moveTo(a[0].x,a[0].y);for(let e=1;e<a.length;++e)ctx.lineTo(a[e].x,a[e].y);ctx.lineTo(a[0].x,a[0].y),ctx.fillStyle="#586370",ctx.fill()}});return Matter.Body.setStatic(i,!0),Composite.add(engine.world,i),simulation.isHorizontalFlipped&&(e*=-1),i},door(e,t,a,o,s,n=1){e+=a/2,t+=o/2;const l=body[body.length]=Bodies.rectangle(e,t,a,o,{collisionFilter:{category:cat.body,mask:cat.player|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet},inertia:1/0,isNotHoldable:!0,friction:1,frictionStatic:1,restitution:0,isClosing:!1,openClose(){if(!m.isTimeDilated)if(this.isClosing){if(this.position.y<t&&0===Matter.Query.collides(this,[player]).length&&Matter.Query.collides(this,body).length<2&&0===Matter.Query.collides(this,mob).length){const e={x:this.position.x,y:this.position.y+n};Matter.Body.setPosition(this,e)}}else if(this.position.y>t-s){const e={x:this.position.x,y:this.position.y-n};Matter.Body.setPosition(this,e)}},isClosed(){return this.position.y>t-1},draw(){ctx.fillStyle="#666",ctx.beginPath();const e=this.vertices;ctx.moveTo(e[0].x,e[0].y);for(let t=1;t<e.length;++t)ctx.lineTo(e[t].x,e[t].y);ctx.lineTo(e[0].x,e[0].y),ctx.fill()}});return Matter.Body.setStatic(l,!0),Composite.add(engine.world,l),l.classType="body",l},doorMap(e,t,a,o,s,n=20,l=!0){e+=a/2,t+=o/2;const i=map[map.length]=Bodies.rectangle(e,t,a,o,{collisionFilter:{category:cat.map,mask:cat.player|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet},inertia:1/0,isNotHoldable:!0,friction:1,frictionStatic:1,restitution:0,isClosing:!1,openClose(e=!1){if(!m.isTimeDilated)if(this.isClosing){if(this.position.y<t&&0===Matter.Query.collides(this,[player]).length&&Matter.Query.collides(this,body).length<2&&0===Matter.Query.collides(this,mob).length){const t={x:this.position.x,y:this.position.y+n};Matter.Body.setPosition(this,t),e&&(simulation.draw.setPaths(),simulation.draw.lineOfSightPrecalculation())}}else if(this.position.y>t-s){const t={x:this.position.x,y:this.position.y-n};Matter.Body.setPosition(this,t),e&&(simulation.draw.setPaths(),simulation.draw.lineOfSightPrecalculation())}},isClosed(){return this.position.y>t-1},draw(){ctx.fillStyle="#666",ctx.beginPath();const e=this.vertices;ctx.moveTo(e[0].x,e[0].y);for(let t=1;t<e.length;++t)ctx.lineTo(e[t].x,e[t].y);ctx.lineTo(e[0].x,e[0].y),ctx.fill()}});return Matter.Body.setStatic(i,!0),l&&Composite.add(engine.world,i),i.classType="map",i},portal(e,t,a,o){const s=150,n=200,l=Matter.Vector.rotate({x:1,y:0},t),i=Matter.Vector.rotate({x:1,y:0},o);draw=function(){ctx.beginPath();let e=this.vertices;ctx.moveTo(e[0].x,e[0].y);for(let t=1;t<e.length;++t)ctx.lineTo(e[t].x,e[t].y);ctx.fillStyle=this.color,ctx.fill()},query=function(e=!1){if(0===Matter.Query.collides(this,[player]).length)player.isInPortal===this&&(player.isInPortal=null);else if(player.isInPortal!==this){let e;m.buttonCD_jump===m.cycle&&(player.force.y=0),m.buttonCD_jump=0,player.isInPortal=this.portalPair,this.portalPair.angle%(Math.PI/2)?(m.immuneCycle<m.cycle+m.collisionImmuneCycles&&(m.immuneCycle=m.cycle+m.collisionImmuneCycles),simulation.translatePlayerAndCamera(this.portalPair.portal.position)):(m.immuneCycle<m.cycle+m.collisionImmuneCycles&&(m.immuneCycle=m.cycle+m.collisionImmuneCycles),simulation.translatePlayerAndCamera(this.portalPair.position)),e=0!==this.portalPair.angle&&this.portalPair.angle!==Math.PI?Math.max(10,Math.min(50,.8*player.velocity.y))+11:Math.max(6,Math.min(50,Vector.magnitude(player.velocity)));let t=Vector.mult(this.portalPair.unit,e);if(Matter.Body.setVelocity(player,t),tech.isHealAttract)for(let e=0;e<powerUp.length;e++)"heal"===powerUp[e].name&&Vector.magnitudeSquared(Vector.sub(powerUp[e].position,m.pos))<1e6&&Matter.Body.setPosition(powerUp[e],Vector.add(this.portalPair.portal.position,{x:500*(Math.random()-.5),y:500*(Math.random()-.5)}));if(tech.isForeverDrones)for(let e=0;e<bullet.length;e++)bullet[e].endCycle===1/0&&Matter.Body.setPosition(bullet[e],Vector.add(this.portalPair.portal.position,{x:500*(Math.random()-.5),y:500*(Math.random()-.5)}))}for(let t=0,a=body.length;t<a;t++)if(body[t]!==m.holdingTarget)if(0===Matter.Query.collides(this,[body[t]]).length)body[t].isInPortal===this&&(body[t].isInPortal=null);else if(body[t].isInPortal!==this){if(e){Matter.Composite.remove(engine.world,body[t]),body.splice(t,1);break}let a;if(body[t].isInPortal=this.portalPair,this.portalPair.angle%(Math.PI/2)?Matter.Body.setPosition(body[t],this.portalPair.portal.position):Matter.Body.setPosition(body[t],this.portalPair.position),0!==this.portalPair.angle&&this.portalPair.angle!==Math.PI){a=Math.max(10,Math.min(50,.8*body[t].velocity.y))+11;let e=Vector.mult(this.portalPair.unit,a);Matter.Body.setVelocity(body[t],Vector.rotate(e,.5*(Math.random()-.5)))}else{a=Math.max(6,Math.min(50,Vector.magnitude(body[t].velocity)));let e=Vector.mult(this.portalPair.unit,a);Matter.Body.setVelocity(body[t],e)}}};const c=composite[composite.length]=Bodies.rectangle(e.x,e.y,50,s,{isSensor:!0,angle:t,color:"hsla(197, 100%, 50%,0.7)",draw:draw}),p=composite[composite.length]=Bodies.rectangle(a.x,a.y,50,s,{isSensor:!0,angle:o,color:"hsla(29, 100%, 50%, 0.7)",draw:draw}),r=composite[composite.length]=Bodies.rectangle(e.x-.5*l.x*n,e.y-.5*l.y*n,n,160,{collisionFilter:{category:cat.map,mask:cat.bullet|cat.powerUp|cat.mob|cat.mobBullet},unit:l,angle:t,color:color.map,draw:draw,query:query,lastPortalCycle:0});Matter.Body.setStatic(r,!0),Composite.add(engine.world,r);const h=composite[composite.length]=Bodies.rectangle(a.x-.5*i.x*n,a.y-.5*i.y*n,n,160,{collisionFilter:{category:cat.map,mask:cat.bullet|cat.powerUp|cat.mob|cat.mobBullet},unit:i,angle:o,color:color.map,draw:draw,query:query,lastPortalCycle:0});return Matter.Body.setStatic(h,!0),Composite.add(engine.world,h),r.portal=c,h.portal=p,r.portalPair=h,h.portalPair=r,[c,p,r,h]},drip:(e,t,a,o=100,s="hsla(160, 100%, 35%, 0.5)")=>({x:e,y:t,period:o,dropCycle:0,speed:0,draw(){m.isTimeDilated||(this.dropCycle<simulation.cycle?(this.dropCycle=simulation.cycle+this.period+Math.floor(40*Math.random()),this.y=t,this.speed=1):(this.speed+=.35,this.y+=this.speed)),this.y<a&&(ctx.fillStyle=s,ctx.beginPath(),ctx.arc(this.x,this.y,8,0,2*Math.PI),ctx.fill())}}),laser:(e,t,a=.12,o="#f00")=>({isOn:!0,position:e,look:t,color:o,query(){if(!m.isTimeDilated){let e={x:null,y:null,dist2:1/0,who:null,v1:null,v2:null};if(e=vertexCollision(this.position,this.look,m.isCloak?[map,body]:[map,body,[playerBody,playerHead]]),(e.who===playerBody||e.who===playerHead)&&m.immuneCycle<m.cycle){m.immuneCycle=m.cycle+m.collisionImmuneCycles+60;const t=a*spawn.dmgToPlayerByLevelsCleared();m.takeDamage(t),simulation.drawList.push({x:e.x,y:e.y,radius:1500*t,color:"rgba(255,0,0,0.5)",time:20})}e.dist2===1/0&&(e=this.look),ctx.beginPath(),ctx.moveTo(this.position.x,this.position.y),ctx.lineTo(e.x,e.y),ctx.strokeStyle=this.color,ctx.lineWidth=5,ctx.setLineDash([50+200*Math.random(),50*Math.random()]),ctx.stroke(),ctx.setLineDash([])}},countDown:0,countTotal:480,countDelay:440,motionQuery(){if(!m.isTimeDilated){let e={x:null,y:null,dist2:1/0,who:null,v1:null,v2:null};if(e=vertexCollision(this.position,this.look,m.isCloak?[map,body]:[map,body,[playerBody,playerHead]]),0===this.countDown)e.who!==playerBody&&e.who!==playerHead||(this.countDown=this.countTotal),ctx.strokeStyle="rgba(255,255,255,0.4)",ctx.lineWidth=8+3*Math.sin(.3*simulation.cycle);else if(this.countDown>this.countDelay)ctx.strokeStyle="rgba(255,255,255,0.8)",ctx.lineWidth=11,this.countDown--;else{if(this.countDown--,(e.who===playerBody||e.who===playerHead)&&m.immuneCycle<m.cycle){m.immuneCycle=m.cycle+m.collisionImmuneCycles+60;const t=a*spawn.dmgToPlayerByLevelsCleared();m.takeDamage(t),simulation.drawList.push({x:e.x,y:e.y,radius:1500*t,color:"rgba(255,0,0,0.5)",time:20})}ctx.strokeStyle=this.color,ctx.lineWidth=5,ctx.setLineDash([50+200*Math.random(),50*Math.random()])}e.dist2===1/0&&(e=this.look),ctx.beginPath(),ctx.moveTo(this.position.x,this.position.y),ctx.lineTo(e.x,e.y),ctx.stroke(),ctx.setLineDash([])}}}),fizzler:(e,t)=>({isOn:!0,position:e,look:t,color:color,query(){if(!m.isTimeDilated){const e=Matter.Query.ray(body,this.position,this.look,25);for(let t=e.length-1;t>-1;t--){const a=e[t].bodyA;simulation.drawList.push({x:a.position.x,y:a.position.y,radius:11,color:"rgba(0,160,255,0.7)",time:10}),a===m.holdingTarget&&m.drop();for(let e=0;e<body.length;e++)if(body[e]===a){body.splice(e,1);break}Matter.Composite.remove(engine.world,a)}if(ctx.beginPath(),ctx.moveTo(this.position.x,this.position.y),ctx.lineTo(this.look.x,this.look.y),ctx.strokeStyle="rgba(50,160,255,0.17)",ctx.lineWidth=35+25*Math.random()*Math.random(),ctx.stroke(),Math.random()<.05){const e=Math.random(),t={x:this.position.x+e*(this.look.x-this.position.x)+60*(Math.random()-.5),y:this.position.y+e*(this.look.y-this.position.y)+60*(Math.random()-.5)};simulation.drawList.push({x:t.x,y:t.y,radius:6,color:"rgba(0,160,255,0.7)",time:5})}}}}),isHazardRise:!1,hazard:(e,t,a,o,s=.0025)=>({min:{x:e,y:t},max:{x:e+a,y:t+o},width:a,height:o,maxHeight:o,isOn:!0,opticalQuery(){this.isOn&&(ctx.fillStyle=`hsla(0, 100%, 50%,${.6+.4*Math.random()})`,ctx.fillRect(this.min.x,this.min.y,this.width,this.height),this.height>0&&Matter.Query.region([player],this).length&&!m.isCloak&&m.immuneCycle<m.cycle&&(m.immuneCycle=m.cycle+m.collisionImmuneCycles,m.takeDamage(s*spawn.dmgToPlayerByLevelsCleared()),simulation.drawList.push({x:player.position.x,y:player.position.y,radius:1500*s*spawn.dmgToPlayerByLevelsCleared(),color:simulation.mobDmgColor,time:20})))},query(){if(this.isOn){ctx.fillStyle="hsla(160, 100%, 35%,0.75)";const e=5*Math.sin(.015*simulation.cycle);if(ctx.fillRect(this.min.x,this.min.y+e,this.width,this.height-e),this.height>0&&Matter.Query.region([player],this).length){if(m.immuneCycle<m.cycle){const e=.004*(tech.isRadioactiveResistance?.2:1);m.energy>e?(m.energy-=e,tech.isEnergyHealth&&m.energy<0&&m.death()):m.takeDamage(s*(tech.isRadioactiveResistance?.2:1)*spawn.dmgToPlayerByLevelsCleared())}player.velocity.y>5&&(player.force.y-=.95*player.mass*simulation.g);const e=player.velocity.y>0?Math.max(.8,1-.002*player.velocity.y*player.velocity.y):Math.max(.98,1-.001*Math.abs(player.velocity.y));Matter.Body.setVelocity(player,{x:Math.max(.95,1-.036*Math.abs(player.velocity.x))*player.velocity.x,y:e*player.velocity.y}),player.force.y-=.5*player.mass*simulation.g}powerUpCollide=Matter.Query.region(powerUp,this);for(let e=0,t=powerUpCollide.length;e<t;e++){const t=2*powerUpCollide[e].size,a=1-.2*Math.max(0,Math.min(t,this.min.y-powerUpCollide[e].position.y+powerUpCollide[e].size))/t;powerUpCollide[e].force.y-=1.24*a*powerUpCollide[e].mass*simulation.g,Matter.Body.setVelocity(powerUpCollide[e],{x:powerUpCollide[e].velocity.x,y:.97*powerUpCollide[e].velocity.y})}}},heatWarning(e=.1+.07*Math.random()){ctx.fillStyle=`hsla(0, 100%, 45%,${e})`,ctx.fillRect(this.min.x,this.min.y,this.width,this.height)},heatQuery(){if(this.isOn){const e=.6+.06*Math.random();ctx.fillStyle=`hsla(0, 100%, 43%,${e})`,ctx.fillRect(this.min.x,this.min.y,this.width,this.height);const t=10+25*Math.sin(.1*simulation.cycle),a=Math.floor(.25*this.width*Math.random()),o=this.min.x+(this.width-a)*Math.random();ctx.fillStyle=`hsla(${t}, 100%, 65%,0.5)`,ctx.fillRect(o,this.min.y,a,this.height);const n=10;ctx.fillStyle=`hsla(0, 100%, ${70+20*Math.random()}%,0.8)`,ctx.fillRect(this.min.x,this.min.y,this.width,n),ctx.fillRect(this.min.x,this.min.y-n+this.height,this.width,n),this.height>0&&Matter.Query.region([player],this).length&&!m.isCloak&&(m.immuneCycle<m.cycle&&m.takeDamage(s*spawn.dmgToPlayerByLevelsCleared()),player.velocity.y<0&&(player.force.y-=.5*player.mass*simulation.g)),hotBlocks=Matter.Query.region(body,this);for(let e=0;e<hotBlocks.length;e++)hotBlocks[e].force.y-=Math.max(1.04,1.09-.01*e)*simulation.g*hotBlocks[e].mass,hotBlocks[e].torque+=2e-5*hotBlocks[e].inertia*(Math.random()-.5)}},levelRise(e=1){this.height<this.maxHeight&&!m.isTimeDilated&&(this.height+=e,this.min.y-=e,this.max.y=this.min.y+this.height)},levelFall(e=1){this.height>0&&!m.isTimeDilated&&(this.height-=e,this.min.y+=e,this.max.y=this.min.y+this.height)},level(e,t=1){m.isTimeDilated||(e?this.height<this.maxHeight&&(this.height+=t,this.min.y-=t,this.max.y=this.min.y+this.height):this.height>0&&(this.height-=t,this.min.y+=t,this.max.y=this.min.y+this.height))}}),mover(e,t,a,o,s=-6,n=(s>0?5e-4:-5e-4)){e+=a/2,t+=o/2;const l=map[map.length]=Bodies.rectangle(e,t,a,o,{collisionFilter:{category:cat.map,mask:cat.player|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet},inertia:1/0,isNotHoldable:!0,friction:0,frictionStatic:0,restitution:0,isClosing:!1,isMover:!0,VxGoal:s,force:n,push(){if(!m.isTimeDilated){Matter.Query.collides(this,[jumpSensor]).length&&(m.moverX=this.VxGoal,(this.VxGoal>0&&player.velocity.x<this.VxGoal||this.VxGoal<0&&player.velocity.x>this.VxGoal)&&(player.force.x+=this.force*player.mass),m.Vx=player.velocity.x-this.VxGoal);let e=e=>{if(!e.isMover){(this.VxGoal>0&&e.velocity.x<this.VxGoal||this.VxGoal<0&&e.velocity.x>this.VxGoal)&&(e.force.x+=this.force*e.mass);const t=.5;Matter.Body.setVelocity(e,{x:this.VxGoal*(1-t)+e.velocity.x*t,y:e.velocity.y}),Matter.Body.setAngularVelocity(e,.9*e.angularVelocity)}};const t=Matter.Query.collides(this,body);for(let a=0;a<t.length;a++)e(t[a].bodyA),e(t[a].bodyB);const a=Matter.Query.collides(this,mob);for(let t=0;t<a.length;t++)e(a[t].bodyA),e(a[t].bodyB);let o=e=>{if(!e.isMover){(this.VxGoal>0&&e.velocity.x<this.VxGoal||this.VxGoal<0&&e.velocity.x>this.VxGoal)&&(e.force.x+=2*this.force*e.mass);const t=.5;Matter.Body.setVelocity(e,{x:this.VxGoal*(1-t)+e.velocity.x*t,y:e.velocity.y})}};const s=Matter.Query.collides(this,powerUp);for(let e=0;e<s.length;e++)o(s[e].bodyA),o(s[e].bodyB)}},draw(){ctx.beginPath();const e=this.vertices;ctx.moveTo(e[0].x+2,e[0].y),ctx.lineTo(e[1].x-2,e[1].y),ctx.strokeStyle="#000",ctx.lineWidth=4,ctx.setLineDash([40,40]),ctx.lineDashOffset=-simulation.cycle*this.VxGoal%80,ctx.stroke(),ctx.setLineDash([0,0])},drawFast(){ctx.beginPath();const e=this.vertices;ctx.moveTo(e[0].x+2,e[0].y),ctx.lineTo(e[1].x-2,e[1].y),ctx.strokeStyle="#000",ctx.lineWidth=4,ctx.setLineDash([60,60]),ctx.lineDashOffset=-simulation.cycle*this.VxGoal%120,ctx.stroke(),ctx.setLineDash([0,0])}});return Matter.Body.setStatic(l,!0),l},transport(e,t,a,o,s=-6,n=(s>0?5e-4:-5e-4)){e+=a/2,t+=o/2;const l=body[body.length]=Bodies.rectangle(e,t,a,o,{collisionFilter:{category:cat.body,mask:cat.player|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet},inertia:1/0,isNotHoldable:!0,friction:0,frictionStatic:0,restitution:0,isClosing:!1,isMover:!0,VxGoal:s,force:n,move(){if(!m.isTimeDilated){Matter.Body.setPosition(this,{x:this.position.x+this.VxGoal,y:this.position.y});Matter.Query.collides(this,[jumpSensor]).length&&(m.moverX=this.VxGoal,(this.VxGoal>0&&player.velocity.x<this.VxGoal||this.VxGoal<0&&player.velocity.x>this.VxGoal)&&(player.force.x+=this.force*player.mass),m.Vx=player.velocity.x-this.VxGoal);let e=e=>{if(!e.isMover){(this.VxGoal>0&&e.velocity.x<this.VxGoal||this.VxGoal<0&&e.velocity.x>this.VxGoal)&&(e.force.x+=this.force*e.mass);const t=.5;Matter.Body.setVelocity(e,{x:this.VxGoal*(1-t)+e.velocity.x*t,y:e.velocity.y}),Matter.Body.setAngularVelocity(e,.8*e.angularVelocity)}};const t=Matter.Query.collides(this,body);for(let a=0;a<t.length;a++)e(t[a].bodyA),e(t[a].bodyB)}},draw(){ctx.beginPath();const e=this.vertices;ctx.moveTo(e[0].x,e[0].y);for(let t=1;t<e.length;++t)ctx.lineTo(e[t].x,e[t].y);ctx.lineTo(e[0].x,e[0].y),ctx.fillStyle="#586370",ctx.fill()},changeDirection(e){e?(this.VxGoal=Math.abs(this.VxGoal),this.force=Math.abs(this.force),Matter.Query.collides(this,[jumpSensor]).length&&(player.force.x+=this.trainKickPlayer*this.force*player.mass)):(this.VxGoal=-Math.abs(this.VxGoal),this.force=-Math.abs(this.force),Matter.Query.collides(this,[jumpSensor]).length&&(player.force.x+=this.trainKickPlayer*this.force*player.mass))},trainSpeed:Math.abs(s),trainKickPlayer:12*Math.abs(n),isSensing:!1,stops:{left:e,right:e+1e3},trainStop(){this.isMoving?(this.move(),this.position.x<this.stops.left?(this.VxGoal=this.trainSpeed,this.force=5e-4,this.isMoving=!1,this.isSensing=!1,Matter.Query.collides(this,[jumpSensor]).length&&(player.force.x+=this.trainKickPlayer*player.mass*(this.VxGoal>0?1:-1))):this.position.x>this.stops.right&&(this.VxGoal=-this.trainSpeed,this.force=-5e-4,this.isMoving=!1,this.isSensing=!1,Matter.Query.collides(this,[jumpSensor]).length&&(player.force.x+=this.trainKickPlayer*player.mass*(this.VxGoal>0?1:-1)))):this.isSensing?Matter.Query.collides(this,[jumpSensor]).length?(this.isMoving=!0,this.move(),Matter.Query.collides(this,[jumpSensor]).length&&Matter.Body.setVelocity(player,{x:this.VxGoal,y:player.velocity.y})):this.position.x>this.stops.right&&player.position.x<this.stops.left+500?(this.changeDirection(!1),this.isMoving=!0,this.move()):this.position.x<this.stops.left&&player.position.x>this.stops.right-500&&(this.changeDirection(!0),this.isMoving=!0,this.move()):Matter.Query.collides(this,[jumpSensor]).length||(this.isSensing=!0)}});return Matter.Body.setStatic(l,!0),Composite.add(engine.world,l),l.classType="body",l},chain(e,t,a=0,o=!0,s=15,n=20,l=1,i=1){const c=2*n,p=Math.cos(a),r=Math.sin(a);for(let a=0;a<s;a++){body[body.length]=Bodies.polygon(e+c*p*a,t+c*r*a,12,n,{inertia:1/0,isNotHoldable:!0});const o=body[body.length-1];o.collisionFilter.category=cat.body,o.collisionFilter.mask=cat.player|cat.map|cat.body|cat.bullet|cat.mob|cat.mobBullet,Composite.add(engine.world,o),o.classType="body"}for(let e=1;e<s;e++)consBB[consBB.length]=Constraint.create({bodyA:body[body.length-e],bodyB:body[body.length-e-1],stiffness:l,damping:i}),Composite.add(engine.world,consBB[consBB.length-1]);cons[cons.length]=Constraint.create({pointA:{x:e,y:t},bodyB:body[body.length-s],stiffness:1,damping:i}),Composite.add(engine.world,cons[cons.length-1]),o&&(cons[cons.length]=Constraint.create({pointA:{x:e+c*p*(s-1),y:t+c*r*(s-1)},bodyB:body[body.length-1],stiffness:1,damping:i}),Composite.add(engine.world,cons[cons.length-1]))},template(){simulation.enableConstructMode(),level.setPosToSpawn(0,-50),level.exit.x=1500,level.exit.y=-1875,spawn.mapRect(level.enter.x,level.enter.y+20,100,20),spawn.mapRect(level.exit.x,level.exit.y+20,100,20),level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#d8dadf",level.custom=()=>{level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{},spawn.mapRect(-100,0,1e3,100),powerUps.addResearchToLevel()},testing(){document.body.style.backgroundColor="#ddd",level.defaultZoom=1500,simulation.zoomTransition(level.defaultZoom);const e=level.mover(2800,-300,1e3,25),t=level.transport(2900,-500,500,25,8);spawn.bodyRect(500,-500,50,50);const a=level.button(2535,-200);level.custom=()=>{t.position.x<2e3?t.changeDirection(!0):t.position.x>4e3&&t.changeDirection(!1),a.isUp||t.move(),e.push(),ctx.fillStyle="#d4d4d4",ctx.fillRect(2500,-475,200,300),ctx.fillStyle="rgba(0,255,255,0.1)",ctx.fillRect(6400,-550,300,350),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{t.draw(),e.draw(),a.query(),a.draw(),ctx.fillStyle="rgba(0,0,0,0.1)",ctx.fillRect(-150,-650,900,250)},level.setPosToSpawn(0,-450),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),level.exit.x=6500,level.exit.y=-230,spawn.mapRect(-950,0,8200,800),spawn.mapRect(-950,-1200,800,1400),spawn.mapRect(-950,-1800,8200,800),spawn.mapRect(-250,-400,1e3,600),spawn.mapRect(-250,-1200,1e3,550),spawn.mapRect(2500,-1200,200,750),spawn.mapRect(2500,-200,200,300),spawn.mapRect(4500,-1200,200,650),function(e,t,a=58){spawn.mapRect(e,t-290,40,60),spawn.mapRect(e,t,40,50);for(let o=0;o<4;++o)spawn.bodyRect(e+5,t-260+o*a,30,a)}(4585,-310),spawn.mapRect(4500,-300,200,400),spawn.mapRect(6400,-1200,400,750),spawn.mapRect(6400,-200,400,300),spawn.mapRect(6700,-1800,800,2600),spawn.mapRect(level.exit.x,level.exit.y+20,100,100),spawn.mapRect(4650,-300,1150,50),spawn.mapRect(5750,-300,50,200),spawn.mapRect(5575,-100,50,125),spawn.mapRect(5300,-275,50,175),spawn.mapRect(5050,-100,50,150),spawn.mapRect(4850,-275,50,175),spawn.mapRect(-950,-3250,850,1750),spawn.mapRect(-175,-2975,300,1425),spawn.mapRect(75,-2650,325,1150),spawn.mapRect(375,-2225,250,650),spawn.mapRect(4075,-2125,700,800),spawn.mapRect(4450,-2950,675,1550),spawn.mapRect(4875,-3625,725,2225),spawn.mapRect(5525,-4350,1725,2925),spawn.mapRect(7200,-5125,300,3900)},null(){level.levels.pop(),localSettings.loreCount>lore.conversation.length-1&&(localSettings.loreCount=lore.conversation.length-1),!simulation.isCheating&&localSettings.loreCount<lore.conversation.length&&(lore.testSpeechAPI(),lore.chapter=localSettings.loreCount,lore.sentence=0,lore.conversation[lore.chapter][lore.sentence](),localSettings.loreCount++,localSettings.isAllowed&&localStorage.setItem("localSettings",JSON.stringify(localSettings))),level.isHazardRise=!1;const e=level.hazard(-1800,-800,3600,1600,.004);e.height-=950,e.min.y+=950,e.max.y=e.min.y+e.height;const t=0,a=-500,o=50;level.custom=()=>{ctx.beginPath(),ctx.moveTo(t,-800),ctx.lineTo(t,a),ctx.lineWidth=40,ctx.strokeStyle=lore.talkingColor,ctx.globalAlpha=.03,ctx.stroke(),ctx.globalAlpha=1,ctx.fillStyle="rgba(0,0,0,0.2)",ctx.fillRect(-25,0,50,1e3),ctx.beginPath(),ctx.arc(t,a,o,0,2*Math.PI),ctx.fillStyle="#bcc",ctx.fill(),ctx.lineWidth=2,ctx.strokeStyle="#abb",ctx.stroke(),ctx.beginPath(),ctx.arc(t,a,o/8,0,2*Math.PI),ctx.fillStyle=lore.talkingColor,ctx.fill()};let s={x:0,y:0},n=-Math.PI/2;level.customTopLayer=()=>{ctx.fillStyle="rgba(0,0,0,0.1)",ctx.fillRect(-1950,-950,3900,1900),ctx.beginPath();const l=Math.PI/20;simulation.isCheating&&(n+=.3*Math.random()*Math.random()),s.x=.995*s.x+.005*(m.pos.x-t)*.05,s.y=2.5*Math.sin(.015*simulation.cycle);for(let e=-19.5;e<20;e++){const i={x:t+o*Math.cos(e*l+n),y:a+o*Math.sin(e*l+n)};ctx.moveTo(i.x,i.y),ctx.bezierCurveTo(s.x*Math.abs(e)+i.x,i.y+25*Math.abs(e)+60+s.y*Math.sqrt(Math.abs(e)),s.x*Math.abs(e)+i.x+85*e,i.y+25*Math.abs(e)+60+s.y*Math.sqrt(Math.abs(e)),85*e,-800)}ctx.lineWidth=.5,ctx.strokeStyle="#899",ctx.stroke(),e.query(),level.isHazardRise&&e.level(!0)},level.setPosToSpawn(0,-50),spawn.mapRect(level.enter.x,level.enter.y+25,100,10),level.exit.x=0,level.exit.y=4e4,level.defaultZoom=1e3,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#ddd",color.map="#586363",spawn.mapRect(-3e3,800,5e3,1200),spawn.mapRect(-2e3,-2e3,5e3,1200),spawn.mapRect(-3e3,-2e3,1200,3400),spawn.mapRect(1800,-1400,1200,3400),spawn.mapRect(-500,0,1e3,50),spawn.mapRect(-500,-25,25,50),spawn.mapRect(475,-25,25,50)},initialPowerUps(){const e=simulation.cycle+10;requestAnimationFrame(function t(){if(simulation.cycle>e){6===localSettings.loreCount?powerUps.spawn(2095+20*(Math.random()-.5),-2170,"field",!1):powerUps.spawnStartingPowerUps(2095+20*(Math.random()-.5),-2200),1===simulation.difficultyMode?(powerUps.spawn(2095+20*(Math.random()-.5),-2600,"ammo",!1),powerUps.spawn(2095+20*(Math.random()-.5),-2550,"ammo",!1),powerUps.spawn(2095+20*(Math.random()-.5),-2400,"heal",!1),powerUps.spawn(2095+20*(Math.random()-.5),-2350,"heal",!1),powerUps.spawn(2095+20*(Math.random()-.5),-2350,"heal",!1),powerUps.spawn(2095+20*(Math.random()-.5),-2100,"research",!1),powerUps.spawn(2095+20*(Math.random()-.5),-2060,"research",!1),powerUps.spawn(2095+20*(Math.random()-.5),-2120,"research",!1),powerUps.spawn(2095+20*(Math.random()-.5),-2075,"research",!1)):simulation.difficultyMode>4||(powerUps.spawn(2095+20*(Math.random()-.5),-2300,"heal",!1),powerUps.spawn(2095+20*(Math.random()-.5),-2100,"heal",!1),powerUps.spawn(2095+20*(Math.random()-.5),-2060,"research",!1));for(let e=0;e<powerUp.length;e++)Matter.Body.setAngularVelocity(powerUp[e],5*(Math.random()-.5))}else requestAnimationFrame(t)})},initial(){if(0===level.levelsCleared){if(level.initialPowerUps(),0===level.levelsCleared&&powerUps.directSpawn(-60,-950,"difficulty",!1),simulation.isCheating||m.isShipMode||build.isExperimentRun?simulation.isCheating=!0:(spawn.wireFoot(),spawn.wireFootLeft(),spawn.wireKnee(),spawn.wireKneeLeft(),spawn.wireHead()),localSettings.levelsClearedLastGame<3);else if(!build.isExperimentRun&&(simulation.trails(70),!simulation.isCheating&&localSettings.levelsClearedLastGame>1)){for(let e=0;e<localSettings.levelsClearedLastGame/3;e++)powerUps.spawn(2095+2*Math.random(),-1270-50*e,"tech",!1);simulation.inGameConsole("for (let i <span class='color-symbol'>=</span> 0; i <span class='color-symbol'><</span> localSettings.levelsClearedLastGame <span class='color-symbol'>/</span> 3; i<span class='color-symbol'>++</span>)"),simulation.inGameConsole('{ powerUps.spawn(m.pos.x, m.pos.y, "tech") <em>//simulation superposition</em>}'),localSettings.levelsClearedLastGame=0,localSettings.isAllowed&&localStorage.setItem("localSettings",JSON.stringify(localSettings))}spawn.mapRect(2025,0,150,50)}else for(let e=0;e<60;e++)setTimeout(()=>{"initial"===level.levels[level.onLevel]&&spawn.sneaker(2100,-1500-50*e)},2e3+500*e);const e=new Path2D;e.moveTo(-150,-275),e.lineTo(80,-275),e.lineTo(80,-1e3),e.moveTo(-150,-265),e.lineTo(90,-265),e.lineTo(90,-1e3),e.moveTo(-150,-255),e.lineTo(100,-255),e.lineTo(100,-1e3),e.moveTo(-150,-245),e.lineTo(1145,-245),e.lineTo(1145,0),e.moveTo(-150,-235),e.lineTo(1135,-235),e.lineTo(1135,0),e.moveTo(-150,-225),e.lineTo(1125,-225),e.lineTo(1125,0),e.moveTo(-150,-215),e.lineTo(460,-215),e.lineTo(460,0),e.moveTo(-150,-205),e.lineTo(450,-205),e.lineTo(450,0),e.moveTo(-150,-195),e.lineTo(440,-195),e.lineTo(440,0),e.moveTo(1155,0),e.lineTo(1155,-450),e.lineTo(1e3,-450),e.lineTo(1e3,-1e3),e.moveTo(1165,0),e.lineTo(1165,-460),e.lineTo(1010,-460),e.lineTo(1010,-1e3),e.moveTo(1175,0),e.lineTo(1175,-470),e.lineTo(1020,-470),e.lineTo(1020,-1e3),e.moveTo(1185,0),e.lineTo(1185,-480),e.lineTo(1030,-480),e.lineTo(1030,-1e3),e.moveTo(1195,0),e.lineTo(1195,-490),e.lineTo(1040,-490),e.lineTo(1040,-1e3),e.moveTo(1625,-1e3),e.lineTo(1625,0),e.moveTo(1635,-1e3),e.lineTo(1635,0),e.moveTo(1645,-1e3),e.lineTo(1645,0),e.moveTo(1655,-1e3),e.lineTo(1655,0),e.moveTo(1665,-1e3),e.lineTo(1665,0),e.moveTo(1675,-465),e.lineTo(2325,-465),e.lineTo(2325,0),e.moveTo(1675,-455),e.lineTo(2315,-455),e.lineTo(2315,0),e.moveTo(1675,-445),e.lineTo(2305,-445),e.lineTo(2305,0),e.moveTo(1675,-435),e.lineTo(2295,-435),e.lineTo(2295,0),e.moveTo(2335,0),e.lineTo(2335,-710),e.lineTo(2600,-710),e.moveTo(2345,0),e.lineTo(2345,-700),e.lineTo(2600,-700),e.moveTo(2355,0),e.lineTo(2355,-690),e.lineTo(2600,-690);let t=!1;level.custom=()=>{if(!t&&simulation.testing&&(t=!0,powerUps.directSpawn(m.pos.x,-900,"warp")),!(simulation.cycle%30))for(let e=0,t=powerUp.length;e<t;e++)if("instructions"===powerUp[e].name){if(simulation.isCheating){Matter.Composite.remove(engine.world,powerUp[e]),powerUp.splice(e,1);break}}else powerUp[e].position.y<-1e3&&(powerUp[e].force.x+=.01*(Math.random()-.5)*powerUp[e].mass);const a=(localSettings.runCount>>>0).toString(2),o=-40;let s=-130;ctx.strokeStyle="#bff",ctx.lineWidth=1.5,ctx.beginPath();for(let e=0;e<a.length;e++)"0"===a[e]?(ctx.moveTo(s,o),ctx.lineTo(s,-20),ctx.lineTo(s+8,-20),ctx.lineTo(s+8,o),ctx.lineTo(s,o),s+=18):(ctx.moveTo(s,o),ctx.lineTo(s,-20),s+=10);ctx.stroke(),ctx.beginPath(),ctx.strokeStyle="#ccc",ctx.lineWidth=5,ctx.stroke(e),ctx.beginPath(),ctx.rect(1600,-500,90,100),ctx.rect(-55,-285,12,100),ctx.rect(1100,-497,8,54),ctx.rect(2285,-200,80,10),ctx.rect(1110,-70,100,10),ctx.fillStyle="#ccc",ctx.fill(),ctx.fillStyle="#f2f2f2",ctx.fillRect(2600,-600,400,300),level.exit.drawAndCheck()},level.customTopLayer=()=>{ctx.fillStyle="rgba(0,255,255,0.05)",ctx.fillRect(2600,-600,400,300),ctx.fillStyle="rgba(68, 68, 68,0.95)",ctx.fillRect(2030,-2800,150,1800),ctx.fillRect(2030,0,150,1800),ctx.fillStyle="rgba(68, 68, 68,0.98)",ctx.fillRect(-2925,-2800,2775,2650)},level.setPosToSpawn(460,-100),level.exit.x=2800,level.exit.y=-335,spawn.mapRect(level.exit.x,level.exit.y+25,100,100),simulation.zoomScale=1e3,level.defaultZoom=1600,simulation.zoomTransition(level.defaultZoom,1),document.body.style.backgroundColor="#e1e1e1",spawn.mapRect(-2750,-2800,2600,2515),spawn.mapRect(-3275,-185,3125,1985),requestAnimationFrame(()=>{powerUps.directSpawn(-2315,-3050,"instructions",!1)}),spawn.mapRect(-3275,-2800,400,3250),spawn.mapRect(-2775,-575,50,25),spawn.mapRect(-2775,-950,50,25),spawn.mapRect(-2775,-1325,50,25),spawn.mapRect(-2775,-1700,50,25),spawn.mapRect(-2775,-2075,50,25),spawn.mapRect(-2775,-2450,50,25),spawn.mapRect(3e3,-2800,2600,4600),spawn.mapRect(-250,0,2300,1800),spawn.mapRect(2150,0,1200,1800),spawn.mapRect(2025,-3,25,15),spawn.mapRect(2150,-3,25,15),spawn.mapRect(-250,-2800,2300,1800),map[map.length-1].friction=0,map[map.length-1].frictionStatic=0,spawn.mapRect(2150,-2800,1200,1800),map[map.length-1].friction=0,map[map.length-1].frictionStatic=0,spawn.mapRect(2025,-1010,25,13),spawn.mapRect(2150,-1010,25,13),spawn.mapRect(2600,-300,500,500),spawn.mapRect(2600,-1200,500,600),spawn.mapRect(-95,-1100,80,110),spawn.mapRect(410,-10,90,20),spawn.bodyRect(2425,-120,70,50),spawn.bodyRect(2400,-100,100,60),spawn.bodyRect(2500,-150,100,130)},final(){const e=level.hazard(simulation.isHorizontalFlipped?-710:-150,-360,880,259);e.height-=e.maxHeight-150,e.min.y+=e.maxHeight,e.max.y=e.min.y+e.height,level.custom=()=>{level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{e.query(),e.levelRise(.1),ctx.fillStyle="rgba(0,255,255,0.1)",ctx.fillRect(5385,-550,300,250)},level.setPosToSpawn(0,-250),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),spawn.mapRect(5500,-310,100,20),level.exit.x=0,level.exit.y=-8e3,level.defaultZoom=2500,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#ddd";for(let e=0;e<16;e++)powerUps.spawn(4600+40*e,-30,"ammo");if(simulation.difficultyMode>5)for(let e=0;e<8;e++)powerUps.spawn(4600+40*e,-30,"ammo");if(spawn.mapRect(-1950,0,8200,1800),spawn.mapRect(-1950,-1500,1800,1900),spawn.mapRect(-1950,-3300,8200,1800),spawn.mapRect(-250,-200,1e3,300),spawn.mapRect(-250,-1700,1e3,1250),spawn.mapRect(705,-210,25,50),spawn.mapRect(725,-220,25,50),spawn.bodyRect(750,-125,125,125),spawn.bodyRect(875,-50,50,50),spawn.mapRect(5400,-1700,400,1150),spawn.mapRect(5400,-300,400,400),spawn.mapRect(5700,-3300,1800,5100),spawn.mapRect(level.exit.x,level.exit.y+20,100,100),spawn.mapRect(5403,-650,400,450),mobs.mobDeaths<level.levelsCleared&&!simulation.isCheating)for(let e=0;e<250;e++)spawn.starter(1e3+4e3*Math.random(),-1500*Math.random());else spawn.finalBoss(3e3,-750);simulation.isHorizontalFlipped&&(level.flipHorizontal(),level.setPosToSpawn(0,-250),level.custom=()=>{level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{e.query(),e.levelRise(.1),ctx.fillStyle="rgba(0,255,255,0.1)",ctx.fillRect(-5685,-550,300,250)}),mobs.mobDeaths<level.levelsCleared&&localSettings.loreCount>5&&!simulation.isCheating&&(simulation.isHorizontalFlipped?level.exit.x=-5600:level.exit.x=5500,level.exit.y=-330,Matter.Composite.remove(engine.world,map[map.length-1]),map.splice(map.length-1,1),simulation.draw.setPaths(),level.levels.push("null"))},gauntlet(){if(level.custom=()=>{level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{ctx.fillStyle="rgba(0,255,255,0.1)",ctx.fillRect(6400,-550,300,350),ctx.fillStyle="rgba(0,0,0,0.1)",ctx.fillRect(-175,-975,900,575)},level.setPosToSpawn(0,-475),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),level.exit.x=6500,level.exit.y=-230,level.defaultZoom=1500,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#ddd",spawn.mapRect(-950,0,8200,800),spawn.mapRect(-950,-1200,800,1400),spawn.mapRect(-950,-1800,8200,800),spawn.mapRect(175,-700,575,950),spawn.mapRect(-250,-425,600,650),spawn.mapRect(-250,-1200,1e3,250),powerUps.spawnStartingPowerUps(600,-800),spawn.blockDoor(710,-710),spawn.mapRect(2500,-1200,200,750),spawn.blockDoor(2585,-210),spawn.mapRect(2500,-200,200,300),spawn.mapRect(4500,-1200,200,750),spawn.blockDoor(4585,-210),spawn.mapRect(4500,-200,200,300),spawn.mapRect(6400,-1200,400,750),spawn.mapRect(6400,-200,400,300),spawn.mapRect(6700,-1800,800,2600),spawn.mapRect(level.exit.x,level.exit.y+20,100,100),mobs.mobDeaths<level.levelsCleared&&!simulation.isCheating){spawn.pickList.splice(0,1),spawn.pickList.push("starter"),spawn.pickList.splice(0,1),spawn.pickList.push("starter"),spawn.starter(1500,-200,150+30*Math.random()),spawn.nodeGroup(3500,-200,"starter"),spawn.lineGroup(5e3,-200,"starter");for(let e=0;e<3;++e)simulation.difficulty*Math.random()>15*e&&spawn.nodeGroup(2e3+500*(Math.random()-.5),200*(Math.random()-.5)-800,"starter"),simulation.difficulty*Math.random()>10*e&&spawn.lineGroup(3500+500*(Math.random()-.5),200*(Math.random()-.5)-800,"starter"),simulation.difficulty*Math.random()>7*e&&spawn.nodeGroup(5e3+500*(Math.random()-.5),200*(Math.random()-.5)-800,"starter")}else{spawn[spawn.pickList[0]](1500,-200,150+30*Math.random());for(let e=0;e<3;++e)simulation.difficulty*Math.random()>15*e&&spawn.randomGroup(2e3+500*(Math.random()-.5),200*(Math.random()-.5)-800,1/0),simulation.difficulty*Math.random()>10*e&&spawn.randomGroup(3500+500*(Math.random()-.5),200*(Math.random()-.5)-800,1/0),simulation.difficulty*Math.random()>7*e&&spawn.randomGroup(5e3+500*(Math.random()-.5),200*(Math.random()-.5)-800,1/0)}spawn.randomLevelBoss(5750,-600),spawn.secondaryBossChance(4125,-350),powerUps.addResearchToLevel(),simulation.isHorizontalFlipped&&(level.flipHorizontal(),level.setPosToSpawn(0,-475),level.custom=()=>{level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{ctx.fillStyle="rgba(0,255,255,0.1)",ctx.fillRect(-6700,-550,300,350),ctx.fillStyle="rgba(0,0,0,0.1)",ctx.fillRect(-725,-975,900,575)})},subway(){level.announceText(0,-575,!0),document.body.style.backgroundColor="#e3e3e3",level.defaultZoom=1400,simulation.zoomTransition(level.defaultZoom),level.setPosToSpawn(450*(Math.random()<.5?1:-1),-300),level.exit.x=0,level.exit.y=-9e3;const e=9e3;let t=0,a=()=>{},o=()=>{};const s=[];s.push(level.transport(1475,-200,500,25,30)),s[s.length-1].isMoving=!1,s[s.length-1].stops={left:1725,right:7225},s.push(level.transport(-1975,-200,500,25,-30)),s[s.length-1].isMoving=!1,s[s.length-1].stops={left:-7225,right:-1725};const n=[];for(let e=1,t=10;e<t;++e)n.push(e);//!!!! update station number when you add a new station
n.sort(()=>Math.random()-.5),n.splice(0,n.length-3),n.unshift(0);let l=!1,i=!1,c=-1,p=-1;const r=(e,r=!0)=>{if(r){spawn.pickList.splice(0,2);let u=simulation.difficultyMode>3?spawn.tier[4]:spawn.tier[3];function h(e){for(let t=0;t<e.length;++t)Matter.Composite.remove(engine.world,e[t])}spawn.pickList.push(u[Math.floor(Math.random()*u.length)]),u=spawn.tier[4],spawn.pickList.push(u[Math.floor(Math.random()*u.length)]),h(map),map=[],h(composite),composite=[];for(let R=0;R<powerUp.length;++R)Vector.magnitudeSquared(Vector.sub(player.position,powerUp[R].position))>9e6&&(Matter.Composite.remove(engine.world,powerUp[R]),powerUp.splice(R--,1));for(let b=0;b<mob.length;++b)Vector.magnitudeSquared(Vector.sub(player.position,mob[b].position))>4e6&&!mob[b].isDarkMatter&&(mob[b].removeConsBB(),mob[b].removeCons(),mob[b].leaveBody=!1,mob[b].alive=!1,Matter.Composite.remove(engine.world,mob[b]),mob.splice(b--,1))}const d=(e,a)=>{e&&(e.isClosing=a.isUp,e.openClose(!0),a.isUp&&(a.query(),a.isUp||(simulation.inGameConsole("station gate opened",360),t>0?(!l&&c<t&&level.newLevelOrPhase(),c=t):t<0?(!l&&p>t&&level.newLevelOrPhase(),p=t):(p=t,c=t),Math.abs(t)>0&&(Math.abs(t)+1)%n.length===0&&(simulation.inGameConsole("level exit opened",360),l=!0))),a.isUp?(ctx.beginPath(),ctx.ellipse(a.min.x+.5*a.width,a.min.y+6,.75*a.width,.5*a.width,0,Math.PI,0),ctx.fillStyle=`hsla(345, 100%, 80%,${.1+.4*Math.random()})`,ctx.fill(),ctx.fillStyle="hsl(345, 100%, 75%)",ctx.fillRect(a.min.x,a.min.y-10,a.width,25),ctx.strokeStyle="#000",ctx.lineWidth=2,ctx.strokeRect(a.min.x,a.min.y-10,a.width,25)):(ctx.fillStyle="hsl(345, 100%, 75%)",ctx.fillRect(a.min.x,a.min.y,a.width,10),ctx.strokeStyle="#000",ctx.lineWidth=2,ctx.strokeRect(a.min.x,a.min.y,a.width,10)))},w=[()=>{if(l)level.exit.x=e-50,level.exit.y=-260,simulation.difficultyMode<7&&!i&&(i=!0,powerUps.spawn(level.exit.x,level.exit.y-100,"tech"));else{var s=level.button(e-62,-237,125,!1);if(s.isUp=!0,0===t&&-1===c&&-1===p){var n=level.doorMap(e+1375,-525,50,375,300,20,!1),r=level.doorMap(e-1375,-525,50,375,300,20,!1);for(let t=0;t<10;++t)powerUps.chooseRandomPowerUp(e+800*(Math.random()-.5),-300-100*Math.random())}}spawn.mapRect(e+-1400,-750,3375,100),spawn.mapRect(e+-1500,-210,3e3,400),spawn.mapVertex(e+0,-200,"400 0  -400 0  -300 -80  300 -80"),a=()=>{},o=()=>{d(n,s),d(r,s)}},()=>{const s=[{x:e+50,y:-1595},{x:e+637,y:-2195},{x:e-1487,y:-2145}],n=Math.floor(Math.random()*s.length);if(l)level.exit.x=s[n].x,level.exit.y=s[n].y-25;else{var i=level.button(s[n].x,s[n].y,126,!1);if(i.isUp=!0,t>c)var r=level.doorMap(e+1375,-525,50,375,300,20,!1);else if(t<p)r=level.doorMap(e-1375,-525,50,375,300,20,!1)}spawn.mapRect(e+-1500,-210,3e3,400),spawn.mapRect(e+-1775,-1600,3400,1e3),spawn.mapRect(e+-4100,-3325,8e3,700),spawn.mapRect(e+-4100,-3325,325,1500),spawn.mapRect(e+3500,-3325,400,1500),spawn.mapRect(e+-225,-700,450,600),spawn.mapRect(e+-1425,-2400,1900,50),spawn.mapRect(e+-775,-2750,575,1045),spawn.mapRect(e+475,-1900,450,375),spawn.mapRect(e+2225,-2300,125,350),spawn.mapRect(e+2550,-2350,700,50),spawn.mapRect(e+1375,-2850,125,650),spawn.mapRect(e+600,-2200,200,195),spawn.mapRect(e+-3500,-2275,825,75),spawn.mapRect(e+-1550,-2150,250,250),spawn.mapRect(e+-2575,-2450,275,345),l||(Math.random()<.5?(spawn.randomMob(e+2850,-2425,0),spawn.randomMob(e+2275,-2425,0),spawn.randomMob(e+2e3,-2150,0),spawn.randomMob(e+1650,-2150,0),spawn.randomMob(e+1e3,-2475,0),spawn.randomMob(e+725,-2450,0),spawn.randomMob(e+525,-2175,0),spawn.randomMob(e+200,-1950,0),spawn.randomMob(e+-25,-1825,0),spawn.randomMob(e+-975,-2e3,0),spawn.randomMob(e+-1500,-2225,0),spawn.randomMob(e+1850,-2125,0),spawn.randomMob(e+225,-1975,0),spawn.randomMob(e+25,-1950,0),spawn.randomMob(e+25,-1950,0)):(spawn.randomMob(e+250,-1850,0),spawn.randomMob(e+225,-1950,0),spawn.randomMob(e+125,-2e3,0),spawn.randomMob(e+0,-1800,0),spawn.randomMob(e+-1725,-2300,0),spawn.randomMob(e+-2025,-2175,0),spawn.randomMob(e+-2050,-2250,0),spawn.randomMob(e+-2e3,-2350,0),spawn.randomMob(e+-2950,-2400,0),spawn.randomMob(e+-2775,-2400,0),spawn.randomMob(e+-2425,-2550,0),spawn.randomMob(e+1950,-2225,0),spawn.randomMob(e+-2700,-2100,0),spawn.randomMob(e+-1925,-2175,0),spawn.randomMob(e+-825,-2050,0)));const m=level.portal({x:e-250,y:-310},Math.PI,{x:e+-3750,y:-2100},0),h=level.portal({x:e+250,y:-310},0,{x:e+3475,y:-2100},Math.PI),w=level.portal({x:e-800,y:-2500},Math.PI,{x:e-175,y:-2500},0),y=level.portal({x:e+1275,y:-1700},Math.PI,{x:e-1275,y:-1700},0);a=()=>{m[2].query(),m[3].query(),h[2].query(),h[3].query(),w[2].query(),w[3].query(),y[2].query(),y[3].query()},o=()=>{d(r,i),m[0].draw(),m[1].draw(),m[2].draw(),m[3].draw(),h[0].draw(),h[1].draw(),h[2].draw(),h[3].draw(),w[0].draw(),w[1].draw(),w[2].draw(),w[3].draw(),y[0].draw(),y[1].draw(),y[2].draw(),y[3].draw()}},()=>{const s=[{x:e-800,y:-2245},{x:e+250,y:-870},{x:e+1075,y:-1720},{x:e-1600,y:-1995}],n=Math.floor(Math.random()*s.length);if(l)level.exit.x=s[n].x,level.exit.y=s[n].y-25;else{var i=level.button(s[n].x,s[n].y,126,!1);if(i.isUp=!0,t>c)var r=level.doorMap(e+1375,-525,50,375,300,20,!1);else if(t<p)r=level.doorMap(e-1375,-525,50,375,300,20,!1)}l||(Math.random()<.5?(spawn.randomMob(e+1125,-650,0),spawn.randomMob(e+150,-950,0),spawn.randomMob(e+100,-975,0),spawn.randomMob(e+75,-975,0),spawn.randomMob(e+275,-1225,0),spawn.randomMob(e+825,-975,0),spawn.randomMob(e+-50,-1625,0),spawn.randomMob(e+-950,-1550,0),spawn.randomMob(e+-975,-1550,0),spawn.randomMob(e+-900,-2500,0),spawn.randomMob(e+-975,-2550,0),spawn.randomMob(e+675,-1950,0),spawn.randomMob(e+675,-2550,0),spawn.randomMob(e+1225,-1825,0),spawn.randomMob(e+-750,-2450,0),spawn.randomMob(e+-700,-825,0)):(spawn.randomMob(e+-675,-675,0),spawn.randomMob(e+-575,-925,0),spawn.randomMob(e+-425,-1100,0),spawn.randomMob(e+-225,-1225,0),spawn.randomMob(e+-650,-1250,0),spawn.randomMob(e+-675,-775,0),spawn.randomMob(e+75,-1e3,0),spawn.randomMob(e+-1100,-1575,0),spawn.randomMob(e+-1250,-1850,0),spawn.randomMob(e+-1625,-2100,0),spawn.randomMob(e+-700,-2500,0),spawn.randomMob(e+-375,-2550,0),spawn.randomMob(e+250,-2025,0),spawn.randomMob(e+675,-2175,0),spawn.randomMob(e+-1e3,-2e3,0),spawn.randomMob(e+-1550,-2325,0),spawn.randomMob(e+-1725,-2425,0))),spawn.mapRect(e+-1500,-210,3e3,400),spawn.mapRect(e+-2550,-3200,425,1375),spawn.mapRect(e+2125,-3175,450,1375),spawn.mapRect(e+-2550,-3200,5125,225),spawn.mapRect(e+-1325,-550,1375,50),spawn.mapRect(e+775,-550,675,50),spawn.mapRect(e+-200,-875,1300,50),spawn.mapRect(e+-125,-1125,50,275),spawn.mapRect(e+-125,-1150,800,50),spawn.mapRect(e+-1450,-1475,1600,50),spawn.mapRect(e+-1325,-1725,800,50),spawn.mapRect(e+50,-1725,1350,50),spawn.mapRect(e+-1125,-2250,700,50),spawn.mapRect(e,-525,50,150);const m=level.doorMap(e+12,-380,25,170,140,20,!1);spawn.mapRect(e-200,-865,50,150);const h=level.doorMap(e-188,-720,25,170,140,20,!1);spawn.mapRect(e+100,-1465,50,150);const w=level.doorMap(e+112,-1320,25,170,140,20,!1);spawn.mapRect(e+450,-3050,50,775);const y=level.doorMap(e+462,-2300,25,575,520,30,!1),x=level.portal({x:e+2100,y:-2100},Math.PI,{x:e+-1275,y:-650},2*Math.PI);a=()=>{m.isClosing=simulation.cycle%240<120,m.openClose(!0),h.isClosing=simulation.cycle%240>120,h.openClose(!0),w.isClosing=simulation.cycle%240<120,w.openClose(!0),y.isClosing=simulation.cycle%240>120,y.openClose(!0),x[2].query(),x[3].query()},o=()=>{d(r,i),x[0].draw(),x[1].draw(),x[2].draw(),x[3].draw()}},()=>{const s=[{x:e-675,y:-895},{x:e-750,y:-70},{x:e+75,y:-570}],n=Math.floor(Math.random()*s.length);if(l)level.exit.x=s[n].x,level.exit.y=s[n].y-25;else{var i=level.button(s[n].x,s[n].y,126,!1);if(i.isUp=!0,t>c)var r=level.doorMap(e+1375,-525,50,375,300,20,!1);else if(t<p)r=level.doorMap(e-1375,-525,50,375,300,20,!1)}spawn.mapRect(e+-1575,-2e3,3025,100),spawn.mapRect(e+-1500,-210,500,350),spawn.mapRect(e+1e3,-210,500,350),spawn.mapRect(e+900,-1250,125,1250),spawn.mapRect(e-1025,-1550,125,1625),spawn.mapRect(e-50,-1900,100,1500),spawn.mapRect(e+-975,-1250,200,25),spawn.mapRect(e+-950,-625,150,25),spawn.mapRect(e-925,-400,250,175),spawn.mapRect(e-725,-900,225,300),spawn.mapRect(e+325,-225,325,75),spawn.mapRect(e+400,-950,275,25),spawn.mapRect(e+775,-575,200,25),spawn.mapRect(e+0,-1225,125,25),spawn.mapRect(e+0,-575,225,175),spawn.mapRect(e-925,-75,875,150),spawn.mapRect(e+475,-1400,75,1250),l||(Math.random()<.5?(spawn.randomMob(e+-850,-450,0),spawn.randomMob(e+-850,-125,0),spawn.randomMob(e+-725,-100,0),spawn.randomMob(e+0,-100,0),spawn.randomMob(e+800,-50,0),spawn.randomMob(e+50,-275,0),spawn.randomMob(e+-300,-425,0),spawn.randomMob(e+-750,-475,0),spawn.randomMob(e+-850,-775,0),spawn.randomMob(e+-650,-1e3,0),spawn.randomMob(e+-150,-1325,0),spawn.randomMob(e+-825,-1350,0),spawn.randomMob(e+-375,-150,0)):(spawn.randomMob(e+350,-350,0),spawn.randomMob(e+175,-700,0),spawn.randomMob(e+350,-1175,0),spawn.randomMob(e+200,-1600,0),spawn.randomMob(e+500,-1675,0),spawn.randomMob(e+425,-50,0),spawn.randomMob(e+725,-75,0),spawn.randomMob(e+650,-700,0),spawn.randomMob(e+775,-1150,0),spawn.randomMob(e+500,-1675,0),spawn.randomMob(e+-150,-175,0),spawn.randomMob(e+-800,-150,0)));const m=level.boost(e-1185,-225,1400),h=level.boost(e+1100,-225,1100),w=level.hazard(e-900,-1225,1800,1225);let y=!1;const x=[];x.push(level.drip(e-900+1800*Math.random(),-1900,0,100)),x.push(level.drip(e-900+1800*Math.random(),-1900,0,150)),x.push(level.drip(e-900+1800*Math.random(),-1900,0,70)),a=()=>{for(let e=0;e<x.length;e++)x[e].draw()},o=()=>{d(r,i),w.query(),w.level(y,1.5),w.height<w.maxHeight?w.height>0||(y=!0):y=!1,m.query(),h.query()}},()=>{const s=[{x:e+775,y:-1695},{x:e-775,y:-800},{x:e-375,y:-2080}],n=Math.floor(Math.random()*s.length);if(l)level.exit.x=s[n].x,level.exit.y=s[n].y-25;else{var i=level.button(s[n].x,s[n].y,126,!1);if(i.isUp=!0,t>c)var r=level.doorMap(e+1375,-525,50,375,300,20,!1);else if(t<p)r=level.doorMap(e-1375,-525,50,375,300,20,!1)}spawn.mapRect(e+-1600,-3450,300,1475),spawn.mapRect(e+-1600,-3450,3225,100),spawn.mapRect(e+1300,-3450,325,1525),spawn.mapVertex(e+400,-180,"-300 0   -300 -100   300 -100   400 0"),spawn.mapVertex(e-400,-180,"300 0   300 -100   -300 -100   -400 0"),spawn.mapRect(e+-1500,-210,1425,350),spawn.mapRect(e+75,-210,1425,350),spawn.mapRect(e+75,-950,50,450),spawn.mapRect(e+125,-700,1225,200),spawn.mapRect(e+-1325,-1775,775,175),spawn.mapVertex(e+445,-800,"-200 0   -200 -300   100 -300   185 0"),spawn.mapVertex(e-310,-1880,"-185 0   -100 -400   400 -400   400 0"),spawn.mapVertex(e+-675,-725,"325 0  250 80  -250 80  -325 0  -250 -80  250 -80"),spawn.mapRect(e+625,-1700,750,500),l||(spawn.randomMob(e+-750,-1925,0),spawn.randomMob(e+-425,-2300,0),spawn.randomMob(e+-350,-2200,0),spawn.randomMob(e+-275,-2175,0),spawn.randomMob(e+-375,-2175,0),spawn.randomMob(e+1075,-1850,0),spawn.randomMob(e+925,-1775,0),spawn.randomMob(e+1150,-1800,0),spawn.randomMob(e+1400,-2150,0),spawn.randomMob(e+925,-850,0),spawn.randomMob(e+800,-800,0),spawn.randomMob(e+875,-825,0),spawn.randomMob(e+1050,-900,0),spawn.randomMob(e+19050,-2925,0),spawn.randomMob(e+17150,-3150,0),spawn.randomMob(e+17700,-3300,0));const m=level.portal({x:e+0,y:-200},-Math.PI/2,{x:e+200,y:-900},-Math.PI/2),h=level.portal({x:e+1275,y:-800},Math.PI,{x:e+-1275,y:-1875},2*Math.PI);a=()=>{m[2].query(!0),m[3].query(!0),h[2].query(),h[3].query()},o=()=>{d(r,i),m[0].draw(),m[1].draw(),m[2].draw(),m[3].draw(),h[0].draw(),h[1].draw(),h[2].draw(),h[3].draw()}},()=>{const s=[{x:e-300,y:-3120},{x:e+600,y:-3020},{x:e-575,y:-1770},{x:e-450,y:-2370}],n=Math.floor(Math.random()*s.length);if(l)level.exit.x=s[n].x,level.exit.y=s[n].y-25;else{var i=level.button(s[n].x,s[n].y,126,!1);if(i.isUp=!0,t>c)var r=level.doorMap(e+1375,-525,50,375,300,20,!1);else if(t<p)r=level.doorMap(e-1375,-525,50,375,300,20,!1)}spawn.mapRect(e+-1500,-210,3e3,400),spawn.mapRect(e+-1625,-3950,3225,350),spawn.mapRect(e+1300,-3850,300,2150),spawn.mapRect(e+-1625,-3950,325,2250),spawn.mapRect(e+-1050,-575,1e3,75),spawn.mapRect(e+175,-575,975,75),spawn.mapRect(e+-1050,-825,150,275),spawn.mapRect(e+-900,-1200,2275,75),spawn.mapRect(e+125,-1425,1250,300),spawn.mapRect(e+-925,-1775,2100,75),spawn.mapRect(e+-100,-2050,950,350),spawn.mapRect(e+-925,-2100,100,400),spawn.mapRect(e+-700,-2375,1225,75),spawn.mapRect(e+650,-2375,575,75),spawn.mapRect(e+-25,-2750,350,269),spawn.mapRect(e+-950,-3125,975,75),spawn.mapRect(e+325,-3025,900,75),spawn.bodyRect(e+-125,-1325,225,125,.3),spawn.bodyRect(e+-225,-2100,300,50,.3),spawn.bodyRect(e+-225,-2575,100,200,.3),spawn.bodyRect(e+850,-2575,150,200,.3),spawn.bodyRect(e+850,-1875,75,100,.3),spawn.bodyRect(e+500,-725,175,150,.3),spawn.bodyRect(e+-925,-2250,100,150,.3),spawn.bodyRect(e+-1050,-950,150,125,.3);const m=[()=>{spawn.randomMob(e+-775,-725,0),spawn.randomMob(e+-575,-700,0),spawn.randomMob(e+-275,-700,0),spawn.randomMob(e+-125,-650,0),spawn.randomMob(e+250,-675,0),spawn.randomMob(e+425,-650,0),spawn.randomMob(e+775,-650,0),spawn.randomMob(e+1050,-675,0),spawn.randomMob(e+675,-950,0),spawn.randomMob(e+-625,-900,0),spawn.randomMob(e+-750,-1400,0),spawn.randomMob(e+-500,-2025,0),spawn.randomMob(e+-125,-3225,0)},()=>{spawn.randomMob(e+-950,-925,0),spawn.randomMob(e+-775,-1325,0),spawn.randomMob(e+-450,-1500,0),spawn.randomMob(e+-325,-1250,0),spawn.randomMob(e+0,-1500,0),spawn.randomMob(e+375,-1525,0),spawn.randomMob(e+750,-1550,0),spawn.randomMob(e+1175,-1550,0),spawn.randomMob(e+-875,-1350,0),spawn.randomMob(e+-875,-2375,0),spawn.randomMob(e+175,-2850,0),spawn.randomMob(e+750,-2475,0)},()=>{spawn.randomMob(e+1075,-2e3,0),spawn.randomMob(e+725,-2125,0),spawn.randomMob(e+350,-2125,0),spawn.randomMob(e+-325,-2e3,0),spawn.randomMob(e+-675,-1875,0),spawn.randomMob(e+-725,-2200,0),spawn.randomMob(e+-675,-2575,0),spawn.randomMob(e+-425,-2675,0),spawn.randomMob(e+-50,-2875,0),spawn.randomMob(e+425,-2725,0),spawn.randomMob(e+1150,-2550,0),spawn.randomMob(e+1150,-2175,0),spawn.randomMob(e+1e3,-1900,0),spawn.randomMob(e+500,-2550,0),spawn.randomMob(e+125,-2900,0)},()=>{spawn.randomMob(e+1e3,-850,0),spawn.randomMob(e+300,-850,0),spawn.randomMob(e+-450,-825,0),spawn.randomMob(e+-1025,-1125,0),spawn.randomMob(e+-750,-1375,0),spawn.randomMob(e+-225,-1375,0),spawn.randomMob(e+625,-1525,0),spawn.randomMob(e+1025,-1925,0),spawn.randomMob(e+-425,-2100,0),spawn.randomMob(e+-400,-2650,0),spawn.randomMob(e+150,-3e3,0),spawn.randomMob(e+675,-3200,0),spawn.randomMob(e+-550,-3300,0)}];l||m[Math.floor(Math.random()*m.length)](),a=()=>{},o=()=>{d(r,i)}},()=>{const s=[{x:e+278,y:-1814},{x:e+778,y:-1814},{x:e+2025,y:-1995},{x:e-2025,y:-2425},{x:e-2100,y:-1995}],n=Math.floor(Math.random()*s.length);if(l)level.exit.x=s[n].x,level.exit.y=s[n].y-25;else{var i=level.button(s[n].x,s[n].y,126,!1);if(i.isUp=!0,t>c)var r=level.doorMap(e+1375,-525,50,375,300,20,!1);else if(t<p)r=level.doorMap(e-1375,-525,50,375,300,20,!1)}spawn.mapRect(e+-1500,-210,3e3,400),spawn.mapRect(e+-3200,-3200,300,1400),spawn.mapRect(e+2600,-3200,300,1400),spawn.mapRect(e+-3175,-3200,6175,225),Math.random()<.3&&spawn.mapRect(e+-1350,-550,150,50),Math.random()<.3&&spawn.mapRect(e+1175,-550,200,50),spawn.mapVertex(e+600,-900,"490 0  350 80  -350 80  -490 0  -350 -80  350 -80"),spawn.mapVertex(e-600,-750,"490 0  350 80  -350 80  -490 0  -350 -80  350 -80"),spawn.mapVertex(e-100,-1850,"-100 -300  0 -350  100 -300  100 300  0 350  -100 300"),spawn.mapVertex(e+-600,-2e3,"-150 -450 150 -450  150 450  0 525  -150 450"),spawn.mapVertex(e+350,-1575,"-150 0  150 0  150 450  0 525  -150 450"),spawn.mapVertex(e+850,-1575,"-150 0  150 0  150 450  0 525  -150 450"),spawn.mapVertex(e+-2050,-2350,"490 0  350 80  -350 80  -490 0  -350 -80  350 -80"),spawn.mapVertex(e+1700,-2450,"-100 -300  0 -350  100 -300  100 300  0 350  -100 300");const m=[()=>{spawn.randomMob(e+2250,-2375,0),spawn.randomMob(e+1950,-2825,0),spawn.randomMob(e+1275,-2775,0),spawn.randomMob(e+1450,-2200,0),spawn.randomMob(e+825,-1950,0),spawn.randomMob(e+400,-1875,0),spawn.randomMob(e+-75,-2275,0),spawn.randomMob(e+-650,-2550,0),spawn.randomMob(e+1500,-2075,0),spawn.randomMob(e+2125,-2650,0),spawn.randomMob(e+2075,-2250,0),spawn.randomMob(e+1e3,-2850,0),spawn.randomMob(e+750,-950,0),spawn.randomMob(e+-750,-1125,0),spawn.randomMob(e+-1575,-2050,0)},()=>{spawn.randomMob(e+-2225,-2125,0),spawn.randomMob(e+-2675,-2125,0),spawn.randomMob(e+-2600,-2600,0),spawn.randomMob(e+-2100,-2725,0),spawn.randomMob(e+-1425,-2600,0),spawn.randomMob(e+-1375,-2050,0),spawn.randomMob(e+-575,-2575,0),spawn.randomMob(e+-125,-2300,0),spawn.randomMob(e+350,-1925,0),spawn.randomMob(e+-350,-1050,0),spawn.randomMob(e+-1e3,-1e3,0),spawn.randomMob(e+-700,-1300,0),spawn.randomMob(e+350,-1150,0),spawn.randomMob(e+-575,-2525,0),spawn.randomMob(e+-1075,-2525,0)},()=>{spawn.randomMob(e+25,-2275,0),spawn.randomMob(e+300,-1975,0),spawn.randomMob(e+700,-1950,0),spawn.randomMob(e+325,-1200,0),spawn.randomMob(e+-225,-950,0),spawn.randomMob(e+-925,-975,0),spawn.randomMob(e+-675,-2575,0),spawn.randomMob(e+-1425,-2175,0),spawn.randomMob(e+1575,-2075,0),spawn.randomMob(e+2300,-2075,0),spawn.randomMob(e+425,-1925,0),spawn.randomMob(e+125,-2175,0),spawn.randomMob(e+-325,-2150,0),spawn.randomMob(e+-350,-950,0),spawn.randomMob(e+600,-325,0),spawn.randomMob(e+-600,-375,0)}];l||m[Math.floor(Math.random()*m.length)]();const h=level.boost(e-50,-225,790),w=level.boost(e+550,-985,900),y=level.boost(e+-850,-835,1900);a=()=>{},o=()=>{d(r,i),h.query(),w.query(),y.query()}},()=>{const s=[{x:e+625,y:-1395},{x:e-15,y:-1595},{x:e-800,y:-1295}],n=Math.floor(Math.random()*s.length);if(l)level.exit.x=s[n].x,level.exit.y=s[n].y-25;else{var i=level.button(s[n].x,s[n].y,126,!1);if(i.isUp=!0,t>c)var r=level.doorMap(e+1375,-525,50,375,300,20,!1);else if(t<p)r=level.doorMap(e-1375,-525,50,375,300,20,!1)}spawn.mapRect(e+-1500,-210,3e3,400),spawn.mapRect(e+-1575,-2200,3025,300),spawn.mapRect(e+-1100,-925,100,425),spawn.mapRect(e+-1100,-575,375,75),spawn.mapRect(e+-925,-1300,375,125),spawn.mapRect(e+-300,-1300,620,125),spawn.mapRect(e+450,-1400,500,225),spawn.mapRect(e+900,-550,500,50),spawn.mapRect(e+950,-925,400,270),spawn.mapRect(e+1250,-1250,150,75),spawn.mapRect(e+-225,-525,800,210),spawn.mapRect(e+-100,-1600,300,193),spawn.mapRect(e+925,-1250,75,75),spawn.bodyRect(e+200,-1475,75,175,.3),spawn.bodyRect(e+-25,-625,225,100,.3),spawn.bodyRect(e+-1e3,-750,125,175,.3),spawn.bodyRect(e+-625,-1450,75,150,.3),spawn.bodyRect(e+-650,-300,300,75,.3),l||(spawn.randomMob(e+-750,-1425,0),spawn.randomMob(e+-1050,-1100,0),spawn.randomMob(e+-825,-750,0),spawn.randomMob(e+-500,-400,0),spawn.randomMob(e+450,-650,0),spawn.randomMob(e+0,-725,0),spawn.randomMob(e+300,-1350,0),spawn.randomMob(e+550,-1500,0),spawn.randomMob(e+725,-1650,0),spawn.randomMob(e+900,-1550,0),spawn.randomMob(e+1100,-1300,0),spawn.randomMob(e+-1050,-1050,0),spawn.randomMob(e+-925,-350,0),spawn.randomMob(e+75,-1750,0),spawn.randomMob(e+1e3,-375,0)),a=()=>{},o=()=>{d(r,i),ctx.fillStyle="rgba(0,0,0,0.08)",ctx.fillRect(e+-225,-325,800,125),ctx.fillRect(e+-100,-1425,300,125),ctx.fillRect(e+950,-675,400,125)}},()=>{const s=[{x:e+50,y:-1395},{x:e-625,y:-2945},{x:e+900,y:-2945}],n=Math.floor(Math.random()*s.length);if(spawn.mapRect(e+-1500,-210,3e3,400),boosts=[],boosts.push(level.boost(e-311,-218,1200,1.85)),spawn.mapRect(e+-225,-525,675,375),spawn.mapRect(e+-1350,-1175,400,675),spawn.mapRect(e+-225,-2125,675,400),spawn.mapRect(e+-225,-1400,675,650),boosts.push(level.boost(e-1335,-1200,1800,1)),boosts.push(level.boost(e+1272,-1300,1550,2.75)),boosts.push(level.boost(e+1455,-2048,1450,2.5)),spawn.mapRect(e+1500,-3825,325,1900),boosts.push(level.boost(e-1555,-2048,1450,.64)),spawn.mapRect(e+-1825,-4e3,325,2150),spawn.mapRect(e+-1825,-4070,3650,375),spawn.randomMob(e+100,-2125,0),boosts.push(level.boost(e+75,-2175,2800)),spawn.mapRect(e+-100,-3900,400,400),Matter.Body.setAngle(map[map.length-1],map[map.length-1].angle-Math.PI/4),spawn.mapRect(e+225,-2950,1100,150),spawn.mapRect(e+-1325,-2950,1325,150),l)level.exit.x=s[n].x,level.exit.y=s[n].y-25;else{var i=level.button(s[n].x,s[n].y,126,!1);if(i.isUp=!0,t>c)var r=level.doorMap(e+1375,-525,50,375,300,20,!1);else if(t<p)r=level.doorMap(e-1375,-525,50,375,300,20,!1)}l||(spawn.randomMob(e+350,-600,0),spawn.randomMob(e+-25,-600,0),spawn.randomMob(e+600,-300,0),spawn.randomMob(e+1050,-300,0),spawn.randomMob(e+350,-1525,0),spawn.randomMob(e+-75,-1525,0),spawn.randomMob(e+-1075,-1275,0),spawn.randomMob(e+-1350,-2050,0),spawn.randomMob(e+-50,-2250,0),spawn.randomMob(e+-200,-3050,0),spawn.randomMob(e+-925,-3150,0),spawn.randomMob(e+450,-3125,0),spawn.randomMob(e+1075,-3025,0),spawn.randomMob(e+750,-3125,0),spawn.randomMob(e+-725,-3125,0)),a=()=>{for(let e=0;e<boosts.length;e++)boosts[e].query()},o=()=>{d(r,i),ctx.fillStyle="rgba(0,0,0,0.08)",ctx.fillRect(e-225,-775,675,275),ctx.fillRect(e-225,-1750,675,375)}},()=>{simulation.removeEphemera("zoom",!0),simulation.zoomTransition(2e3);const s=[{x:e-65,y:-2045}],n=Math.floor(Math.random()*s.length),i=t>0?1:-1;if(l)level.exit.x=s[n].x,level.exit.y=s[n].y-25;else{var r=level.button(s[n].x,s[n].y,126,!1);if(r.isUp=!0,t>c)var m=level.doorMap(e+1375,-525,50,375,300,20,!1);else if(t<p)m=level.doorMap(e-1375,-525,50,375,300,20,!1)}spawn.mapRect(e+-1500,-210,3e3,400);const h=[];h.push(level.mover(e+-1200,-220,900,50,3*i)),h.push(level.mover(e+300,-220,900,50,3*i)),spawn.mapRect(e+-4700,-7e3,700,5200),spawn.mapRect(e+4e3,-7e3,500,5200);const w=[];w.push(level.portal({x:e-315,y:-310},Math.PI,{x:e-3985,y:-2110},0)),spawn.mapRect(e-1375,-1100,2750,300),spawn.mapRect(e+-300,-525,600,550),h.push(level.mover(e-4e3,-2025,2700,50,30*i)),h.push(level.mover(e+1300,-2025,2700,50,30*i)),w.push(level.portal({x:e+3985,y:-2110},Math.PI,{x:e-3985,y:-3410},0)),spawn.mapRect(e+-500,-2050,1e3,150),spawn.mapRect(e+-4200,-2300,1225,125),spawn.mapRect(e+2675,-2350,1625,150);const y=level.elevator(e-1300,-1175,175,50,-1600,.011,{up:.01,down:.7}),x=level.elevator(e+1125,-1175,175,50,-1600,.011,{up:.01,down:.7});w.push(level.portal({x:e+3985,y:-3410},Math.PI,{x:e-3985,y:-5110},0)),h.push(level.mover(e-4e3,-3325,8e3,50,7*i)),Math.random()<.5?(spawn.mapRect(e+1125,-3625,325,200),spawn.mapRect(e-1350,-3600,375,175),spawn.mapRect(e+325,-3825,325,100),spawn.mapRect(e-675,-3800,450,75),spawn.mapRect(e-1775,-3900,175,400),spawn.mapRect(e-2100,-4275,325,775),spawn.mapRect(e+2625,-3700,450,125),spawn.mapRect(e-3350,-3335,175,50),spawn.mapRect(e-200,-3335,500,50),spawn.mapRect(e+3200,-3335,325,50)):(spawn.mapRect(e+-325,-3550,425,125),spawn.mapRect(e+-1100,-3750,425,75),spawn.mapRect(e+-2175,-3500,200,200),spawn.mapRect(e+675,-3700,175,75),spawn.mapRect(e+2375,-3425,275,125),spawn.mapRect(e+1750,-3650,275,75),spawn.mapRect(e+1125,-3850,175,550),spawn.mapRect(e+-3300,-4175,675,550)),spawn.mapRect(e+3550,-3625,550,100),spawn.mapRect(e+-4100,-3650,325,100),l||(spawn.randomMob(e+3900,-3725,0),spawn.randomMob(e+3675,-3700,0),spawn.randomMob(e+2075,-3400,0),spawn.randomMob(e+2500,-3500,0),spawn.randomMob(e+1975,-3700,0),spawn.randomMob(e+1250,-3900,0),spawn.randomMob(e+800,-3750,0),spawn.randomMob(e+2700,-4700,0),spawn.randomMob(e+-75,-3650,0),spawn.randomMob(e+575,-3500,0),spawn.randomMob(e+-850,-3900,0),spawn.randomMob(e+-2725,-4350,0),spawn.randomMob(e+-2975,-4300,0),spawn.randomMob(e+-3950,-3675,0),spawn.randomMob(e+-2950,-3450,0),spawn.randomMob(e+-2075,-3575,0),spawn.randomMob(e+-1650,-3450,0),spawn.randomMob(e+-2825,-4400,0),spawn.randomMob(e+-900,-4475,0),spawn.randomMob(e+-75,-3575,0),spawn.randomMob(e+3900,-3775,0),spawn.randomMob(e+2825,-3375,0),spawn.randomMob(e+2075,-3425,0),spawn.randomMob(e+1525,-3425,0),spawn.randomMob(e+350,-3500,0),spawn.randomMob(e+-1675,-3650,0),spawn.randomMob(e+-3025,-3450,0),spawn.randomMob(e+-3850,-3750,0)),spawn.mapRect(e+-4250,-7e3,8475,325),w.push(level.portal({x:e+3985,y:-5110},Math.PI,{x:e+320,y:-310},0)),h.push(level.mover(e-4e3,-5025,8e3,50,50*i)),Math.random()<.5?(spawn.mapVertex(e-2100,-5050,"-150 0   150 0   5 -150   -5 -150"),spawn.mapVertex(e-0,-5100,"-500 0   500 0   25 -300   -25 -300"),spawn.mapVertex(e+2100,-5050,"-300 0   300 0   100 -100   -100 -100")):(spawn.mapVertex(e-2100,-5050,"-100 0   100 0   25 -100   -25 -100"),spawn.mapVertex(e-0,-5050,"-400 0   400 0   100 -100   -100 -100"),spawn.mapVertex(e+2100,-5050,"-400 0   400 0   100 -100   -100 -100")),spawn.mapRect(e+2e3,-6700,200,1250),spawn.mapRect(e+-100,-6700,200,1075),spawn.mapRect(e+-2125,-6700,50,925),a=()=>{for(let e=0;e<h.length;e++)h[e].push();for(let e=0;e<w.length;e++)w[e][2].query(),w[e][3].query()},o=()=>{for(let e=0;e<w.length;e++)w[e][0].draw(),w[e][1].draw(),w[e][2].draw(),w[e][3].draw();y.moveOnTouch(),x.moveOnTouch(),ctx.strokeStyle="#000",ctx.lineWidth=4,ctx.setLineDash([40,40]);for(let e=0;e<h.length;e++)ctx.beginPath(),ctx.moveTo(h[e].vertices[0].x+2,h[e].vertices[0].y-3),ctx.lineTo(h[e].vertices[1].x-2,h[e].vertices[1].y-3),ctx.lineDashOffset=-simulation.cycle*h[e].VxGoal%80,ctx.stroke();ctx.setLineDash([0,0]),d(m,r)}}];simulation.zoomTransition(level.defaultZoom),w[n[Math.abs(t%n.length)]](),spawn.mapRect(e+-8e3,0,16e3,800),spawn.mapRect(e+1500-200,-2e3,6400,1500),spawn.mapRect(e+-1500-6400+200,-2e3,6400,1500);const y=18+25*Math.random(),x=6400;if(r){for(let v=0;v<map.length;++v)map[v].collisionFilter.category=cat.map,map[v].collisionFilter.mask=cat.player|cat.map|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet,Matter.Body.setStatic(map[v],!0),Composite.add(engine.world,map[v]);let f,g;if(simulation.draw.setPaths(),simulation.draw.lineOfSightPrecalculation(),Math.abs(s[0].position.x-m.pos.x)>Math.abs(s[1].position.x-m.pos.x)?(f=s[0],g=s[1]):(f=s[1],g=s[0]),f.isMoving=!1,f.position.x>g.position.x){Matter.Body.setPosition(f,{x:-1725+e,y:f.position.y}),f.changeDirection(!1),f.stops={right:-1725+e,left:-7225+e};for(let M=0;M<4;++M)spawn.bodyRect(e+-1500-6400+200+Math.random()*x,-35,y*(.6+Math.random()),y*(.6+Math.random()),1)}else{Matter.Body.setPosition(f,{x:1725+e,y:f.position.y}),f.changeDirection(!0),f.stops={left:1725+e,right:7225+e};for(let T=0;T<4;++T)spawn.bodyRect(e+1500-200+Math.random()*x,-35,y*(.6+Math.random()),y*(.6+Math.random()),1)}}else{for(let P=0;P<4;++P)spawn.bodyRect(e+-1500-6400+200+Math.random()*x,-35,y*(.6+Math.random()),y*(.6+Math.random()),1);for(let S=0;S<4;++S)spawn.bodyRect(e+1500-200+Math.random()*x,-35,y*(.6+Math.random()),y*(.6+Math.random()),1)}};r(0,!1),level.custom=()=>{for(let e=0;e<s.length;e++)s[e].trainStop();ctx.fillStyle="rgba(0,0,0,0.1)",ctx.fillRect(m.pos.x-4e3,m.pos.y-4e3,8e3,8e3),level.exit.drawAndCheck(),m.pos.x>4950+t*e?(t++,r(t*e)):m.pos.x<t*e-4950&&(t--,r(t*e)),a()},level.customTopLayer=()=>{for(let e=0;e<s.length;e++)s[e].draw();o()},level.isProcedural=!0,simulation.draw.lineOfSightPrecalculation(),simulation.draw.drawMapPath=simulation.draw.drawMapSight},reservoir(){simulation.isHorizontalFlipped?level.announceText(700,950,!0):level.announceText(-687,950,!0),level.announceMobTypes(),level.exit.x=1700,level.exit.y=-4510,spawn.mapRect(level.exit.x,level.exit.y+25,100,25),level.setPosToSpawn(-500,850),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),level.defaultZoom=2300,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#d8dadf",color.map="#3d4240",powerUps.spawnStartingPowerUps(-575,-2925),spawn.mapRect(-3500,-5e3,1500,6500),spawn.mapRect(2e3,-5e3,1500,6500),spawn.mapRect(-2500,1100,5e3,400),spawn.mapRect(-3500,-5475,7e3,600),spawn.mapRect(-1925,-4900,175,375),spawn.mapRect(-1950,-4550,225,25),spawn.mapRect(1475,-4900,50,250),spawn.mapRect(1400,-4475,650,50),spawn.mapVertex(-687,1060,"700 0  -700 0  -450 -300  450 -300"),spawn.mapVertex(863,1060,"700 0  -700 0  -450 -300  450 -300"),spawn.mapRect(-730,525,475,50),spawn.mapRect(-730,550,50,150),spawn.mapRect(-305,550,50,500),spawn.bodyRect(-717,700,25,100),spawn.bodyRect(-717,800,25,100),spawn.mapVertex(-688,-50,"490 0  350 80  -350 80  -490 0  -350 -80  350 -80"),spawn.mapRect(-1225,-100,1070,100),Math.random()<.33?spawn.mapVertex(-687,-1e3,"-100 -300  0 -350  100 -300  100 300  0 350  -100 300"):Math.random()<.5?spawn.mapVertex(-687,-1e3,"-150 -450  0 -525  150 -450  150 450  0 525  -150 450"):spawn.mapVertex(-687,-700,"-150 0  150 0  150 450  0 525  -150 450"),spawn.mapVertex(862,-50,"490 0  350 80  -350 80  -490 0  -350 -80  350 -80"),spawn.mapRect(325,-100,1070,100),spawn.mapRect(175,675,425,25),spawn.mapRect(1125,225,425,25),spawn.mapRect(650,450,425,25),Math.random()<.33?spawn.mapVertex(855,-1e3,"-100 -300  0 -350  100 -300  100 300  0 350  -100 300"):Math.random()<.5?spawn.mapVertex(855,-1e3,"-150 -450  0 -525  150 -450  150 450  0 525  -150 450"):spawn.mapVertex(855,-700,"-150 0  150 0  150 450  0 525  -150 450"),spawn.mapVertex(-687,-1936,"-625 50  0 100  625 50  625 -50 -625 -50"),spawn.mapVertex(855,-1936,"-625 50  0 100  625 50  625 -50 -625 -50"),spawn.mapRect(550,-3050,600,75),spawn.bodyRect(-125,-2025,475,25),spawn.mapRect(-925,-2350,675,50),spawn.mapRect(-825,-2825,425,50),spawn.mapRect(-450,-3125,50,350),spawn.mapRect(-750,-3150,350,50),spawn.mapRect(-650,-3400,250,300),spawn.mapRect(-650,-3675,200,50),spawn.bodyRect(-375,-2150,100,150,.2),spawn.mapRect(-1400,-2625,325,25),spawn.mapRect(-1450,-3225,425,25),spawn.mapRect(-1512.5,-3825,550,25),spawn.randomMob(1e3,-275,.2),spawn.randomMob(950,-1725,.1),spawn.randomMob(-725,-1775,.1),spawn.randomMob(-200,-2075,0),spawn.randomMob(-550,-3500,-.2),spawn.randomMob(375,-2125,0),spawn.randomMob(-700,-2450,-.1),spawn.randomMob(-1175,-2775,-.1),spawn.randomMob(1025,-3200,-.2),spawn.randomMob(-525,-3750,-.2),spawn.randomMob(1350,-2075,-.3),spawn.randomMob(1775,1e3,-.4),spawn.randomSmallMob(-575,-2925),spawn.randomGroup(-400,-4400,0),spawn.randomLevelBoss(825,-3500),spawn.secondaryBossChance(75,-1350),powerUps.addResearchToLevel();const e=level.hazard(-2e3,-5e3,4e3,6060);e.height-=e.maxHeight-60,e.min.y+=e.maxHeight,e.max.y=e.min.y+e.height;const t=level.elevator(-1625,-90,310,800,-2e3,.0025,{up:.1,down:.2}),a=level.elevator(1175,-3050,200,250,-4475,.0025,{up:.12,down:.2});let o=0,s=0,n=0,l=!1;const i=.3+Math.min(1,.005*simulation.difficulty),c=[];if(simulation.isHorizontalFlipped){spawn.mapVertex(584,-2500,"0 0  300 0  150 600  0 600"),spawn.mapVertex(1116,-2500,"0 0  300 0  300 600  150 600"),spawn.bodyRect(-200,-125,625,25),level.flipHorizontal(),t.holdX=-t.holdX,a.holdX=-a.holdX,c.push(level.spinner(-110,-3325,45,600,.003,0,0,.01));const p=level.boost(-900,-2e3,790);level.setPosToSpawn(500,850),level.custom=()=>{ctx.fillStyle="#c0c3c9",ctx.fillRect(1468,-1975,2,1915),ctx.fillRect(-1274,-4460,2,1425),ctx.fillRect(1225,-3825,25,1850),ctx.fillStyle="#d0d4d6",ctx.fillRect(275,-1925,825,2925),ctx.fillRect(-1275,-1925,825,2925),ctx.fillStyle="#cff",ctx.fillRect(-2e3,-4900,525,425),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{p.query(),t.move(),a.move(),ctx.fillStyle="#233",ctx.beginPath(),ctx.arc(c[0].pointA.x,c[0].pointA.y,9,0,2*Math.PI);for(let e=0,t=c.length;e<t;e++)ctx.moveTo(c[e].pointA.x,c[e].pointA.y),ctx.arc(c[e].pointA.x,c[e].pointA.y,9,0,2*Math.PI);ctx.fill(),ctx.fillStyle="rgba(0,10,30,0.1)",ctx.fillRect(-1150,-3e3,600,1025),ctx.fillRect(450,-3100,300,275),ctx.fillRect(450,-3625,200,225),ctx.fillRect(400,-2775,425,450),ctx.fillRect(250,-2300,675,300),e.query(),l?e.height<5500&&(ctx.fillStyle=`hsla(160, 100%, 43%,${.3+.07*Math.random()})`,ctx.fillRect(s,-5050,o,6175-e.height),m.isTimeDilated||(o=.98*o+4.7*Math.random(),n=.98*n+3.5*Math.random(),s=1857-n,ctx.fillRect(s+o*Math.random(),-5050,4,6175-e.height),player.position.x>s&&player.position.x<s+o&&player.position.y<e.height&&Matter.Body.setVelocity(player,{x:player.velocity.x,y:player.velocity.y+2})),e.levelRise(i)):Vector.magnitudeSquared(Vector.sub(player.position,level.enter))>1e5&&(l=!0)}}else{if(spawn.mapVertex(1116,-2500,"0 0  300 0  150 600  0 600"),spawn.mapVertex(584,-2500,"0 0  300 0  300 600  150 600"),Math.random()<.1)c.push(level.spinner(65,-300,40,450,.003,Math.PI/2));else if(Math.random()<.25){c.push(level.spinner(65,-500,40,500,.003,0,0,-.015));const e=250,t=`${e} 0   ${e*Math.cos(5.236)} ${e*Math.sin(5.236)}    ${e*Math.cos(4.189)} ${e*Math.sin(4.189)}     ${-e} 0     ${e*Math.cos(2.0944)} ${e*Math.sin(2.0944)}      ${e*Math.cos(1.0472)} ${e*Math.sin(1.0472)}  `;Matter.Body.setVertices(c[c.length-1].bodyB,Vertices.fromPath(t))}else{const e=410,t=30;spawn.bodyRect(-120,-75,e,t,1,spawn.propsIsNotHoldable);let a=body[body.length-1];cons[cons.length]=Constraint.create({pointA:{x:a.position.x-e/2+50-211,y:a.position.y-1825},bodyB:a,pointB:{x:-e/2+50,y:0},damping:.01,stiffness:.002,length:1800}),cons[cons.length]=Constraint.create({pointA:{x:a.position.x+e/2-50+211,y:a.position.y-1825},bodyB:a,pointB:{x:e/2-50,y:0},damping:.01,stiffness:.002,length:1800}),Composite.add(engine.world,[cons[cons.length-1],cons[cons.length-2]])}if(c.push(level.spinner(50,-3325,45,600,.003,0,0,.01)),Math.random()<.5){const e=200,t=`${e} 0   ${e*Math.cos(5.236)} ${e*Math.sin(5.236)}    ${e*Math.cos(4.189)} ${e*Math.sin(4.189)}     ${-e} 0     ${e*Math.cos(2.0944)} ${e*Math.sin(2.0944)}      ${e*Math.cos(1.0472)} ${e*Math.sin(1.0472)}  `;Matter.Body.setVertices(c[c.length-1].bodyB,Vertices.fromPath(t))}const p=level.boost(800,-2e3,790);level.custom=()=>{ctx.fillStyle="#c0c3c9",ctx.fillRect(-1470,-1975,2,1915),ctx.fillRect(1276,-4460,2,1425),ctx.fillRect(-1250,-3825,25,1850),ctx.fillStyle="#d0d4d6",ctx.fillRect(-1100,-1925,825,2925),ctx.fillRect(450,-1925,825,2925),ctx.fillStyle="#cff",ctx.fillRect(1475,-4900,525,425),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{p.query(),t.move(),a.move(),ctx.fillStyle="#233",ctx.beginPath(),ctx.arc(c[0].pointA.x,c[0].pointA.y,9,0,2*Math.PI);for(let e=0,t=c.length;e<t;e++)ctx.moveTo(c[e].pointA.x,c[e].pointA.y),ctx.arc(c[e].pointA.x,c[e].pointA.y,9,0,2*Math.PI);ctx.fill(),ctx.fillStyle="rgba(0,10,30,0.1)",ctx.fillRect(550,-3e3,600,1025),ctx.fillRect(-750,-3100,300,275),ctx.fillRect(-650,-3625,200,225),ctx.fillRect(-825,-2775,425,450),ctx.fillRect(-925,-2300,675,300),e.query(),l?e.height<5500&&(ctx.fillStyle=`hsla(160, 100%, 43%,${.3+.07*Math.random()})`,ctx.fillRect(s,-5050,o,6175-e.height),m.isTimeDilated||(o=.98*o+4.7*Math.random(),n=.98*n+3.5*Math.random(),s=n-1985,ctx.fillRect(s+o*Math.random(),-5050,4,6175-e.height),player.position.x>s&&player.position.x<s+o&&player.position.y<e.height&&Matter.Body.setVelocity(player,{x:player.velocity.x,y:player.velocity.y+2})),e.levelRise(i)):Vector.magnitudeSquared(Vector.sub(player.position,level.enter))>1e5&&(l=!0)}}},reactor(){simulation.isHorizontalFlipped?level.announceText(550,-710,!0):level.announceText(-550,-725,!0),level.exit.x=3500,level.exit.y=-42,spawn.mapRect(level.exit.x,level.exit.y+25,100,25),level.defaultZoom=2e3,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#c3d6df",color.map="#303639",spawn.bodyRect(250,-70,100,70,1),spawn.mapRect(-425,0,4500,2100),spawn.mapRect(-475,-2825,4500,1025);spawn.mapVertex(1487,-900,"-400 -300  -300 -400   300 -400  400 -300   400 300  300 400  -300 400  -400 300"),spawn.mapRect(-2025,-2825,1250,4925),spawn.mapRect(-900,-2825,1125,1725),spawn.mapRect(-900,-750,1125,2850),spawn.mapRect(-325,-1250,550,300),spawn.mapRect(3800,-2825,1225,4925),spawn.mapRect(2750,-2150,1325,1775),spawn.mapRect(2750,-475,550,300),spawn.mapRect(2750,-7,1050,150);const e=level.door(-313,-950,525,200,190,2),t=level.door(2762,-175,525,200,190,2);e.collisionFilter.category=cat.map,t.collisionFilter.category=cat.map;let a=!1,o=!1,s=!1;if(simulation.isHorizontalFlipped){level.flipHorizontal(),level.setPosToSpawn(550,-800),spawn.mapRect(level.enter.x,level.enter.y+20,100,20);const n=level.button(-1500,0);n.isUp=!0,level.custom=()=>{if(a&&player.position.x>300&&(a=!1,e.isClosing=!1),e.openClose(),t.openClose(),ctx.fillStyle="#d5ebef",ctx.fillRect(-3800,-375,1050,375),level.enter.draw(),level.exit.drawAndCheck(),n.draw(),n.isUp)n.query();else if(s){if(!(o||simulation.cycle%180)){let a=!1;for(let e=0;e<mob.length;e++)if(mob[e].isReactorBoss){a=!0;break}a||(o=!0,e.isClosing=!1,t.isClosing=!1,powerUps.spawn(-3650,-50,"tech"),powerUps.spawn(-3650,-150,"tech"),simulation.difficultyMode<7&&powerUps.spawn(-3650,-300,"tech"))}}else if(player.position.x<0)if(t.isClosed()&&e.isClosed()){s=!0,a=!0;for(let e=0;e<12;++e)powerUps.spawn(550*Math.random()-1800,-1800,"ammo");for(let e=0;e<5;++e)powerUps.spawn(550*Math.random()-1800,-1700,"heal");for(let e=0;e<1;++e)powerUps.spawn(550*Math.random()-1800,-1750,"research");if(mobs.mobDeaths<level.levelsCleared&&!simulation.isCheating)for(let e=0;e<250;e++)spawn.starter(2400*Math.random()-2700,-1300-500*Math.random());else{const e=level.levelsCleared/10+simulation.difficultyMode/3;if(Math.random()<.25)for(let t=0,a=e;t<a;++t)spawn.timeBoss(-1327-200*t,-1525,80,!1);else if(Math.random()<.33)for(let t=0,a=.7*e;t<a;++t)spawn.bounceBoss(-1327-200*t,-1525,80,!1);else if(Math.random()<.5)for(let t=0,a=.7*e;t<a;++t)spawn.sprayBoss(-1327-200*t,-1525,30,!1);else for(let t=0,a=e;t<a;++t)spawn.mineBoss(-1327-200*t,-1525,50,!1)}}else e.isClosing=!0,t.isClosing=!0,(Matter.Query.collides(t,body).length>1||Matter.Query.collides(e,body).length>1)&&(n.isUp=!0,e.isClosing=!1,t.isClosing=!1);else e.isClosing=!1},level.customTopLayer=()=>{e.draw(),t.draw(),ctx.fillStyle="rgba(0,0,0,0.1)",ctx.fillRect(-225,-1100,1e3,350)}}else{level.setPosToSpawn(-550,-800),spawn.mapRect(level.enter.x,level.enter.y+20,100,20);const n=level.button(1400,0);n.isUp=!0,level.custom=()=>{if(a&&player.position.x<-300&&(a=!1,e.isClosing=!1),e.openClose(),t.openClose(),ctx.fillStyle="#d5ebef",ctx.fillRect(2750,-375,1050,375),level.enter.draw(),level.exit.drawAndCheck(),n.draw(),n.isUp)n.query();else if(s){if(!(o||simulation.cycle%180)){let a=!1;for(let e=0;e<mob.length;e++)if(mob[e].isBoss){a=!0;break}a||(o=!0,e.isClosing=!1,t.isClosing=!1,powerUps.spawn(3650,-50,"tech"),powerUps.spawn(3650,-150,"tech"),powerUps.spawn(3650,-300,"tech"))}}else if(player.position.x>0)if(t.isClosed()&&e.isClosed()){s=!0,a=!0;for(let e=0;e<9;++e)powerUps.spawn(1200+550*Math.random(),-1700,"ammo");for(let e=0;e<3;++e)powerUps.spawn(1200+550*Math.random(),-1700,"heal");if(simulation.difficultyMode>5)for(let e=0;e<8;e++)powerUps.spawn(1200+550*Math.random(),-1700,"ammo");const e=Math.pow(simulation.difficulty,.7);if(mobs.mobDeaths<level.levelsCleared&&!simulation.isCheating)for(let e=0;e<250;e++)spawn.starter(300+2400*Math.random(),-1300-500*Math.random());else if(Math.random()<.07&&simulation.difficulty>35){for(let t=0,a=.25*e/6;t<a;++t)spawn.timeBoss(1487+200*t,-1525,60,!1);for(let t=0,a=.1*e/6;t<a;++t)spawn.bounceBoss(1487+200*t,-1525,80,!1);for(let t=0,a=.15*e/6;t<a;++t)spawn.sprayBoss(1487+200*t,-1525,30,!1);for(let t=0,a=.26*e/6;t<a;++t)spawn.mineBoss(1487+200*t,-1525,50,!1)}else if(Math.random()<.25)for(let t=0,a=.25*e;t<a;++t)spawn.timeBoss(1487+200*t,-1525,80,!1);else if(Math.random()<.33)for(let t=0,a=.1*e;t<a;++t)spawn.bounceBoss(1487+200*t,-1525,80,!1);else if(Math.random()<.5)for(let t=0,a=.15*e;t<a;++t)spawn.sprayBoss(1487+200*t,-1525,30,!1);else for(let t=0,a=.26*e;t<a;++t)spawn.mineBoss(1487+200*t,-1525,50,!1)}else e.isClosing=!0,t.isClosing=!0,(Matter.Query.collides(t,body).length>1||Matter.Query.collides(e,body).length>1)&&(n.isUp=!0,e.isClosing=!1,t.isClosing=!1);else e.isClosing=!1},level.customTopLayer=()=>{e.draw(),t.draw(),ctx.fillStyle="rgba(0,0,0,0.1)",ctx.fillRect(-775,-1100,1e3,350)}}powerUps.addResearchToLevel()},towers(){level.announceMobTypes();const e=!!(simulation.isHorizontalFlipped&&Math.random()<.33);e?(level.setPosToSpawn(9200,-2255),level.exit.x=350,level.exit.y=-25,leftRoomColor="#cff",rightRoomColor="rgba(0,0,0,0.13)"):(level.setPosToSpawn(400,-50),level.exit.x=9150,level.exit.y=-2230),e?level.announceText(9200,-2170,!0):level.announceText(400,50,!0),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),level.fallMode="position",level.fallModeBounds={left:level.enter.x,right:level.exit.x},e&&(level.fallModeBounds={left:level.exit.x,right:level.enter.x}),simulation.fallHeight=5e3,spawn.mapRect(level.exit.x,level.exit.y+20,100,20),level.defaultZoom=2300,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#cdd9df",powerUps.spawnStartingPowerUps(6300,1025);const t=level.boost(7560,1480,1700,1.75),a=level.boost(7098,0,1250,Math.PI/3),o=level.boost(9700,-730,1050,1.95),s=level.boost(4300,-720,1500,1.25),n=level.boost(3e3,-1215,3e3,1.25),l=level.boost(8251,-619,1200,2.7),i=level.boost(7750,-1540,1050,1.2);let c,p;c=level.portal({x:3675,y:-1200},-Math.PI/2,{x:3675,y:-375},Math.PI/2),p=level.portal({x:6300,y:-1225},-Math.PI/2,{x:6300,y:-375},Math.PI/2),level.custom=()=>{if(t.query(),a.query(),o.query(),s.query(),n.query(),l.query(),i.query(),ctx.fillStyle="rgba(50,70,100,0.04)",ctx.fillRect(2500,-1e4,1800,3e4),ctx.fillRect(8300,-1e4,1800,3e4),ctx.fillRect(-500,-1e4,1800,3e4),ctx.fillRect(5400,-1e4,1800,3e4),c[2].query(),c[3].query(),p[2].query(),p[3].query(),ctx.fillStyle="#cff",e?ctx.fillRect(150,-300,525,325):ctx.fillRect(8925,-2575,525,400),level.exit.drawAndCheck(),level.enter.draw(),m.onGround)for(let e=0;e<r.length;e++)m.standingOn===r[e]&&(m.moverX=r[e].velocity.x,m.Vx=player.velocity.x-r[e].velocity.x);ctx.beginPath();for(let e=0,t=r.length;e<t;e++){let t=r[e].vertices;ctx.moveTo(t[0].x,t[0].y);for(let e=1;e<t.length;e+=1)ctx.lineTo(t[e].x,t[e].y);ctx.lineTo(t[0].x,t[0].y)}ctx.strokeStyle="#000",ctx.lineWidth=10,ctx.stroke();const h=.011;r[0].force.x=.004*Math.sin(simulation.cycle*h+.2)*r[0].mass,cons[0].length=1550+1630*Math.sin(simulation.cycle*h),cons[1].length=1550+1630*Math.sin(simulation.cycle*h+Math.PI)},level.customTopLayer=()=>{ctx.fillStyle="rgba(0,0,0,0.13)",ctx.fillRect(8300,-1950,1550,1275),ctx.fillRect(5400,875,1800,650),ctx.fillRect(2950,-2200,875,1050),ctx.fillRect(5900,-1025,800,450),e?ctx.fillRect(8925,-2575,575,400):ctx.fillRect(150,-300,525,325),ctx.fillStyle="rgba(0,0,0,0.5)",ctx.fillRect(7175,-1515,125,180),c[0].draw(),c[1].draw(),c[2].draw(),c[3].draw(),p[0].draw(),p[1].draw(),p[2].draw(),p[3].draw()};spawn.bodyVertex(3300,300,"300 -50  300 50  275 75  -275 75  -300 50  -300 -50  -275 -75  275 -75",{density:2e-4,friction:1,frictionStatic:1,frictionAir:.2,isNotHoldable:!0});const r=[];r.push(body[body.length-1]),simulation.ephemera.push({count:25,do(){this.count--,this.count<0&&(simulation.removeEphemera(this),r[0].frictionAir=.02)}}),cons[cons.length]=Constraint.create({pointA:{x:1300,y:100},pointB:{x:-300,y:-50},bodyB:body[body.length-1],stiffness:.001}),Composite.add(engine.world,cons[cons.length-1]),cons[cons.length]=Constraint.create({pointA:{x:5400,y:100},pointB:{x:300,y:-50},bodyB:body[body.length-1],stiffness:.001}),Composite.add(engine.world,cons[cons.length-1]);let h=900,d=100;spawn.mapVertex(400,900,`${-h} ${-h+d}  ${-h+d} ${-h}   ${h-d} ${-h}  ${h} ${-h+d}   ${h} ${h-d}  ${h-d} ${h}  ${-h+d} ${h}  ${-h} ${h-d}`),spawn.mapRect(100,-350,575,75),spawn.mapRect(100,-300,75,375),spawn.mapRect(600,-325,75,175),spawn.mapRect(600,-10,75,50),spawn.mapVertex(2750,-1300,`${-h} ${-h+d}  ${-h+d} ${-h}   -400 ${-h}           -400 ${h}          ${-h+d} ${h}  ${-h} ${h-d}`),spawn.mapVertex(4050,-1300,`400 ${-h}        ${h-d} ${-h}  ${h} ${-h+d}   ${h} ${h-d}  ${h-d} ${h}       400 ${h}`),spawn.mapRect(2950,-1175,650,775),spawn.mapRect(3750,-1175,100,775),spawn.mapRect(3575,-1025,200,475),spawn.mapVertex(9200,-2050,`${-h} ${-h+d}  ${-h+d} ${-h}     ${h-d} ${-h}  ${h} ${-h+d}       ${h} -600          ${-h} -600`),spawn.mapVertex(9200,-550,`${-h} 600   ${h} 600      ${h} ${h-d}  ${h-d} ${h}  ${-h+d} ${h}  ${-h} ${h-d}`),spawn.mapRect(9800,-2100,300,1600),spawn.mapVertex(8175,-1425,"-1400 -90  350 -90 400 -40   400 40   350 90  -1400 90"),spawn.mapVertex(6856,-1425,"300 -90  -350 -90 -400 -40   -400 40   -350 90  300 90"),spawn.mapRect(8925,-2575,575,75),e?(spawn.mapRect(8925,-2550,75,400),spawn.mapRect(9425,-2550,75,125),spawn.mapRect(9425,-2215,75,50),spawn.bodyRect(9425,-2425,75,210)):(spawn.mapRect(9425,-2550,75,400),spawn.mapRect(8925,-2550,75,125),spawn.mapRect(8925,-2215,75,50)),spawn.mapVertex(6300,450,`${-h} ${-h+d}  ${-h+d} ${-h}     ${h-d} ${-h}  ${h} ${-h+d}       ${h} 0          ${-h} 0`),spawn.mapVertex(6300,1200,"-400 -40  -350 -90   350 -90 400 -40   400 40 350 90  -350 90 -400 40"),spawn.mapVertex(6450,1650,`${-h} 600      ${h+700} 600        ${h+700} ${h-d}      ${h-d+700} ${h}         ${-h+d} ${h}      ${-h} ${h-d}`),h=400,d=50,spawn.mapVertex(6300,-1100,`${-h} ${-h+d}  ${-h+d} ${-h}   ${h-d} ${-h}  ${h} ${-h+d}     ${h} -200      ${-h} -200`),spawn.mapVertex(6300,-500,`${-h} 200     ${h} 200   ${h} ${h-d}  ${h-d} ${h}  ${-h+d} ${h}  ${-h} ${h-d}`),spawn.mapVertex(5800,-1425,"-300 -40  -250 -90   250 -90 300 -40   300 40 250 90  -250 90 -300 40"),spawn.mapVertex(5485,-1850,"-400 -40  -350 -90   350 -90 400 -40   400 40 350 90  -350 90 -400 40"),spawn.mapVertex(7115,-1850,"-400 -40  -350 -90   350 -90 400 -40   400 40 350 90  -350 90 -400 40"),spawn.mapVertex(6300,-2175,"-300 -40  -250 -90   250 -90 300 -40   300 40 250 90  -250 90 -300 40"),spawn.mapVertex(4450,-1850,"-200 -40  -150 -90   150 -90 200 -40   200 40 150 90  -150 90 -200 40"),spawn.mapVertex(5300,-300,"-300 -40  -250 -90   250 -90 300 -40   300 40 250 90  -250 90 -300 40"),spawn.mapVertex(4500,-590,"-300 -90   250 -90 300 -40   300 40 250 90  -300 90"),powerUps.chooseRandomPowerUp(6275,1425),powerUps.chooseRandomPowerUp(6300,-650),powerUps.chooseRandomPowerUp(9550,-750),spawn.bodyRect(7725,-2200,150,250,.2),spawn.bodyRect(4625,-825,75,125,.2),spawn.bodyRect(3250,-1200,25,25,.2),spawn.bodyRect(3375,-1275,25,75,.2),spawn.bodyRect(3450,-1200,50,25,.2),spawn.bodyRect(2825,-2225,25,25,.2),spawn.bodyRect(4075,-2225,50,25,.2),spawn.bodyRect(8850,-800,75,100,.2),spawn.bodyRect(6900,-100,75,100,.2),spawn.bodyRect(8975,-1575,50,50,.2),spawn.bodyRect(5725,-1700,125,175,.2),spawn.bodyRect(6850,-1725,150,200,.2),spawn.bodyRect(500,-400,100,50,.3),spawn.bodyRect(6025,1050,100,50,.2),spawn.bodyRect(6e3,-800,75,200,.2),spawn.bodyRect(6775,-75,125,75,.5),spawn.bodyRect(7200,1300,50,200,.5),spawn.randomMob(5700,-75,0),spawn.randomMob(6200,-100,0),spawn.randomMob(6900,-100,.1),spawn.randomMob(5550,-500,.1),spawn.randomMob(4675,-850,.1),spawn.randomMob(4450,-2050,.1),spawn.randomMob(4050,-2325,.1),spawn.randomMob(3350,-1325,.2),spawn.randomMob(5300,-2050,.2),spawn.randomMob(5675,-2050,.2),spawn.randomMob(5850,-1625,.3),spawn.randomMob(6775,-1600,.3),spawn.randomMob(7700,-1625,.4),spawn.randomMob(7850,-2e3,.4),spawn.randomMob(7225,-2e3,.4),spawn.randomMob(6350,-2400,.5),spawn.randomMob(8850,-1650,.5),spawn.randomMob(9500,-1300,.5),spawn.randomMob(9250,-900,.5),spawn.randomMob(8600,-875,.6),spawn.randomMob(5575,1350,.6),spawn.randomMob(6075,1025,.6),spawn.randomMob(6300,1025,.7),spawn.randomMob(6525,1425,.8),spawn.randomMob(7125,1450,.9),spawn.randomGroup(4925,-2850,1),spawn.randomLevelBoss(7275,-2475),spawn.secondaryBossChance(8400,-1025),powerUps.addResearchToLevel()},factory(){level.announceText(2238,-1715,!0),level.announceMobTypes(),level.setPosToSpawn(2235,-1375),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),level.exit.x=7875,level.exit.y=-2480,spawn.mapRect(level.exit.x,level.exit.y+20,100,20),level.defaultZoom=1500,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#d0d2d4";let e=!0;const t=[];t.push(level.mover(125,-140,925,35,-5)),t.push(level.mover(1100,-437,1100,35,-5)),t.push(level.mover(2e3,-600,850,35,-5));function a(e){for(let a=7;a<t.length;a++)t[a].VxGoal=e}t.push(level.mover(2700,-200,3600,35,0)),t.push(level.mover(7175,-215,2275,50,3)),t.push(level.mover(6475,-215,275,100,-3)),t.push(level.mover(6725,-500,500,375,3)),t.push(level.mover(7675,-725,500,410,0)),t.push(level.mover(6775,-1075,375,50,0)),t.push(level.mover(5525,-1075,450,50,0)),t.push(level.mover(6775,-2100,375,50,0)),t.push(level.mover(5450,-1900,525,50,0)),a(0);const o=level.button(7735,-1825);o.isUp=!0;const s=level.button(5275,-1900),n=[],l=3390;n.push(level.hazard(l,-500,6,300,.4)),n.push(level.hazard(4685,-500,6,300,.4)),n.push(level.hazard(5980,-500,6,300,.4));for(let e=0;e<n.length;e++)n[e].isOn=!1,spawn.mapRect(n[e].min.x-55,-550,110,50),spawn.mapRect(n[e].min.x-10,-500,25,20);const i=level.button(2235,-200);i.isUp=!0;let c=0;level.custom=()=>{if(e)simulation.cycle%90||spawn.bodyRect(2730,-1600,50,50);else{const e=160;if(simulation.cycle%e===80){for(let e=0;e<n.length;e++)n[e].isOn=!1;t[3].VxGoal=8,t[3].force=5e-4,t[2].VxGoal=8,t[2].force=5e-4}else if(simulation.cycle%e===0&&(t[3].VxGoal=0,t[3].force=0,t[2].VxGoal=0,t[2].force=0,spawn.bodyRect(2730,-1600,50,50),simulation.cycle%(3*e)==0)){c<3&&Math.random()<.5&&(c++,powerUps.spawn(2760,-1550,Math.random()<.5?"heal":"ammo",!1));for(let e=0;e<n.length;e++)n[e].isOn=!0;const e=e=>{const t=Matter.Query.ray(body,n[e].min,n[e].max);if(t.length)for(let a=0;a<body.length;a++)if(t[0].body.id===body[a].id){const t=["flutter","flutter","flutter","hopper","slasher","slasher","slasher","stabber","springer","striker","sneaker","launcher","launcherOne","exploder","sucker","spinner","grower","beamer","spawner","ghoster"],o=t[Math.floor(Math.random()*t.length)];spawn[o](n[e].max.x,n[e].max.y-20);const s=mob[mob.length-1];Matter.Body.setVelocity(s,{x:8+5*Math.random(),y:-(14+10*Math.random())}),s.locatePlayer(),s.leaveBody=!1,s.isDropPowerUp=!1,Matter.Composite.remove(engine.world,body[a]),body.splice(a,1);break}};mob.length<100&&!m.isTimeDilated&&(e(0),e(1),e(2))}}if(s.isUp){if(s.query(),!s.isUp){a(7),o.isUp=!0;const e=Matter.Query.region(body,o);for(let t=0;t<e.length;t++){let a=null;for(let o=0;o<body.length;o++)e[t]===body[o]&&(a=o);a&&(Matter.Composite.remove(engine.world,e[t]),body.splice(a,1))}}}else if(o.isUp&&(o.query(),!o.isUp)){a(-7);const e=Matter.Query.region(body,s);if(s.isUp=!0,e.length>0){e[0].isRemoveMeNow=!0;for(let t=1;t<body.length;t++)if(body[t].isRemoveMeNow){Matter.Composite.remove(engine.world,e[0]),body.splice(t,1);break}}}if(i.isUp&&(i.query(),!i.isUp)){e=!1;for(let e=0;e<3;e++)t[e].VxGoal=0,t[e].force=t[e].VxGoal>0?5e-4:-5e-4;powerUps.spawnStartingPowerUps(2760,-1550),spawn.randomMob(2700,-350,.2),spawn.randomMob(6975,-650,.2),spawn.randomMob(6550,-325,.3),spawn.randomMob(7350,-350,.3),spawn.randomMob(7925,-975,.5),spawn.randomMob(7950,-1725,.5),spawn.randomMob(7e3,-1375,.3),spawn.randomMob(5700,-1350,.5),spawn.randomMob(5250,-1575,.5),spawn.randomMob(6325,-75,.3),spawn.randomMob(7900,-1925,.1),spawn.randomMob(5300,-1975,.3),spawn.randomMob(7875,-1900,.3),spawn.randomMob(5325,-1975,.4),spawn.randomGroup(3900,-725,.4),spawn.randomLevelBoss(6501,-1771),spawn.secondaryBossChance(6063,-661),powerUps.addResearchToLevel()}o.draw(),s.draw(),i.draw();for(let e=0;e<t.length;e++)t[e].push();level.exit.drawAndCheck(),level.enter.draw(),ctx.fillStyle="rgba(0,0,0,0.1)",ctx.fillRect(6937,-2075,50,1775),ctx.fillStyle="rgba(0,255,255,0.15)",ctx.fillRect(7675,-2875,500,425)},level.customTopLayer=()=>{if(e)ctx.fillStyle="rgba(0,0,0,0.2)",ctx.fillRect(2400,-1650,7050,2750),ctx.fillRect(4950,-3075,3225,1425),ctx.beginPath(),ctx.moveTo(2407,-576),ctx.lineTo(2e3,-573),ctx.lineTo(1950,-439),ctx.lineTo(1100,-432),ctx.lineTo(1020,-143),ctx.lineTo(125,-137),ctx.lineTo(-109,300),ctx.lineTo(-125,1089),ctx.lineTo(2372,1081),ctx.lineTo(2452,65),ctx.fill();else{ctx.beginPath(),ctx.moveTo(2526,-589),ctx.lineTo(2531,-597),ctx.lineTo(2506,-594),ctx.lineTo(2850,-600),ctx.lineTo(2890,-193),ctx.lineTo(6300,-200),ctx.lineTo(6618,857),ctx.lineTo(6622,1100),ctx.lineTo(2521,1100),ctx.fillStyle="rgba(0,0,0,0.2)",ctx.fill(),ctx.fillRect(-100,-1650,2625,2750);for(let e=0;e<n.length;e++)n[e].opticalQuery()}ctx.fillStyle="rgba(0,0,0,0.07)",ctx.fillRect(7675,-2200,1775,2025),ctx.fillRect(4950,-2075,500,1e3),ctx.fillRect(2050,-1650,350,325);for(let e=0;e<t.length;e++)t[e].draw()},spawn.mapRect(-1550,-3050,1450,4150),spawn.mapRect(-1550,-3050,6525,1400),spawn.mapRect(-1550,-3050,6525,1400),spawn.mapRect(3e3,-1700,1975,675),spawn.mapRect(3800,-4e3,5650,950),spawn.mapRect(3800,-4e3,1175,2975),spawn.mapRect(8175,-4e3,1275,3685),spawn.mapRect(8175,-200,1275,1300),spawn.mapRect(75,0,6275,1100),spawn.mapRect(6475,-200,2750,1300),spawn.mapRect(4975,-1087,550,62),spawn.mapRect(4975,-1100,500,75),spawn.mapRect(7875,-1100,175,25),spawn.mapRect(8075,-1450,200,25),spawn.mapRect(7675,-1825,375,25),spawn.mapRect(7675,-1800,250,725),spawn.mapRect(5125,-1275,200,25),spawn.mapRect(4900,-1575,175,25),spawn.mapRect(5125,-1900,325,25),spawn.mapRect(5225,-1875,225,625),spawn.mapRect(4950,-3075,500,1e3),spawn.mapRect(7675,-2450,525,250),spawn.mapRect(7675,-3050,550,175),spawn.mapRect(7675,-2925,50,175),spawn.mapRect(1925,-1325,550,50),spawn.mapRect(2050,-1675,50,175),spawn.mapRect(1700,-200,750,275),Math.random()<.5?(spawn.mapRect(625,-1100,425,300),spawn.mapRect(1375,-1100,425,300),spawn.mapRect(1750,-835,100,35),spawn.mapRect(-200,-525,150,35)):(spawn.mapRect(800,-1125,925,400),spawn.mapRect(75,-775,400,50),spawn.mapRect(1700,-760,75,35),spawn.mapRect(-200,-425,150,35)),spawn.mapRect(2400,-600,125,675),spawn.mapRect(2400,-1750,125,1050),spawn.mapRect(2700,-1700,125,85),spawn.randomMob(350,-325,.5),spawn.randomMob(875,-375,.5),spawn.randomMob(1250,-575,.5),spawn.randomMob(1550,-600,.5),spawn.randomSmallMob(1250,-175),spawn.randomSmallMob(1500,-229),spawn.randomSmallMob(1850,-300),powerUps.spawn(5200,-1300,"ammo")},labs(){let e,t;level.announceMobTypes(),level.isProcedural=!0,level.defaultZoom=1700,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#d9d9de",doCustom=[],doCustomTopLayer=[],offset={x:0,y:0};enterOptions=[(e=offset.x,t=offset.y)=>{level.announceText(e+900,t-1370),level.setPosToSpawn(e+1750,t-800),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),spawn.mapRect(e+1450,t-1350,50,450),spawn.bodyRect(e+1460,t-900,30,150),spawn.mapRect(e+1600,t-350,500,100);const a=level.toggle(e+1650,t-350,!0);let o;Math.random()>.5?(spawn.mapRect(e+550,t-750,1500,50),o=level.laser({x:e+870,y:t-915},{x:e+1450,y:t-915}),spawn.mapRect(e+860,t-925,10,20),spawn.mapRect(e+660,t-975,200,120)):(spawn.mapRect(e+1350,t-750,700,50),o=level.laser({x:e+1060,y:t-655},{x:e+2e3,y:t-655}),spawn.mapRect(e+1050,t-665,10,20),spawn.mapRect(e+650,t-705,400,100));const s=level.laser({x:e+5,y:t-325},{x:e+455,y:t-325});spawn.mapRect(e+440,t-335,10,20),spawn.mapRect(e+450,t-375,400,100);const n=Math.floor(400*Math.random()),l=level.laser({x:e+n+5,y:t-1290},{x:e+n+5,y:t});spawn.mapRect(e+n-5,t-1310,20,20);const i=1650+Math.floor(300*Math.random());hazard4=level.laser({x:e+i+5,y:t-230},{x:e+i+5,y:t-230+250}),spawn.mapRect(e+i-5,t-250,20,20),spawn.randomMob(e+150,t+-1100,0),spawn.randomMob(e+175,t+-775,0),spawn.randomMob(e+150,t+-350,0),spawn.randomMob(e+150,t+-75,0),spawn.randomMob(e+650,t+-125,0),spawn.randomMob(e+1200,t+-75,0),doCustomTopLayer.push(()=>{a.query(),a.isOn&&(simulation.cycle%120>60?(o.query(),s.query()):(l.query(),hazard4.query()))})}],exitOptions=[(e=offset.x,t=offset.y)=>{level.exit.x=e+1725,level.exit.y=t-980,spawn.mapRect(level.exit.x,level.exit.y+20,100,20),spawn.mapRect(e+1500,t-950,500,25),spawn.mapRect(e+1550,t-1300,25,175),spawn.mapVertex(e+1300,t-125,"-400 0   -250 -400  250 -400   400 0"),spawn.bodyRect(e+1075,t-475,125,125,.25),spawn.bodyRect(e+500,t-100,125,100,.25),spawn.bodyRect(e+200,t-150,100,150,.25),spawn.bodyRect(e+1075,t-1075,100,125,.25);const a=.0015,o=Math.PI/2,s=.03;balance1=level.spinner(e+200,t-500,30,400,a,o+0*(Math.random()-.5),s,0+0*(Math.random()-.5)),balance2=level.spinner(e+200,t-950,30,400,a,o+0*(Math.random()-.5),s,0+0*(Math.random()-.5)),balance3=level.spinner(e+650,t-750,30,400,a,o+0*(Math.random()-.5),s,0+0*(Math.random()-.5)),balance4=level.spinner(e+1250,t-1e3,30,400,a,o+0*(Math.random()-.5),s,0+0*(Math.random()-.5));let n=!1;doCustom.push(()=>{!n&&m.pos.x>e-100&&m.pos.x<e+2700&&m.pos.y>t-1300&&m.pos.y<t&&(n=!0,spawn.randomMob(e+1175,t-725,0),spawn.randomMob(e+1450,t-725,0),spawn.randomMob(e+425,t-100,0),spawn.randomMob(e+1700,t-300,0),spawn.randomMob(e+1300,t-375,0)),ctx.fillStyle="#d4f4f4",ctx.fillRect(e+1550,t-1300,450,350)}),doCustomTopLayer.push(()=>{ctx.fillStyle="#233",ctx.beginPath(),ctx.arc(balance1.pointA.x,balance1.pointA.y,9,0,2*Math.PI),ctx.moveTo(balance2.pointA.x,balance2.pointA.y),ctx.arc(balance2.pointA.x,balance2.pointA.y,9,0,2*Math.PI),ctx.moveTo(balance3.pointA.x,balance3.pointA.y),ctx.arc(balance3.pointA.x,balance3.pointA.y,9,0,2*Math.PI),ctx.moveTo(balance4.pointA.x,balance4.pointA.y),ctx.arc(balance4.pointA.x,balance4.pointA.y,9,0,2*Math.PI),ctx.fill()})},(e=offset.x,t=offset.y)=>{if(level.exit.x=e+1750,level.exit.y=t-980,spawn.mapRect(level.exit.x,level.exit.y+20,100,20),spawn.mapRect(e+1550,t-950,500,25),spawn.mapRect(e+1600,t-1300,25,175),spawn.bodyRect(e+1275,t-475,125,125,.25),spawn.bodyRect(e+500,t-100,125,100,.25),spawn.bodyRect(e+800,t-150,100,150,.25),spawn.bodyRect(e+875,t+-50,50,50),spawn.bodyRect(e+1025,t+-50,50,50),Math.random()>.5){const o=.0012,s=Math.PI/2,n=.2,l=.015,i=35;balance1=level.spinner(e+1300,t-425,i,410,o,s+n*(Math.random()-.5),l),balance3=level.spinner(e+750,t-650,i,410,o,s+n*(Math.random()-.5),l),balance2=level.spinner(e+300,t-425,i,410,o,s+n*(Math.random()-.5),l),balance4=level.spinner(e+1250,t-950,50,550,o,s,.1);const c=body[body.length-1];doCustom.push(()=>{!a&&m.pos.x>e-100&&m.pos.x<e+2700&&m.pos.y>t-1300&&m.pos.y<t&&(a=!0,spawn.randomMob(e+1175,t-725,0),spawn.randomMob(e+1450,t-725,0),spawn.randomMob(e+425,t-100,0),spawn.randomMob(e+1200,t-125,0),spawn.randomMob(e+1300,t-375,0)),ctx.fillStyle="#d4f4f4",ctx.fillRect(e+1600,t-1300,400,350),c.torque+=5e-6*c.inertia})}else{const o=.001,s=Math.PI/2,n=Math.PI,l=.015,i=200,c=200,p=.05;balance1=level.spinner(e+175,t-300,c,i,o,s+n*(Math.random()-.5),l,p*(Math.random()-.5)),balance2=level.spinner(e+500,t-525,c,i,o,s+n*(Math.random()-.5),l,p*(Math.random()-.5)),balance3=level.spinner(e+850,t-700,c,i,o,s+n*(Math.random()-.5),l,p*(Math.random()-.5)),balance4=level.spinner(e+1250,t-850,c,i,o,s+n*(Math.random()-.5),l,p*(Math.random()-.5)),doCustom.push(()=>{!a&&m.pos.x>e-100&&m.pos.x<e+2700&&m.pos.y>t-1300&&m.pos.y<t&&(a=!0,spawn.randomMob(e+1175,t-725,0),spawn.randomMob(e+1450,t-725,0),spawn.randomMob(e+425,t-100,0),spawn.randomMob(e+1200,t-125,0),spawn.randomMob(e+1300,t-375,0)),ctx.fillStyle="#d4f4f4",ctx.fillRect(e+1600,t-1300,400,350)})}let a=!1;doCustomTopLayer.push(()=>{ctx.fillStyle="#233",ctx.beginPath(),ctx.arc(balance1.pointA.x,balance1.pointA.y,9,0,2*Math.PI),ctx.moveTo(balance2.pointA.x,balance2.pointA.y),ctx.arc(balance2.pointA.x,balance2.pointA.y,9,0,2*Math.PI),ctx.moveTo(balance3.pointA.x,balance3.pointA.y),ctx.arc(balance3.pointA.x,balance3.pointA.y,9,0,2*Math.PI),ctx.moveTo(balance4.pointA.x,balance4.pointA.y),ctx.arc(balance4.pointA.x,balance4.pointA.y,9,0,2*Math.PI),ctx.fill()})}],emptyOptions=[(a=offset.x,o=offset.y)=>{if(!e&&t){powerUps.spawnStartingPowerUps(a+2e3-1650,o+-400),spawn.mapRect(a+2e3-1575-25,o+-625,25,375),spawn.mapRect(a+2e3-1575-25,o+-1325,25,525),spawn.mapRect(a+2e3-1525-250,o+-350,250,450),spawn.mapRect(a+2e3-245-300,o+-200,300,100),spawn.mapRect(a+2e3-530-25,o+-190,25,80);const e=level.button(a+2e3-290-140,o-200);e.isReadyToFire=!0,doCustom.push(()=>{ctx.fillStyle="rgba(0,0,0,0.05)",ctx.fillRect(a+2e3-255-280,o+-100,280,100),e.query(),e.draw(),!e.isReadyToFire&&e.isUp?e.isReadyToFire=!0:e.isReadyToFire&&!e.isUp&&(e.isReadyToFire=!1,b.pulse(90,Math.PI,{x:a+2e3-560,y:o-150}))}),spawn.randomMob(a+2e3-1600,o+-425,0),spawn.randomMob(a+2e3-1725,o+-1250,0),spawn.randomMob(a+2e3-1250,o+-1200,0),spawn.randomMob(a+2e3-300,o+-1200,0),spawn.randomMob(a+2e3-800,o+-125,0);let t=spawn.pickList[Math.floor(Math.random()*spawn.pickList.length)];spawn[t](a+2e3-1275,o+-150,90+40*Math.random())}else{powerUps.spawnStartingPowerUps(a+1650,o+-400),spawn.mapRect(a+1575,o+-625,25,375),spawn.mapRect(a+1575,o+-1325,25,525),spawn.mapRect(a+1525,o+-350,250,450),spawn.mapRect(a+245,o+-200,300,100),spawn.mapRect(a+530,o+-190,25,80);const e=level.button(a+290,o-200);e.isReadyToFire=!0,doCustom.push(()=>{ctx.fillStyle="rgba(0,0,0,0.05)",ctx.fillRect(a+255,o+-100,280,100),e.query(),e.draw(),!e.isReadyToFire&&e.isUp?e.isReadyToFire=!0:e.isReadyToFire&&!e.isUp&&(e.isReadyToFire=!1,b.pulse(90,0,{x:a+560,y:o-150}))}),spawn.randomMob(a+1600,o+-425,0),spawn.randomMob(a+1725,o+-1250,0),spawn.randomMob(a+1250,o+-1200,0),spawn.randomMob(a+300,o+-1200,0),spawn.randomMob(a+800,o+-125,0);let t=spawn.pickList[Math.floor(Math.random()*spawn.pickList.length)];spawn[t](a+1275,o+-150,90+40*Math.random())}},(a=offset.x,o=offset.y)=>{if(!e&&t){powerUps.spawnStartingPowerUps(a+1650,o+-400),spawn.mapRect(a+2e3-1575-25,o+-625,25,375),spawn.mapRect(a+2e3-1575-25,o+-1325,25,525),spawn.mapRect(a+2e3-1525-250,o+-350,250,450),spawn.mapRect(a+2e3-245-300,o+-200,300,100),spawn.mapRect(a+2e3-530-25,o+-190,25,80);const e=level.button(a+2e3-290-140,o-200);e.isReadyToFire=!0,doCustom.push(()=>{ctx.fillStyle="rgba(0,0,0,0.05)",ctx.fillRect(a+2e3-255-280,o+-100,280,100),e.query(),e.draw(),!e.isReadyToFire&&e.isUp?e.isReadyToFire=!0:e.isReadyToFire&&!e.isUp&&(e.isReadyToFire=!1,fireBlock=function(e,t){const a=body.length;spawn.bodyRect(e,t,35+50*Math.random(),35+50*Math.random());const o=body[body.length-1];Matter.Body.setVelocity(body[a],{x:-120,y:-5}),body[a].isAboutToBeRemoved=!0,setTimeout(()=>{for(let e=0;e<body.length;e++)body[e]===o&&(Matter.Composite.remove(engine.world,body[e]),body.splice(e,1))},1e3)},fireBlock(a+2e3-90-560+30*Math.random(),o-140),fireBlock(a+2e3-90-560+30*Math.random(),o-160),fireBlock(a+2e3-90-560+30*Math.random(),o-180),fireBlock(a+2e3-90-560+30*Math.random(),o-200),fireBlock(a+2e3-90-560+30*Math.random(),o-220),fireBlock(a+2e3-90-560+30*Math.random(),o-240))}),spawn.randomMob(a+2e3-1600,o+-425,0),spawn.randomMob(a+2e3-1725,o+-1250,0),spawn.randomMob(a+2e3-1250,o+-1200,0),spawn.randomMob(a+2e3-300,o+-1200,0),spawn.randomMob(a+2e3-800,o+-125,0);let t=spawn.pickList[Math.floor(Math.random()*spawn.pickList.length)];spawn[t](a+2e3-1275,o+-150,90+40*Math.random())}else{powerUps.spawnStartingPowerUps(a+1650,o+-400),spawn.mapRect(a+1575,o+-625,25,375),spawn.mapRect(a+1575,o+-1325,25,525),spawn.mapRect(a+1525,o+-350,250,450),spawn.mapRect(a+245,o+-200,300,100),spawn.mapRect(a+530,o+-190,25,80);const e=level.button(a+290,o-200);e.isReadyToFire=!0,doCustom.push(()=>{ctx.fillStyle="rgba(0,0,0,0.05)",ctx.fillRect(a+255,o+-100,280,100),e.query(),e.draw(),!e.isReadyToFire&&e.isUp?e.isReadyToFire=!0:e.isReadyToFire&&!e.isUp&&(e.isReadyToFire=!1,fireBlock=function(e,t){const a=body.length;spawn.bodyRect(e,t,35+50*Math.random(),35+50*Math.random());const o=body[body.length-1];Matter.Body.setVelocity(body[a],{x:120,y:-5}),body[a].isAboutToBeRemoved=!0,setTimeout(()=>{for(let e=0;e<body.length;e++)body[e]===o&&(Matter.Composite.remove(engine.world,body[e]),body.splice(e,1))},1e3)},fireBlock(a+560+30*Math.random(),o-140),fireBlock(a+560+30*Math.random(),o-160),fireBlock(a+560+30*Math.random(),o-180),fireBlock(a+560+30*Math.random(),o-200),fireBlock(a+560+30*Math.random(),o-220),fireBlock(a+560+30*Math.random(),o-240))}),spawn.randomMob(a+1600,o+-425,0),spawn.randomMob(a+1725,o+-1250,0),spawn.randomMob(a+1250,o+-1200,0),spawn.randomMob(a+300,o+-1200,0),spawn.randomMob(a+800,o+-125,0);let t=spawn.pickList[Math.floor(Math.random()*spawn.pickList.length)];spawn[t](a+1275,o+-150,90+40*Math.random())}},(a=offset.x,o=offset.y)=>{if(!e&&t){powerUps.spawnStartingPowerUps(a+2e3-1650,o+-400),spawn.mapRect(a+2e3-1575-25,o+-625,25,375),spawn.mapRect(a+2e3-1575-25,o+-1325,25,525),spawn.mapRect(a+2e3-1525-250,o+-350,250,450),spawn.mapRect(a+2e3-175-370,o+-200,370,100),spawn.mapRect(a+2e3-530-25,o+-190,25,80),spawn.mapRect(a+2e3-545-10,o+-770,10,325),spawn.mapRect(a+2e3-620-10,o+-770,10,325),spawn.mapRect(a+2e3+50-150,o+-425,150,50),spawn.mapRect(a+2e3-175-370,o+-650,370,50),spawn.mapRect(a+2e3-540-95,o+-460,95,15);const e=map[map.length-1];for(let e=0;e<6;e++)spawn.bodyRect(a+2e3-60-555+Math.floor(10*Math.random()),o+-520-50*e,50,50);spawn.bodyRect(a+2e3-250-40,o+-700,40,50),spawn.bodyRect(a+2e3-350-30,o+-700,30,35),spawn.bodyRect(a+2e3-425-40,o+-700,40,70);const t=level.button(a+2e3-280-140,o-200);t.isReadyToFire=!0,doCustom.push(()=>{if(ctx.fillStyle="rgba(0,0,0,0.05)",ctx.fillRect(a+2e3-200-325,o+-625,325,650),t.query(),t.draw(),!t.isReadyToFire&&t.isUp)t.isReadyToFire=!0,e.collisionFilter.mask=cat.player|cat.map|cat.body|cat.bullet|cat.mob|cat.mobBullet;else if(t.isReadyToFire&&!t.isUp)t.isReadyToFire=!1,e.collisionFilter.mask=0;else if(!t.isUp){const e={min:{x:a+2e3-580,y:o-125},max:{x:a+2e3-530,y:o-110}},t=Matter.Query.region(body,e);for(let e=0,a=t.length;e<a;e++)Matter.Body.setVelocity(t[e],{x:-120,y:-5});Matter.Query.region([player],e).length&&Matter.Body.setVelocity(player,{x:-100,y:-5}),ctx.fillStyle=`rgba(255,0,255,${.2+.7*Math.random()})`,ctx.fillRect(e.min.x,o-185,38,70)}}),spawn.randomMob(a+2e3-1600,o+-425,0),spawn.randomMob(a+2e3-1725,o+-1250,0),spawn.randomMob(a+2e3-1250,o+-1200,0),spawn.randomMob(a+2e3-300,o+-1200,0),spawn.randomMob(a+2e3-800,o+-125,0);let s=spawn.pickList[Math.floor(Math.random()*spawn.pickList.length)];spawn[s](a+2e3-1275,o+-150,90+40*Math.random())}else{powerUps.spawnStartingPowerUps(a+1650,o+-400),spawn.mapRect(a+1575,o+-625,25,375),spawn.mapRect(a+1575,o+-1325,25,525),spawn.mapRect(a+1525,o+-350,250,450),spawn.mapRect(a+175,o+-200,370,100),spawn.mapRect(a+530,o+-190,25,80),spawn.mapRect(a+545,o+-770,10,325),spawn.mapRect(a+620,o+-770,10,325),spawn.mapRect(a-50,o+-425,150,50),spawn.mapRect(a+175,o+-650,370,50),spawn.mapRect(a+540,o+-460,95,15);const e=map[map.length-1];for(let e=0;e<6;e++)spawn.bodyRect(a+555+Math.floor(10*Math.random()),o+-520-50*e,50,50);spawn.bodyRect(a+250,o+-700,40,50),spawn.bodyRect(a+350,o+-700,30,35),spawn.bodyRect(a+425,o+-700,40,70);const t=level.button(a+280,o-200);t.isReadyToFire=!0,doCustom.push(()=>{if(ctx.fillStyle="rgba(0,0,0,0.05)",ctx.fillRect(a+200,o+-625,325,650),t.query(),t.draw(),!t.isReadyToFire&&t.isUp)t.isReadyToFire=!0,e.collisionFilter.mask=cat.player|cat.map|cat.body|cat.bullet|cat.mob|cat.mobBullet;else if(t.isReadyToFire&&!t.isUp)t.isReadyToFire=!1,e.collisionFilter.mask=0;else if(!t.isUp){const e={min:{x:a+530,y:o-125},max:{x:a+580,y:o-110}},t=Matter.Query.region(body,e);for(let e=0,a=t.length;e<a;e++)Matter.Body.setVelocity(t[e],{x:120,y:-5});Matter.Query.region([player],e).length&&Matter.Body.setVelocity(player,{x:100,y:-5}),ctx.fillStyle=`rgba(255,0,255,${.2+.7*Math.random()})`,ctx.fillRect(e.min.x,o-185,38,70)}}),spawn.randomMob(a+1600,o+-425,0),spawn.randomMob(a+1725,o+-1250,0),spawn.randomMob(a+1250,o+-1200,0),spawn.randomMob(a+300,o+-1200,0),spawn.randomMob(a+800,o+-125,0);let s=spawn.pickList[Math.floor(Math.random()*spawn.pickList.length)];spawn[s](a+1275,o+-150,90+40*Math.random())}}],lootOptions=[(e=offset.x,t=offset.y)=>{spawn.mapRect(e+1925,t+-325,125,150),spawn.mapRect(e+1925,t+-865,125,150),spawn.mapRect(e+-50,t+-325,125,150),spawn.mapRect(e+-50,t+-865,125,150),spawn.mapRect(e+1700,t+-500,200,25),spawn.mapRect(e+75,t+-500,200,25);let a=-650;Math.random()>.5?(a=-1290,spawn.mapRect(e+550,t+-10-640,900,25),spawn.mapRect(e+450,t+-20-640,1100,25),spawn.mapRect(e+450,t+-675-640,1100,25),powerUps.spawn(e+998,t-333-640,"tech",!1),spawn.mapVertex(e+1e3,t+-0,"575 0  -575 0  -450 -100  450 -100")):(spawn.mapRect(e+400,t+-10,1200,50),spawn.mapRect(e+450,t+-20,1100,50),spawn.mapRect(e+450,t+-675,1100,25),spawn.mapRect(e+550,t+-685,900,25),powerUps.spawn(e+998,t-333,"tech",!1));const o=powerUp[powerUp.length-1];o&&(o.holdPosition={x:o.position.x,y:o.position.y});let s=!1;doCustom.push(()=>{if(ctx.fillStyle="#e4e4e9",ctx.fillRect(e+450,t+a,1100,650),o&&0!==o.velocity.y){if(ctx.strokeStyle="#f0f",ctx.lineWidth=2,Vector.magnitudeSquared(Vector.sub(m.pos,o.position))<9e4){m.immuneCycle<m.cycle&&(m.energy<.02?player.force.x+=player.position.x>o.position.x?.02*player.mass:-.02*player.mass:(m.energy-=.01,Matter.Body.setVelocity(player,{x:.45*player.velocity.x,y:.98*player.velocity.y})));const e=Vector.normalise(Vector.sub(m.pos,o.position));let t=o.position.x+40*e.x,a=o.position.y+40*e.y;ctx.beginPath(),ctx.moveTo(t,a);const s=40;for(let o=0;o<6;o++)t+=s*(e.x+1.5*(Math.random()-.5)),a+=s*(e.y+1.5*(Math.random()-.5)),ctx.lineTo(t,a)}else{const e=2*Math.random()*Math.PI,t=Math.cos(e),a=Math.sin(e);let s=o.position.x+40*t,n=o.position.y+40*a;ctx.beginPath(),ctx.moveTo(s,n);const l=40;for(let e=0;e<6;e++)s+=l*(t+1.5*(Math.random()-.5)),n+=l*(a+1.5*(Math.random()-.5)),ctx.lineTo(s,n)}ctx.lineWidth=2*Math.random(),ctx.stroke(),ctx.beginPath(),ctx.arc(o.position.x,o.position.y,300,0,2*Math.PI),ctx.stroke(),Matter.Body.setPosition(o,{x:o.holdPosition.x+4*Math.random(),y:o.holdPosition.y+4*Math.random()}),Matter.Body.setVelocity(o,{x:0,y:0})}else s||(s=!0,-650===a?(spawn.randomMob(e+250,t+-650,0),spawn.randomMob(e+1825,t+-600,0),spawn.randomGroup(e+275,t+-1050,0),spawn.randomGroup(e+675,t+-975,0),spawn.randomGroup(e+1225,t+-975,1/0)):(spawn.randomMob(e+250,t+-650,0),spawn.randomMob(e+1800,t+-625,0),spawn.randomGroup(e+300,t+-300,0),spawn.randomGroup(e+650,t+-275,0),spawn.randomGroup(e+1125,t+-300,1/0)))})}],upDownOptions=[(e=offset.x,t=offset.y)=>{const a=level.button(e+935,t+0);a.isUp=!0,doCustomTopLayer.push(()=>{if(a.draw(),a.isUp&&(a.query(),!a.isUp)){const a=map.length;addMapToLevelInProgress=e=>{e.collisionFilter.category=cat.map,e.collisionFilter.mask=cat.player|cat.map|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet,Matter.Body.setStatic(e,!0),Composite.add(engine.world,e)},spawn.mapRect(e+-50,t+-2700,150,110),spawn.mapRect(e+-50,t+-2440,150,25),spawn.mapRect(e+1900,t+-2715,150,550),spawn.mapRect(e+1900,t+-2015,150,50),spawn.mapRect(e+1900,t+-1115,150,150),spawn.mapRect(e+1900,t+-815,150,50),spawn.mapRect(e+-50,t+-340,150,50),spawn.mapRect(e+1975,t-1015,50,225),spawn.mapRect(e+1975,t-2190,50,200),spawn.mapRect(e+-25,t-2615,50,200),spawn.mapRect(e+-25,t-515,75,200),spawn.mapRect(e+-25,t-1075,250,25),spawn.mapRect(e+-50,t-1075,150,590);const o=8,s=level.mover(e,t+-2425,1e3,50,o),n=level.mover(e+1e3,t+-2e3,1e3,50,o),l=level.mover(e+1e3,t+-800,1e3,50,-o),i=level.mover(e,t+-325,1e3,50,-o),c=level.portal({x:e+125,y:t-415},2*Math.PI,{x:e+125,y:t-2515},2*Math.PI),p=level.portal({x:e+1875,y:t-890},Math.PI,{x:e+1875,y:t-2090},Math.PI);doCustom.push(()=>{c[2].query(),c[3].query(),p[2].query(),p[3].query(),i.push(),l.push(),n.push(),s.push()}),doCustomTopLayer.push(()=>{c[0].draw(),c[1].draw(),c[2].draw(),c[3].draw(),p[0].draw(),p[1].draw(),p[2].draw(),p[3].draw(),i.draw(),l.draw(),n.draw(),s.draw()});for(let e=0,t=map.length-a;e<t;e++)addMapToLevelInProgress(map[map.length-1-e]);simulation.draw.setPaths(),spawn.bodyRect(e+175,t+-2525,50,75),spawn.bodyRect(e+300,t+-2525,50,50),spawn.bodyRect(e+500,t+-2525,80,75),spawn.randomMob(e+175,t+-125,0),spawn.randomMob(e+1775,t+-125,0),spawn.randomMob(e+225,t+-1e3,0),spawn.randomMob(e+1675,t+-1075,0),spawn.randomMob(e+425,t+-1850,0),spawn.randomMob(e+1425,t+-1200,0),spawn.randomMob(e+350,t+-1e3,0),spawn.randomLevelBoss(e+475,t+-1475),spawn.secondaryBossChance(e+1425,t+-1425)}})},(e=offset.x,t=offset.y)=>{const a=level.button(e+935,t+0);a.isUp=!0,doCustomTopLayer.push(()=>{if(a.draw(),a.isUp&&(a.query(),!a.isUp)){const a=map.length;addMapToLevelInProgress=e=>{e.collisionFilter.category=cat.map,e.collisionFilter.mask=cat.player|cat.map|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet,Matter.Body.setStatic(e,!0),Composite.add(engine.world,e)},spawn.mapRect(e+150,t+-1400,750,50),spawn.mapRect(e+1100,t+-1400,750,50),spawn.mapRect(e+1825,t+-1050,200,50),spawn.mapRect(e+-25,t+-1050,200,50),spawn.mapRect(e+1825,t+-325,200,50),spawn.mapRect(e+-25,t+-325,200,50),spawn.mapRect(e+275,t+-700,525,50),spawn.mapRect(e+1200,t+-700,525,50),spawn.mapRect(e+-25,t+-1400,125,1125),spawn.mapRect(e+1900,t+-1400,150,1125),spawn.mapRect(e+1900,t+-2700,125,1e3),spawn.mapRect(e+-50,t+-2725,150,1025),spawn.mapRect(e+-25,t+-1750,450,50),spawn.mapRect(e+1575,t+-1750,450,50),spawn.mapRect(e+525,t+-1750,950,50);for(let e=0,t=map.length-a;e<t;e++)addMapToLevelInProgress(map[map.length-1-e]);simulation.draw.setPaths(),powerUps.spawn(e+50,t-1525,"ammo"),powerUps.spawn(e+1950,t-1525,"ammo"),powerUps.spawn(e+1900,t-1525,"ammo"),simulation.difficultyMode>1||level.levelsCleared>1?spawn.hopMotherBoss(e+800,t+-2200):powerUps.spawnBossPowerUp(2800,-1400);for(let a=0;a<4;++a)spawn.hopBullet(e+150+750*Math.random(),t+-1600);for(let a=0;a<4;++a)spawn.hopBullet(e+1100+750*Math.random(),t+-1600);spawn.hopper(e+1550,t+-775),spawn.hopper(e+500,t+-775),spawn.hopper(e+500,t+-2200),spawn.hopper(e+1100,t+-2200),spawn.hopMother(e+1400,t+-775),spawn.hopMother(e+550,t+-775),spawn.hopMother(e+525,t+-1475),spawn.hopMother(e+1550,t+-1500)}})},(e=offset.x,t=offset.y)=>{const a=level.button(e+935,t+0);a.isUp=!0,spawn.mapVertex(e+5,t+-1318,"0 0  0 -250  125 -250"),spawn.mapVertex(e+1995,t+-1318,"0 0  0 -250  -125 -250"),doCustomTopLayer.push(()=>{if(a.draw(),a.isUp&&(a.query(),!a.isUp)){addMapToLevelInProgress=e=>{e.collisionFilter.category=cat.map,e.collisionFilter.mask=cat.player|cat.map|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet,Matter.Body.setStatic(e,!0),Composite.add(engine.world,e)};let a=150,o=`${a} 0   ${a*Math.cos(5.236)} ${a*Math.sin(5.236)}    ${a*Math.cos(4.189)} ${a*Math.sin(4.189)}     ${-a} 0     ${a*Math.cos(2.0944)} ${a*Math.sin(2.0944)}      ${a*Math.cos(1.0472)} ${a*Math.sin(1.0472)}  `;if(Math.random()<.5){spawn.mapVertex(e+775,t+-260,o),spawn.mapVertex(e+1225,t+-260,o),spawn.mapVertex(e+550,t+-650,o),spawn.mapVertex(e+1e3,t+-650,o),spawn.mapVertex(e+1450,t+-650,o),spawn.mapVertex(e+325,t+-1040,o),spawn.mapVertex(e+775,t+-1040,o),spawn.mapVertex(e+1225,t+-1040,o),spawn.mapVertex(e+1675,t+-1040,o),spawn.mapVertex(e+550,t+-1430,o),spawn.mapVertex(e+1e3,t+-1430,o),spawn.mapVertex(e+1450,t+-1430,o);const a=12;for(let e=0;e<a;e++)addMapToLevelInProgress(map[map.length-1-e]);spawn.randomMob(e+225,t+-1775,0),spawn.randomMob(e+700,t+-1750,0),spawn.randomMob(e+1175,t+-1725,0),spawn.randomMob(e+1700,t+-1700,0),spawn.randomMob(e+1750,t+-250,0),spawn.randomMob(e+125,t+-250,0)}else{spawn.mapVertex(e+775,t+-260,o),spawn.mapVertex(e+1225,t+-260,o),spawn.mapVertex(e+550,t+-650,o),spawn.mapVertex(e+1e3,t+-650,o),spawn.mapVertex(e+1450,t+-650,o),spawn.mapVertex(e+775,t+-1040,o),spawn.mapVertex(e+1225,t+-1040,o),spawn.mapVertex(e+550,t+-1430,o),spawn.mapVertex(e+1e3,t+-1430,o),spawn.mapVertex(e+1450,t+-1430,o),spawn.mapVertex(e+775,t+-1820,o),spawn.mapVertex(e+1225,t+-1820,o);const a=12;for(let e=0;e<a;e++)addMapToLevelInProgress(map[map.length-1-e]);spawn.randomMob(e+225,t+-1025,0),spawn.randomMob(e+250,t+-1025,0),spawn.randomMob(e+200,t+-675,0),spawn.randomMob(e+225,t+-200,0),spawn.randomMob(e+1750,t+-1075,0),spawn.randomMob(e+1700,t+-650,0),spawn.randomMob(e+1725,t+-650,0),spawn.randomMob(e+1675,t+-175,0)}simulation.draw.setPaths(),spawn.randomGroup(e+300,t+-2200),spawn.randomGroup(e+1625,t+-2200),spawn.randomLevelBoss(e+700,t+-2300),spawn.secondaryBossChance(e+1250,t+-2300)}})},(e=offset.x,t=offset.y)=>{const a=level.button(e+935,t+0);a.isUp=!0,spawn.mapVertex(e+5,t+-1868,"0 0  0 -250  125 -250"),spawn.mapVertex(e+5,t+-1318,"0 0  0 -250  125 -250"),spawn.mapVertex(e+5,t+-768,"0 0  0 -250  125 -250"),spawn.mapVertex(e+2e3,t+-1868,"0 0  0 -250  -125 -250"),spawn.mapVertex(e+2e3,t+-1318,"0 0  0 -250  -125 -250"),spawn.mapVertex(e+2e3,t+-768,"0 0  0 -250  -125 -250"),doCustomTopLayer.push(()=>{if(a.draw(),a.isUp&&(a.query(),!a.isUp)){addMapToLevelInProgress=e=>{e.collisionFilter.category=cat.map,e.collisionFilter.mask=cat.player|cat.map|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet,Matter.Body.setStatic(e,!0),Composite.add(engine.world,e)};let a=300,o=`${a} 0   ${a*Math.cos(5.236)} ${a*Math.sin(5.236)}    ${a*Math.cos(4.189)} ${a*Math.sin(4.189)}     ${-a} 0     ${a*Math.cos(2.0944)} ${a*Math.sin(2.0944)}      ${a*Math.cos(1.0472)} ${a*Math.sin(1.0472)}  `;spawn.mapVertex(e+1640,t+-365,o),a=150;const s=`${a} 0   ${a*Math.cos(5.236)} ${a*Math.sin(5.236)}    ${a*Math.cos(4.189)} ${a*Math.sin(4.189)}     ${-a} 0     ${a*Math.cos(2.0944)} ${a*Math.sin(2.0944)}      ${a*Math.cos(1.0472)} ${a*Math.sin(1.0472)}  `;spawn.mapVertex(e+1750,t+-1100,s),spawn.mapVertex(e+1750,t+-1650,s),spawn.mapVertex(e+1750,t+-2200,s),a=350;let n=`${a} 0   ${a*Math.cos(5.236)} ${a*Math.sin(5.236)}    ${a*Math.cos(4.189)} ${a*Math.sin(4.189)}     ${-a} 0 `;spawn.mapVertex(e+425,t+-90,n),spawn.mapVertex(e+850,t+-500,s),spawn.mapVertex(e+550,t+-850,s),spawn.mapVertex(e+250,t+-1200,s),spawn.mapVertex(e+250,t+-1700,s),spawn.mapVertex(e+725,t+-1950,s),spawn.mapVertex(e+1200,t+-2200,s);const l=11;for(let e=0;e<l;e++)addMapToLevelInProgress(map[map.length-1-e]);spawn.randomMob(e+1050,t+-1500,0),spawn.randomMob(e+1075,t+-1500,0),spawn.randomMob(e+325,t+-550,0),spawn.randomMob(e+800,t+-925,0),spawn.randomMob(e+1400,t+-1250,0),spawn.randomMob(e+1325,t+-1725,0),spawn.randomMob(e+1350,t+-1725,0),spawn.randomMob(e+575,t+-1375,0),spawn.randomMob(e+225,t+-2275,0),spawn.randomMob(e+875,t+-2450,0),spawn.randomMob(e+1550,t+-2525,0),spawn.randomMob(e+1525,t+-2525,0),spawn.randomLevelBoss(e+1075,t+-1500),spawn.secondaryBossChance(e+1200,t+-1e3),simulation.draw.setPaths()}})}],enter=enterOptions[Math.floor(Math.random()*enterOptions.length)],exit=exitOptions[Math.floor(Math.random()*exitOptions.length)],empty=emptyOptions[Math.floor(Math.random()*emptyOptions.length)],loot=lootOptions[Math.floor(Math.random()*lootOptions.length)],upDown=upDownOptions[Math.floor(Math.random()*upDownOptions.length)];let a=["exit","loot","enter","empty"];for(a.sort(()=>Math.random()-.5);"enter"===a[0]&&"exit"===a[2]||"enter"===a[2]&&"exit"===a[0]||"enter"===a[1]&&"exit"===a[3]||"enter"===a[3]&&"exit"===a[1];)a.sort(()=>Math.random()-.5);for(let e=0;e<a.length;e++)"enter"===a[e]&&(a[e]=enter),"exit"===a[e]&&(a[e]=exit),"empty"===a[e]&&(a[e]=empty),"loot"===a[e]&&(a[e]=loot);outline=(a=!0)=>{if(spawn.mapRect(offset.x-100,offset.y-1400,2100,100),a&&spawn.mapRect(offset.x-100,offset.y,2200,100),e||spawn.mapRect(offset.x-100,offset.y-1400,100,1500),t){spawn.mapRect(offset.x+2e3,offset.y-1400,100,1225),spawn.mapRect(offset.x+2e3,offset.y-10,100,20);const e=15+Math.floor(100*Math.random()*Math.random());spawn.bodyRect(offset.x+2050-e/2,offset.y-175,e,165)}else spawn.mapRect(offset.x+2e3,offset.y-1400,100,1500)},outlineUpDown=()=>{if(spawn.mapRect(offset.x-100,offset.y+0,2100,100),spawn.mapRect(offset.x-100,offset.y-2800,2100,100),e||spawn.mapRect(offset.x-100,offset.y-2800,100,2900),t){spawn.mapRect(offset.x+2e3,offset.y-2800,100,1225),spawn.mapRect(offset.x+2e3,offset.y-1410,100,20);const e=15+Math.floor(100*Math.random()*Math.random());spawn.bodyRect(offset.x+2050-e/2,offset.y-1575,e,165),spawn.mapRect(offset.x+2e3,offset.y-1400,100,1225),spawn.mapRect(offset.x+2e3,offset.y-10,100,20);const t=15+Math.floor(100*Math.random()*Math.random());spawn.bodyRect(offset.x+2050-t/2,offset.y-175,t,165)}else spawn.mapRect(offset.x+2e3,offset.y-2800,100,2900)};let o=[()=>{offset.y=0,outlineUpDown(),upDown()},()=>{offset.y=0,outline(),a[0](),offset.y=-1400,outline(!1),a[1]()},()=>{offset.y=0,outline(),a[2](),offset.y=-1400,outline(!1),a[3]()}];o.sort(()=>Math.random()-.5);for(let a=0;a<3;a++)0===a?(e=!1,t=!0):1===a?(e=!0,t=!0):(e=!0,t=!1),offset.x=2100*a,o[a]();level.custom=()=>{for(let e=0,t=doCustom.length;e<t;e++)doCustom[e]();level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{for(let e=0,t=doCustomTopLayer.length;e<t;e++)doCustomTopLayer[e]()},powerUps.addResearchToLevel()},pavilion(){simulation.isHorizontalFlipped?level.announceText(900,300,!0):level.announceText(-900,300,!0),level.announceMobTypes(),level.fallMode="start";const e=[];level.exit.x=-850,level.exit.y=-1485,spawn.mapRect(level.exit.x,level.exit.y+25,100,25),level.setPosToSpawn(-900,225),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),level.defaultZoom=1500,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#dcdcde",powerUps.chooseRandomPowerUp(2075,-1525),powerUps.chooseRandomPowerUp(2550,-1825),powerUps.chooseRandomPowerUp(1975,250),spawn.mapRect(-200,-750,1500,100),spawn.mapRect(-575,0,2150,165);const t=level.mover(-525,270,2050,75,15*(simulation.isHorizontalFlipped?-1:1));spawn.bodyRect(-1050,-75,75,75),spawn.bodyRect(-573,170,30,105),spawn.mapRect(-1300,275,4025,3300),spawn.mapRect(-1050,0,325,50),spawn.mapRect(-775,0,50,140),e.push(level.vanish(-725,13,150,25)),spawn.mapRect(-200,-750,100,600),e.push(level.vanish(-525,-150,425,150)),e.push(level.vanish(-475,-300,275,150)),e.push(level.vanish(-425,-450,225,150)),e.push(level.vanish(-375,-600,175,150)),e.push(level.vanish(-325,-750,125,150)),spawn.mapRect(2475,-1800,250,2300),spawn.mapRect(1200,-750,100,450),spawn.mapRect(1200,-375,250,75),powerUps.spawnStartingPowerUps(550,-100),spawn.mapRect(125,-12,850,50),spawn.mapRect(175,-25,750,50),spawn.bodyRect(1350,-175,150,175,.5),spawn.bodyRect(1350,-600,125,225,.2),spawn.bodyRect(1575,50,50,225),e.push(level.vanish(1900,-25,325,25)),e.push(level.vanish(1925,-375,275,25)),e.push(level.vanish(1950,-725,225,25)),e.push(level.vanish(1950,-1075,225,25)),spawn.mapRect(1950,-1500,225,25),e.push(level.vanish(1350,-1075,225,25)),e.push(level.vanish(1637,-1300,225,25)),spawn.bodyRect(215,-1175,100,100,.3),spawn.mapRect(-1300,-1800,250,2300),Math.random()<.5?(spawn.mapRect(500,-1350,525,425),spawn.mapRect(25,-1050,300,198)):(spawn.mapRect(500,-1350,525,497),spawn.mapRect(25,-1050,300,150)),spawn.bodyRect(225,-850,50,100,.4),spawn.mapRect(650,-1800,225,225),e.push(level.vanish(600,-1575,100,225)),e.push(level.vanish(825,-1575,100,225)),spawn.bodyRect(1050,-1825,250,20,.2),e.push(level.vanish(1125,-1800,625,25)),e.push(level.vanish(-50,-1800,450,25)),spawn.mapRect(-575,-1800,50,200),spawn.mapRect(-1050,-1800,525,75),spawn.mapRect(-1050,-1450,700,75),spawn.randomMob(-1175,-1975,-.4),spawn.randomMob(275,-1500,-.3),spawn.randomMob(700,-1875,-.2),spawn.randomMob(2e3,-800,-.2),spawn.randomMob(2600,-1850,0),spawn.randomMob(1425,-525,.1),spawn.randomMob(2025,-1600,.3),spawn.randomMob(1625,-1875,.3),spawn.randomMob(-150,-1975,.4),spawn.randomSmallMob(900,-825),spawn.randomSmallMob(1050,-50),spawn.randomGroup(750,-2150,-.8),spawn.randomLevelBoss(2050,-2025),spawn.secondaryBossChance(100,-1500),powerUps.addResearchToLevel(),simulation.isHorizontalFlipped?(level.flipHorizontal(),level.setPosToSpawn(900,225),level.custom=()=>{ctx.fillStyle="rgba(0, 10, 30, 0.04)",ctx.fillRect(-2500,-1800,3575,2100),ctx.fillStyle="#c0c3c9",ctx.fillRect(-2075,-1475,25,1800),ctx.fillStyle="#cff",ctx.fillRect(550,-1800,525,350),level.exit.drawAndCheck(),level.enter.draw(),t.push()},level.customTopLayer=()=>{t.draw(),ctx.fillStyle="rgba(0,10,30,0.1)",ctx.fillRect(-1450,-300,150,325),ctx.fillRect(-1300,-650,1500,650),ctx.fillRect(725,50,325,225),ctx.fillRect(-325,-950,300,225),ctx.fillRect(-1025,-1e3,525,275),ctx.fillRect(-875,-1600,225,275),ctx.fillStyle="rgba(68,68,68,0.93)",ctx.fillRect(-1575,150,2150,150);for(let t=0,a=e.length;t<a;t++)e[t].query()}):(level.custom=()=>{ctx.fillStyle="rgba(0, 10, 30, 0.04)",ctx.fillRect(-1075,-1800,3575,2100),ctx.fillStyle="#c0c3c9",ctx.fillRect(2050,-1475,25,1800),ctx.fillStyle="#cff",ctx.fillRect(-1050,-1800,525,350),level.exit.drawAndCheck(),level.enter.draw(),t.push()},level.customTopLayer=()=>{t.draw(),ctx.fillStyle="rgba(0,10,30,0.1)",ctx.fillRect(1300,-300,150,325),ctx.fillRect(-200,-675,1500,700),ctx.fillRect(500,-950,525,225),ctx.fillRect(650,-1600,225,275),ctx.fillRect(-1050,50,325,225),ctx.fillRect(25,-950,300,225),ctx.fillStyle="rgba(68,68,68,0.93)",ctx.fillRect(-575,150,2150,150);for(let t=0,a=e.length;t<a;t++)e[t].query()})},testChamber(){level.announceText(0,20,!0),level.announceMobTypes(),level.setPosToSpawn(0,-50),level.exit.y=level.enter.y-550,spawn.mapRect(level.enter.x,level.enter.y+20,100,20),level.exit.x=level.enter.x,spawn.mapRect(level.exit.x,level.exit.y+20,100,20),level.defaultZoom=2200,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#d0d5d5",color.map="#444",spawn.mapRect(0,-1955,175,30);const e=map.length-1;spawn.mapRect(1225,-1955,175,30);const t=map.length-1;let a,o,s,n,l;simulation.isHorizontalFlipped?(n=level.laser({x:-360,y:-2020},{x:-1050,y:-2020}),l=level.laser({x:-1920,y:-2545},{x:-1775,y:-2545})):(n=level.laser({x:360,y:-2020},{x:1060,y:-2020}),l=level.laser({x:1920,y:-2545},{x:1775,y:-2545})),spawn.mapRect(340,-2032.5,20,25),spawn.mapRect(1920,-2557.5,20,25);const i=level.button(2100,-2600),c=level.button(600,-550),p=level.door(312,-750,25,190,185);level.custom=()=>{if(!(m.cycle%60)){let a=Matter.Query.collides(map[e],body);if(a.length){Matter.Composite.remove(engine.world,a[0].bodyB);for(let e=0,t=body.length;e<t;e++)if(body[e].id===a[0].bodyB.id){body.splice(e,1);break}}if(a=Matter.Query.collides(map[t],body),a.length){Matter.Composite.remove(engine.world,a[0].bodyB);for(let e=0,t=body.length;e<t;e++)if(body[e].id===a[0].bodyB.id){body.splice(e,1);break}}}c.query(),c.draw(),c.isUp?p.isClosing=!0:p.isClosing=!1,p.openClose(),a[2].query(),a[3].query(),o[2].query(),o[3].query(),s[2].query(),s[3].query(),i.query(),i.draw(),ctx.fillStyle="#d4f4f4",ctx.fillRect(-300,-1e3,650,500),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{p.draw(),i.isUp||(n.query(),l.query()),a[0].draw(),a[1].draw(),a[2].draw(),a[3].draw(),o[0].draw(),o[1].draw(),o[2].draw(),o[3].draw(),s[0].draw(),s[1].draw(),s[2].draw(),s[3].draw()},powerUps.spawnStartingPowerUps(1875,-3075);const r=[{x:-150,y:-1775},{x:2400,y:-2650},{x:-175,y:-1375},{x:1325,y:-150}];r.sort(()=>Math.random()-.5),powerUps.chooseRandomPowerUp(r[0].x,r[0].y),powerUps.chooseRandomPowerUp(r[1].x,r[1].y),spawn.mapRect(2500,-3700,1200,3800),spawn.mapRect(-1400,-3800,1100,3900),spawn.mapRect(-1400,-4800,5100,1200),spawn.mapRect(-1400,0,5100,1200),spawn.mapRect(300,-375,50,225),spawn.bodyRect(312,-150,25,140),spawn.mapRect(300,-10,50,50),spawn.mapVertex(1555,0,"625 0   75 0   200 -100   500 -100"),spawn.mapRect(-400,-1050,750,50),spawn.mapRect(300,-1050,50,300),spawn.mapRect(300,-560,50,50),spawn.bodyRect(750,-725,125,125),spawn.mapRect(1150,-1050,250,575),spawn.mapRect(1725,-550,50,200),spawn.mapRect(1925,-550,500,200),spawn.mapRect(1750,-390,200,40),spawn.mapRect(-400,-550,1800,200),spawn.mapRect(-200,-1700,150,25),spawn.mapRect(-200,-1325,350,25),spawn.mapRect(2425,-450,100,100),spawn.mapRect(2290,-12,375,100),spawn.mapRect(2350,-24,375,100),spawn.mapRect(2410,-36,375,100),spawn.mapRect(2290,-3012,375,50),spawn.mapRect(2350,-3024,375,50),spawn.mapRect(2410,-3036,375,50),spawn.mapRect(1400,-3e3,1300,50),spawn.mapRect(1750,-3050,250,75),spawn.mapRect(1400,-3625,50,200),spawn.mapRect(350,-3625,50,225),spawn.mapRect(350,-3260,50,60),spawn.mapRect(200,-3250,1240,50),spawn.mapRect(1400,-3260,50,310),spawn.bodyRect(1412,-3425,25,165),spawn.mapRect(-150,-2925,150,25),spawn.mapRect(-300,-2600,300,675),spawn.mapRect(1400,-2600,375,675),spawn.mapRect(1925,-2600,775,675),spawn.bodyRect(2130,-2660,50,50),spawn.mapRect(150,-2100,200,175),spawn.mapRect(1050,-2100,200,175),spawn.randomMob(1075,-3500,-.3),spawn.randomMob(2175,-700,-.2),spawn.randomMob(-75,-850,-.1),spawn.randomMob(550,-3400,0),spawn.randomMob(0,-1175,.5),spawn.randomMob(-75,-1150,.5),spawn.randomMob(1075,-625,.5),spawn.randomMob(800,-3400,-.3),spawn.randomMob(1225,-3375,-.2),spawn.randomMob(1200,-1125,-.1),spawn.randomMob(2050,-950,.5),spawn.randomMob(2300,-2775,-.5),spawn.randomMob(600,-925,-.5),spawn.randomMob(1550,-2750,-.5),spawn.randomMob(1350,-1150,-.5),spawn.randomMob(-75,-1475,0),Math.random()<.5?spawn.randomLevelBoss(700,-1550):spawn.randomLevelBoss(675,-2775),spawn.secondaryBossChance(1925,-1250),powerUps.addResearchToLevel(),simulation.isHorizontalFlipped?(level.flipHorizontal(),i.min.x=-i.min.x-126,i.max.x=126-i.max.x,c.min.x=-c.min.x-126,c.max.x=126-c.max.x,a=level.portal({x:-2475,y:-140},2*Math.PI,{x:-2475,y:-3140},2*Math.PI),o=level.portal({x:-75,y:-2150},-Math.PI/2,{x:-1325,y:-2150},-Math.PI/2),s=level.portal({x:-1850,y:-585},-Math.PI/2,{x:-2425,y:-600},-1*Math.PI/3)):(a=level.portal({x:2475,y:-140},Math.PI,{x:2475,y:-3140},Math.PI),o=level.portal({x:75,y:-2150},-Math.PI/2,{x:1325,y:-2150},-Math.PI/2),s=level.portal({x:1850,y:-585},-Math.PI/2,{x:2425,y:-600},-2*Math.PI/3))},interferometer(){level.announceText(-1825,2025,!0),level.isVerticalFLipLevel=!0,mobs.maxMobBody=20,simulation.fallHeight=4e3,level.announceMobTypes(),level.setPosToSpawn(-1825,1950),level.exit.x=-1875,level.exit.y=1355,level.defaultZoom=2300,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#d0d5d5",color.map="#444",powerUps.chooseRandomPowerUp(-1550,300),powerUps.chooseRandomPowerUp(200,50),powerUps.chooseRandomPowerUp(-975,-1475),powerUps.chooseRandomPowerUp(2150,-750),powerUps.chooseRandomPowerUp(1850,1925);let e=[],t=[],a=[];level.isFlipped=!1;let o=!1,s=!1;const n=120;let l=body[body.length]=Bodies.rectangle(800,500,300,50,{collisionFilter:{category:cat.body,mask:cat.player|cat.body|cat.bullet|cat.mob|cat.mobBullet},density:.1,inertia:1/0,isNotHoldable:!0,friction:1,frictionStatic:1,restitution:0,frictionAir:1,classType:"body",holdX:1762,maxHeight:-1580,minHeight:90,verticalForce:.02,isUp:!1,drag:.01,move(){this.force.y-=this.mass*simulation.g,m.isTimeDilated||(level.isFlipped?(ctx.fillStyle="#ccc",ctx.fillRect(this.holdX,-this.maxHeight,5,this.maxHeight-this.minHeight),l.isUp?(l.force.y+=l.verticalForce*l.mass,l.position.y>-l.maxHeight&&(l.isUp=!1,Matter.Body.setPosition(l,{x:l.holdX,y:-l.maxHeight}),Matter.Body.setVelocity(l,{x:0,y:0}))):(l.force.y-=l.verticalForce*l.mass,l.position.y<-l.minHeight&&(l.isUp=!0,Matter.Body.setPosition(l,{x:l.holdX,y:-l.minHeight}),Matter.Body.setVelocity(l,{x:0,y:0}))),this.position.y>-l.maxHeight?Matter.Body.setPosition(l,{x:l.holdX,y:-l.maxHeight}):this.position.y<-l.minHeight&&Matter.Body.setPosition(l,{x:l.holdX,y:-l.minHeight})):(ctx.fillStyle="#ccc",ctx.fillRect(this.holdX,this.maxHeight,5,this.minHeight-this.maxHeight),l.isUp?(l.force.y-=l.verticalForce*l.mass,l.position.y<l.maxHeight&&(l.isUp=!1,Matter.Body.setPosition(l,{x:l.holdX,y:l.maxHeight}),Matter.Body.setVelocity(l,{x:0,y:0}))):(l.force.y+=l.verticalForce*l.mass,l.position.y>l.minHeight&&(l.isUp=!0,Matter.Body.setPosition(l,{x:l.holdX,y:l.minHeight}),Matter.Body.setVelocity(l,{x:0,y:0}))),this.position.y<l.maxHeight?Matter.Body.setPosition(l,{x:l.holdX,y:l.maxHeight}):this.position.y>l.minHeight&&Matter.Body.setPosition(l,{x:l.holdX,y:l.minHeight}))),Matter.Body.setVelocity(l,{x:0,y:l.velocity.y*this.drag}),Matter.Body.setPosition(l,{x:l.holdX,y:l.position.y})}});Composite.add(engine.world,l);let i=function(){spawn.mapRect(2225,-2e3,1775,4e3),spawn.mapRect(-4e3,-2e3,2e3,4e3),spawn.mapRect(-4e3,-5e3,8e3,3e3),spawn.mapRect(-4e3,2e3,8e3,3e3)},c=function(){e.push(level.button(-1895,-1600,126,!0,!1,"hsl(330, 100%, 50%)")),e[e.length-1].isUp=!1,spawn.mapRect(-1675,-2025,50,250),e.push(level.button(-1500,1315,126,!0,!0,"hsl(330, 100%, 50%)")),e[e.length-1].isUp=!0,simulation.ephemera.push({count:150,do(){this.count--,this.count<0&&(e[0].isUp=!0,simulation.removeEphemera(this),o=!1)}}),t.push(level.laser({x:-1100,y:1990},{x:-1100,y:-2e3})),spawn.mapRect(-1112,1990,25,25),t.push(level.laser({x:-600,y:1990},{x:-600,y:-2e3})),spawn.mapRect(-612,1990,25,25),t.push(level.laser({x:-100,y:1990},{x:-100,y:-2e3})),spawn.mapRect(-112,1990,25,25),a.push(level.rotor(-1250,1755,400,25,.01,0,.5)),a.push(level.rotor(-750,1755,400,25,.01,Math.PI/2,.5)),a.push(level.rotor(-275,1675,550,32,.01,0,.5)),t.push(level.laser({x:1610,y:-850},{x:-1625,y:-850})),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),spawn.mapRect(level.exit.x,level.exit.y-40,100,20),spawn.mapRect(-2025,1650,400,50),spawn.mapRect(-2100,-1600,475,2925),spawn.mapRect(-1675,1500,50,325),spawn.mapVertex(-1375,835,"-250 -475  0 -500  250 -475   250 475  -250 475"),spawn.mapVertex(-850,840,"-225 -475  0 -500  225 -475   225 475  -225 475"),spawn.mapVertex(-350,840,"-225 -475  0 -500  225 -475   225 475  -225 475"),spawn.mapRect(1925,-1700,400,200),spawn.mapRect(1925,-1200,400,200),spawn.mapRect(1925,-700,400,200),spawn.mapRect(1925,-200,400,200),spawn.mapRect(1925,300,400,200),spawn.mapRect(1925,800,400,200),spawn.mapRect(1925,1300,400,200),spawn.mapRect(1250,1650,500,25),spawn.mapRect(1300,1125,400,25),spawn.mapRect(1350,600,300,25),spawn.mapRect(1400,75,200,25),spawn.mapRect(650,1287,475,50),spawn.mapRect(650,800,500,125),spawn.mapRect(650,150,500,225),spawn.mapRect(350,1300,800,375),spawn.mapRect(350,950,150,400),spawn.mapRect(-25,950,525,100),spawn.mapRect(-75,525,575,200),spawn.mapRect(-75,75,575,200),spawn.mapRect(475,1987,550,50),spawn.mapRect(1200,-1600,400,25),spawn.mapRect(-75,-1825,1225,25),spawn.mapRect(-575,-1625,450,25),spawn.mapRect(-1075,-1850,450,25),spawn.mapRect(-1075,-1425,450,25),spawn.mapRect(-1675,-1588,550,25)},p=function(){simulation.translatePlayerAndCamera({x:player.position.x,y:-player.position.y}),level.enter.y=-level.enter.y,level.exit.y=-level.exit.y;for(let e=body.length-1;e>-1;e--)body[e].isRotor&&body.splice(e,1);function o(e){for(let t=0;t<e.length;++t)Matter.Composite.remove(engine.world,e[t])}function s(e){for(let t=0;t<e.length;++t)Matter.Body.setPosition(e[t],{x:e[t].position.x,y:-e[t].position.y})}o(map),map=[],o(a),a=[],o(e),e=[],t=[],s(body),s(powerUp),s(bullet),s(mob),9===m.fieldMode&&m.hole.isOn?(m.hole.pos1.y*=-1,m.hole.pos2.y*=-1):2===m.fieldMode&&(m.fieldPosition.y*=-1,m.fieldAngle*=-1);for(let e=0;e<m.history.length;e++)m.history[e].position.y*=-1,m.history[e].angle*=-1,m.history[e].velocity.y*=-1;for(let e=0;e<mob.length;e++){if(mobs.statusStun(mob[e],1),mob[e].history)for(let t=0;t<mob[e].history.length;t++)mob[e].history[t].y*=-1;if(mob[e].laserArray)for(let t=0;t<mob[e].laserArray.length;t++)mob[e].laserArray[t].a.y*=-1,mob[e].laserArray[t].b.y*=-1;mob[e].springTarget2&&(mob[e].springTarget.y*=-1,mob[e].springTarget2.y*=-1)}};i(),c(),level.custom=()=>{if(l.move(),t[t.length-1].look.y=l.position.y,t[t.length-1].position.y=l.position.y,e[1].draw(),e[1].query(),e[0].draw(),e[0].isUp&&!o&&(e[0].queryPlayer(),!e[0].isUp))if(o=!0,level.isFlipped){const e=function(){level.isFlipped=!1,p(),i(),c(),simulation.draw.setPaths(),level.addToWorld()};simulation.unFlipCameraVertical(n,e)}else{const l=function(){level.isFlipped=!0,p(),i(),e.push(level.button(-1895,1600,126,!0,!0,"hsl(330, 100%, 50%)")),e[e.length-1].isUp=!1,spawn.mapRect(-1675,1775,50,250),e.push(level.button(-1500,-1315,126,!0,!1,"hsl(330, 100%, 50%)")),e[e.length-1].isUp=!0,simulation.ephemera.push({count:150,do(){this.count--,this.count<0&&(e[0].isUp=!0,simulation.removeEphemera(this),o=!1)}}),t.push(level.laser({x:-1100,y:-1990},{x:-1100,y:2e3})),spawn.mapRect(-1112,-2015,25,25),t.push(level.laser({x:-600,y:-1990},{x:-600,y:2e3})),spawn.mapRect(-612,-2015,25,25),t.push(level.laser({x:-100,y:-1990},{x:-100,y:2e3})),spawn.mapRect(-112,-2015,25,25),a.push(level.rotor(-1250,-1780,400,25,.01,0,.5)),a.push(level.rotor(-750,-1780,400,25,.01,Math.PI/2,.5)),a.push(level.rotor(-250,-1707,500,32,.01,0,.5)),t.push(level.laser({x:1610,y:850},{x:-1625,y:850})),spawn.mapRect(level.enter.x,level.enter.y-20-20,100,20),spawn.mapRect(level.exit.x,level.exit.y+40-20,100,20),spawn.mapRect(-2025,-1700,400,50),spawn.mapRect(-2100,-1325,475,2925),spawn.mapRect(-1675,-1825,50,325),spawn.mapVertex(-1375,-835,"-250 -475   250 -475   250 475  0 500  -250 475"),spawn.mapVertex(-850,-835,"-225 -475   225 -475   225 475  0 500  -225 475"),spawn.mapVertex(-350,-835,"-225 -475   225 -475   225 475  0 500  -225 475"),spawn.mapRect(1925,1500,400,200),spawn.mapRect(1925,1e3,400,200),spawn.mapRect(1925,500,400,200),spawn.mapRect(1925,0,400,200),spawn.mapRect(1925,-500,400,200),spawn.mapRect(1925,-1e3,400,200),spawn.mapRect(1925,-1500,400,200),spawn.mapRect(1250,-1675,500,25),spawn.mapRect(1300,-1150,400,25),spawn.mapRect(1350,-625,300,25),spawn.mapRect(1400,-100,200,25),spawn.mapRect(650,-1337,475,50),spawn.mapRect(650,-925,500,125),spawn.mapRect(650,-375,500,225),spawn.mapRect(350,-1675,800,375),spawn.mapRect(350,-1350,150,400),spawn.mapRect(-25,-1050,525,100),spawn.mapRect(-75,-725,575,200),spawn.mapRect(-75,-275,575,200),spawn.mapRect(475,-2037,550,50),spawn.mapRect(1200,1575,400,25),spawn.mapRect(-75,1800,1225,25),spawn.mapRect(-575,1600,450,25),spawn.mapRect(-1075,1825,450,25),spawn.mapRect(-1075,1400,450,25),spawn.mapRect(-1675,1563,550,25),simulation.draw.setPaths(),level.addToWorld(),s||(s=!0,spawn.randomMob(-1500,-1425,0),spawn.randomMob(-950,-1425,0),spawn.randomMob(-425,-1425,0),spawn.randomMob(850,-1750,.1),spawn.randomMob(325,-850,.1),spawn.randomMob(400,-400,.2),spawn.randomMob(875,-1050,.3),spawn.randomMob(1425,1425,.4),spawn.randomMob(675,1450,.5),spawn.randomMob(-275,1425,1),spawn.randomMob(-800,1375,1),spawn.secondaryBossChance(700,1100))};simulation.flipCameraVertical(n,l)}level.isFlipped?(ctx.fillStyle="#c3c7c7",ctx.fillRect(1487,-2e3,25,1925),ctx.fillRect(1925,-2050,300,4100),ctx.fillStyle="#d4f4f4",ctx.fillRect(-2e3,-1675,375,350),level.exit.drawAndCheck(),ctx.beginPath(),ctx.moveTo(level.enter.x,level.enter.y-30),ctx.lineTo(level.enter.x,level.enter.y+80),ctx.bezierCurveTo(level.enter.x,level.enter.y+170,level.enter.x+100,level.enter.y+170,level.enter.x+100,level.enter.y+80),ctx.lineTo(level.enter.x+100,level.enter.y-30),ctx.lineTo(level.enter.x,level.enter.y-30),ctx.fillStyle="#ccc",ctx.fill()):(ctx.fillStyle="#c5c9c9",ctx.fillRect(1487,75,25,1925),ctx.fillRect(1925,-2050,300,4100),ctx.fillStyle="#d4f4f4",ctx.fillRect(-2e3,1325,375,350),ctx.beginPath(),ctx.moveTo(level.exit.x,level.exit.y-30),ctx.lineTo(level.exit.x,level.exit.y+80),ctx.bezierCurveTo(level.exit.x,level.exit.y+170,level.exit.x+100,level.exit.y+170,level.exit.x+100,level.exit.y+80),ctx.lineTo(level.exit.x+100,level.exit.y-30),ctx.lineTo(level.exit.x,level.exit.y-30),ctx.fillStyle="#0ff",ctx.fill(),level.enter.draw())},level.customTopLayer=()=>{if(e[1].isUp){for(let e=0;e<t.length-1;e++)t[e].query();simulation.cycle%120>60&&t[t.length-1].query()}ctx.fillStyle="#233",ctx.beginPath();for(let e=0;e<a.length;e++)ctx.moveTo(a[e].center.x,a[e].center.y),ctx.arc(a[e].center.x,a[e].center.y,9,0,2*Math.PI),simulation.cycle%90<15?a[e].torque=2e-4*a[e].inertia:0===Math.floor(a[e].angle%(Math.PI/2)*10)&&Matter.Body.setAngularVelocity(a[e],.1*a[e].angularVelocity);ctx.fill(),ctx.fillStyle=`rgba(255,255,255,${0+.3*Math.random()})`,level.isFlipped?(ctx.fillRect(-2025,1575,400,450),ctx.fillStyle="rgba(0,0,0,0.08)",ctx.fillRect(-2025,-2075,900,775),ctx.fillRect(-1075,-2025,450,725),ctx.fillRect(-575,-2025,450,725),ctx.fillRect(-25,-975,525,725),ctx.fillRect(650,-1325,475,975),ctx.fillRect(375,-2050,750,400),ctx.fillStyle="rgba(0,0,0,0.04)",ctx.fillRect(1225,1575,350,450),ctx.fillRect(-50,1800,1175,225),ctx.fillRect(-550,1600,400,425),ctx.fillRect(-1050,1400,400,625),ctx.fillRect(-1625,1575,475,450)):(ctx.fillRect(-2025,-2025,400,450),ctx.fillStyle="rgba(0,0,0,0.08)",ctx.fillRect(-2025,1300,900,775),ctx.fillRect(-1075,1300,450,725),ctx.fillRect(-575,1300,450,725),ctx.fillRect(-25,250,525,725),ctx.fillRect(650,350,475,975),ctx.fillRect(375,1650,750,400),ctx.fillStyle="rgba(0,0,0,0.04)",ctx.fillRect(1225,-2025,350,450),ctx.fillRect(-50,-2025,1175,225),ctx.fillRect(-550,-2025,400,425),ctx.fillRect(-1050,-2025,400,625),ctx.fillRect(-1625,-2025,475,450))},spawn.bodyRect(1325,-1775,175,175),spawn.bodyRect(-375,-1725,100,75,.5),spawn.bodyRect(-900,-1625,125,200,.5),spawn.bodyRect(875,-25,200,175),spawn.bodyRect(-1662,1325,25,175),spawn.bodyRect(-1662,1825,25,175),spawn.bodyRect(1900,1875,100,125,.5),spawn.bodyRect(400,1925,225,50,.1),spawn.bodyRect(950,750,75,50,.1),spawn.bodyRect(200,-25,150,100,.1),spawn.bodyRect(300,900,75,50,.1),spawn.bodyRect(1475,1025,100,100,.1),spawn.bodyRect(250,450,75,75,.1),spawn.bodyRect(775,75,75,75,.1),spawn.bodyRect(1200,1900,125,100,.1),spawn.randomMob(-375,-1875,0),spawn.randomMob(-1350,-1750,0),spawn.randomMob(-875,-1575,0),spawn.randomMob(350,825,0),spawn.randomMob(375,400,0),spawn.randomMob(1500,-25,.1),spawn.randomMob(775,700,.2),spawn.randomMob(275,-50,.3),spawn.randomMob(75,-1750,.3),spawn.randomMob(950,50,.4),spawn.randomMob(-1375,175,.4),spawn.randomMob(-350,175,.5),spawn.randomMob(-850,-1950,.6),spawn.randomMob(-1400,-1725,.7),spawn.randomMob(1400,-1700,.7),spawn.randomMob(1475,1550,.8),spawn.randomMob(1475,500,.8),powerUps.spawnStartingPowerUps(-875,-1925),spawn.randomLevelBoss(-875,-200),powerUps.addResearchToLevel()},gravitron(){mobs.maxMobBody=25,level.announceText(-2375,1030,!0),level.isVerticalFLipLevel=!0,simulation.fallHeight=4e3,level.announceMobTypes(),level.setPosToSpawn(-2375,950),level.exit.x=3750,level.exit.y=165,level.defaultZoom=2600,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#c3d6e1",color.map="#444",powerUps.chooseRandomPowerUp(-1825,975),powerUps.chooseRandomPowerUp(-3975,975),powerUps.chooseRandomPowerUp(3900,925);let e=[];simulation.isInvertedVertical?level.isFlipped=!0:level.isFlipped=!1;let t=!1;let a=function(){spawn.mapRect(4e3,-2e3,2e3,4e3),spawn.mapRect(-6e3,-2e3,2e3,4e3),spawn.mapRect(-6e3,-4e3,12e3,3e3),spawn.mapRect(-6e3,1e3,12e3,3e3)},o=function(){e.push(level.button(-3350,985,126,!0,!1,"hsl(330, 100%, 50%)")),e.push(level.button(-3350,-985,126,!0,!0,"hsl(330, 100%, 50%)")),e.push(level.button(150,985,126,!0,!1,"hsl(330, 100%, 50%)")),e.push(level.button(150,-985,126,!0,!0,"hsl(330, 100%, 50%)")),e.push(level.button(3725,985,126,!0,!1,"hsl(330, 100%, 50%)")),e.push(level.button(3725,-985,126,!0,!0,"hsl(330, 100%, 50%)"));for(let t=0;t<e.length;t++)e[t].isUp=!1;simulation.ephemera.push({count:60,do(){if(this.count--,this.count<0){for(let t=0;t<e.length;t++)e[t].isUp=!0;simulation.removeEphemera(this),t=!1}}}),spawn.mapRect(-2575,987,375,100),spawn.mapRect(-2575,-600,600,1325),spawn.mapRect(-2200,650,225,475),spawn.mapRect(-2575,700,35,125),spawn.mapRect(-3500,-1050,425,63),spawn.mapRect(-3500,987,425,50),spawn.mapVertex(-2275,-1e3,"-400 0  -300 150  300 150  400 0"),spawn.mapVertex(-3287,0,"-213 -500  0 -550  213 -500  213 500  0 550  -213 500"),spawn.mapVertex(-3750,-100,"-100 -200  -50 -250   50 -250 100 -200   100 200 50 250  -50 250 -100 200"),spawn.mapVertex(-2825,0,"-100 -400  -50 -450   50 -450 100 -400   100 400 50 450  -50 450 -100 400"),spawn.mapVertex(-1150,-750,"400 -75   425 0  400 75  -400 75  -425 0 -400 -75"),spawn.mapVertex(-550,-450,"400 -75   425 0  400 75  -400 75  -425 0 -400 -75"),spawn.mapVertex(-1685,153,"-150 -500  0 -550  150 -500  150 750  -150 450"),spawn.mapVertex(-1106,707,"500 -150   550 0  500 150  -500 150  -800 -150"),spawn.mapRect(-1645,470,200,200),Matter.Body.setAngle(map[map.length-1],Math.PI/4),spawn.mapRect(-2085,910,200,200),Matter.Body.setAngle(map[map.length-1],Math.PI/4),spawn.mapVertex(213,0,"-213 -650  0 -600  213 -550  213 650  0 600  -213 550"),spawn.mapRect(0,-1050,425,63),spawn.mapRect(0,987,425,50),spawn.mapVertex(1700,-1e3,"-600 0  -400 400  400 400  600 0"),spawn.mapVertex(2800,-1e3,"-500 0  -400 150  400 150  500 0"),spawn.mapVertex(1700,700,"-400 -100  -450 0  -400 100  400 100  450 0  400 -100"),spawn.mapVertex(2800,375,"-400 -100  -450 0  -400 100  400 100  450 0  400 -100"),spawn.mapRect(3575,-1050,425,63),spawn.mapRect(3575,987,425,50),spawn.mapVertex(3840,450,"-250 -300   250 -300   250 300   -250 100"),spawn.mapVertex(3840,-450,"-250 300   250 300   250 -300   -250 -100"),spawn.mapRect(3750,185,100,25)},s=function(){e.push(level.button(-3350,985,126,!0,!1,"hsl(330, 100%, 50%)")),e.push(level.button(-3350,-985,126,!0,!0,"hsl(330, 100%, 50%)")),e.push(level.button(150,985,126,!0,!1,"hsl(330, 100%, 50%)")),e.push(level.button(150,-985,126,!0,!0,"hsl(330, 100%, 50%)")),e.push(level.button(3725,985,126,!0,!1,"hsl(330, 100%, 50%)")),e.push(level.button(3725,-985,126,!0,!0,"hsl(330, 100%, 50%)"));for(let t=0;t<e.length;t++)e[t].isUp=!1;simulation.ephemera.push({count:60,do(){if(this.count--,this.count<0){for(let t=0;t<e.length;t++)e[t].isUp=!0;simulation.removeEphemera(this),t=!1}}}),spawn.mapRect(-2575,-1087,375,100),spawn.mapRect(-2575,-725,600,1325),spawn.mapRect(-2200,-1125,225,475),spawn.mapRect(-2575,-825,35,125),spawn.mapRect(-3500,987,425,63),spawn.mapRect(-3500,-1037,425,50),spawn.mapVertex(-2275,1e3,"-300 0  -400 150  400 150  300 0"),spawn.mapVertex(-3287,0,"-213 -500  0 -550  213 -500  213 500  0 550  -213 500"),spawn.mapVertex(-3750,100,"-100 -200  -50 -250   50 -250 100 -200   100 200 50 250  -50 250 -100 200"),spawn.mapVertex(-2825,0,"-100 -400  -50 -450   50 -450 100 -400   100 400 50 450  -50 450 -100 400"),spawn.mapVertex(-1150,750,"400 -75   425 0  400 75  -400 75  -425 0 -400 -75"),spawn.mapVertex(-550,450,"400 -75   425 0  400 75  -400 75  -425 0 -400 -75"),spawn.mapVertex(-1685,-153,"-150 500  0 550  150 500  150 -750  -150 -450"),spawn.mapVertex(-1106,-707,"500 150   550 0  500 -150  -500 -150  -800 150"),spawn.mapRect(-1645,-670,200,200),Matter.Body.setAngle(map[map.length-1],Math.PI/4),spawn.mapRect(-2085,-1110,200,200),Matter.Body.setAngle(map[map.length-1],Math.PI/4),spawn.mapVertex(213,0,"-213 -550  0 -600  213 -650  213 550  0 600  -213 650"),spawn.mapRect(0,987,425,63),spawn.mapRect(0,-1037,425,50),spawn.mapVertex(1700,1e3,"-400 0  -600 400  600 400  400 0"),spawn.mapVertex(2800,1e3,"-400 0  -500 150  500 150  400 0"),spawn.mapVertex(1700,-700,"-400 -100  -450 0  -400 100  400 100  450 0  400 -100"),spawn.mapVertex(2800,-375,"-400 -100  -450 0  -400 100  400 100  450 0  400 -100"),spawn.mapRect(3575,987,425,63),spawn.mapRect(3575,-1037,425,50),spawn.mapVertex(3840,450,"-250 -300   250 -300   250 300   -250 100"),spawn.mapVertex(3840,-450,"-250 300   250 300   250 -300   -250 -100"),spawn.mapRect(3750,-210,100,25)},n=function(){level.enter.y=-level.enter.y,level.exit.y=-level.exit.y;for(let e=body.length-1;e>-1;e--)body[e].isRotor&&body.splice(e,1);function t(e){for(let t=0;t<e.length;++t)Matter.Composite.remove(engine.world,e[t])}function a(e){for(let t=0;t<e.length;++t)Matter.Body.setPosition(e[t],{x:e[t].position.x,y:-e[t].position.y})}t(map),map=[],t(e),e=[],simulation.translatePlayerAndCamera({x:player.position.x,y:-player.position.y},!1),a(body),a(powerUp),a(bullet),a(mob),9===m.fieldMode&&m.hole.isOn?(m.hole.pos1.y*=-1,m.hole.pos2.y*=-1):2===m.fieldMode&&(m.fieldPosition.y*=-1,m.fieldAngle*=-1);for(let e=0;e<m.history.length;e++)m.history[e].position.y*=-1,m.history[e].angle*=-1,m.history[e].velocity.y*=-1;for(let e=0;e<mob.length;e++){if(mobs.statusStun(mob[e],1),mob[e].history)for(let t=0;t<mob[e].history.length;t++)mob[e].history[t].y*=-1;if(mob[e].laserArray)for(let t=0;t<mob[e].laserArray.length;t++)mob[e].laserArray[t].a.y*=-1,mob[e].laserArray[t].b.y*=-1;mob[e].springTarget2&&(mob[e].springTarget.y*=-1,mob[e].springTarget2.y*=-1)}};a(),o(),level.custom=()=>{for(let e=0;e<body.length;e++)(body[e].position.x>-3505&&body[e].position.x<-3075||body[e].position.x>0&&body[e].position.x<425||body[e].position.x>3575)&&(body[e].position.y>0?body[e].force.y-=1.04*simulation.g*body[e].mass:body[e].force.y+=1.04*simulation.g*body[e].mass);for(let e=0;e<powerUp.length;e++)(powerUp[e].position.x>-3505&&powerUp[e].position.x<-3075||powerUp[e].position.x>0&&powerUp[e].position.x<425||powerUp[e].position.x>3575)&&(powerUp[e].position.y>0?powerUp[e].force.y-=1.04*simulation.g*powerUp[e].mass:powerUp[e].force.y+=1.04*simulation.g*powerUp[e].mass);for(let l=0;l<e.length;l++)if(e[l].draw(),e[l].isUp&&!t&&(e[l].queryPlayer(),!e[l].isUp)){if(t=!0,level.isFlipped){const e=function(){level.isFlipped=!1,n(),a(),o(),simulation.draw.setPaths(),level.addToWorld()};simulation.unFlipCameraVertical(60,e)}else{const e=function(){level.isFlipped=!0,n(),a(),s(),simulation.draw.setPaths(),level.addToWorld()};simulation.flipCameraVertical(60,e)}break}ctx.fillStyle="#d4f4f4",ctx.fillRect(3575,-300,475,575),level.isFlipped?(ctx.beginPath(),ctx.moveTo(level.enter.x,level.enter.y-30),ctx.lineTo(level.enter.x,level.enter.y+80),ctx.bezierCurveTo(level.enter.x,level.enter.y+170,level.enter.x+100,level.enter.y+170,level.enter.x+100,level.enter.y+80),ctx.lineTo(level.enter.x+100,level.enter.y-30),ctx.lineTo(level.enter.x,level.enter.y-30),ctx.fillStyle="#ccc",ctx.fill(),ctx.fillStyle="#d4f4f4",ctx.beginPath(),ctx.moveTo(level.exit.x,level.exit.y-30),ctx.lineTo(level.exit.x,level.exit.y+80),ctx.bezierCurveTo(level.exit.x,level.exit.y+170,level.exit.x+100,level.exit.y+170,level.exit.x+100,level.exit.y+80),ctx.lineTo(level.exit.x+100,level.exit.y-30),ctx.lineTo(level.exit.x,level.exit.y-30),ctx.fillStyle="#0ff",ctx.fill()):(level.exit.drawAndCheck(),level.enter.draw())},level.customTopLayer=()=>{ctx.fillStyle=`rgba(255,255,255,${0+.3*Math.random()})`,ctx.fillRect(-3500,-1075,425,2100),ctx.fillRect(0,-1075,425,2100),ctx.fillRect(3575,-1075,425,2100),ctx.fillStyle="rgba(0,0,0,0.08)",ctx.fillRect(-2575,-1025,600,2050),ctx.fillRect(1300,-1050,800,2100),ctx.fillRect(2400,-1050,800,2100)},spawn.bodyRect(-2569,825,25,165),spawn.randomMob(-2275,-675,0),spawn.randomMob(-1200,475,0),spawn.randomMob(525,875,.1),spawn.randomMob(1975,900,.2),spawn.randomMob(2800,875,.2),spawn.randomMob(-3275,-600,.3),spawn.randomMob(-1250,-900,.3),spawn.randomMob(-475,-600,.3),spawn.randomMob(-1750,850,.4),spawn.randomMob(1700,525,.4),spawn.randomMob(2925,175,.5),spawn.randomMob(-2300,-825,.5),spawn.randomMob(-1625,-450,.6),spawn.randomMob(-225,900,.6),spawn.randomMob(275,-775,.7),spawn.randomMob(2800,875,.8),spawn.randomMob(3825,-750,.9),spawn.randomMob(2825,150,1),spawn.randomMob(-1900,875,1),powerUps.spawnStartingPowerUps(-825,-600),spawn.randomLevelBoss(1550,200),spawn.secondaryBossChance(2675,-125),powerUps.addResearchToLevel()},substructure(){level.announceText(-3800,-680,!0),level.announceMobTypes(),level.setPosToSpawn(-3800,-750),level.exit.x=3750,level.exit.y=-625,level.defaultZoom=2e3,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#d0d5d5",color.map="#444";const e=level.boost(-2225,1e3,1750),t=level.boost(3400,1e3,1750),a=[],o=2800,s=200;map[map.length]=Matter.Bodies.polygon(o,s,20,100),a.push(level.laser({x:o,y:s},{x:o,y:s})),a[a.length-1].oscillate=function(){const e=Math.PI/2-.45-1.47*Math.sin(.02*simulation.cycle);this.position={x:o+102*Math.cos(e),y:s+102*Math.sin(e)},this.look={x:o+2e3*Math.cos(e),y:s+2e3*Math.sin(e)}},a.push(level.laser({x:o,y:s},{x:o,y:s})),a[a.length-1].oscillate=function(){const e=-Math.PI/2-.45+1.47*Math.sin(.02*simulation.cycle);this.position={x:o+102*Math.cos(e),y:s+102*Math.sin(e)},this.look={x:o+2e3*Math.cos(e),y:s+2e3*Math.sin(e)}},a.push(level.laser({x:-1500,y:-963},{x:-1500,y:0})),a[a.length-1].oscillate=function(){const e=Math.PI/2+.6*Math.sin(.02*simulation.cycle);this.look={x:this.position.x+600*Math.cos(e),y:this.position.y+600*Math.sin(e)}},a.push(level.laser({x:600,y:580},{x:600,y:1e3})),a[a.length-1].oscillate=function(){this.position.x=600+200*Math.sin(.03*simulation.cycle),this.look.x=600+400*Math.sin(.03*simulation.cycle)},a.push(level.laser({x:-115,y:-853},{x:600,y:-50})),Math.random()<.33?a[a.length-1].oscillate=function(){this.look.x=300+Math.abs(600*Math.sin(.017*simulation.cycle))}:Math.random()<.5?a[a.length-1].oscillate=function(){this.look.x=600+300*Math.sin(.017*simulation.cycle)}:a[a.length-1].oscillate=function(){this.look.x=300+4*simulation.cycle%600},a.push(level.laser({x:2375,y:-876},{x:2375,y:-300})),a[a.length-1].oscillate=function(){const e=1.4+1.15*Math.sin(.021*simulation.cycle);this.look={x:this.position.x+2e3*Math.cos(e),y:this.position.y+2e3*Math.sin(e)}},a.push(level.laser({x:2375,y:-876},{x:2375,y:-876})),a[a.length-1].oscillate=function(){const e=1.4+1.15*Math.cos(.021*simulation.cycle);this.look={x:this.position.x+2e3*Math.cos(e),y:this.position.y+2e3*Math.sin(e)}},a.push(level.laser({x:-3565,y:-915},{x:-3565,y:-710})),a.push(level.laser({x:3535,y:-915},{x:3535,y:-575})),Math.random()<.33?a.push(level.laser({x:-400,y:-713},{x:-400,y:-295})):Math.random()<.5?a.push(level.laser({x:-400,y:-250},{x:-400,y:200})):a.push(level.laser({x:-400,y:250},{x:-400,y:750})),level.custom=()=>{e.query(),t.query(),ctx.fillStyle="#cacfcf",ctx.fillRect(2787,-425,25,650),ctx.fillRect(-600,-1050,400,1800),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{ctx.fillStyle="rgba(0,255,255,0.1)",ctx.fillRect(3535,-1050,500,475),ctx.fillStyle="rgba(0,20,60,0.09)",ctx.fillRect(-4025,-1050,1750,2275),ctx.fillRect(-2025,-1050,1050,2175),ctx.fillRect(200,0,800,975),ctx.fillRect(1400,-150,650,1175),ctx.fillRect(2200,-425,1175,1475);for(let e=0;e<7;e++)a[e].oscillate();for(let e=0;e<a.length;e++)a[e].motionQuery()},spawn.mapRect(4e3,-2e3,2e3,4e3),spawn.mapRect(-6e3,-2e3,2e3,4e3),spawn.mapRect(-6e3,-4e3,12e3,3e3),spawn.mapRect(-6e3,1e3,12e3,3e3),spawn.mapRect(-4e3,-710,450,1800),spawn.mapVertex(-3565,-1013,"-140 0    -8 150   8 150   140 0"),spawn.mapVertex(-3975,-975,"0 0    100 0   0 100"),spawn.mapVertex(-2900,268,"-650 0   0 -40   650 0    650 2000   -650 2000 "),spawn.mapVertex(-2900,-990,"-600 0  0 40  600 0"),spawn.mapVertex(-1500,-350,"-550 0   0 -40   550 0    550 350   0 390  -550 350 "),spawn.mapVertex(-1500,535,"-550 0   0 -40   550 0    550 500   0 540  -550 500 "),spawn.mapVertex(-1500,-990,"-600 0  0 40  600 0"),spawn.mapVertex(-1500,990,"-550 0  0 -40  550 0   550 20   -550 20"),spawn.mapVertex(-400,-875,"225 0  -225 0  -350 -300  350 -300"),spawn.mapRect(-600,200,400,50),spawn.mapRect(-600,-300,400,50),spawn.mapVertex(-400,900,"350 0  -350 0  -225 -300  225 -300"),spawn.mapVertex(600,1e3,"575 0  -575 0  -450 -100  450 -100"),spawn.mapVertex(600,500,"325 0  250 80  -250 80  -325 0  -250 -80  250 -80"),spawn.mapRect(175,450,850,100),spawn.mapVertex(600,0,"425 -20  425 20  390 50  -390 50  -425 20  -425 -20  -390 -50  390 -50"),spawn.mapRect(1600,990,450,100),spawn.mapRect(2200,990,1175,100),spawn.mapVertex(1500,1015,"200 0  -200 0  -100 -100  100 -100"),spawn.mapVertex(1500,200,"-100 100  0 0   100 0   100 1000   -100 1000"),spawn.mapRect(1550,-300,500,200),spawn.mapVertex(2303.5,-350,"-100 100  0 0   100 0   100 500   -100 500"),spawn.mapRect(2350,-600,1025,200),spawn.mapVertex(2375,-975,"-140 0    -8 150   8 150   140 0"),spawn.mapRect(3525,-600,550,1675),spawn.mapRect(3750,-610,100,50),spawn.mapVertex(3535,-1013,"-140 0    -8 150   8 150   140 0"),spawn.mapVertex(3975,-990,"0 0    100 0   100 100"),spawn.randomMob(-1150,900,.1),spawn.randomMob(675,750,.1),spawn.randomMob(3100,875,.2),spawn.randomMob(2975,-775,.2),spawn.randomMob(1675,-550,.3),spawn.randomMob(700,-300,.3),spawn.randomMob(-325,-425,.4),spawn.randomMob(-1375,-675,.4),spawn.randomMob(-1425,100,.5),spawn.randomMob(-500,75,.6),spawn.randomMob(625,250,.7),spawn.randomMob(2125,375,.7),spawn.randomMob(-500,600,.8),spawn.randomMob(-1950,875,.8),spawn.randomMob(800,-400,.9),spawn.randomMob(1675,-600,.9),spawn.randomMob(2825,75,.9),spawn.randomLevelBoss(2400,600),spawn.secondaryBossChance(800,-300),powerUps.chooseRandomPowerUp(600,375),powerUps.chooseRandomPowerUp(600,925),powerUps.spawnStartingPowerUps(1750,-325),powerUps.addResearchToLevel(),powerUps.chooseRandomPowerUp(2825,175),powerUps.chooseRandomPowerUp(2475,-650),powerUps.chooseRandomPowerUp(2100,925),powerUps.chooseRandomPowerUp(625,-100)},corridor(){if(level.announceMobTypes(),level.defaultZoom=2400,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#d0d5d5",color.map="#444",powerUps.chooseRandomPowerUp(5925,-2125),powerUps.chooseRandomPowerUp(75,-4225),powerUps.chooseRandomPowerUp(2950,-1450),simulation.isHorizontalFlipped){level.announceText(14075,-550,!0),level.setPosToSpawn(14075,-625),level.exit.x=-350,level.exit.y=505,spawn.bodyRect(13525,-675,50,100);var e="rgba(0,20,60,0.09)",t="rgba(0,255,255,0.1)";spawn.mapVertex(13800,-600,"0 -325  -50 -300  -50 300  50 300  50 -300")}else{level.announceText(-350,580,!0),level.setPosToSpawn(-350,475),level.exit.x=14025,level.exit.y=-600,spawn.bodyRect(-225,475,50,50);e="rgba(0,255,255,0.1)",t="rgba(0,20,60,0.09)"}spawn.mapRect(14015,-585,120,75);const a=level.button(-4100,991),o=level.button(4050,991);a.isUp=!0;const s=[];s.push(level.boost(-3650,990,2700,1.45)),s.push(level.boost(3325,990,1600,1.4)),s.push(level.boost(7960,-1110,1650,2.3)),s.push(level.boost(13345,-460,2070,2.35));const n=[];n.push(level.fizzler({x:-135,y:265},{x:-135,y:535})),n.push(level.fizzler({x:-3850,y:650},{x:-3850,y:1025})),n.push(level.fizzler({x:3875,y:675},{x:3875,y:1025})),n.push(level.fizzler({x:13425,y:-1275},{x:13425,y:-550}));const l=[];function i(e,t,a){l[e].VxGoal=t,l[e].force=a}if(l.push(level.mover(-3550,995,6875,150,-15)),l.push(level.mover(225,-1190,2450,50,-15)),l.push(level.mover(-3e3,-1190,3e3,50,15)),l.push(level.mover(4e3,-2025,2e3,150,-23)),l.push(level.mover(8e3,-1125,2e3,150,-23)),l.push(level.mover(3775,-425,1650,150,20)),l.push(level.mover(5425,-425,1925,150,40)),l.push(level.mover(7350,-425,6e3,150,60)),level.custom=()=>{if(ctx.fillStyle="#c8cccc",ctx.fillRect(-2150,675,500,400),ctx.fillRect(-1050,675,500,400),ctx.fillRect(750,675,500,400),ctx.fillRect(1850,675,500,400),ctx.fillRect(-2250,-2425,700,1325),ctx.fillRect(-1150,-2400,700,1300),ctx.fillRect(650,-2375,700,1325),ctx.fillRect(1750,-2375,700,1350),ctx.fillRect(8e3,-2425,2e3,2225),ctx.fillRect(4e3,-2375,2e3,2100),ctx.fillRect(11125,-2425,1e3,2150),level.exit.drawAndCheck(),level.enter.draw(),o.isUp){if(o.query(),!o.isUp){requestAnimationFrame(()=>a.isUp=!0),i(0,-15,-5e-4);const e=Matter.Query.region(body,a);e.length>0&&Matter.Body.setVelocity(e[0],{x:15,y:-20})}}else if(a.isUp&&(a.query(),!a.isUp)){requestAnimationFrame(()=>o.isUp=!0),i(0,20,5e-4);const e=Matter.Query.region(body,o);e.length>0&&Matter.Body.setVelocity(e[0],{x:-15,y:-20})}o.draw(),a.draw();for(let e=0;e<l.length;e++)l[e].push();for(let e=0;e<s.length;e++)s[e].query()},level.customTopLayer=()=>{for(let e=0;e<n.length;e++)n[e].query();ctx.fillStyle=e,ctx.fillRect(13400,-1325,1e3,825),ctx.fillStyle=t,ctx.fillRect(-500,225,494,350),ctx.fillStyle="rgba(0,5,10,0.06)",ctx.beginPath(),ctx.moveTo(0,-1180),ctx.lineTo(225,-1180),ctx.lineTo(3220,669),ctx.lineTo(3180,1010),ctx.lineTo(-2960,1010),ctx.lineTo(-2995,674),ctx.fill(),ctx.beginPath(),ctx.beginPath(),ctx.moveTo(3780,720),ctx.lineTo(4325,720),ctx.lineTo(4325,1010),ctx.lineTo(3810,1010),ctx.fill(),ctx.beginPath(),ctx.moveTo(-3755,675),ctx.lineTo(-3785,1010),ctx.lineTo(-4250,1010),ctx.lineTo(-4250,675),ctx.fill(),ctx.fillStyle="rgba(68, 68, 68,0.9)",ctx.fillRect(-50,-4300,325,1950);for(let e=0;e<l.length;e++)l[e].draw()},spawn.mapRect(-6e3,1e3,12e3,3e3),spawn.mapRect(-6e3,-4300,6020,1950),spawn.mapRect(205,-4300,15120,1950),spawn.mapVertex(-250,602.5,"-200 0  235 0 400 50  400 150  -200 150"),spawn.mapVertex(-3675,-2275,"0 0  500 0  0 500"),spawn.mapVertex(13275,-2275,"0 0  -500 0  0 500"),spawn.mapRect(-525,-1175,525,1450),spawn.mapRect(225,-1175,3e3,1850),spawn.mapRect(-3e3,-1175,2525,1850),spawn.mapRect(-4350,-2500,600,3175),spawn.mapRect(-6e3,-2350,1775,3350),spawn.mapVertex(-1900,675,"-350 0  -250 100  250 100  350 0"),spawn.mapVertex(-800,675,"-350 0  -250 100  250 100  350 0"),spawn.mapVertex(1e3,675,"-350 0  -250 100  250 100  350 0"),spawn.mapVertex(2100,675,"-350 0  -250 100  250 100  350 0"),spawn.mapVertex(-1900,-1450,"-400 -40  -350 -90   350 -90 400 -40   400 40 350 90  -350 90 -400 40"),spawn.mapVertex(-800,-1450,"-400 -40  -350 -90   350 -90 400 -40   400 40 350 90  -350 90 -400 40"),spawn.mapVertex(1e3,-1450,"-400 -40  -350 -90   350 -90 400 -40   400 40 350 90  -350 90 -400 40"),spawn.mapVertex(2100,-1450,"-400 -40  -350 -90   350 -90 400 -40   400 40 350 90  -350 90 -400 40"),spawn.mapVertex(-1900,-2350,"-450 0  -350 100  350 100  450 0"),spawn.mapVertex(-800,-2350,"-450 0  -350 100  350 100  450 0"),spawn.mapVertex(1e3,-2350,"-450 0  -350 100  350 100  450 0"),spawn.mapVertex(2100,-2350,"-450 0  -350 100  350 100  450 0"),spawn.mapRect(-1500,840,300,20),spawn.mapRect(1400,840,300,20),spawn.mapVertex(3001,-1260,"0 0  400 -200  550 -200  550 75  0 75"),spawn.mapVertex(4100,-1100,"-625 0  -600 -60  600 -60  625 0  600 60  -600 60"),spawn.mapVertex(5550,-750,"-625 0  -600 -60  600 -60  625 0  600 60  -600 60"),spawn.mapVertex(11625,-900,"-525 0  -500 -50  500 -50  525 0  500 50  -500 50"),spawn.mapVertex(5e3,-1935,"-1050 0  -1000 -90  1000 -90  1050 0  1000 90  -1000 90"),spawn.mapVertex(9e3,-1035,"-1050 0  -1000 -90  1000 -90  1050 0  1000 90  -1000 90"),spawn.mapVertex(5e3,-2370,"-1200 0  -1000 100  1000 100  1200 0"),spawn.mapVertex(9e3,-2310,"-1200 0  -1000 100  1000 100  1200 0"),spawn.mapVertex(11625,-2310,"-600 0  -500 100  500 100  600 0"),spawn.mapRect(3775,-400,675,1125),spawn.mapRect(4300,-400,11025,4400),spawn.mapRect(13400,-575,1925,300),spawn.mapRect(14275,-2375,1050,2050),spawn.mapRect(13400,-2375,900,1125),spawn.bodyRect(-200,950,50,50),spawn.bodyRect(-1100,925,65,75),spawn.bodyRect(-2275,975,70,25),spawn.bodyRect(-3325,925,75,75),spawn.bodyRect(-2950,-1225,90,25),spawn.bodyRect(-1425,-1275,45,75),spawn.bodyRect(600,-1275,70,75),spawn.bodyRect(1900,-1225,90,50),spawn.bodyRect(4250,-2100,115,50),spawn.bodyRect(2175,900,100,65),spawn.bodyRect(4075,-450,75,20),spawn.bodyRect(8350,-1175,90,50),spawn.bodyRect(6525,-525,70,100),spawn.bodyRect(12025,-475,130,50),spawn.bodyRect(625,950,55,45),spawn.bodyRect(6250,-450,55,25),spawn.bodyRect(3950,-475,46,53),spawn.bodyRect(3525,-1300,100,125,.6),spawn.bodyRect(11550,-1150,100,200,.4),spawn.randomMob(-1775,-1650,0),spawn.randomMob(950,-1775,0),spawn.randomMob(1550,775,0),spawn.randomMob(4500,-1250,0),spawn.randomMob(11400,-1300,0),spawn.randomMob(-800,-1675,0),spawn.randomMob(-1325,775,.1),spawn.randomMob(2050,-1625,.1),spawn.randomMob(3100,-1475,.2),spawn.randomMob(5400,-900,.2),spawn.randomMob(11950,-1025,.3),spawn.randomMob(-925,-1700,.3),spawn.randomMob(2025,-1725,.4),spawn.randomMob(1575,775,.4),spawn.randomMob(-1350,775,.6),spawn.randomMob(11925,-1275,.6),spawn.randomMob(4325,-1425,.6),spawn.randomMob(5425,-950,.6),spawn.randomMob(3575,375,.6),spawn.randomGroup(5300,-1400,1.3),simulation.difficultyMode>1||level.levelsCleared>1){const e=[{x:-1900,y:-1825},{x:2025,y:-1825},{x:950,y:-1825},{x:-850,y:-1825}],t=e[Math.floor(Math.random()*e.length)];level.levelsCleared>7?spawn.randomLevelBoss(t.x,t.y,["historyBoss","laserLayerBoss","conductorBoss"]):level.levelsCleared>3?spawn.randomLevelBoss(t.x,t.y,["blockBoss","pulsarBoss","spawnerBossCulture"]):spawn.randomLevelBoss(t.x,t.y,["shooterBoss","shieldingBoss"]),spawn.secondaryBossChance(3486,-557,["trainBoss"])}else powerUps.spawnBossPowerUp(2800,-1400);powerUps.spawnStartingPowerUps(11750,-1e3),powerUps.addResearchToLevel()},furnace(){level.announceMobTypes(),simulation.isHorizontalFlipped?(level.announceText(4350,325,!0),level.setPosToSpawn(4350,250),level.exit.x=-4375,level.exit.y=115):(level.announceText(-4325,175,!0),level.setPosToSpawn(-4325,100),level.exit.x=4300,level.exit.y=270),level.defaultZoom=2e3,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#cccccc",color.map="#474444";const e=[],t=100+30*simulation.difficultyMode,a=600*(3-.16*simulation.difficultyMode),o=6e-4;e.push(level.hazard(-3600,-1e3,1075,2e3,o)),e[e.length-1].countdown=60,e[e.length-1].isOn=!1,e.push(level.hazard(-1425,-1e3,2475,2e3,o)),e[e.length-1].countdown=60+1/3*(a+t),e[e.length-1].isOn=!1,e.push(level.hazard(2150,-1e3,1400,2e3,o)),e[e.length-1].countdown=60+2/3*(a+t),e[e.length-1].isOn=!1;const s=[],n=[],l=[];l.push(level.mover(-2525,720,1100,50,0)),l.push(level.mover(1050,620,1100,50,0)),level.custom=()=>{for(let e=0;e<l.length;e++)l[e].push(),l[e].draw();level.exit.drawAndCheck(),level.enter.draw(),ctx.fillStyle="#b9b9b9",ctx.fillRect(450,-600,75,1575),ctx.fillRect(-900,-600,75,1575),ctx.fillRect(2575,-1025,50,2100),ctx.fillRect(3050,-1025,50,2100)},level.customTopLayer=()=>{if(!m.isTimeDilated)for(let o=0;o<e.length;o++)if(e[o].isOn)e[o].heatQuery(),e[o].countdown--,e[o].countdown<0&&(e[o].isOn=!1,e[o].countdown=a,l[0].VxGoal=0,l[0].force=0,l[1].VxGoal=0,l[1].force=0);else{if(e[o].countdown--,e[o].countdown<0){e[o].countdown=t,e[o].isOn=!0;const a=Math.floor(2+1*simulation.difficultyMode);0===o?(l[0].VxGoal=-a,l[0].force=-5e-4):1===o?(l[0].VxGoal=a,l[0].force=5e-4,l[1].VxGoal=-a,l[1].force=-5e-4):(l[1].VxGoal=a,l[1].force=5e-4)}if(e[o].countdown<240){const t=.3*(1-e[o].countdown/240)+.06*Math.random();e[o].heatWarning(t)}}if(m.onGround)for(let e=0;e<n.length;e++)m.standingOn===n[e]&&(m.moverX=n[e].velocity.x,m.Vx=player.velocity.x-n[e].velocity.x);if(s.length){ctx.beginPath(),ctx.arc(s[0].pointA.x,s[0].pointA.y,9,0,2*Math.PI);for(let e=0,t=s.length;e<t;e++)ctx.moveTo(s[e].pointA.x,s[e].pointA.y),ctx.arc(s[e].pointA.x,s[e].pointA.y,9,0,2*Math.PI);ctx.fillStyle="#233",ctx.fill()}ctx.fillStyle="rgba(0,20,60,0.09)",ctx.fillRect(-2525,-825,1100,1675),ctx.fillRect(1050,-825,1100,1675),ctx.fillRect(-269,675,163,250),simulation.isHorizontalFlipped?(ctx.fillRect(3550,-150,975,500),ctx.fillStyle="rgba(0,255,255,0.1)",ctx.fillRect(-4525,-125,925,275)):(ctx.fillRect(-4525,-125,925,275),ctx.fillStyle="rgba(0,255,255,0.1)",ctx.fillRect(3550,-150,975,500))},spawn.mapRect(4500,-2e3,1500,4e3),spawn.mapRect(-6e3,-2e3,1475,4e3),spawn.mapRect(-6e3,-4e3,12e3,3e3),spawn.mapRect(-6e3,1e3,12e3,3e3),spawn.mapRect(-4550,-1050,950,925),spawn.mapRect(-4550,140,950,900),spawn.mapRect(-4550,130,175,25),spawn.mapRect(-4275,130,225,100),spawn.mapRect(-4050,120,225,100),spawn.mapRect(-3825,110,225,100),spawn.bodyRect(-3780,-125,50,235),spawn.mapVertex(-1975,500,"225 -20  225 20  200 45  -200 45  -225 20  -225 -20  -200 -45  200 -45"),spawn.mapVertex(-1975,-1e3,"600 -250  600 250  550 300  -550 300  -600 250  -600 -250"),spawn.mapVertex(-1975,0,"600 -250  600 250  550 300  -550 300  -600 250  -600 -250  -550 -300  550 -300"),spawn.mapVertex(-1975,1e3,"600 -250  600 250    -600 250  -600 -250  -550 -300  550 -300"),spawn.mapRect(-1500,-525,75,275),powerUps.spawn(-2150,-375,"heal"),powerUps.spawn(-1925,-375,"heal"),powerUps.spawn(1325,-175,"heal"),powerUps.spawn(-1525,-400,"heal"),powerUps.spawn(125,950,"heal"),powerUps.spawn(-2150,-475,"ammo"),powerUps.spawn(-1925,-475,"ammo"),spawn.bodyRect(-1490,-725,50,200,.5),spawn.bodyVertex(-3100,450,"400 -50  400 50  350 100  -350 100  -400 50  -400 -50  -350 -100  350 -100"),n.push(body[body.length-1]),cons[cons.length]=Constraint.create({pointA:{x:-3600,y:150},pointB:{x:-350,y:-50},bodyB:body[body.length-1],stiffness:.001}),Composite.add(engine.world,cons[cons.length-1]),cons[cons.length]=Constraint.create({pointA:{x:-2575,y:150},pointB:{x:350,y:-50},bodyB:body[body.length-1],stiffness:.001}),Composite.add(engine.world,cons[cons.length-1]),s.push(level.spinner(-3462,-175,700,50,.001,0,0,.1)),Matter.Body.setAngularVelocity(s[s.length-1].bodyB,0),spawn.mapVertex(-862,-800,"-75 0   75 0   75 400   35 435   -35 435   -75 400"),spawn.mapVertex(-189,-800,"-75 0   75 0   75 400   35 435   -35 435   -75 400"),spawn.mapVertex(484,-800,"-75 0   75 0   75 400   35 435   -35 435   -75 400"),spawn.mapVertex(-862,1060,"-50 0   -500 200   500 200   50 0"),spawn.mapVertex(-189,1e3,"-100 0  -275 200  275 200  100 0"),spawn.mapVertex(-189,525,"-80 0  -35 -35   35 -35   80 0   80 300   -80 300"),spawn.mapVertex(484,1060,"-50 0   -500 200   500 200   50 0"),spawn.mapRect(475,650,225,25),spawn.mapRect(275,325,225,25),spawn.mapRect(475,0,225,25),spawn.mapRect(275,-325,225,25),spawn.mapVertex(1600,-1100,"600 -250  600 250  550 300  -550 300  -600 250  -600 -250"),spawn.mapVertex(1600,200,"600 -100  600 100  550 150  -550 150  -600 100  -600 -100  -550 -150  550 -150"),spawn.mapVertex(1600,900,"600 -250  600 250    -600 250  -600 -250  -550 -300  550 -300"),spawn.mapRect(1050,-850,75,700),spawn.mapVertex(1600,120,"-100 0   -500 200   500 200   100 0"),spawn.mapVertex(1600,-250,"275 -25  275 25  250 50  -250 50  -275 25  -275 -25  -250 -50  250 -50"),spawn.mapRect(2925,750,300,25),spawn.mapRect(2450,450,300,25),spawn.mapRect(2925,150,300,25),spawn.mapRect(2450,-150,300,25),spawn.mapRect(2925,-450,300,25),spawn.mapRect(2450,-750,300,25),spawn.mapRect(4300,290,100,25),spawn.mapRect(4050,300,475,700),spawn.mapRect(3550,-1025,1e3,900),spawn.mapRect(3550,150,625,900),spawn.mapRect(3650,140,475,25),spawn.mapVertex(4510,-135,"0 0  -500 0  0 500"),spawn.bodyRect(3625,-125,25,274),spawn.bodyRect(-2325,-400,75,100,.7),spawn.bodyRect(1075,-50,175,100,.7),spawn.bodyRect(1950,-200,75,250,.6),spawn.randomMob(-2100,525,-.2),spawn.randomMob(-1900,-525,-.2),spawn.randomMob(1850,-50,-.2),spawn.randomMob(1975,475,-.2),spawn.randomMob(2350,900,0),spawn.randomMob(150,950,0),spawn.randomMob(-525,925,0),spawn.randomMob(-2325,625,.1),spawn.randomMob(-2275,-375,.1),spawn.randomMob(1950,-50,.1),spawn.randomMob(2675,-200,.1),spawn.randomMob(3100,-500,.1),spawn.randomMob(-125,775,.2),spawn.randomMob(-825,800,.2),spawn.randomMob(475,825,.2),spawn.randomMob(-2650,900,.3),spawn.randomMob(2825,975,.3),spawn.randomMob(-2925,875,.3),spawn.randomLevelBoss(-600,500),spawn.secondaryBossChance(125,100),powerUps.spawnStartingPowerUps(1625,25),powerUps.addResearchToLevel(),powerUps.chooseRandomPowerUp(-1600,-350),powerUps.chooseRandomPowerUp(-175,800),powerUps.chooseRandomPowerUp(1675,0),powerUps.chooseRandomPowerUp(2825,975),powerUps.chooseRandomPowerUp(-3175,925)},lock(){level.announceText(0,75,!0),level.announceMobTypes(),level.setPosToSpawn(0,-65),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),level.exit.y=2010,level.exit.x=2625,spawn.mapRect(level.exit.x,level.exit.y+20,100,20),level.defaultZoom=2200,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="hsl(138, 5%, 82%)",color.map="#444",powerUps.spawnStartingPowerUps(1768,870);const e=level.portal({x:1070,y:-1485},-.9,{x:475,y:50},-Math.PI/2),t=level.door(2787,775,25,225,195,5),a=level.door(2537,775,25,225,195,5),o=level.door(4462,1010,25,225,195,5),s=level.door(2538,1825,25,225,195,5),n=level.button(4565,1235),l=level.button(4142,-355);spawn.mapRect(4e3,-350,600,75),n.isUp=!0,l.isUp=!0;const i=level.hazard(900,-300,1638,2450),c=level.hazard(2812,-300,1650,2450),p=[];level.custom=()=>{if(ctx.fillStyle="hsl(175, 35%, 76%)",ctx.fillRect(2537,1775,275,275),level.exit.drawAndCheck(),level.enter.draw(),o.isClosing=c.min.y<1275,t.isClosing=c.min.y<1e3,a.isClosing=i.min.y<1e3,s.isClosing=i.min.y<2050,o.openClose(),t.openClose(),a.openClose(),s.openClose(),l.isUp&&(l.query(),l.isUp||r()),n.isUp&&(n.query(),n.isUp||m()),l.draw(),n.draw(),i.min.y<2050){const e=Math.min(Math.max(.25,4-i.min.y/500),4);i.level(n.isUp,e)}if(c.min.y<2050){const e=Math.min(Math.max(.25,4-c.min.y/500),4);c.level(l.isUp,e)}e[2].query(),e[3].query()},level.customTopLayer=()=>{o.draw(),t.draw(),a.draw(),s.draw(),i.query(),c.query(),e[0].draw(),e[1].draw(),e[2].draw(),e[3].draw(),ctx.fillStyle=color.map,ctx.fillRect(375,150,200,2525),ctx.fillStyle="rgba(0,0,0,0.1)",ctx.fillRect(-250,-1550,1250,1575),ctx.fillRect(2537,-350,275,2425),ctx.fillStyle="rgba(0,0,0,0.05)",ctx.fillRect(-175,-300,375,300),ctx.fillRect(4460,950,350,325),ctx.fillStyle="#233",ctx.beginPath();for(let e=0;e<p.length;e++)ctx.arc(p[e].center.x,p[e].center.y,9,0,2*Math.PI);ctx.fill()},spawn.mapRect(-1400,0,1800,2675),spawn.mapRect(-1400,-1025,1225,1500),spawn.mapRect(-325,-15,525,225),spawn.mapRect(150,-350,50,175),spawn.mapRect(-1400,-3525,1600,3225),spawn.mapRect(550,0,450,2675),spawn.mapRect(550,-1550,450,125),spawn.mapRect(150,-1550,250,125),spawn.mapRect(750,-1425,1100,175),spawn.mapRect(750,-1400,250,825),spawn.mapRect(750,-350,250,575),spawn.mapRect(625,2100,4300,575),spawn.mapRect(-1400,-4425,7250,1e3),spawn.mapRect(4450,-3525,1400,4500),spawn.mapRect(4450,1235,1400,1440),spawn.mapRect(4775,750,1075,825),spawn.mapRect(4450,950,50,75),Math.random()<1&&(spawn.mapVertex(3350,350,"-100 0  100 0  100 700  0 750  -100 700"),p.push(level.rotor(3463,150,300,25,.001,0)),p.push(level.rotor(3463,500,300,25,.001,0)),spawn.mapVertex(3875,350,"-100 0  100 0  100 700  0 750  -100 700"),spawn.mapVertex(2900,1743,"-100 0  70 0  100 30   100 1000   -100 1000"),spawn.mapVertex(3025,1811,"-150 0  120 0  150 30   150 600   -150 600"),spawn.mapVertex(3200,2079,"-150 0  120 0  150 30   150 600   -150 600"),spawn.mapVertex(4425,1743,"-150 30 -120 0  150 0   150 1000   -150 1000"),spawn.mapVertex(4250,1811,"-150 30 -120 0  150 0   150 600   -150 600"),spawn.mapVertex(4075,2079,"-150 30 -120 0  150 0   150 600   -150 600"),spawn.mapRect(2750,525,100,25),spawn.mapRect(2750,125,100,25),spawn.mapRect(4425,800,75,25),spawn.mapRect(4425,325,75,25)),Math.random()<1&&(spawn.mapVertex(1285,1275,"-150 0  150 0  150 150  0 225  -150 150"),spawn.mapVertex(1033,1750,"0 200  200 200  300 50  300 -50  200 -200  0 -200"),spawn.mapVertex(1575,1750,"0 200  -200 200  -300 50  -300 -50  -200 -200  0 -200  100 -50  100 50"),spawn.mapVertex(1287,2185,"-100 30   -80 0   80 0  100 30   100 300   -100 300"),spawn.mapVertex(2050,2050,"-150 30   -120 0   120 0  150 30   150 300   -150 300"),spawn.mapRect(1600,950,375,25),spawn.mapRect(1025,-50,50,25),spawn.mapRect(1025,275,175,25),spawn.mapRect(1025,600,325,25),spawn.mapRect(2450,-50,50,25),spawn.mapRect(2325,275,175,25),spawn.mapRect(2175,600,325,25)),spawn.mapRect(2525,-350,300,1100),spawn.mapRect(2525,975,300,800),spawn.mapRect(2775,650,50,125),spawn.mapRect(2525,650,50,125),spawn.mapRect(2475,2040,350,200),spawn.mapRect(2800,1750,25,325),spawn.mapRect(2525,1750,50,75),spawn.bodyRect(150,-175,50,165,.2),spawn.bodyRect(1275,825,100,100,.2),spawn.bodyRect(2600,-425,150,50,.2),spawn.bodyRect(3900,-150,50,100,.2),spawn.bodyRect(3350,1950,75,100,.2),spawn.bodyRect(3850,1975,75,75,.2),spawn.bodyRect(1600,1950,75,100,.2),spawn.bodyRect(725,-1650,150,100,.2),spawn.bodyRect(800,-1700,75,50,.2);const r=()=>{spawn.randomMob(4200,100,1),spawn.randomMob(4200,600,1),spawn.randomMob(2975,625,.5),spawn.randomMob(3050,100,.5),spawn.randomMob(3400,-100,.4),spawn.randomMob(3825,-100,.4),spawn.randomMob(3625,1950,.4),spawn.randomMob(3275,1650,.4),spawn.randomMob(3075,1375,.3),spawn.randomMob(4e3,1650,.1),spawn.randomMob(4100,1425,0),spawn.randomGroup(3025,325,1),spawn.secondaryBossChance(3520,1169)},m=()=>{spawn.randomMob(2375,1900,1),spawn.randomMob(1825,1325,.5),spawn.randomMob(2250,1050,.5),spawn.randomMob(1675,825,.4),spawn.randomMob(1250,575,.4),spawn.randomMob(2400,575,.4),spawn.randomMob(1250,1575,.3),spawn.randomMob(1075,-100,.3),spawn.randomMob(2450,-100,.2),spawn.randomGroup(1350,-775,1),spawn.randomLevelBoss(1491,495)};spawn.randomMob(2650,-750,.4),spawn.randomMob(300,-1725,.4),spawn.randomMob(750,-1775,.4),spawn.randomMob(550,-2225,.4),spawn.randomMob(2700,-475,.4),spawn.randomMob(2375,-200,.2),spawn.randomMob(3350,-225,.3),powerUps.addResearchToLevel()},sewers(){level.announceText(0,25,!0),level.announceMobTypes();const e=level.button(6600,2675),t=level.hazard(simulation.isHorizontalFlipped?-9100:4550,2750,4550,150);let a,o,s,n,l;const i=level.drip(6100,1900,2900,100),c=level.drip(7300,1900,2900,150),p=level.drip(8750,1900,2900,70);level.custom=()=>{i.draw(),c.draw(),p.draw(),e.query(),e.draw(),ctx.fillStyle="hsl(175, 15%, 76%)",ctx.fillRect(9100,2200,800,400),ctx.fillStyle="rgba(0,0,0,0.03)",ctx.fillRect(6250,2025,700,650),ctx.fillRect(8e3,2025,600,575),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{l.rotate(),ctx.fillStyle="#233",ctx.beginPath(),ctx.arc(a.center.x,a.center.y,9,0,2*Math.PI),ctx.moveTo(o.center.x,o.center.y),ctx.arc(o.center.x,o.center.y,9,0,2*Math.PI),ctx.moveTo(s.center.x,s.center.y),ctx.arc(s.center.x,s.center.y,9,0,2*Math.PI),ctx.moveTo(n.center.x,n.center.y),ctx.arc(n.center.x,n.center.y,9,0,2*Math.PI),ctx.moveTo(balance5.center.x,balance5.center.y),ctx.arc(balance5.center.x,balance5.center.y,9,0,2*Math.PI),ctx.moveTo(l.center.x,l.center.y),ctx.arc(l.center.x,l.center.y,9,0,2*Math.PI),ctx.fill(),t.query(),t.level(e.isUp)},level.setPosToSpawn(0,-50),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),level.exit.x=9700,level.exit.y=2560,level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="hsl(138, 3%, 74%)",color.map="#3d4240",powerUps.spawnStartingPowerUps(3475,1775),spawn.debris(4575,2550,1600,9),spawn.debris(7e3,2550,2e3,7),spawn.mapRect(-500,-600,200,800),spawn.mapRect(-400,-600,3550,200),spawn.mapRect(-400,0,3e3,200),spawn.bodyRect(1450,-300,150,50);const r=[600,1250,2e3];r.sort(()=>Math.random()-.5),spawn.mapRect(r[0],-200,300,100),spawn.mapRect(r[1],-250,300,300),spawn.mapRect(r[2],-150,300,200),spawn.bodyRect(3100,410,75,100),spawn.bodyRect(2450,-25,250,25),spawn.mapRect(3050,-600,200,800),spawn.mapRect(3100,0,1200,200),spawn.mapRect(4200,0,200,1900),spawn.mapVertex(3500,1e3,"-500 -500  -400 -600   400 -600 500 -500   500 500 400 600  -400 600 -500 500"),spawn.mapVertex(3600,1940,"-400 -40  -350 -90   350 -90 400 -40   400 40 350 90  -350 90 -400 40"),spawn.mapRect(3925,2288,310,50),spawn.mapRect(3980,2276,200,50),spawn.mapRect(2625,2288,650,50),spawn.mapRect(2700,2276,500,50),spawn.mapRect(2400,0,200,1925),spawn.mapRect(600,2300,3750,200),spawn.bodyRect(3800,275,125,125),spawn.mapRect(4200,1700,5e3,200),spawn.mapRect(4150,2300,200,400),spawn.mapRect(600,1700,2e3,200),spawn.mapRect(500,1700,200,800),spawn.mapRect(675,1875,325,150,.5),spawn.mapRect(4450,2900,4900,200),spawn.mapRect(4150,2600,400,500),spawn.mapRect(6250,2675,700,325),spawn.mapRect(8e3,2600,600,400),spawn.bodyRect(5875,2725,200,200),spawn.bodyRect(6800,2490,50,50),spawn.bodyRect(6800,2540,50,50),spawn.bodyRect(6800,2590,50,50),spawn.bodyRect(8225,2225,100,100),spawn.mapRect(6250,1875,700,150),spawn.mapRect(8e3,1875,600,150),spawn.mapRect(9100,1700,900,500),spawn.mapRect(9100,2600,900,500),spawn.mapRect(9900,1700,200,1400),spawn.mapRect(9300,2590,650,25),spawn.mapRect(9700,2580,100,50),spawn.randomGroup(1300,2100,.1),spawn.randomMob(8300,2100,.1),spawn.randomSmallMob(2575,-75,.1),spawn.randomMob(8125,2450,.1),spawn.randomSmallMob(3200,250,.1),spawn.randomMob(2425,2150,.1),spawn.randomSmallMob(3500,250,.2),spawn.randomMob(3800,2175,.2),spawn.randomSmallMob(2500,-275,.2),spawn.randomMob(4450,2500,.2),spawn.randomMob(6350,2525,.2),spawn.randomGroup(9200,2400,.3),spawn.randomSmallMob(1900,-250,.3),spawn.randomMob(1500,2100,.4),spawn.randomSmallMob(1700,-150,.4),spawn.randomMob(8800,2725,.5),spawn.randomMob(7300,2200,.5),spawn.randomMob(2075,2025,.5),spawn.randomMob(3475,2175,.5),spawn.randomMob(8900,2825,.5),spawn.randomMob(9600,2425,.9),spawn.randomMob(3600,1725,.9),spawn.randomMob(4100,1225,.9),spawn.randomMob(2825,400,.9),spawn.randomLevelBoss(6e3,2300),spawn.secondaryBossChance(7725,2275),powerUps.addResearchToLevel(),simulation.isHorizontalFlipped?(level.flipHorizontal(),l=level.rotor(-5600,2390,850,50,.001,0,.01,0,.001),a=level.rotor(-325,-395,25,390,.001),o=level.rotor(-2995,500,390,25,.001),s=level.rotor(-3192,1900,584,25,.001),n=level.rotor(-9325,2205,25,380,.001),balance5=level.rotor(-2995,1100,390,25,.001),e.min.x=-e.min.x-126,e.max.x=126-e.max.x,i.x*=-1,c.x*=-1,p.x*=-1,level.custom=()=>{i.draw(),c.draw(),p.draw(),e.query(),e.draw(),l.rotate(),ctx.fillStyle="hsl(175, 15%, 76%)",ctx.fillRect(-9900,2200,800,400),ctx.fillStyle="rgba(0,0,0,0.03)",ctx.fillRect(-6950,2025,700,650),ctx.fillRect(-8600,2025,600,575),level.exit.drawAndCheck(),level.enter.draw()}):(l=level.rotor(4700,2390,850,50,.001,0,.01,0,-.001),a=level.rotor(300,-395,25,390,.001),o=level.rotor(2605,500,390,25,.001),s=level.rotor(2608,1900,584,25,.001),n=level.rotor(9300,2205,25,380,.001),balance5=level.rotor(2605,1100,390,25,.001))},flocculation(){level.announceText(0,25,!0),level.announceMobTypes();const e=level.button(1125,795),t=level.button(6538,2670),a=level.button(1225,-100);e.isUp=!0,t.isUp=!0,a.isUp=!0;const o=level.hazard(simulation.isHorizontalFlipped?-7200:675,50,7500,3e3);let s,n,l,i,c;const p=level.drip(6100,1900,2900,100),r=level.drip(7300,1900,2900,150),m=level.drip(8750,1900,2900,70),h=level.elevator(700,1865,200,490,1400,.011,{up:.01,down:.7}),d=level.elevator(3995,2335,210,150,1700,.011,{up:.01,down:.7});level.custom=()=>{p.draw(),r.draw(),m.draw(),e.isUp&&(e.query(),e.isUp||(spawn.randomMob(918,2695,0),spawn.randomMob(1818,2719,.1),spawn.randomMob(2530,2460,.1),spawn.randomMob(3109,2665,.2),spawn.randomMob(3909,2191,.2),spawn.randomMob(4705,2711,.3),spawn.randomMob(5800,2796,.3),spawn.randomMob(7287,2757,.4),spawn.randomMob(5759,2691,.4),spawn.randomMob(5675,2225,.5),spawn.randomMob(7450,2775,.5),spawn.randomGroup(6600,2400,.1),spawn.randomLevelBoss(6076,2341))),e.draw(),t.isUp&&t.query(),t.draw(),a.isUp&&a.query(),a.draw(),ctx.fillStyle="hsl(175, 15%, 76%)",ctx.fillRect(7625,2625,400,300),ctx.fillStyle="rgba(0,0,0,0.03)",ctx.fillRect(6250,1875,700,875),ctx.fillRect(900,1200,600,1725),ctx.fillRect(3e3,1200,1e3,1750),ctx.fillRect(2200,625,400,2050),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{h.moveOnTouch(),d.moveOnTouch(),i.rotate(),c.rotate(),ctx.fillStyle="#233",ctx.beginPath(),ctx.arc(s.center.x,s.center.y,9,0,2*Math.PI),ctx.moveTo(n.center.x,n.center.y),ctx.arc(n.center.x,n.center.y,9,0,2*Math.PI),ctx.moveTo(l.center.x,l.center.y),ctx.arc(l.center.x,l.center.y,9,0,2*Math.PI),ctx.moveTo(balance5.center.x,balance5.center.y),ctx.arc(balance5.center.x,balance5.center.y,9,0,2*Math.PI),ctx.moveTo(i.center.x,i.center.y),ctx.arc(i.center.x,i.center.y,9,0,2*Math.PI),ctx.moveTo(c.center.x,c.center.y),ctx.arc(c.center.x,c.center.y,9,0,2*Math.PI),ctx.fill(),o.query();const p=Math.max(1,4-o.min.y/800);o.level((a.isUp||o.height<1150)&&(e.isUp||o.height<350)&&t.isUp,p),w.isClosing=o.min.y<2900,w.openClose(),w.draw()},level.setPosToSpawn(0,-50),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),level.exit.x=7800,level.exit.y=2865;const w=level.door(7637,2680,25,225,195,5);level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="hsl(138, 3%, 74%)",color.map="#3d4240",powerUps.spawnStartingPowerUps(3475,1775),spawn.debris(4575,2550,1600,6),spawn.debris(750,2550,2250,6),spawn.mapRect(-500,-600,200,800),spawn.mapRect(-400,-600,3550,200),spawn.mapRect(-400,0,1400,600),spawn.mapRect(575,475,250,250),Matter.Body.setAngle(map[map.length-1],map[map.length-1].angle-Math.PI/4),spawn.mapRect(4075,75,250,250),Matter.Body.setAngle(map[map.length-1],map[map.length-1].angle-Math.PI/4),spawn.mapRect(4259,1559,282.5,282.5),Matter.Body.setAngle(map[map.length-1],map[map.length-1].angle-Math.PI/4),spawn.mapRect(3140,-600,200,800),spawn.mapRect(3150,0,1200,200),spawn.mapVertex(2400,500,"-200 -100  -100 -200   100 -200 200 -100   200 200   -200 200"),spawn.mapVertex(2400,1200,"-200  -200  200 -200    200 100 100 200  -100 200 -200 100"),spawn.mapVertex(1200,2150,"-300 -300   300 -300   300 200 200 300  -200 300 -300 200"),spawn.mapVertex(1200,1100,"-300 -200  -200 -300   200 -300 300 -200   300 300  -300 300"),spawn.mapVertex(3500,950,"-500 -450  -400 -550   400 -550 500 -450   500 450 400 550  -400 550 -500 450"),spawn.mapVertex(3500,1990,"-300 -40  -230 -110   230 -110 300 -40   300 40 230 110  -230 110 -300 40"),spawn.mapRect(2200,1850,400,200),spawn.bodyRect(3825,2240,150,75,.5),spawn.mapVertex(3500,2452,"-500 -135    500 -135    500 35 400 135  -400 135 -500 35"),spawn.mapVertex(1200,2850,"-500 -100 -550 -50     500 -100 550 -50   550 300   -550 300"),spawn.mapVertex(1317,275,"-500 0  -300 -200     300 -200 550 50     550  500    -500 500"),spawn.mapVertex(1300,-357,"-300 0  -400 -100     400 -100 300 0"),spawn.bodyRect(1550,-308,50,208,.5),spawn.bodyRect(2e3,965,525,25,.5),spawn.mapVertex(2400,2850,"-350 -50  -300 -100     300 -100 350 -50   350 300   -350 300"),spawn.mapVertex(6600,1925,"-350 0  -450 -100     450 -100 350 0"),spawn.mapVertex(6600,2875,"-400 -50  -350 -100     350 -100 400 -50   400 300   -400 300"),spawn.bodyRect(2375,300,100,100,.6),spawn.bodyRect(1025,1775,100,75,.6),spawn.bodyRect(1250,1825,50,25,.6),spawn.bodyRect(3700,275,125,125,.6),spawn.bodyRect(5875,2725,200,200,.6),spawn.bodyRect(6900,2590,50,50,.6),spawn.mapRect(4200,2325,250,625),spawn.mapRect(-500,50,1200,3050),spawn.mapRect(-500,2900,9600,775),spawn.mapRect(4400,0,4700,1900),spawn.mapRect(4200,0,200,1700),spawn.mapRect(8e3,1775,1100,1375),spawn.mapRect(7625,1825,450,825),spawn.mapRect(7625,2625,50,75),spawn.mapRect(7625,2890,400,25),spawn.mapRect(7800,2880,100,25),spawn.randomMob(2450,250,0),spawn.randomMob(3250,325,0),spawn.randomMob(3625,350,.1),spawn.randomMob(1750,-25,.1),spawn.randomMob(1300,1750,.2),spawn.randomMob(2350,1725,.2),spawn.randomMob(3350,1775,.2),spawn.randomMob(1025,750,.3),spawn.randomMob(2400,1775,.3),spawn.randomMob(1250,1725,.3),spawn.randomMob(775,1775,.4),spawn.secondaryBossChance(1822,1336),powerUps.addResearchToLevel(),simulation.isHorizontalFlipped?(level.flipHorizontal(),i=level.rotor(-5600,2390,850,50,.001,0,.01,0,.001),c=level.rotor(-2175,1900,650,50,.001,0,.01,0,7e-4),s=level.rotor(-825,-395,25,390,.001),n=level.rotor(-2995,500,390,25,.001),l=level.rotor(-3008,1950,400,25,.001),balance5=level.rotor(-2995,1020,390,25,.001),t.min.x=-t.min.x-126,t.max.x=126-t.max.x,e.min.x=-e.min.x-126,e.max.x=126-e.max.x,a.min.x=-a.min.x-126,a.max.x=126-a.max.x,p.x*=-1,r.x*=-1,m.x*=-1,h.holdX*=-1,d.holdX*=-1,o.min.x-=840,o.max.x-=840,level.custom=()=>{p.draw(),r.draw(),m.draw(),e.isUp&&(e.query(),e.isUp||(spawn.randomMob(-7475,2800,0),spawn.randomMob(-6475,2500,.1),spawn.randomMob(-4575,2775,.2),spawn.randomMob(-7575,2850,.2),spawn.randomMob(-6425,2575,.2),spawn.randomMob(-5750,2775,.3),spawn.randomMob(-4675,2800,.3),spawn.randomMob(-3425,2800,.4),spawn.randomMob(-2475,2475,.4),spawn.randomMob(-3350,2250,.5),spawn.randomMob(-1275,2725,.5),spawn.randomGroup(-6225,2400,.1),spawn.randomLevelBoss(-6250,2350))),e.draw(),t.isUp&&t.query(),t.draw(),a.isUp&&a.query(),a.draw(),i.rotate(),c.rotate(),ctx.fillStyle="hsl(175, 15%, 76%)",ctx.fillRect(-8025,2625,400,300),ctx.fillStyle="rgba(0,0,0,0.03)",ctx.fillRect(-6950,1875,700,875),ctx.fillRect(-4e3,1400,1e3,1550),ctx.fillRect(-2600,675,400,2025),ctx.fillRect(-1500,1375,600,1500),level.exit.drawAndCheck(),level.enter.draw()}):(i=level.rotor(4700,2390,850,50,.001,0,.01,0,-.001),c=level.rotor(1525,1900,650,50,.001,0,.01,0,-7e-4),s=level.rotor(800,-395,25,390,.001),n=level.rotor(2605,500,390,25,.001),l=level.rotor(2608,1950,400,25,.001),balance5=level.rotor(2605,1020,390,25,.001))},satellite(){simulation.isHorizontalFlipped?level.announceText(100,275,!0):level.announceText(-100,275,!0),level.announceMobTypes(),level.fallMode="start";const e=level.boost(5825,235,1400),t=level.elevator(4210,-1265,380,50,-3450);level.custom=()=>{e.query(),ctx.fillStyle="#d4f4f4",ctx.fillRect(-250,-750,420,450),ctx.fillStyle="#d0d4d6",ctx.fillRect(-300,-1900,500,1100),ctx.fillRect(900,-2450,450,2050),ctx.fillRect(2e3,-2800,450,2500),ctx.fillRect(3125,-3100,450,3300),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{ctx.fillStyle="rgba(0,20,40,0.25)",ctx.fillRect(-250,-400,1800,775),ctx.fillRect(1800,-275,850,775),ctx.fillRect(5200,125,450,200),ctx.fillStyle="rgba(0,20,40,0.1)",ctx.fillRect(4e3,-1200,1050,1500),ctx.fillRect(4100,-3450,600,2250),t.move()},level.setPosToSpawn(-100,210),spawn.mapRect(-150,240,100,30),level.exit.x=-100,level.exit.y=-425,spawn.mapRect(level.exit.x,level.exit.y+15,100,50),level.defaultZoom=1700,simulation.zoomTransition(level.defaultZoom),powerUps.spawnStartingPowerUps(4900,-500),spawn.debris(1e3,20,1800,6),document.body.style.backgroundColor="#dbdcde",spawn.mapRect(-575,-850,325,1400),spawn.mapRect(150,-510,50,365),spawn.bodyRect(170,-140,20,163,1,spawn.propsFriction),spawn.mapVertex(175,200,"625 0   300 0   425 -300   500 -300"),spawn.mapRect(-350,250,6350,300),spawn.bodyRect(2100,50,80,80),spawn.bodyRect(2e3,50,60,60),spawn.mapVertex(2225,250,"575 0  -575 0  -450 -100  450 -100"),spawn.mapRect(-350,-850,550,100),spawn.mapRect(150,-800,50,110),spawn.bodyRect(170,-690,14,180,1,spawn.propsFriction),spawn.mapRect(-300,-400,500,150),spawn.mapRect(-500,-1900,400,50),spawn.mapRect(0,-1900,400,50),spawn.mapRect(-150,-1350,200,25),spawn.bodyRect(140,-2100,150,200),spawn.mapVertex(1125,-450,"325 0  250 80  -250 80  -325 0  -250 -80  250 -80"),spawn.mapRect(150,-500,1410,100),spawn.mapRect(625,-2450,1e3,50),spawn.bodyRect(1300,-3600,150,150),spawn.mapVertex(2225,-250,"325 0  250 80  -250 80  -325 0  -250 -80  250 -80"),spawn.mapRect(1725,-2800,1e3,50),spawn.mapRect(1790,-300,870,100),spawn.bodyRect(2400,-2950,150,150),spawn.mapVertex(3350,175,"425 0  -425 0  -275 -300  275 -300"),spawn.bodyRect(3350,-150,200,120),spawn.mapRect(2850,-3150,1e3,50),spawn.bodyRect(3675,-3470,525,20),spawn.bodyRect(3600,-3450,200,300),spawn.mapRect(5200,-725,100,870),spawn.mapRect(5300,-1075,350,1220),spawn.mapRect(3900,-300,450,50),spawn.mapRect(4675,-375,450,50),spawn.mapRect(4e3,-1300,200,100),spawn.mapRect(4600,-1300,450,100),spawn.mapRect(4100,-2250,100,650),spawn.mapRect(4100,-3450,100,850),spawn.mapRect(4600,-3450,100,1850),spawn.mapVertex(4525,250,"-650 0  -625 -20  625 -20  650 0"),spawn.mapVertex(4525,237,"-550 0  -525 -20  525 -20  550 0"),spawn.randomSmallMob(4400,-3500),spawn.randomSmallMob(4800,-800),spawn.randomMob(800,-2600),spawn.randomMob(700,-600,.3),spawn.randomMob(3100,-3600,.3),spawn.randomMob(3300,-1e3,.3),spawn.randomMob(4200,-250,.3),spawn.randomMob(4900,-1500,.3),spawn.randomMob(3800,175,.4),spawn.randomMob(5750,125,.4),spawn.randomMob(5900,-1500,.4),spawn.randomMob(4700,-800,.4),spawn.randomMob(1400,200,.3),spawn.randomMob(2850,175,.4),spawn.randomMob(2e3,-2800,.4),spawn.randomMob(2400,-400,.4),spawn.randomMob(4475,-3550,.3),spawn.randomGroup(5e3,-2150,1),spawn.randomGroup(3700,-4100,.3),spawn.randomGroup(2700,-1600,.1),spawn.randomGroup(1600,-100,0),spawn.randomGroup(5e3,-3900,-.3),simulation.difficultyMode>1||level.levelsCleared>1?Math.random()<.25?spawn.randomLevelBoss(2800,-1400):Math.random()<.25?spawn.laserBoss(2900+300*Math.random(),150*Math.random()-2950):Math.random()<.33?spawn.laserBoss(1800+250*Math.random(),150*Math.random()-2600):Math.random()<.5?spawn.laserBoss(3500+250*Math.random(),1e3*Math.random()-2600):spawn.laserBoss(600+200*Math.random(),250*Math.random()-2150):powerUps.spawnBossPowerUp(2800,-1400),spawn.secondaryBossChance(3950,-850),powerUps.addResearchToLevel(),simulation.isHorizontalFlipped&&(level.flipHorizontal(),e.boostBounds.min.x=-e.boostBounds.min.x-100,e.boostBounds.max.x=100-e.boostBounds.max.x,level.setPosToSpawn(100,210),t.holdX=-t.holdX,level.custom=()=>{e.query(),ctx.fillStyle="#d4f4f4",ctx.fillRect(-170,-750,420,450),ctx.fillStyle="#d0d4d6",ctx.fillRect(-200,-1900,500,1100),ctx.fillRect(-1350,-2450,450,2050),ctx.fillRect(-2450,-2800,450,2500),ctx.fillRect(-3575,-3100,450,3300),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{t.move(),ctx.fillStyle="rgba(0,20,40,0.25)",ctx.fillRect(-1550,-400,1800,775),ctx.fillRect(-2650,-275,850,775),ctx.fillRect(-5650,125,450,200),ctx.fillStyle="rgba(0,20,40,0.1)",ctx.fillRect(-5050,-1200,1050,1500),ctx.fillRect(-4700,-3450,600,2250)})},rooftops(){level.announceMobTypes();const e=level.elevator(1450,-990,235,45,-2e3),t=level.boost(4950,0,1100);level.custom=()=>{t.query(),e.move(),e.drawTrack(),ctx.fillStyle="#d4f4f4",a?ctx.fillRect(-650,-2300,440,300):ctx.fillRect(3460,-700,1090,800),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{ctx.fillStyle="rgba(0,0,0,0.1)",ctx.fillRect(710,-2225,580,225),ctx.fillRect(3510,-1550,330,300),ctx.fillRect(1735,-900,1515,1900),ctx.fillRect(1735,-1550,1405,550),ctx.fillRect(1860,-1950,630,350),ctx.fillRect(-700,-1950,2100,2950),ctx.fillRect(3400,100,2150,900),ctx.fillRect(4550,-725,900,725),ctx.fillRect(3460,-1250,1080,550),a?ctx.fillRect(3460,-700,1090,800):ctx.fillRect(-650,-2300,440,300)},level.defaultZoom=1700,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#dcdcde";let a=!1;Math.random()<.75?(simulation.isHorizontalFlipped?level.announceText(450,-1975,!0):level.announceText(-450,-1975,!0),level.setPosToSpawn(-450,-2060),level.exit.x=4225,level.exit.y=-30,spawn.mapRect(4225,-10,100,50),spawn.bodyRect(4850,-750,300,25,.6),spawn.randomSmallMob(4100,-100),spawn.randomSmallMob(4600,-100),spawn.randomMob(3765,-450,.3)):(simulation.isHorizontalFlipped?level.announceText(-4225,30,!0):level.announceText(4225,30,!0),a=!0,level.setPosToSpawn(4225,-50),level.exit.x=-550,level.exit.y=-2030,spawn.mapRect(-550,-2015,100,50)),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),spawn.debris(1650,-1800,3800,16),powerUps.spawnStartingPowerUps(2450,-1675),spawn.mapRect(3400,0,2150,100),spawn.mapRect(-850,-2e3,2275,100),spawn.bodyRect(1300,-2125,50,125,.8),spawn.bodyRect(1307,-2225,50,100,.8),spawn.mapRect(-700,-2350,50,400),spawn.mapRect(-700,-2010,500,50),spawn.mapRect(-700,-2350,500,50),spawn.mapRect(-250,-2350,50,200),spawn.bodyRect(-240,-2150,30,36),spawn.bodyRect(-240,-2115,30,36),spawn.bodyRect(-240,-2080,30,35),spawn.bodyRect(-240,-2045,30,35),spawn.mapRect(1850,-2e3,650,50),spawn.bodyRect(200,-2150,80,220,.8),spawn.mapRect(700,-2275,600,50),spawn.mapRect(1e3,-1350,410,50),spawn.bodyRect(1050,-2350,30,30,.8),spawn.mapRect(-725,-1e3,2150,100),spawn.bodyRect(350,-1100,200,100,.8),spawn.bodyRect(370,-1200,100,100,.8),spawn.bodyRect(360,-1300,100,100,.8),spawn.bodyRect(950,-1050,300,50,.8),spawn.bodyRect(-575,-1150,125,150,.8),spawn.mapRect(1710,-1e3,1565,100),spawn.mapRect(3400,-1e3,75,25),spawn.bodyRect(2600,-1950,100,250,.8),spawn.bodyRect(2700,-1125,125,125,.8),spawn.bodyRect(2710,-1250,125,125,.8),spawn.bodyRect(2705,-1350,75,100,.8),spawn.mapRect(3500,-1600,350,50),spawn.mapRect(1725,-1600,1435,50),spawn.bodyRect(3100,-1015,375,15),spawn.bodyRect(3500,-850,75,125,.8),spawn.mapRect(3450,-1e3,50,580),spawn.bodyRect(3460,-420,30,144),spawn.mapRect(5450,-775,100,875),spawn.bodyRect(3925,-1400,100,150,.8),spawn.mapRect(3450,-1250,1090,50),spawn.mapRect(4500,-1250,50,415),spawn.mapRect(3450,-725,1500,50),spawn.mapRect(5100,-725,400,50),spawn.mapRect(4500,-735,50,635),spawn.bodyRect(4500,-100,50,100),spawn.mapRect(4500,-885,100,50),spawn.spawnStairs(3800,0,3,150,206),spawn.mapRect(3400,-275,450,275),spawn.randomSmallMob(2200,-1775),spawn.randomSmallMob(4e3,-825),spawn.randomSmallMob(-350,-3400),spawn.randomMob(4250,-1350,.8),spawn.randomMob(2550,-1350,.8),spawn.randomMob(1875,-1075,.3),spawn.randomMob(1120,-1200,.3),spawn.randomMob(3e3,-1150,.2),spawn.randomMob(3200,-1150,.3),spawn.randomMob(3300,-1750,.3),spawn.randomMob(3650,-1350,.3),spawn.randomMob(3600,-1800,.1),spawn.randomMob(5200,-100,.3),spawn.randomMob(5275,-900,.2),spawn.randomMob(0,-1075,.3),spawn.randomGroup(600,-1575,0),spawn.randomGroup(2225,-1325,.4),spawn.randomGroup(4900,-1200,0),spawn.randomLevelBoss(3200,-1900),spawn.secondaryBossChance(2175,-2425),powerUps.addResearchToLevel(),simulation.isHorizontalFlipped&&(level.flipHorizontal(),t.boostBounds.min.x=-t.boostBounds.min.x-100,t.boostBounds.max.x=100-t.boostBounds.max.x,e.holdX=-e.holdX,a?level.setPosToSpawn(-4225,-50):level.setPosToSpawn(450,-2060),level.custom=()=>{t.query(),e.move(),e.drawTrack(),ctx.fillStyle="#d4f4f4",a?ctx.fillRect(210,-2300,440,300):ctx.fillRect(-4550,-700,1090,800),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{ctx.fillStyle="rgba(0,0,0,0.1)",ctx.fillRect(-1290,-2225,580,225),ctx.fillRect(-3840,-1550,330,300),ctx.fillRect(-3250,-900,1515,1900),ctx.fillRect(-3140,-1550,1405,550),ctx.fillRect(-2490,-1950,630,350),ctx.fillRect(-1400,-1950,2100,2950),ctx.fillRect(-5550,100,2150,900),ctx.fillRect(-5450,-725,900,725),ctx.fillRect(-4540,-1250,1080,550),a?ctx.fillRect(-4550,-700,1090,800):ctx.fillRect(210,-2300,440,300)}),level.fallMode="position",level.enter.x>level.exit.x?level.fallModeBounds={left:level.exit.x,right:level.enter.x}:level.fallModeBounds={left:level.enter.x,right:level.exit.x}},aerie(){level.announceMobTypes(),level.fallMode="start";const e=level.boost(-425,100,1400),t=level.boost(5350,275,2850);level.custom=()=>{e.query(),t.query(),a?(ctx.fillStyle="#d4f4f4",ctx.fillRect(-275,-1275,425,300)):(ctx.fillStyle="#d4f4f4",ctx.fillRect(4025,-3675,575,450)),ctx.fillStyle="#c7c7ca",ctx.fillRect(4200,-2200,100,2600),ctx.fillRect(-100,-1e3,1450,1400),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{a?(ctx.fillStyle="rgba(0,0,0,0.1)",ctx.fillRect(4025,-3675,575,450)):(ctx.fillStyle="rgba(0,0,0,0.1)",ctx.fillRect(-275,-1275,425,300)),ctx.fillStyle="rgba(0,0,0,0.1)",ctx.fillRect(3700,-3150,1100,950),ctx.fillRect(2e3,-1110,450,1550),ctx.fillStyle="rgba(0,0,0,0.04)",ctx.beginPath(),ctx.moveTo(-100,-900),ctx.lineTo(300,-900),ctx.lineTo(150,100),ctx.lineTo(-100,100),ctx.moveTo(600,-900),ctx.lineTo(1350,-900),ctx.lineTo(1350,100),ctx.lineTo(750,100),ctx.fill()},level.defaultZoom=2100,simulation.zoomTransition(level.defaultZoom);const a=Math.random()<.25;a?(level.setPosToSpawn(4300,-3300),level.exit.x=-100,level.exit.y=-1025,simulation.isHorizontalFlipped?level.announceText(-4300,-3223,!0):level.announceText(4300,-3225,!0)):(level.setPosToSpawn(-50,-1050),level.exit.x=4250,level.exit.y=-3275,simulation.isHorizontalFlipped?level.announceText(-975,-975,!0):level.announceText(975,-975,!0)),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),spawn.mapRect(level.exit.x,level.exit.y+15,100,20),powerUps.spawnStartingPowerUps(1075,-550),document.body.style.backgroundColor="#dcdcde",spawn.mapRect(-300,-1e3,600,100),spawn.mapRect(-300,-1300,450,50),spawn.mapRect(-300,-1300,50,350),a||spawn.bodyRect(100,-1250,200,240),spawn.mapRect(-100,-975,100,975),spawn.mapRect(-500,100,1950,400),spawn.mapRect(600,-1e3,750,100),spawn.mapRect(900,-500,550,100),spawn.mapRect(1250,-975,100,375),spawn.bodyRect(1250,-600,100,100,.7),spawn.mapRect(1250,-450,100,450),spawn.bodyRect(1250,-1225,100,200,.7),spawn.bodyRect(1200,-1025,350,35),a?spawn.bodyRect(2e3,-800,700,35):spawn.bodyRect(1750,-800,700,35),spawn.mapVertex(2225,-2100,"0 0 450 0 300 -2500 150 -2500"),spawn.mapRect(2e3,-700,450,300),spawn.bodyRect(2360,-450,100,300,.6),spawn.mapRect(2e3,-75,450,275),spawn.bodyRect(2450,150,150,150,.4),spawn.mapRect(1550,300,4600,200),spawn.mapRect(6050,-1060,450,1560),spawn.mapVertex(6275,-2100,"0 0 450 0 300 -2500 150 -2500"),spawn.mapRect(3700,-3200,100,800),spawn.mapRect(4700,-2910,100,510),spawn.mapRect(3700,-2600,300,50),spawn.mapRect(4100,-2900,900,50),spawn.mapRect(3450,-2300,750,100),spawn.mapRect(4300,-2300,750,100),spawn.mapRect(4150,-1600,200,25),spawn.mapRect(4150,-700,200,25),spawn.mapRect(4e3,-3700,600,50),spawn.mapRect(4e3,-3700,50,500),spawn.mapRect(4550,-3700,50,300),spawn.mapRect(3700,-3250,1100,100),spawn.randomGroup(350,-500,1),spawn.randomSmallMob(-225,25),spawn.randomSmallMob(2100,-900),spawn.randomSmallMob(4e3,-250),spawn.randomSmallMob(4450,-3e3),spawn.randomSmallMob(5600,100),spawn.randomMob(4275,-2600,.8),spawn.randomMob(1050,-700,.8),spawn.randomMob(6050,-850,.7),spawn.randomMob(2150,-300,.6),spawn.randomMob(3900,-2700,.8),spawn.randomMob(3600,-500,.8),spawn.randomMob(3400,-200,.8),spawn.randomMob(425,0,.7),spawn.randomMob(4100,-50,.7),spawn.randomMob(4100,-50,.5),spawn.randomMob(1700,-50,.3),spawn.randomMob(2350,-900,.3),spawn.randomMob(4700,-150,.2),spawn.randomGroup(4e3,-350,.6),spawn.randomGroup(2750,-550,.1),spawn.randomMob(2175,-925,.5),spawn.randomMob(2750,100,.5),spawn.randomMob(4250,-1725,.5),spawn.randomMob(3575,-2425,.5),spawn.randomMob(3975,-3900,.5),spawn.randomMob(1725,125,.5),simulation.difficultyMode>1||level.levelsCleared>1?Math.random()<.5?(spawn.randomLevelBoss(4250,-250),spawn.debris(-250,50,1650,2),spawn.debris(2475,0,750,2),spawn.debris(3450,0,2e3,16),spawn.debris(3500,-2350,1500,2)):(powerUps.chooseRandomPowerUp(4e3,200),powerUps.chooseRandomPowerUp(4e3,200),spawn.bodyRect(3e3,50,150,250,.9),spawn.bodyRect(4500,-500,300,250,.7),spawn.bodyRect(3500,-100,100,150,.7),spawn.bodyRect(4200,-500,110,30,.7),spawn.bodyRect(3800,-500,150,130,.7),spawn.bodyRect(4e3,50,200,150,.9),spawn.bodyRect(4500,50,300,200,.9),spawn.bodyRect(4200,-350,200,50,.9),spawn.bodyRect(4700,-350,50,200,.9),spawn.bodyRect(4900,-100,300,300,.7),spawn.suckerBoss(4500,-400)):powerUps.spawnBossPowerUp(2800,-1400),spawn.secondaryBossChance(5350,-325),powerUps.addResearchToLevel(),simulation.isHorizontalFlipped&&(level.flipHorizontal(),e.boostBounds.min.x=-e.boostBounds.min.x-100,e.boostBounds.max.x=100-e.boostBounds.max.x,t.boostBounds.min.x=-t.boostBounds.min.x-100,t.boostBounds.max.x=100-t.boostBounds.max.x,a?level.setPosToSpawn(-4300,-3300):level.setPosToSpawn(50,-1050),level.custom=()=>{e.query(),t.query(),a?(ctx.fillStyle="#d4f4f4",ctx.fillRect(-150,-1275,425,300)):(ctx.fillStyle="#d4f4f4",ctx.fillRect(-4600,-3650,550,400)),ctx.fillStyle="#c7c7ca",ctx.fillRect(-4300,-2200,100,2600),ctx.fillRect(-1350,-1e3,1450,1400),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{a?(ctx.fillStyle="rgba(0,0,0,0.1)",ctx.fillRect(-4600,-3650,550,400)):(ctx.fillStyle="rgba(0,0,0,0.1)",ctx.fillRect(-150,-1275,425,300)),ctx.fillStyle="rgba(0,0,0,0.1)",ctx.fillRect(-4800,-3150,1100,950),ctx.fillRect(-2450,-1110,450,1550),ctx.fillStyle="rgba(0,0,0,0.04)",ctx.beginPath(),ctx.moveTo(100,-900),ctx.lineTo(-300,-900),ctx.lineTo(-150,100),ctx.lineTo(100,100),ctx.moveTo(-600,-900),ctx.lineTo(-1350,-900),ctx.lineTo(-1350,100),ctx.lineTo(-750,100),ctx.fill()})},skyscrapers(){simulation.isHorizontalFlipped?level.announceText(50,20,!0):level.announceText(-50,20,!0),level.announceMobTypes(),level.fallMode="start";const e=level.boost(475,0,1300),t=level.boost(4450,0,1300);level.custom=()=>{e.query(),t.query(),ctx.fillStyle="#d4f4f4",ctx.fillRect(1350,-2100,400,250),ctx.fillStyle="#d4d4d7",ctx.fillRect(3350,-1300,50,1325),ctx.fillRect(1300,-1800,750,1800),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{ctx.fillStyle="rgba(0,0,0,0.1)",ctx.fillRect(2500,-1100,450,250),ctx.fillRect(2400,-550,600,150),ctx.fillRect(2550,-1650,250,200),ctx.fillStyle="rgba(0,0,0,0.2)",ctx.fillRect(700,-110,400,110),ctx.fillRect(3800,-110,400,110),ctx.fillStyle="rgba(0,0,0,0.15)",ctx.fillRect(-250,-300,450,300)},level.setPosToSpawn(-50,-60),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),level.exit.x=1500,level.exit.y=-1875,level.defaultZoom=2e3,simulation.zoomTransition(level.defaultZoom),powerUps.spawnStartingPowerUps(1475,-1175),spawn.debris(750,-2200,3700,16),document.body.style.backgroundColor="#dcdcde",spawn.mapRect(-600,0,5400,300),spawn.mapRect(-300,-350,50,400),spawn.mapRect(-300,-10,500,50),spawn.mapRect(-300,-350,500,50),spawn.mapRect(150,-350,50,200),spawn.bodyRect(170,-130,14,140,1,spawn.propsFriction),spawn.mapRect(700,-1100,400,990),spawn.mapRect(1600,-400,1500,500),spawn.mapRect(1345,-1100,250,25),spawn.mapRect(1755,-1100,250,25),spawn.mapRect(1300,-1850,800,50),spawn.mapRect(1300,-2150,50,350),spawn.mapRect(1300,-2150,450,50),spawn.mapRect(1500,-1860,100,50),spawn.mapRect(2400,-850,600,300),spawn.mapRect(2500,-1450,450,350),spawn.mapRect(2500,-1675,50,300),spawn.mapRect(2500,-1700,300,50),spawn.mapRect(3275,-750,200,25),spawn.mapRect(3275,-1300,200,25),spawn.mapRect(3800,-1100,400,990),spawn.bodyRect(3200,-1375,300,25,.9),spawn.bodyRect(1825,-1875,400,25,.9),spawn.bodyRect(1800,-600,110,150,.8),spawn.bodyRect(2557,-450,35,55,.7),spawn.bodyRect(2957,-450,30,15,.7),spawn.bodyRect(2900,-450,60,45,.7),spawn.bodyRect(915,-1200,60,100,.95),spawn.bodyRect(925,-1300,50,100,.95),Math.random()<.9&&(spawn.bodyRect(2300,-1720,400,20),spawn.bodyRect(2590,-1780,80,80)),spawn.bodyRect(2925,-1100,25,250,.8),spawn.bodyRect(3325,-1550,50,200,.3),Math.random()<.8&&(spawn.bodyRect(1400,-75,200,75),spawn.bodyRect(1525,-125,50,50)),spawn.bodyRect(1025,-1110,400,25,.9),spawn.bodyRect(1425,-1110,115,25,.9),spawn.bodyRect(1540,-1110,300,25,.9),spawn.randomMob(-100,-1300,.5),spawn.randomSmallMob(1850,-600),spawn.randomSmallMob(3200,-100),spawn.randomSmallMob(4450,-100),spawn.randomSmallMob(2700,-475),spawn.randomMob(2650,-975,.8),spawn.randomMob(2650,-1550,.8),spawn.randomMob(4150,-200,.15),spawn.randomMob(1700,-1300,.2),spawn.randomMob(1850,-1950,.25),spawn.randomMob(2610,-1880,.25),spawn.randomMob(3350,-950,.25),spawn.randomMob(1690,-2250,.25),spawn.randomMob(2200,-600,.2),spawn.randomMob(850,-1300,.25),spawn.randomMob(-100,-1700,-.2),spawn.randomGroup(3700,-1500,.4),spawn.randomGroup(1700,-900,.4),spawn.randomLevelBoss(2800+200*Math.random(),200*Math.random()-2200),spawn.secondaryBossChance(4e3,-1825),powerUps.addResearchToLevel(),simulation.isHorizontalFlipped&&(level.flipHorizontal(),e.boostBounds.min.x=-e.boostBounds.min.x-100,e.boostBounds.max.x=100-e.boostBounds.max.x,t.boostBounds.min.x=-t.boostBounds.min.x-100,t.boostBounds.max.x=100-t.boostBounds.max.x,level.setPosToSpawn(50,-60),level.custom=()=>{e.query(),t.query(),ctx.fillStyle="#d4f4f4",ctx.fillRect(-1750,-2100,400,250),ctx.fillStyle="#d4d4d7",ctx.fillRect(-3400,-1300,50,1325),ctx.fillRect(-2050,-1800,750,1800),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{ctx.fillStyle="rgba(0,0,0,0.1)",ctx.fillRect(-2950,-1100,450,250),ctx.fillRect(-3e3,-550,600,150),ctx.fillRect(-2800,-1650,250,200),ctx.fillStyle="rgba(0,0,0,0.2)",ctx.fillRect(-1100,-110,400,110),ctx.fillRect(-4200,-110,400,110),ctx.fillStyle="rgba(0,0,0,0.15)",ctx.fillRect(-200,-300,450,300)})},superstructure(){level.announceText(0,1025,!0),level.announceMobTypes(),level.setPosToSpawn(0,930),level.exit.x=600,level.exit.y=-2080,spawn.mapRect(600,-2060,100,25),level.defaultZoom=2400,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#d0d5d5",color.map="#41424b";const e=[],t=[];level.custom=()=>{ctx.fillStyle="#c1c7c7ff",ctx.fillRect(-2500,-4900,775,6325),ctx.fillRect(-1e3,-4900,2e3,6375),ctx.fillRect(-1380,-1700,50,2775),ctx.fillRect(1400,-4900,1475,4200),ctx.fillStyle="#cff",ctx.fillRect(275,-2400,725,375),level.exit.drawAndCheck(),level.enter.draw();for(let t=0;t<e.length;t++)e[t].query();if(m.onGround)for(let e=0;e<t.length;e++)m.standingOn===t[e]&&(m.moverX=t[e].velocity.x,m.Vx=player.velocity.x-t[e].velocity.x);ctx.beginPath();for(let e=0,a=t.length;e<a;e++){let a=t[e].vertices;ctx.moveTo(a[0].x,a[0].y);for(let e=1;e<a.length;e+=1)ctx.lineTo(a[e].x,a[e].y);ctx.lineTo(a[0].x,a[0].y)}ctx.strokeStyle="#000",ctx.lineWidth=10,ctx.stroke();const a=.015;t[0].force.x=.002*Math.sin(simulation.cycle*a+.2)*t[0].mass,cons[0].length=1300+450*Math.sin(simulation.cycle*a),cons[1].length=1300+450*Math.sin(simulation.cycle*a+Math.PI)},level.customTopLayer=()=>{ctx.fillStyle="rgba(0,20,40,0.1)",ctx.fillRect(-1e3,700,1700,325),ctx.fillRect(-2125,875,400,125),ctx.fillRect(-115,250,630,150),ctx.fillRect(2425,-1575,450,375),ctx.fillRect(1900,-1200,975,475),ctx.fillRect(-2500,-550,775,1575),ctx.fillRect(-2500,-2225,450,875),ctx.fillRect(-2050,-1900,325,575),ctx.fillStyle="rgba(0,0,0,0.06)",ctx.fillRect(-625,-2050,825,350)},spawn.mapRect(-2500,1e3,3500,3375),spawn.bodyRectCorner(-1925,360,500,1050,50),spawn.mapRect(-2125,990,400,100),e.push(level.boost(-2460,990,1250,1.47)),spawn.mapVertex(-2397.5,-400,"0 0   300 0   50 300   0 300"),spawn.mapRect(-2500,-225,50,650),spawn.bodyRect(-1850,-250,125,75,.7),spawn.mapRect(-1e3,990,1700,75);spawn.mapVertex(-150,550,"875 -128  875 128  850 153  -850 153  -875 128  -875 -128  -850 -153  850 -153"),spawn.mapRect(-225,687,450,25),spawn.mapRect(-225,980,450,125),spawn.mapRect(-175,970,350,125),spawn.bodyRect(-995,825,15,165),spawn.bodyRect(680,825,15,165),spawn.mapRect(675,650,25,175),spawn.mapRect(-1e3,675,25,150),e.push(level.boost(860,965,1500,1.17)),e.push(level.boost(1357,80,1e3,1.57+1.08)),spawn.bodyRect(-375,275,125,125,.7),spawn.bodyRectCorner(200,150,700,200,35),spawn.mapRect(-1485,675,250,25),spawn.mapRect(-1485,75,250,25),spawn.mapRect(-1485,-525,250,25),spawn.mapRect(-1485,-1125,250,25),spawn.mapRect(-1485,-1700,250,25),e.push(level.boost(-800,400,1300)),spawn.mapRect(1400,-750,1475,5125),spawn.mapVertex(1750,-907,"350 -100  350 175  -350 175   -350 -100  -275 -175    275 -175"),spawn.mapVertex(2725,-865,"150 -150  150 175  -150 175   -150 -150  -125 -175    125 -175"),spawn.bodyRect(2775,-1175,75,125,.7),spawn.bodyRect(2100,-825,175,75,.7),spawn.bodyRect(2750,-1975,125,150,.7),spawn.mapVertex(2200,-1310,"325 -100  325 100  300 125  -300 125  -325 100  -325 -100  -300 -125  300 -125"),spawn.mapVertex(2650,-1700,"250 -100  250 100  225 125  -225 125  -250 100  -250 -100  -225 -125  225 -125"),spawn.mapRect(1400,-2050,250,25),spawn.mapRect(1900,-2050,300,25),spawn.bodyRect(925,-2075,525,25),spawn.bodyRect(1600,-2075,375,25),spawn.bodyRect(1450,-2075,150,25),spawn.bodyRect(1975,-2100,125,50),spawn.bodyRect(2100,-2125,100,75),spawn.mapVertex(-2114,-975,"387 -350  387 500  -387 500   -387 -425    312 -425"),spawn.bodyRect(-2175,-1425,125,75,.7),spawn.mapVertex(-2350,-1500,"150 -225  150 175  -150 175   -150 -225  -125 -250    125 -250"),spawn.bodyRectCorner(-1900,-1925,400,200,25),spawn.bodyRectCorner(-2275,-2300,500,200,25),spawn.mapVertex(600,-1875,"425 -150  425 150  400 175  -425 175             -425 -175             400 -175"),spawn.mapVertex(-800,-1875,"225 -175  225 175          -200 175  -225 150  -225 -150  -200 -175           "),spawn.mapRect(-350,-2050,250,25),spawn.mapRect(-600,-1725,250,25),spawn.mapRect(-100,-1725,300,25),spawn.bodyRect(-650,-2075,450,25),spawn.bodyRect(-200,-2075,525,25),spawn.bodyRectCorner(637.5,-2500,795.3,250,35),spawn.mapRect(275,-2375,25,150),spawn.mapRect(975,-2375,25,150);spawn.bodyVertex(0,-500,"300 -50  300 50  275 75  -275 75  -300 50  -300 -50  -275 -75  275 -75",{density:2e-4,friction:1,frictionStatic:1,frictionAir:.2,isNotHoldable:!0}),t.push(body[body.length-1]),simulation.ephemera.push({count:25,do(){this.count--,this.count<0&&(simulation.removeEphemera(this),t[0].frictionAir=.02)}}),cons[cons.length]=Constraint.create({pointA:{x:-980,y:-1700},pointB:{x:-300,y:-50},bodyB:body[body.length-1],stiffness:.001}),Composite.add(engine.world,cons[cons.length-1]),cons[cons.length]=Constraint.create({pointA:{x:980,y:-1700},pointB:{x:300,y:-50},bodyB:body[body.length-1],stiffness:.001}),Composite.add(engine.world,cons[cons.length-1]),spawn.randomMob(-2e3,-250,0),spawn.randomMob(-1400,625,0),spawn.randomMob(-875,225,.1),spawn.randomMob(50,-50,.1),spawn.randomMob(1750,-1150,.1),spawn.randomMob(2425,-1050,.2),spawn.randomMob(2200,-1550,.2),spawn.randomMob(1550,-2175,.2),spawn.randomMob(300,-2700,.2),spawn.randomMob(-750,-2150,.2),spawn.randomMob(-2250,-2450,.3),spawn.randomMob(-2300,-1800,.3),spawn.randomMob(-1900,-225,.3),spawn.randomMob(-1400,-1175,.3),spawn.randomMob(2200,-1500,.4),spawn.randomMob(1600,-2175,.4),spawn.randomMob(-700,-2175,.4),spawn.randomMob(-2425,-2550,.5),spawn.randomLevelBoss(1675,-1675),Math.random()<.33?spawn.secondaryBossChance(-1375,-2250):Math.random()<.5?spawn.secondaryBossChance(2275,-2575):spawn.secondaryBossChance(-225,-2525),spawn.randomGroup(2775,-2275,.1),powerUps.spawnStartingPowerUps(2350,-825),powerUps.addResearchToLevel(),powerUps.chooseRandomPowerUp(125,-1750),powerUps.chooseRandomPowerUp(650,-2675),powerUps.chooseRandomPowerUp(800,-2675)},highrise(){simulation.isHorizontalFlipped?level.announceText(175,-1085,!0):level.announceText(-175,-1085,!0),level.announceMobTypes(),level.fallMode="start";const e=level.elevator(-790,-190,180,25,-1150,.0025,{up:.01,down:.2},!0);e.addConstraint();const t=level.toggle(-300,-200),a=level.elevator(-3630,-970,180,25,-1740,.004);a.addConstraint();const o=level.toggle(-3100,-1330);level.custom=()=>{ctx.fillStyle="#cff",ctx.fillRect(-4425,-3050,425,275),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{t.query(),t.isOn?e.isOn||(e.isOn=!0,e.isUp=!1,e.removeConstraint(),e.frictionAir=.2):e.isOn&&(e.isOn=!1,e.frictionAir=.2,e.addConstraint()),e.isOn?(e.move(),ctx.fillStyle="#444"):ctx.fillStyle="#aaa",ctx.fillRect(-700,-1140,1,975),o.query(),o.isOn?a.isOn||(a.isOn=!0,a.isUp=!1,a.removeConstraint(),a.frictionAir=.2):a.isOn&&(a.isOn=!1,a.frictionAir=.2,a.addConstraint()),a.isOn?(a.move(),ctx.fillStyle="#444"):ctx.fillStyle="#aaa",ctx.fillRect(-3540,-1720,1,770),ctx.fillStyle="rgba(64,64,64,0.97)",ctx.fillRect(-4450,-750,800,200),ctx.fillStyle="rgba(0,0,0,0.12)",ctx.fillRect(-2500,-1975,150,300),ctx.fillRect(-1830,-1150,2030,1150),ctx.fillRect(-3410,-2150,495,1550),ctx.fillRect(-2585,-1675,420,1125),ctx.fillRect(-1650,-1575,775,450)},level.setPosToSpawn(-300,-700),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),level.exit.x=-4275,level.exit.y=-2805,level.defaultZoom=1500,simulation.zoomTransition(level.defaultZoom),powerUps.spawnStartingPowerUps(-2550,-700),document.body.style.backgroundColor="#dcdcde",spawn.debris(-2325,-1825,2400),spawn.debris(-2625,-600,600,5),spawn.debris(-2e3,-60,1200,5),powerUps.spawn(-4300,-700,"heal"),powerUps.spawn(-4200,-700,"ammo"),powerUps.spawn(-4e3,-700,"ammo"),spawn.mapRect(-4450,-1e3,100,500),spawn.bodyRect(-3300,-750,150,150),spawn.bodyRect(-1e3,-675,25,25),spawn.mapRect(-2225,0,2475,150),spawn.mapRect(175,-1e3,75,1100),spawn.mapRect(-600,-1075,50,475),spawn.mapRect(-600,-650,625,50),spawn.mapRect(-1300,-650,500,50),spawn.bodyRect(-75,-300,50,50),spawn.mapRect(-600,-200,500,250),spawn.bodyRect(-500,-300,100,100,.6),spawn.bodyRect(-425,-1375,400,225),spawn.mapRect(-925,-1575,50,325),spawn.bodyRect(-1475,-1275,250,125),spawn.mapRect(-1675,-1575,650,50),spawn.mapRect(-600,-1150,850,175),spawn.mapRect(-1850,-1150,1050,175),spawn.bodyRect(-1907,-1600,550,25),simulation.difficulty<4?(spawn.bodyRect(-1600,-125,125,125),spawn.bodyRect(-1560,-200,75,75)):(spawn.bodyRect(-1200,-125,125,125),spawn.bodyRect(-1160,-200,75,75)),spawn.mapRect(-4450,-600,2300,750),spawn.mapRect(-2225,-450,175,550),spawn.mapRect(-3425,-1325,525,75),spawn.mapRect(-3425,-2200,525,50),spawn.mapRect(-2600,-1700,450,50),spawn.bodyRect(-2275,-2700,50,60),spawn.mapRect(-2515,-2e3,180,50),spawn.bodyRect(-3410,-1425,50,50),spawn.bodyRect(-3390,-1525,40,60),spawn.mapRect(-4450,-1750,800,1050),spawn.mapRect(-4e3,-2390,200,800),spawn.mapRect(-4450,-2775,475,1125),spawn.bodyRect(-3715,-2050,50,50),spawn.bodyRect(-2970,-2250,50,50),spawn.bodyRect(-3080,-2250,40,40),spawn.bodyRect(-3420,-650,50,50),spawn.mapRect(-4450,-3075,25,300),spawn.mapRect(-4450,-3075,450,25),spawn.mapRect(-4025,-3075,25,100),spawn.mapRect(-4275,-2785,100,25),spawn.bodyRect(-3900,-2400,50,50),spawn.randomMob(-2500,-2700,1),spawn.randomMob(-3200,-750,1),spawn.randomMob(-1875,-775,.2),spawn.randomMob(-950,-1675,.2),spawn.randomMob(-1525,-1750,.2),spawn.randomMob(-1375,-1400,.2),spawn.randomMob(-1625,-1275,.2),spawn.randomMob(-1900,-1250,.2),spawn.randomMob(-2250,-1850,.2),spawn.randomMob(-2475,-2200,.2),spawn.randomMob(-3e3,-1475,.2),spawn.randomMob(-3850,-2500,.2),spawn.randomMob(-3650,-2125,.2),spawn.randomMob(-4010,-3200,.2),spawn.randomMob(-3500,-1825,.2),spawn.randomMob(-975,-100,0),spawn.randomMob(-1050,-725,.2),spawn.randomMob(-1525,-100,0),spawn.randomMob(-525,-1700,-.1),spawn.randomMob(-125,-1500,-.1),spawn.randomMob(-325,-1900,-.1),spawn.randomMob(-550,-100,-.1),spawn.randomGroup(-3250,-2700,.2),spawn.randomGroup(-2450,-1100,0),spawn.randomLevelBoss(-2400,-2650),spawn.secondaryBossChance(-1825,-1975),powerUps.addResearchToLevel(),simulation.isHorizontalFlipped&&(level.flipHorizontal(),level.setPosToSpawn(300,-700),e.holdX=-e.holdX,e.removeConstraint(),e.addConstraint(),a.holdX=-a.holdX,a.removeConstraint(),a.addConstraint(),level.custom=()=>{ctx.fillStyle="#cff",ctx.fillRect(4e3,-3050,425,275),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{t.query(),t.isOn?e.isOn||(e.isOn=!0,e.isUp=!1,e.removeConstraint(),e.frictionAir=.2):e.isOn&&(e.isOn=!1,e.frictionAir=.2,e.addConstraint()),e.isOn?(e.move(),ctx.fillStyle="#444",ctx.fillRect(699,-1140,1,975)):(ctx.fillStyle="#aaa",ctx.fillRect(699,-1140,1,975)),o.query(),o.isOn?a.isOn||(a.isOn=!0,a.isUp=!1,a.removeConstraint(),a.frictionAir=.2):a.isOn&&(a.isOn=!1,a.frictionAir=.2,a.addConstraint()),a.isOn?(a.move(),ctx.fillStyle="#444",ctx.fillRect(3539,-1720,1,740)):(ctx.fillStyle="#aaa",ctx.fillRect(3539,-1720,1,740)),ctx.fillStyle="rgba(64,64,64,0.97)",ctx.fillRect(3650,-750,800,200),ctx.fillStyle="rgba(0,0,0,0.12)",ctx.fillRect(2350,-1975,150,300),ctx.fillRect(-200,-1150,2030,1150),ctx.fillRect(2915,-2150,495,1550),ctx.fillRect(2165,-1675,420,1125),ctx.fillRect(900,-1575,750,450)})},warehouse(){simulation.isHorizontalFlipped?level.announceText(-25,20,!0):level.announceText(25,20,!0),level.announceMobTypes(),level.fallMode="start",level.custom=()=>{ctx.fillStyle="#444",ctx.fillRect(-920,-505,40,10),ctx.fillRect(-920,95,40,10),ctx.fillRect(180,95,40,10),ctx.fillRect(-20,695,40,10),ctx.fillRect(-2320,945,40,10),ctx.fillStyle="#cff",ctx.fillRect(300,-250,350,250),level.exit.drawAndCheck(),level.enter.draw()};const e=new Path2D;e.moveTo(-1800,-500),e.lineTo(-910,-500),e.lineTo(-1300,0),e.lineTo(-500,0),e.lineTo(-890,-500),e.lineTo(-175,-500),e.lineTo(-175,-250),e.lineTo(175,-250),e.lineTo(175,0),e.lineTo(-910,100),e.lineTo(-1300,600),e.lineTo(-500,600),e.lineTo(-890,100),e.lineTo(190,100),e.lineTo(-200,600),e.lineTo(600,600),e.lineTo(210,100),e.lineTo(1100,100),e.lineTo(1100,1400),e.lineTo(600,1400),e.lineTo(10,700),e.lineTo(-10,700),e.lineTo(-600,1400),e.lineTo(-1950,1400),e.lineTo(-2290,950),e.lineTo(-2310,950),e.lineTo(-2650,1400),e.lineTo(-3025,1400),e.lineTo(-3025,150),e.lineTo(-2590,150),e.lineTo(-2600,-150),e.lineTo(-1800,-150),e.lineTo(-1800,-500),level.customTopLayer=()=>{ctx.fillStyle="rgba(0,0,0,0.15)",ctx.fill(e)},level.setPosToSpawn(25,-55),level.exit.x=425,level.exit.y=-30,level.defaultZoom=1300,simulation.zoomTransition(level.defaultZoom),spawn.debris(-2250,1330,3e3,6),spawn.debris(-3e3,-800,3280,6),spawn.debris(-1400,410,2300,5),powerUps.spawnStartingPowerUps(25,500),document.body.style.backgroundColor="#dcdcde",spawn.mapRect(-1500,0,2750,100),spawn.mapRect(175,-270,125,300),spawn.mapRect(-1900,-600,1775,100),spawn.mapRect(-1900,-550,100,1250),spawn.mapRect(-225,-550,100,400),spawn.mapRect(-225,-10,400,50),spawn.mapRect(-25,-20,100,50),spawn.mapRect(300,-10,350,50),spawn.mapRect(-150,-350,800,100),spawn.mapRect(600,-275,50,75),spawn.mapRect(425,-20,100,25),spawn.mapRect(1100,0,150,1500),spawn.mapRect(-3150,1400,4400,100),spawn.mapRect(-2375,875,1775,75),spawn.mapRect(-1450,865,75,435),spawn.mapRect(-1450,662,75,100),spawn.bodyRect(-1418,773,11,102,1,spawn.propsFriction),spawn.mapRect(-3150,50,125,1450),spawn.mapRect(-2350,600,3150,100),spawn.mapRect(-2125,400,250,275),spawn.mapRect(-3150,50,775,100),spawn.mapRect(-2600,-250,775,100);let t,a,o,s=!1;Math.random()<.5?(s=!0,t=level.elevator(-1780,500,260,40,7,3e-4),a=level.elevator(820,1300,260,40,607,3e-4),o=level.elevator(-2850,1250,160,40,600,.007),simulation.isHorizontalFlipped?spawn.mapVertex(-2900,225,"0 0  0 -500  -500 -500"):spawn.mapVertex(-2900,225,"0 0  0 -500  500 -500"),spawn.mapRect(-3050,1175,175,300),spawn.bodyRect(-2375,1300,100,100),spawn.bodyRect(-2325,1250,50,50),spawn.bodyRect(-2275,1350,125,50),level.custom=()=>{t.move(),t.drawTrack(),a.move(),a.drawTrack(),o.move(),o.drawTrack(),ctx.fillStyle="#444",ctx.fillRect(-920,-505,40,10),ctx.fillRect(-920,95,40,10),ctx.fillRect(180,95,40,10),ctx.fillRect(-20,695,40,10),ctx.fillRect(-2320,945,40,10),ctx.fillStyle="#cff",ctx.fillRect(300,-250,350,250),level.exit.drawAndCheck(),level.enter.draw()}):(spawn.mapRect(-2950,1250,175,250),spawn.mapRect(-3050,1100,150,400),spawn.bodyRect(-1450,-125,125,125,1,spawn.propsSlide),spawn.bodyRect(-1800,0,300,100,1,spawn.propsHoist),cons[cons.length]=Constraint.create({pointA:{x:-1650,y:-500},bodyB:body[body.length-1],stiffness:1815e-7,length:1}),Composite.add(engine.world,cons[cons.length-1]),spawn.bodyRect(600,525,125,125,1,spawn.propsSlide),spawn.bodyRect(800,600,300,100,1,spawn.propsHoist),cons[cons.length]=Constraint.create({pointA:{x:950,y:100},bodyB:body[body.length-1],stiffness:1815e-7,length:1}),Composite.add(engine.world,cons[cons.length-1]),spawn.bodyRect(-2700,1150,100,160,1,spawn.propsSlide),spawn.bodyRect(-2550,1200,150,150,1,spawn.propsSlide),spawn.bodyRect(-2763,1300,350,100,1,spawn.propsHoist),cons[cons.length]=Constraint.create({pointA:{x:-2575,y:150},bodyB:body[body.length-1],stiffness:4e-4,length:566}),Composite.add(engine.world,cons[cons.length-1])),spawn.bodyRect(-212,-150,30,35,1),spawn.bodyRect(-212,-115,30,35,1),spawn.bodyRect(-212,-80,30,35,1),spawn.bodyRect(-212,-45,30,35,1),spawn.bodyRect(-750,400,150,150,.5),spawn.bodyRect(-400,1175,100,250,1),spawn.bodyRect(-2525,-50,145,100,.5),spawn.bodyRect(-2325,-300,150,100,.5),spawn.bodyRect(-1275,-750,200,150,.5),spawn.bodyRect(-525,-700,125,100,.5),spawn.randomSmallMob(-1125,550),spawn.randomSmallMob(-2950,-50),spawn.randomMob(-2025,175,.5),spawn.randomMob(-2325,450,.5),spawn.randomMob(-2925,675,.4),spawn.randomMob(-2700,300,.3),spawn.randomMob(-2500,300,.3),spawn.randomMob(-2075,-425,.3),spawn.randomMob(-1550,-725,.3),spawn.randomMob(375,1100,.2),spawn.randomMob(-1575,1100,.3),spawn.randomSmallMob(825,300),spawn.randomMob(-800,-1750,.3),spawn.randomMob(400,-750,.5),spawn.randomMob(650,1300,.5),spawn.randomMob(-2450,1050,.5),spawn.randomMob(500,400,.5),spawn.randomMob(-75,-1700,.5),spawn.randomMob(900,-800,.6),spawn.randomGroup(-75,1050,0),spawn.randomGroup(-900,1e3,.2),spawn.randomGroup(-1300,-1100,0),spawn.randomSmallMob(-2325,800),spawn.randomSmallMob(-900,825),spawn.randomLevelBoss(-800,-1300),spawn.secondaryBossChance(300,-800),powerUps.addResearchToLevel(),simulation.isHorizontalFlipped&&(level.flipHorizontal(),level.setPosToSpawn(-25,-55),s?(t.holdX=-t.holdX,a.holdX=-a.holdX,o.holdX=-o.holdX,level.custom=()=>{t.move(),t.drawTrack(),a.move(),a.drawTrack(),o.move(),o.drawTrack(),ctx.fillStyle="#444",ctx.fillRect(880,-505,40,10),ctx.fillRect(880,95,40,10),ctx.fillRect(-220,95,40,10),ctx.fillRect(-20,695,40,10),ctx.fillRect(2280,945,40,10),ctx.fillStyle="#cff",ctx.fillRect(-650,-250,350,250),level.exit.drawAndCheck(),level.enter.draw()}):level.custom=()=>{ctx.fillStyle="#444",ctx.fillRect(880,-505,40,10),ctx.fillRect(880,95,40,10),ctx.fillRect(-220,95,40,10),ctx.fillRect(-20,695,40,10),ctx.fillRect(2280,945,40,10),ctx.fillStyle="#cff",ctx.fillRect(-650,-250,350,250),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{ctx.fillStyle="rgba(0,0,0,0.15)",ctx.beginPath(),ctx.moveTo(1800,-500),ctx.lineTo(910,-500),ctx.lineTo(1300,0),ctx.lineTo(500,0),ctx.lineTo(890,-500),ctx.lineTo(175,-500),ctx.lineTo(175,-250),ctx.lineTo(-175,-250),ctx.lineTo(-175,0),ctx.lineTo(910,100),ctx.lineTo(1300,600),ctx.lineTo(500,600),ctx.lineTo(890,100),ctx.lineTo(-190,100),ctx.lineTo(200,600),ctx.lineTo(-600,600),ctx.lineTo(-210,100),ctx.lineTo(-1100,100),ctx.lineTo(-1100,1400),ctx.lineTo(-600,1400),ctx.lineTo(-10,700),ctx.lineTo(10,700),ctx.lineTo(600,1400),ctx.lineTo(1950,1400),ctx.lineTo(2290,950),ctx.lineTo(2310,950),ctx.lineTo(2650,1400),ctx.lineTo(3025,1400),ctx.lineTo(3025,150),ctx.lineTo(2590,150),ctx.lineTo(2600,-150),ctx.lineTo(1800,-150),ctx.lineTo(1800,-500),ctx.fill()})},office(){let e,t;level.announceMobTypes();let a=!1;Math.random()<.8?(simulation.isHorizontalFlipped?level.announceText(-1200,-1483,!0):level.announceText(1200,-1483,!0),e=level.button(525,0),t=level.door(1362,-400,25,400,355,1.5),level.setPosToSpawn(1200,-1550),level.exit.x=3088,level.exit.y=-630):(simulation.isHorizontalFlipped?level.announceText(-3135,30,!0):level.announceText(3135,30,!0),a=!0,e=level.button(3800,0),t=level.door(3012,-400,25,400,355,1.5),level.setPosToSpawn(3137,-650),level.exit.x=1375,level.exit.y=-1530),level.custom=()=>{e.query(),e.draw(),e.isUp?t.isClosing=!0:t.isClosing=!1,t.openClose(),ctx.fillStyle="#ccc",ctx.fillRect(2495,-500,10,525),ctx.fillStyle="#dff",a?ctx.fillRect(725,-1950,825,450):ctx.fillRect(3050,-950,625,500),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{ctx.fillStyle="rgba(0,0,0,0.1)",ctx.fillRect(3650,-1300,1300,1300),ctx.fillRect(3e3,-1e3,650,1e3),ctx.fillRect(750,-1950,800,450),ctx.fillRect(750,-1450,650,1450),ctx.fillRect(-550,-1700,1300,1700),t.draw()},level.defaultZoom=1400,simulation.zoomTransition(level.defaultZoom),spawn.mapRect(level.exit.x,level.exit.y+20,100,50),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),document.body.style.backgroundColor="#e0e5e0",spawn.debris(-300,-200,1e3,6),spawn.debris(3500,-200,800,5),spawn.debris(-300,-650,1200,5),powerUps.spawnStartingPowerUps(-525,-700),spawn.mapRect(-600,0,2e3,325),spawn.mapRect(1400,25,1600,300),spawn.mapRect(3e3,0,2e3,325),spawn.mapRect(-600,-1700,50,1900),spawn.bodyRect(-295,-1540,40,40),spawn.bodyRect(-298,-1580,40,40),spawn.bodyRect(1500,-1540,30,30),spawn.mapRect(1550,-2e3,50,550),spawn.mapRect(1350,-1500,50,1125),spawn.mapRect(-600,-1750,1300,50),spawn.mapRect(700,-2e3,50,300),spawn.mapRect(700,-2025,900,75),map[map.length]=Bodies.polygon(725,-1700,0,15),spawn.bodyRect(720,-1675,15,170,1,spawn.propsDoor),body[body.length-1].isNotHoldable=!0,consBB[consBB.length]=Constraint.create({bodyA:body[body.length-1],pointA:{x:0,y:-90},bodyB:map[map.length-1],stiffness:1}),Composite.add(engine.world,consBB[consBB.length-1]),spawn.mapRect(-300,-1500,1900,75),spawn.mapRect(800,-1480,50,375),spawn.bodyRect(800,-1106,50,106),spawn.mapRect(-600,-1e3,1100,50),spawn.mapRect(600,-1e3,500,50),spawn.spawnStairs(-600,-1e3,4,250,350),spawn.mapRect(375,-600,350,150),spawn.mapRect(-300,-500,1690,50),spawn.spawnStairs(1340,-500,4,250,350,!0),spawn.spawnStairs(-600,0,4,250,350),spawn.bodyRect(700,-200,100,100),spawn.bodyRect(700,-300,100,100),spawn.bodyRect(700,-400,100,100),spawn.mapRect(1390,13,30,20),spawn.mapRect(2980,13,30,20),spawn.bodyRect(4250,-700,50,100),spawn.mapRect(3e3,-1e3,50,625),spawn.mapRect(4950,-1300,50,1100),spawn.mapRect(4150,-600,350,150),spawn.mapRect(3650,-1300,50,700),spawn.mapRect(3650,-1325,1350,75),spawn.bodyRect(3665,-600,20,100),spawn.mapRect(3025,-600,250,125),spawn.mapRect(3175,-550,175,75),spawn.mapRect(3e3,-1e3,700,50),spawn.mapRect(3010,-500,1690,50),spawn.spawnStairs(4950,0,4,250,350,!0),spawn.randomSmallMob(4575,-560,1),spawn.randomSmallMob(1315,-880,1),spawn.randomSmallMob(800,-600),spawn.randomMob(4100,-225,.8),spawn.randomMob(-250,-700,.8),spawn.randomMob(4500,-225,.15),spawn.randomMob(3250,-225,.15),spawn.randomMob(-100,-225,.1),spawn.randomMob(1150,-225,.15),spawn.randomMob(2e3,-225,.15),spawn.randomMob(450,-225,.15),spawn.randomMob(100,-1200,1),spawn.randomMob(950,-1150,-.1),spawn.randomGroup(1800,-800,-.2),spawn.randomGroup(4150,-1e3,.6),simulation.difficultyMode>1||level.levelsCleared>1?Math.random()<.5?spawn.tetherBoss(2850,-80,{x:2500,y:-500}):spawn.randomLevelBoss(2200,-450):powerUps.spawnBossPowerUp(2800,-1400),spawn.secondaryBossChance(1875,-675),powerUps.addResearchToLevel(),simulation.isHorizontalFlipped&&(level.flipHorizontal(),a?level.setPosToSpawn(-3137,-650):level.setPosToSpawn(-1200,-1550),e.min.x=-e.min.x-126,e.max.x=126-e.max.x,level.custom=()=>{e.query(),e.draw(),e.isUp?t.isClosing=!0:t.isClosing=!1,t.openClose(),ctx.fillStyle="#ccc",ctx.fillRect(-2505,-500,10,525),ctx.fillStyle="#dff",a?ctx.fillRect(-1550,-1950,825,450):ctx.fillRect(-3675,-950,625,500),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{ctx.fillStyle="rgba(0,0,0,0.1)",ctx.fillRect(-4950,-1300,1300,1300),ctx.fillRect(-3650,-1e3,650,1e3),ctx.fillRect(-1550,-1950,800,450),ctx.fillRect(-1400,-1450,650,1450),ctx.fillRect(-750,-1700,1300,1700),t.draw()})},stronghold(){simulation.inGameConsole("<strong>stronghold</strong> by <span class='color-var'>Francois</span>");const e=level.boost(1470,-250,1080),t=level.boost(-370,0,800),a=level.boost(4865,0,1800);level.custom=()=>{e.query(),t.query(),a.query(),ctx.fillStyle="#edf9f9",ctx.fillRect(-500,-1220,550,-480),ctx.fillStyle="rgba(0,0,0,0.1)",ctx.fillRect(0,-700,1050,700),ctx.fillRect(-550,-1170,550,1170),ctx.fillRect(1150,-1700,250,1700),ctx.fillRect(1100,-1700,50,450),ctx.fillRect(1050,-1200,100,1200),ctx.fillRect(1400,-250,200,-1500),ctx.fillRect(1600,-550,600,-1150),ctx.fillRect(2530,-550,430,-1450),ctx.fillRect(3270,-1700,80,600),ctx.fillRect(3350,-1350,700,230),ctx.fillRect(4050,-1700,600,1290),ctx.fillRect(3650,-110,1e3,170),ctx.fillRect(4865,-55,100,55),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{},level.setPosToSpawn(1900,-40),level.exit.x=-350,level.exit.y=-1250,level.defaultZoom=1400,simulation.zoomTransition(level.defaultZoom),spawn.mapRect(level.exit.x,level.exit.y+25,100,20),spawn.debris(3800,-1480,300,12),spawn.debris(3600,-1130,200,2),document.body.style.backgroundColor="#dbdcde",spawn.mapRect(1600,-500,50,500),spawn.mapRect(1600,-550,1500,50),spawn.mapRect(2300,-500,50,300),spawn.mapRect(-550,0,4300,200),spawn.mapRect(3700,55,1300,145),spawn.mapRect(5e3,0,50,200),spawn.mapRect(3100,-1070,50,570),spawn.mapRect(3100,-1120,950,50),spawn.mapRect(4050,-1750,600,50),spawn.mapRect(4600,-1700,50,100),spawn.mapRect(3650,-160,400,50),spawn.mapRect(4050,-410,600,300),spawn.mapRect(4600,-1120,50,710),spawn.mapRect(4550,-1170,100,50),spawn.mapVertex(3700,35,"0 0 450 0 300 -60 150 -60"),spawn.mapVertex(4850,35,"0 0 370 0 370 -65 150 -65"),spawn.bodyRect(3950,-280,170,120),spawn.bodyRect(4050,-500,275,100,1,spawn.propsSlide),spawn.bodyRect(4235,-500,275,100,1,spawn.propsSlide),spawn.bodyRect(4025,-450,550,100,1,spawn.propsHoist),cons[cons.length]=Constraint.create({pointA:{x:4325,y:-1700},bodyB:body[body.length-1],stiffness:2e-4,length:200}),Composite.add(engine.world,cons[cons.length-1]),spawn.bodyRect(2799,-870,310,290),spawn.mapRect(4e3,-1750,50,400),spawn.mapRect(3400,-1400,600,50),spawn.mapRect(3350,-1750,50,400),spawn.bodyRect(3400,-1470,110,70),spawn.mapRect(3270,-1750,80,50),spawn.mapRect(2530,-2e3,430,50),spawn.mapRect(1600,-1750,600,50),spawn.mapRect(1100,-1750,300,50),spawn.bodyRect(1830,-1980,190,230),spawn.bodyRect(1380,-1770,250,20),spawn.mapRect(1e3,-1250,400,50),spawn.mapRect(1100,-1550,50,190),spawn.bodyRect(1100,-1380,48,109),spawn.mapRect(-100,-750,1100,50),spawn.mapRect(1e3,-1200,50,500),spawn.mapRect(50,-1550,1050,50),spawn.bodyRect(1,-900,48,150),spawn.mapRect(0,-1170,50,270),spawn.bodyRect(920,-900,120,120),spawn.mapRect(0,-1700,50,320),spawn.mapRect(-550,-1220,600,50),spawn.mapRect(-500,-1750,550,50),spawn.mapRect(-550,-1750,50,530),spawn.bodyRect(-503,-1250,30,30),spawn.mapRect(500,-700,100,590),spawn.mapRect(1350,-250,250,250),map[map.length]=Bodies.polygon(2325,-205,0,15),spawn.bodyRect(2325,-180,15,170,1,spawn.propsDoor),body[body.length-1].isNotHoldable=!0,consBB[consBB.length]=Constraint.create({bodyA:body[body.length-1],pointA:{x:0,y:-90},bodyB:map[map.length-1],stiffness:1}),Composite.add(engine.world,consBB[consBB.length-1]),spawn.bodyRect(650,50,70,50),spawn.bodyRect(300,0,100,60),spawn.bodyRect(400,0,100,150),spawn.bodyRect(2545,-50,70,50),spawn.bodyRect(2550,0,100,30),spawn.randomSmallMob(200,-1300,.5),spawn.randomSmallMob(300,-1300,.9),spawn.randomSmallMob(470,-650,1),spawn.randomSmallMob(1e3,-400,1),spawn.randomSmallMob(2550,-560,1),spawn.randomSmallMob(3350,-900,1),spawn.randomSmallMob(3600,-1210,1),spawn.randomSmallMob(700,-1950,.2),spawn.randomSmallMob(5050,-550),spawn.randomMob(-250,-250,.8),spawn.randomMob(-300,-600,.6),spawn.randomMob(350,-900,.5),spawn.randomMob(770,-950,.8),spawn.randomMob(900,-160,1),spawn.randomMob(2360,-820,.8),spawn.randomMob(2700,-2020,.8),spawn.randomMob(3050,-1650,.8),spawn.randomMob(3350,-600,.8),spawn.randomMob(4400,-50,1),spawn.randomGroup(1500,-1900,.5),spawn.randomGroup(2350,-850,1),spawn.randomGroup(100,-450,.9),spawn.randomLevelBoss(1850,-1400),spawn.secondaryBossChance(1850,-1400),powerUps.addResearchToLevel()},basement(){let e,t,a,o,s;simulation.inGameConsole("<strong>basement</strong> by <span class='color-var'>Francois</span>");let n=Math.random();n=!(n<.7);const l=level.elevator(4545,-220,110,30,-3e3),i=level.hazard(1675,-1050,800,150),c=level.portal({x:-620,y:-257},Math.PI/2,{x:500,y:2025},-Math.PI/2);spawn.mapRect(350,2025,300,300),!1===n?(e=level.button(2700,-1150),level.setPosToSpawn(2600,-2050),level.exit.x=level.enter.x+4510,level.exit.y=level.enter.y+600,spawn.mapRect(level.exit.x,level.exit.y+20,100,20),spawn.mapRect(level.enter.x,level.enter.y+20,100,20)):(e=level.button(1450,-1150),o=level.button(3530,-1150),a=level.button(8033,-3625),t=level.door(7700,-3905,25,184,184),s=level.door(3200,-1225,299,80,525),level.setPosToSpawn(7110,-1450),level.exit.x=level.enter.x-4510,level.exit.y=level.enter.y-600,spawn.mapRect(level.exit.x,level.exit.y+20,100,20),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),spawn.mapRect(7675,-3935,75,25),spawn.mapRect(7675,-3715,75,25),spawn.bodyRect(8075,-3675,50,25));const p=level.boost(8290,-2100,1800);level.custom=()=>{p.query(),level.exit.drawAndCheck(),c[2].query(),c[3].query(),e.query(),e.draw(),!0===n&&(a.draw(),a.query(),o.draw(),o.query(),a.isUp?t.isClosing=!1:t.isClosing=!0,t.openClose(),o.isUp?s.isClosing=!0:s.isClosing=!1,t.openClose(),s.openClose()),i.level(e.isUp),level.enter.draw(),l.move(),l.drawTrack()},level.customTopLayer=()=>{ctx.fillStyle="rgba(61,62,62,0.95)",ctx.fillRect(-750,-900,750,450),!0===n&&(t.draw(),s.draw()),c[0].draw(),c[1].draw(),c[2].draw(),c[3].draw(),i.query()},level.defaultZoom=1300,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#c7c7c7",spawn.mapRect(-400,-2e3,400,1430),spawn.mapRect(3700,-3e3,700,2650),spawn.mapRect(-400,-2e3,3700,250),spawn.mapRect(2475,-1150,1225,250),spawn.mapRect(500,-1150,1175,250),spawn.mapRect(350,-180,4600,1255),spawn.mapRect(-400,-458,750,3337),spawn.mapRect(-2850,-3375,5300,1375),spawn.mapRect(-2850,-4200,8e3,825),spawn.mapRect(3700,-3375,550,375),spawn.mapRect(-2850,-5200,10200,1e3),spawn.mapRect(5600,-1250,3550,2e3),spawn.mapRect(9150,-5200,1725,5800),spawn.mapRect(2300,-3375,950,1e3),spawn.mapRect(3550,-3375,150,1625),spawn.mapVertex(2020,-791,"  250 250  -860 250  -2200 0  250 0"),spawn.mapVertex(690,-295,"1700 0  -200 0  -200 -284  500 -284"),spawn.mapRect(2950,-900,750,250),!1===n?(spawn.mapRect(3250,-1800,50,150),spawn.mapRect(3400,-1800,50,150),spawn.mapRect(3150,-1300,50,200),spawn.mapRect(3500,-1300,50,200),spawn.mapRect(3050,-3375,500,1260),spawn.mapRect(3400,-2265,150,515),spawn.bodyRect(3625,-1225,75,75)):(spawn.mapRect(3050,-3375,500,1e3),spawn.mapRect(3400,-2400,150,650),spawn.bodyRect(3425,-1515,75,75),spawn.mapRect(3200,-1275,300,175)),!1===n?(spawn.bodyRect(0,-1e3,500,120,1,spawn.propsHoist),cons[cons.length]=Constraint.create({pointA:{x:250,y:-1750},bodyB:body[body.length-1],stiffness:14e-5,length:120}),Composite.add(engine.world,cons[cons.length-1]),spawn.bodyRect(0,-1250,240,190)):(spawn.bodyRect(0,-650,225,175),spawn.mapRect(425,-950,175,50),spawn.mapRect(-25,-1150,100,50)),spawn.mapVertex(4200,-1810,"0 0 450 0 600 -2500 0 -2500"),spawn.mapVertex(5e3,-1809,"0 0 450 0 450 -2500 -150 -2500"),spawn.mapRect(4800,-3e3,800,5875),spawn.mapRect(4800,-3150,50,200),spawn.mapRect(5100,-3530,50,380),spawn.mapRect(5100,-3200,150,50),spawn.mapVertex(5450,-3650,"220 0  200 30  -200 30  -220 0  -200 -30  200 -30"),spawn.mapVertex(6225,-3350,"275 0  250 50  -250 50  -275 0  -250 -50  250 -50"),spawn.mapRect(5600,-3e3,1600,725),spawn.mapRect(7300,-3325,50,50),spawn.mapRect(7350,-4075,850,50),spawn.mapRect(7400,-4050,800,50),spawn.mapRect(7450,-4025,750,50),spawn.mapRect(7500,-4e3,700,50),spawn.mapRect(7550,-3975,650,50),spawn.mapRect(7350,-3600,850,50),spawn.mapRect(7400,-3625,800,50),spawn.mapRect(7450,-3650,575,50),spawn.mapRect(7500,-3675,525,50),spawn.mapRect(7550,-3700,475,50),spawn.mapRect(7350,-5200,1800,1125),spawn.mapRect(8475,-4075,675,2825),spawn.mapRect(7300,-2100,1175,850),spawn.mapRect(7350,-3550,850,1275),spawn.mapRect(6600,-2100,200,75),spawn.mapRect(6750,-2100,750,250),spawn.mapRect(6950,-1850,550,200),spawn.mapRect(6750,-1400,750,150),spawn.mapRect(6550,-1625,250,375),spawn.mapRect(6350,-1800,250,550),spawn.mapRect(5600,-2275,800,1025),!1===n?(spawn.bodyRect(1350,-1175,225,25),spawn.bodyRect(1450,-1200,25,25)):(spawn.bodyRect(700,-1175,225,25),spawn.bodyRect(800,-1200,25,25)),spawn.bodyRect(1100,-1375,225,225),spawn.bodyRect(1775,-925,75,25),spawn.bodyRect(2225,-950,75,50),spawn.bodyRect(2e3,-1e3,50,100),spawn.bodyRect(3100,-1175,50,25),spawn.bodyRect(2200,-375,50,50),spawn.bodyRect(2200,-425,50,50),spawn.bodyRect(2200,-475,50,50),spawn.bodyRect(2200,-525,50,50),spawn.bodyRect(1050,-400,50,25),spawn.mapRect(2200,-650,50,125),spawn.mapRect(2200,-325,50,150),spawn.mapRect(2875,-225,250,50),spawn.mapRect(2050,-1225,75,100),!1===n?simulation.difficulty>1&&(Math.random()<.2?spawn.tetherBoss(7e3,-3300,{x:7300,y:-3300}):spawn.randomLevelBoss(6100,-3600,["shooterBoss","launcherBoss","laserTargetingBoss","spiderBoss","laserBoss","pulsarBoss"])):simulation.difficulty>1&&(Math.random()<.2?spawn.tetherBoss(2300,-1300,{x:2300,y:-1750}):spawn.randomLevelBoss(2300,-1400,["shooterBoss","launcherBoss","laserTargetingBoss","spiderBoss","laserBoss","dragonFlyBoss","pulsarBoss"])),spawn.randomSmallMob(100,-1e3,1),spawn.randomSmallMob(1340,-675,1),spawn.randomSmallMob(7e3,-3750,1),spawn.randomSmallMob(6050,-3200,1),spawn.randomMob(1970+10*Math.random(),20*Math.random()-1150,1),spawn.randomMob(3500,-525,.8),spawn.randomMob(6700,-3700,.8),spawn.randomMob(2600,-1300,.7),spawn.randomMob(600,-1250,.7),spawn.randomMob(2450,-250,.6),spawn.randomMob(6200,-3200,.6),spawn.randomMob(900,-700,.5),spawn.randomMob(1960,-400,.5),spawn.randomMob(5430,-3520,.5),spawn.randomMob(400,-700,.5),spawn.randomMob(6500,-4e3,.4),spawn.randomMob(3333,-400,.4),spawn.randomMob(3050,-1220,.4),spawn.randomMob(800,1200,.3),spawn.randomMob(7200,-4e3,.3),spawn.randomMob(250,-1550,.3),spawn.randomGroup(900,-1450,.3),spawn.randomGroup(2980,-400,.3),spawn.randomGroup(5750,-3860,.4),spawn.randomGroup(1130,1300,.1),powerUps.addResearchToLevel(),powerUps.spawn(1900,-940,"heal"),powerUps.spawn(3e3,-230,"heal"),powerUps.spawn(5450,-3675,"ammo"),spawn.mapRect(-850,-2e3,600,1150),spawn.mapRect(-2850,-2e3,2150,4880),spawn.mapRect(-850,-458,500,3340),spawn.mapRect(-400,2025,3450,850),spawn.mapRect(625,1300,225,50),spawn.mapRect(850,1775,470,50),spawn.mapRect(1e3,1625,100,150),spawn.mapRect(1400,1275,100,100),spawn.mapRect(1700,1675,75,450),spawn.mapRect(2100,1375,450,50),spawn.mapRect(2900,900,175,325),spawn.mapRect(2900,1675,150,350),spawn.mapRect(2900,1225,75,100),spawn.mapRect(2900,1575,75,100),spawn.mapRect(2800,1575,100,25),spawn.mapRect(3050,1675,400,1200),spawn.mapRect(3075,1075,375,150),spawn.mapRect(3300,1075,1500,1800),spawn.tetherBoss(2330,1850,{x:2330,y:1425}),spawn.secondaryBossChance(2330,1850),powerUps.chooseRandomPowerUp(3100,1630)},house(){simulation.inGameConsole("<strong>house</strong> by <span class='color-var'>Francois</span>");const e=level.rotor(4251,-325,120,20,200,0,.01,0,-1e-4),t=level.hazard(4350,-1e3,300,110),a=level.door(1152,-1150,25,250,250),o=level.door(1152,-1625,25,150,160),s=level.button(1250,-850),n=level.door(1401,-2150,20,26,28),l=level.door(1401,-2125,20,26,53),i=level.door(1401,-2100,20,26,78),c=level.door(1401,-2075,20,26,103),p=level.door(1401,-2050,20,26,128),r=level.door(1401,-2025,20,26,153);let m,h=!1;level.setPosToSpawn(0,-50),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),level.exit.x=3100,level.exit.y=-2480,spawn.mapRect(level.exit.x,level.exit.y+20,100,20),level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="rgb(170 170 170)",level.custom=()=>{ctx.fillStyle="rgb(221, 221, 221)",ctx.fillRect(1175,-1425,4e3,1200),ctx.fillStyle="rgb(170 170 170)",ctx.fillRect(1650,-1300,175,150),ctx.fillStyle="rgb(77, 76, 76)",ctx.fillRect(624,-1150,28,1075),ctx.fillStyle="#ababab",ctx.fillRect(3420,-380,285,40),ctx.fillStyle="#474747",ctx.fillRect(3555,-367.5,15,15),ctx.fillRect(3418,-344,288,8),ctx.fillRect(3555,-327.5,15,15),ctx.fillRect(3418,-304,288,8),ctx.fillRect(3555,-285,15,15),ctx.fillStyle="#ababab",ctx.fillRect(3420,-340,285,40),ctx.fillRect(3420,-300,285,45),ctx.fillStyle="rgba(141, 141, 141,1)",ctx.fillRect(3800,-1275,250,425),ctx.fillStyle="#000",ctx.fillRect(3800,-1275,250,3),ctx.fillRect(4048,-1275,3,425),ctx.fillRect(3800,-1275,3,425),ctx.fillRect(3830,-1050,35,10),ctx.fillStyle="rgba(225, 242, 245,0.6)",ctx.fillRect(4050,-1425,1125,600),ctx.fillStyle="#444",ctx.fillRect(1736,-1300,3,150),ctx.fillRect(1650,-1224,175,3),ctx.fillStyle="#5806ac",ctx.fillRect(3375,-625,375,175),ctx.fillStyle="rgba(166, 166, 166,0.8)",ctx.fillRect(4050,-1425,1,600),ctx.fillRect(4090,-1425,1,600),ctx.fillRect(4130,-1425,1,600),ctx.fillRect(4170,-1425,1,600),ctx.fillRect(4210,-1425,1,600),ctx.fillRect(4250,-1425,1,600),ctx.fillRect(4290,-1425,1,600),ctx.fillRect(4330,-1425,1,600),ctx.fillRect(4370,-1425,1,600),ctx.fillRect(4410,-1425,1,600),ctx.fillRect(4450,-1425,1,600),ctx.fillRect(4490,-1425,1,600),ctx.fillRect(4530,-1425,1,600),ctx.fillRect(4570,-1425,1,600),ctx.fillRect(4610,-1425,1,600),ctx.fillRect(4650,-1425,1,600),ctx.fillRect(4690,-1425,1,600),ctx.fillRect(4730,-1425,1,600),ctx.fillRect(4770,-1425,1,600),ctx.fillRect(4810,-1425,1,600),ctx.fillRect(4850,-1425,1,600),ctx.fillRect(4890,-1425,1,600),ctx.fillRect(4930,-1425,1,600),ctx.fillRect(4970,-1425,1,600),ctx.fillRect(5010,-1425,1,600),ctx.fillRect(5050,-1425,1,600),ctx.fillRect(5090,-1425,1,600),ctx.fillRect(5130,-1425,1,600),ctx.fillRect(4050,-1425,1125,2),ctx.fillRect(4050,-1385,1125,2),ctx.fillRect(4050,-1345,1125,2),ctx.fillRect(4050,-1305,1125,2),ctx.fillRect(4050,-1265,1125,2),ctx.fillRect(4050,-1225,1125,2),ctx.fillRect(4050,-1185,1125,2),ctx.fillRect(4050,-1145,1125,2),ctx.fillRect(4050,-1105,1125,2),ctx.fillRect(4050,-1065,1125,2),ctx.fillRect(4050,-1025,1125,2),ctx.fillRect(4050,-985,1125,2),ctx.fillRect(4050,-945,1125,2),ctx.fillRect(4050,-905,1125,2),ctx.fillRect(4050,-865,1125,2),s.query(),s.draw(),s.isUp?0==h&&(a.isClosing=!0,o.isClosing=!0,n.isClosing=!0,l.isClosing=!0,i.isClosing=!0,c.isClosing=!0,p.isClosing=!0,r.isClosing=!0):(a.isClosing=!1,o.isClosing=!1,n.isClosing=!1,l.isClosing=!1,i.isClosing=!1,c.isClosing=!1,p.isClosing=!1,r.isClosing=!1,0==h&&(h=!0)),a.openClose(),o.openClose(),n.openClose(),l.openClose(),i.openClose(),c.openClose(),p.openClose(),r.openClose(),e.rotate(),m=ctx.createRadialGradient(512.5,-1025,5,512.5,-1025,100),m.addColorStop(0,"rgb(255, 199, 43)"),m.addColorStop(1,"rgb(170 170 170)"),ctx.fillStyle=m,ctx.fillRect(450,-1025,125,100),m=ctx.createRadialGradient(762.5,-1025,5,762.5,-1025,100),m.addColorStop(0,"rgb(255, 199, 43, 1)"),m.addColorStop(1,"rgb(170 170 170)"),ctx.fillStyle=m,ctx.fillRect(700,-1025,125,100),ctx.lineWidth=7,ctx.strokeStyle="#444444",ctx.strokeRect(1650,-1300,175,150),chair.force.y+=chair.mass*simulation.g,chair2.force.y+=chair2.mass*simulation.g,B.force.y+=B.mass*simulation.g,level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{ctx.fillStyle="rgba(64,64,64,0.97)",ctx.fillRect(2800,-400,275,175),t.query(),a.draw(),o.draw(),n.draw(),l.draw(),i.draw(),c.draw(),p.draw(),r.draw()};const d=Matter.Bodies.rectangle(4525,-255,25,200,{density:5e-4,isNotHoldable:!0}),w=Matter.Bodies.rectangle(4562,-235,100,25,{density:5e-4,isNotHoldable:!0}),y=Matter.Bodies.rectangle(4600,-202,25,91.5,{density:5e-4,isNotHoldable:!0}),x=Matter.Bodies.rectangle(5100,-255,25,200,{density:5e-4,isNotHoldable:!0}),u=Matter.Bodies.rectangle(5063,-235,100,25,{density:5e-4,isNotHoldable:!0}),R=Matter.Bodies.rectangle(5025,-202,25,91.5,{density:5e-4,isNotHoldable:!0});chair=Body.create({parts:[d,w,y]}),chair2=Body.create({parts:[x,u,R]}),Composite.add(engine.world,[chair]),Composite.add(engine.world,[chair2]),composite[composite.length]=chair,composite[composite.length]=chair2,body[body.length]=d,body[body.length]=w,body[body.length]=y,body[body.length]=x,body[body.length]=u,body[body.length]=R,setTimeout(function(){chair.collisionFilter.category=cat.body,chair.collisionFilter.mask=cat.body|cat.player|cat.bullet|cat.mob|cat.mobBullet|cat.map},1e3),setTimeout(function(){chair2.collisionFilter.category=cat.body,chair2.collisionFilter.mask=cat.body|cat.player|cat.bullet|cat.mob|cat.mobBullet|cat.map},1e3);var b=Matter.Bodies.rectangle(300,-260,34,40,{isNotHoldable:!0}),f=Matter.Bodies.rectangle(300,-200,55,80,{isNotHoldable:!0}),g=Matter.Bodies.rectangle(339,-215,20,40,{isNotHoldable:!0}),v=Matter.Bodies.rectangle(339,-175,20,60,{isNotHoldable:!0}),M=Matter.Bodies.rectangle(261,-215,20,40,{isNotHoldable:!0}),T=Matter.Bodies.rectangle(261,-175,20,60,{isNotHoldable:!0}),P=Matter.Bodies.rectangle(280,-143,20,40,{isNotHoldable:!0}),S=Matter.Bodies.rectangle(280,-103,20,60,{isNotHoldable:!0}),k=Matter.Bodies.rectangle(320,-143,20,40,{isNotHoldable:!0}),C=Matter.Bodies.rectangle(320,-103,20,60,{isNotHoldable:!0}),B=Body.create({parts:[f,b,T,M,v,g,S,C,P,k]});Composite.add(engine.world,[B]),composite[composite.length]=B,body[body.length]=f,body[body.length]=b,body[body.length]=y,body[body.length]=S,body[body.length]=P,body[body.length]=M,body[body.length]=T,body[body.length]=C,body[body.length]=k,body[body.length]=v,body[body.length]=g,setTimeout(function(){B.collisionFilter.category=cat.body,B.collisionFilter.mask=cat.body|cat.player|cat.bullet|cat.mob|cat.mobBullet|cat.map},1e3),spawn.mapRect(-200,0,5400,100),spawn.mapRect(1150,-255,4050,355),spawn.mapRect(800,-255,400,90),spawn.mapRect(650,-170,550,90),spawn.mapRect(500,-85,700,90),spawn.mapRect(1150,-850,50,175),spawn.bodyRect(1162.5,-675,25,420),spawn.mapRect(1150,-850,1500,50),spawn.mapRect(3025,-850,2175,50),spawn.mapRect(5150,-850,50,650),spawn.mapRect(4225,-400,25,150),spawn.mapRect(4225,-400,175,25),spawn.mapRect(4375,-400,25,150),spawn.bodyRect(4350,-350,20,40),spawn.bodyRect(4325,-325,20,20),spawn.bodyRect(4325,-275,20,20),spawn.mapRect(3025,-850,50,225),spawn.mapRect(2925,-775,150,150),spawn.mapRect(2800,-700,275,75),spawn.mapRect(2575,-400,175,175),spawn.mapRect(2475,-325,175,100),spawn.mapRect(2675,-475,400,100),spawn.mapRect(2675,-475,150,250),spawn.mapRect(4025,-850,50,175),spawn.mapRect(4025,-375,50,125),map[map.length]=Bodies.polygon(4050,-675,0,15),spawn.bodyRect(4040,-650,20,260,1,spawn.propsDoor),body[body.length-1].isNotHoldable=!0,consBB[consBB.length]=Constraint.create({bodyA:body[body.length-1],pointA:{x:0,y:-130},bodyB:map[map.length-1],stiffness:1}),Composite.add(engine.world,consBB[consBB.length-1]),spawn.mapRect(4025,-850,50,175),spawn.mapRect(4650,-375,325,25),spawn.mapRect(4700,-350,25,100),spawn.mapRect(4900,-350,25,100),spawn.bodyRect(4875,-400,75,25),spawn.bodyRect(4700,-400,75,25),spawn.mapRect(3400,-400,20,150),spawn.mapRect(3705,-400,20,150),spawn.mapRect(3400,-400,325,20),spawn.mapRect(3500,-415,125,17),spawn.mapRect(3550,-450,25,50),spawn.bodyRect(3075,-375,125,125),spawn.bodyRect(3075,-400,50,25),spawn.bodyRect(3725,-325,100,75),spawn.bodyRect(3375,-275,25,25),spawn.mapRect(1150,-1450,4050,50),spawn.mapRect(5150,-1450,50,650),spawn.mapRect(1150,-1450,50,300),spawn.mapRect(1150,-900,50,100),spawn.mapVertex(1066,-730,"-200 60  0 -60  100 -60  100 60"),spawn.mapRect(2350,-1450,50,175),spawn.mapRect(1475,-1025,25,225),spawn.mapRect(1850,-925,25,125),spawn.mapRect(1475,-925,400,50),spawn.bodyRect(1500,-950,375,25),spawn.bodyRect(1500,-1e3,75,50),spawn.bodyRect(1950,-1e3,30,150),spawn.bodyRect(2250,-1e3,30,150),spawn.bodyRect(1920,-1025,390,25),spawn.mapRect(4025,-1450,50,175),map[map.length]=Bodies.polygon(5050,-925,0,35.4),spawn.mapRect(5015,-960,125,40),spawn.mapRect(5050,-925,90,35.4),spawn.mapVertex(5086.5,-875,"100 60  -30 60   20 0 100 0"),spawn.mapRect(5125,-1070,15,120),spawn.bodyRect(5016,-965,108,15),spawn.mapVertex(4316,-965,"30 100  0 100   -80 -50  30 -50"),spawn.mapVertex(4675,-961.5,"30 100  0 100   0 -50  80 -50"),spawn.mapVertex(4400,-860,"0 -20  -20 20   20 20  0 -20"),spawn.mapVertex(4600,-860,"0 -20  -20 20   20 20  0 -20"),spawn.mapRect(4325,-900,350,25),spawn.mapRect(4300,-1175,25,175),spawn.mapRect(4300,-1175,125,25),spawn.mapRect(4400,-1175,25,50),spawn.mapVertex(4412.5,-1105,"-20 -20  -30 40   30 40  20 -20"),spawn.mapRect(1150,-1475,50,50),spawn.mapRect(1150,-1800,50,175),spawn.mapRect(5150,-1800,50,400),spawn.mapVertex(1300,-1900,"-150 200  -200 200   50 0 100 0"),spawn.mapVertex(1800,-2300,"-150 200  -200 200   175 -100 225 -100"),spawn.mapRect(1390,-2180,250,30),spawn.mapVertex(5050,-1900,"150 200  200 200   -50 0 -100 0"),spawn.mapVertex(4550,-2300,"150 200  200 200   -175 -100 -225 -100"),spawn.mapRect(4710,-2175,250,25),spawn.mapRect(5150,-1450,200,50),spawn.mapRect(3775,-1800,99,50),spawn.mapRect(2425,-2150,50,425),spawn.mapRect(2150,-1775,325,50),spawn.mapRect(3825,-2150,50,750),spawn.mapRect(3826,-2150,149,50),spawn.mapRect(4125,-2150,149,50),spawn.mapRect(4225,-2150,50,450),spawn.mapRect(4225,-1750,250,50),level.chain(2495,-2130,0,!0,10),spawn.bodyRect(2950,-375,120,120),spawn.bodyRect(2350,-1850,75,75),spawn.bodyRect(4275,-1900,75,100),spawn.bodyRect(4825,-1650,325,200),spawn.bodyRect(5025,-1725,25,25),spawn.bodyRect(4900,-1700,200,75),spawn.mapVertex(2950,-2096,"-75 -50  75 -50  75 0  0 100  -75 0"),spawn.mapRect(1963,-2450,2425,35),spawn.mapRect(2925,-2900,125,480),spawn.mapRect(2900,-2900,175,75),spawn.mapRect(2900,-2975,25,100),spawn.mapRect(3050,-2975,25,100),spawn.mapRect(2875,-3e3,225,25),spawn.mapRect(1e3,-1450,200,25),spawn.mapRect(500,-1150,275,25),spawn.mapRect(750,-1150,25,75),spawn.mapRect(500,-1150,25,75),spawn.mapRect(450,-1075,125,50),spawn.mapRect(700,-1075,125,50),spawn.mapRect(2985,-4600,.1,1700),spawn.bodyRect(1740,-475,80,220),spawn.bodyRect(1840,-290,38,23),spawn.bodyRect(1200+1475*Math.random(),-350,15+110*Math.random(),15+110*Math.random()),spawn.bodyRect(1200+1475*Math.random(),-350,15+110*Math.random(),15+110*Math.random()),spawn.bodyRect(3070+600*Math.random(),-1100,20+50*Math.random(),150+100*Math.random()),spawn.bodyRect(3050+1e3*Math.random(),-920,30+100*Math.random(),15+65*Math.random()),spawn.bodyRect(1600+250*Math.random(),-1540,80,220),spawn.debris(3070,-900,1e3,3),spawn.debris(1200,-350,1475,4),spawn.debris(1250,-1550,3565,9),powerUps.chooseRandomPowerUp(2860,-270),spawn.randomSmallMob(1385,-600,1),spawn.randomSmallMob(5e3,-680,1),spawn.randomSmallMob(4750,-925,1),spawn.randomSmallMob(2300,-1830,1),spawn.randomMob(3170,-720,.8),spawn.randomMob(3700,-975,.8),spawn.randomMob(2625,-1150,.7),spawn.randomMob(4175,-750,.7),spawn.randomMob(2100,-370,.7),spawn.randomMob(2e3,-1230,.7),spawn.randomMob(4175,-1075,.6),spawn.randomMob(3965,-1650,.6),spawn.randomMob(4650,-1750,.6),spawn.randomMob(830,-1170,.5),spawn.randomGroup(3730,-1100,.5),spawn.randomMob(2650,-2250,.3),spawn.randomMob(1615,-2270,.3),spawn.randomMob(1380,-1280,.25),spawn.randomMob(2280,-650,.2),spawn.randomGroup(2450,-2650,.2),spawn.randomMob(3800,-580,.2),spawn.randomMob(4630,-425,.1),spawn.randomGroup(630,-1300,-.1),spawn.randomGroup(3450,-2880,-.2),simulation.difficulty>3&&(spawn.secondaryBossChance(3380,-1775),Math.random()<.16?spawn.tetherBoss(3380,-1775,{x:3775,y:-1775}):spawn.randomLevelBoss(3100,-1850,["shooterBoss","spiderBoss","launcherBoss","laserTargetingBoss","dragonFlyBoss","laserBoss"]))},perplex(){simulation.inGameConsole("<strong>perplex</strong> by <span class='color-var'>Oranger</span>"),document.body.style.backgroundColor="#dcdcde",level.setPosToSpawn(-600,400),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),level.exit.x=550,level.exit.y=-2730,spawn.mapRect(level.exit.x,level.exit.y+20,100,20);const e=level.portal({x:-1e3,y:50},-Math.PI/2,{x:1e3,y:50},-Math.PI/2),t=level.portal({x:1400,y:-2200},-Math.PI/2,{x:1700,y:-1700},-Math.PI/2),a=level.rotor(-600,-1950,800,50,.001,0,.01,0,-.001);level.custom=()=>{e[2].query(!0),e[3].query(!0),t[2].query(!0),t[3].query(!0),a.rotate(),ctx.fillStyle="#d4f4f4",ctx.fillRect(375,-3e3,450,300),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{e[0].draw(),e[1].draw(),e[2].draw(),e[3].draw(),t[0].draw(),t[1].draw(),t[2].draw(),t[3].draw(),ctx.fillStyle="rgba(0,0,0,0.03)",ctx.fillRect(-875,-250,1500,700),ctx.fillRect(-925,-505,930,255),ctx.fillStyle="rgba(0,0,0,0.1)",ctx.fillRect(725,-1400,200,200),ctx.fillRect(925,-2150,150,2175),ctx.fillRect(925,-3400,150,850),ctx.fillStyle="rgba(0,0,0,0.03)",ctx.fillRect(1800,-2600,400,400),ctx.fillRect(2200,-2600,400,1250)},level.defaultZoom=1700,simulation.zoomTransition(level.defaultZoom),spawn.mapRect(-925,450,1850,250),spawn.mapRect(-925,-300,55,755),spawn.mapRect(-875,50,1100,50),spawn.mapRect(620,-300,305,755),spawn.bodyRect(200,350,230,100),spawn.bodyRect(300,250,150,100),spawn.mapRect(-875,-300,580,50),spawn.mapRect(0,-300,625,50),spawn.mapRect(0,-650,150,350),spawn.mapRect(-925,-650,975,150),spawn.mapRect(-1280,100,205,150),spawn.mapRect(-1280,245,360,455),spawn.mapRect(-1600,-200,200,50),spawn.mapRect(920,245,160,455),spawn.mapRect(1075,-300,500,1e3),spawn.bodyRect(100,-1e3,50,350),spawn.bodyRect(100,-1015,250,15),spawn.mapRect(-925,-1600,100,1e3),spawn.mapRect(725,-2150,200,750),spawn.mapRect(725,-1200,200,200),spawn.mapRect(300,-1e3,625,50),spawn.mapRect(1075,-2005,550,1055),spawn.mapRect(875,-1e3,50,300),spawn.mapRect(860,-1030,50,300),spawn.mapRect(850,-1100,50,300),spawn.mapRect(830,-980,50,50),spawn.mapRect(1075,-1e3,50,300),spawn.mapRect(1090,-1030,50,300),spawn.mapRect(1100,-1100,50,300),spawn.mapRect(1120,-980,50,50),spawn.mapRect(1850,-650,400,50),spawn.mapRect(-1775,-1e3,700,300),spawn.mapRect(-1900,-2300,175,1600),spawn.mapRect(-1375,-1300,300,50),spawn.mapRect(-1600,-1650,300,50),spawn.mapRect(-1775,-2300,700,300),spawn.mapRect(-830,-1600,300,50),spawn.mapRect(250,-2150,675,50),spawn.mapRect(-925,-2300,100,300),spawn.mapRect(-600,-2700,1525,150),spawn.mapRect(1075,-2150,250,150),spawn.mapRect(1475,-2700,150,700),spawn.mapRect(1775,-1650,250,150),spawn.mapRect(1575,-1505,450,555),spawn.mapRect(1800,-2250,400,50),spawn.bodyRect(2200,-2250,15,300),spawn.mapRect(2200,-1950,400,50),spawn.mapRect(2600,-1650,400,50),spawn.mapRect(2200,-1350,400,50),spawn.bodyRect(2200,-1900,15,550),spawn.bodyRect(2585,-1650,15,300),spawn.mapRect(1800,-4200,800,1600),spawn.mapRect(800,-4200,1800,-500),spawn.mapRect(1075,-3400,225,850),spawn.mapRect(800,-3400,125,850),spawn.mapRect(-700,-2700,100,450),spawn.mapRect(-1450,-2700,900,50),spawn.mapRect(-925,-2300,325,50),spawn.mapRect(-1900,-3e3,450,50),spawn.bodyRect(-1150,-2950,150,250),spawn.mapRect(-1900,-2450,250,450),spawn.mapRect(350,-3e3,50,100),spawn.mapRect(350,-3e3,450,-1700),spawn.bodyRect(350,-2900,50,50.5),spawn.bodyRect(350,-2850,50,50.5),spawn.bodyRect(350,-2800,50,50.5),spawn.bodyRect(350,-2750,50,50.5),spawn.debris(-400,450,400,5),spawn.debris(-1650,-2300,250,4),spawn.debris(-750,-650,750,3),spawn.randomMob(-650,-100,.7),spawn.randomMob(100,-150,.3),spawn.randomMob(-100,-400,0),spawn.randomMob(1450,-450,0),spawn.randomMob(1700,-800,1),spawn.randomGroup(-550,-900,-.3),spawn.randomMob(-1550,-1800,.7),spawn.randomMob(450,-2350,.3),spawn.randomGroup(2400,-2300,-.3),spawn.randomMob(2400,-1450,0),spawn.randomMob(2800,-1800,.5),spawn.randomMob(-1700,-3200,.7),spawn.randomMob(-550,-2800,.3),simulation.difficulty>3&&(Math.random()<.5?spawn.randomLevelBoss(450,-1350,["shooterBoss","launcherBoss","laserTargetingBoss","streamBoss","shieldingBoss","pulsarBoss","laserBoss"]):spawn.randomLevelBoss(-300,-3200,["shooterBoss","launcherBoss","laserTargetingBoss","streamBoss","shieldingBoss","pulsarBoss","laserBoss"])),powerUps.addResearchToLevel(),spawn.secondaryBossChance(7725,2275)},coliseum(){simulation.inGameConsole("<strong>coliseum</strong> by <span class='color-var'>iNoobBoi</span>"),level.custom=()=>{level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{},level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#dcdcde",level.setPosToSpawn(200,50),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),level.exit.x=8950,level.exit.y=170,spawn.mapRect(level.exit.x,level.exit.y+20,100,20),spawn.mapRect(-100,-400,100,600),spawn.mapRect(-100,100,700,100),spawn.mapRect(500,100,100,1700),spawn.mapRect(500,1700,4e3,100),spawn.mapRect(4100,600,400,100),spawn.mapRect(4400,600,100,1600),spawn.mapRect(4400,2100,4300,100),spawn.mapRect(8600,200,100,2e3),spawn.mapRect(8600,200,700,100),spawn.mapRect(9200,-300,100,600),spawn.mapRect(8600,-300,700,100),spawn.mapRect(8600,-700,100,500),spawn.mapRect(4400,-700,4300,100),spawn.mapRect(4400,-700,100,900),spawn.mapRect(-100,-400,4600,100),spawn.mapRect(1100,400,300,100),spawn.mapRect(500,500,300,100),spawn.mapRect(1050,800,300,100),spawn.mapRect(1770,1050,300,100),spawn.mapRect(1800,500,300,100),spawn.mapRect(2550,900,300,100),spawn.mapRect(2800,1400,300,100),spawn.mapRect(1250,1350,300,100),spawn.mapRect(4750,850,300,100),spawn.mapRect(3200,1050,300,100),spawn.mapRect(4700,100,300,100),spawn.mapRect(5350,0,300,100),spawn.mapRect(3800,900,300,100),spawn.mapRect(5100,500,300,100),spawn.mapRect(5900,-300,300,100),spawn.mapRect(6500,-700,300,1300),spawn.mapRect(7900,0,300,100),spawn.mapRect(8050,800,300,100),spawn.mapRect(7800,1900,300,100),spawn.mapRect(8300,450,300,100),spawn.mapRect(8400,1200,300,100),spawn.mapRect(7570,1100,300,100),spawn.mapRect(6700,1850,300,100),spawn.mapRect(8e3,1500,300,100),spawn.mapRect(7120,-100,300,100),spawn.mapRect(7e3,1500,300,100),spawn.mapRect(6500,1e3,300,1200),spawn.mapRect(5800,1100,300,100),spawn.mapRect(5900,1700,300,100),spawn.mapRect(5300,1400,300,100),spawn.mapRect(5200,1100,300,100),spawn.mapRect(6700,1100,300,100),spawn.mapRect(4800,1650,300,100),spawn.randomMob(1e3,700,.7),spawn.randomGroup(1100,700,.5),spawn.randomMob(1900,400,.7),spawn.randomGroup(2e3,400,.4),spawn.randomGroup(1800,1100,.4),spawn.randomGroup(2700,700,.5),spawn.randomMob(2900,1200,.7),spawn.randomSmallMob(3200,300,.9),spawn.randomSmallMob(3700,800,.9),spawn.randomMob(1100,700,.6),spawn.randomGroup(1200,700,.5),spawn.randomMob(2e3,400,.8),spawn.randomGroup(2100,400,.5),spawn.randomGroup(1900,1100,.5),spawn.randomGroup(2800,700,.5),spawn.randomMob(3e3,1200,.7),spawn.randomSmallMob(3200,300,.9),spawn.randomSmallMob(3700,800,.9),spawn.randomMob(800,1500,.9),spawn.randomMob(1500,1500,.7),spawn.randomMob(2200,1500,.6),spawn.randomMob(2500,1500,.7),spawn.randomMob(2800,1500,.7),spawn.randomMob(3300,1500,.6),spawn.randomGroup(4700,2e3,.9),spawn.randomMob(5e3,2e3,.5),spawn.randomSmallMob(5700,1500,.9),spawn.randomMob(8500,2e3,.6),spawn.randomGroup(8e3,1300,.9),spawn.randomMob(8300,-300,.4),spawn.randomSmallMob(7600,-200,.9),spawn.randomMob(5200,-300,.5),spawn.randomSmallMob(4700,-200,.5),spawn.randomGroup(4700,2e3,.8),spawn.randomMob(5e3,2e3,.5),spawn.randomSmallMob(5700,1500,.9),spawn.randomGroup(8500,2e3,.3),spawn.randomSmallMob(8e3,1300,.4),spawn.randomMob(8300,-300,.3),spawn.randomGroup(7600,-200,.5),spawn.randomMob(5200,-300,.3),spawn.randomGroup(4700,-200,.4),spawn.randomGroup(8650,-200,.9),spawn.randomMob(8650,-200,.9),simulation.difficulty>3&&spawn.randomLevelBoss(6e3,700,["pulsarBoss","laserTargetingBoss","powerUpBoss","bomberBoss","historyBoss","orbitalBoss"]),spawn.bodyRect(550,-300,50,400),spawn.bodyRect(4400,200,100,400),spawn.bodyRect(6600,600,50,400),spawn.debris(400,800,400,2),spawn.debris(3800,1600,1200,6),spawn.debris(7500,2e3,800,4),spawn.debris(5500,2e3,800,4),powerUps.spawnStartingPowerUps(1250,1500),powerUps.spawn(8650,-200,"ammo"),powerUps.spawn(200,50,"heal"),powerUps.addResearchToLevel(),spawn.secondaryBossChance(6600,600)},crossfire(){simulation.inGameConsole("<strong>crossfire</strong> by <span class='color-var'>iNoobBoi</span>");const e=level.hazard(0,850,3800,120),t=level.hazard(4600,430,2e3,120),a=level.hazard(6500,200,1e3,170);level.custom=()=>{level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{e.query(),t.query(),a.query()},level.setPosToSpawn(-500,550),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),level.exit.x=10300,level.exit.y=-830,spawn.mapRect(level.exit.x,level.exit.y+20,100,20),level.defaultZoom=3e3,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#dcdcde",spawn.mapRect(-800,-600,800,200),spawn.mapRect(-200,-600,200,800),spawn.mapRect(-800,-600,200,800),spawn.mapRect(-1e3,0,1e3,200),spawn.mapRect(-1e3,0,200,800),spawn.mapRect(-1e3,600,1400,200),spawn.mapRect(0,600,200,400),spawn.mapRect(0,950,4e3,100),spawn.mapRect(800,800,600,200),spawn.mapRect(1700,700,500,300),spawn.mapRect(2500,600,400,400),spawn.mapRect(3200,600,1200,200),spawn.mapRect(3800,600,200,800),spawn.mapRect(3800,1200,800,200),spawn.mapRect(4400,400,300,1e3),spawn.mapRect(4400,500,2e3,100),spawn.mapRect(6500,300,1e3,100),spawn.mapRect(5e3,200,700,400),spawn.mapRect(6e3,0,650,600),spawn.mapRect(6900,-300,700,100),spawn.mapRect(7400,-600,200,1100),spawn.mapRect(7400,300,2600,200),spawn.mapRect(9800,-800,200,1300),spawn.mapRect(9800,-800,1e3,200),spawn.mapRect(10600,-1400,200,800),spawn.mapRect(9800,-1400,200,400),spawn.mapRect(7400,-1400,3400,200),spawn.mapRect(7400,-1600,200,800),spawn.mapRect(5400,-1600,2200,200),spawn.mapRect(6e3,-1600,200,800),spawn.mapRect(5400,-1600,200,800),spawn.mapRect(4800,-1e3,1400,200),spawn.mapRect(4800,-1e3,200,600),spawn.mapRect(3800,-600,1200,200),spawn.mapRect(3200,-800,800,200),spawn.mapRect(3200,-800,200,800),spawn.mapRect(3800,-800,200,800),spawn.mapRect(-200,-200,4200,200),spawn.mapRect(7700,100,300,40),spawn.mapRect(8600,0,300,40),spawn.mapRect(9200,100,300,40),spawn.mapRect(9400,-200,300,40),spawn.mapRect(8e3,-200,300,40),spawn.mapRect(8500,-400,300,40),spawn.mapRect(9e3,-600,300,40),spawn.mapRect(9400,-800,300,40),spawn.mapRect(8600,-1e3,300,40),spawn.mapRect(7900,-800,300,40),spawn.randomMob(200,400,.7),spawn.randomMob(2e3,400,.7),spawn.randomMob(5e3,0,.7),spawn.randomMob(5600,0,.7),spawn.randomMob(6200,-200,.7),spawn.randomMob(7200,-800,.7),spawn.randomSmallMob(800,400,.9),spawn.randomSmallMob(1800,400,.9),spawn.randomSmallMob(5200,0,.9),spawn.randomSmallMob(6400,-200,.9),spawn.randomGroup(3800,400,.5),spawn.randomGroup(4200,400,.5),spawn.randomGroup(7e3,-800,.5),spawn.randomGroup(9800,300,.5),spawn.randomGroup(9800,-1100,.5),simulation.difficulty>3&&spawn.randomLevelBoss(8600,-600,["powerUpBoss","bomberBoss","dragonFlyBoss","spiderBoss","historyBoss"]),spawn.secondaryBossChance(7900,-400),simulation.difficulty>10&&(spawn.pulsarBoss(3600,-400),powerUps.chooseRandomPowerUp(4006,400),powerUps.chooseRandomPowerUp(4407,400),powerUps.spawnStartingPowerUps(4400,400),simulation.difficulty>30&&(powerUps.chooseRandomPowerUp(4002,400),powerUps.chooseRandomPowerUp(4004,400),spawn.pulsarBoss(4200,1e3),simulation.difficulty>60&&(powerUps.chooseRandomPowerUp(4409,400),spawn.pulsarBoss(5800,-1200),simulation.difficulty>80&&(spawn.pulsarBoss(-400,-200),simulation.difficulty>100&&(spawn.pulsarBoss(3600,-400),simulation.difficulty>120&&spawn.pulsarBoss(-400,-200)))))),powerUps.spawnStartingPowerUps(4e3,400),powerUps.addResearchToLevel(),spawn.bodyRect(7450,-800,25,200),spawn.bodyRect(9850,-1e3,25,200),spawn.mapRect(-200,350,200,450),spawn.mapRect(3800,-75,200,525),spawn.mapRect(3875,590,50,150),spawn.mapRect(3875,350,50,140);spawn.debris(1050,700,400,3),spawn.debris(1900,600,400,3),spawn.debris(2700,500,400,3),spawn.debris(4150,500,400,3),spawn.debris(5300,0,400,3),spawn.debris(6300,-100,400,3),spawn.debris(7200,-500,400,3),spawn.debris(8e3,-600,400,3),spawn.debris(8700,-700,400,3),spawn.debris(9300,-900,400,3)},vats(){simulation.inGameConsole("<strong>vats</strong> by <span class='color-var'>Dablux</span>"),level.defaultZoom=1500,simulation.zoomTransition(level.defaultZoom),level.setPosToSpawn(4400,-1060),spawn.mapRect(level.enter.x,level.enter.y+30,100,20),level.exit.x=3900,level.exit.y=1060,spawn.mapRect(level.exit.x,level.exit.y+30,100,20),document.body.style.backgroundColor="#dcdcde";var e=simulation.cycle+Math.floor(60*Math.random()+30);const t=level.door(475,900,50,200,201),a=level.door(3375,900,50,200,201),o=level.button(3500,-410),s=level.button(-1600,1090),n=level.button(-1600,-1160),l=level.button(5874,-2410);let c=!1,p=!1,r=!1;const h=level.hazard(3700,-940,100,480),d=level.hazard(3700,-461,100,1141),w=level.hazard(700,1200,2500,1300,.004),y=level.hazard(800,-460,2900,90,.004),x=level.rotor(-400,-725,800,50,.001,0,.01,0,.001),u=level.portal({x:-135,y:800},Math.PI/2,{x:570,y:-395},-Math.PI/2),R=level.portal({x:-1800,y:1900},Math.PI,{x:200,y:1105},-Math.PI/2),b=level.drip(1875,-660,-400,70),f=level.drip(3525,-940,-400,150),g=level.drip(1975,100,1200,100);t.isClosing=!0,a.isClosing=!0,spawn.mapRect(4500,-2400,1700,2050),spawn.mapRect(3800,-1e3,700,650),spawn.mapRect(4e3,-1310,50,60),spawn.mapRect(4450,-1310,50,60),spawn.mapRect(4e3,-1320,500,20),level.chain(4025,-1225,.5*Math.PI,!1,5,25),spawn.mapRect(3650,-460,50,90),spawn.mapRect(3525,-1e3,325,20),spawn.mapRect(3650,-1e3,50,440),spawn.mapRect(3300,-1e3,50,450),spawn.mapRect(3325,-725,150,25),spawn.mapRect(3500,-980,175,35),spawn.mapRect(3325,-980,50,35),spawn.mapRect(-1800,-1250,50,120),spawn.mapRect(6150,-2500,50,120),spawn.bodyRect(3350,-1e3,175,20,1,spawn.propsIsNotHoldable),Matter.Body.setMass(body[body.length-1],.7),spawn.mapRect(750,-475,50,75);for(let e=1;e<5;e++)spawn.mapRect(800+100*e+500*(e-1),-120*e-460+20*(e-1),500,20);spawn.mapRect(400,-400,2950,500),spawn.mapRect(-1800,-1150,1800,1950),spawn.mapRect(-1800,1100,780,1800),spawn.mapRect(-300,1100,1e3,1800),spawn.blockDoor(-1800,1070),level.chain(-1e3,1120,0,!0,18,20),spawn.mapRect(700,2500,2500,900),spawn.mapRect(400,100,200,599),spawn.mapRect(400,650,75,250),spawn.mapRect(525,650,75,250),spawn.mapRect(3300,650,75,250),spawn.mapRect(3425,650,75,250),spawn.mapRect(3200,1100,1800,2200),spawn.mapRect(3300,-400,200,1099),spawn.mapRect(3450,-400,250,1100),spawn.mapRect(3650,680,200,20),spawn.mapRect(3800,-400,1400,1100),spawn.mapRect(4100,700,100,300),spawn.mapRect(4900,-400,1300,2500),spawn.bodyRect(4100,1e3,100,100),spawn.bodyRect(-2100,2050,290,30);let v=body[body.length-1];v.isNotHoldable=!0,cons[cons.length]=Constraint.create({pointA:{x:-1820,y:2065},bodyB:v,pointB:{x:-135,y:0},stiffness:1,length:1}),cons[cons.length]=Constraint.create({pointA:{x:-1800,y:1400},bodyB:v,pointB:{x:135,y:0},stiffness:.005,length:700}),Composite.add(engine.world,[cons[cons.length-2],cons[cons.length-1]]),spawn.bodyRect(5225,-2525,300,75),spawn.bodyRect(4700,-2525,100,75,.5),spawn.bodyRect(4900,-2600,50,50,.4),spawn.bodyRect(5050,-2475,500,100,.4),spawn.bodyRect(2950,-950,175,75,.5),spawn.bodyRect(3050,-1e3,75,50,.3),spawn.bodyRect(2300,-850,75,50,.7),spawn.bodyRect(2150,-575,100,175,.6),spawn.bodyRect(2500,-550,400,150,.2),spawn.bodyRect(1525,-500,225,100,.2),spawn.bodyRect(1625,-575,100,75),spawn.bodyRect(1e3,-475,100,100,.8),spawn.bodyRect(1225,-450,125,50,.9),spawn.bodyRect(525,-500,175,125,.75),spawn.bodyRect(575,-600,100,75,.5),spawn.bodyRect(-925,-1225,275,75,.4),spawn.bodyRect(-1125,-1300,200,150,.7),spawn.bodyRect(-475,-1250,200,100,.8),spawn.bodyRect(-425,-1300,100,50,.75),spawn.bodyRect(-1225,-1200,100,25,.45),spawn.bodyRect(-1025,-1350,75,50,.5),spawn.bodyRect(-450,1025,75,50,.5),spawn.bodyRect(-775,1050,50,50,.6),spawn.bodyRect(-650,975,75,75,.2),spawn.bodyRect(-475,1025,100,50,.7),spawn.bodyRect(-450,1025,75,50,.6),spawn.bodyRect(-800,1050,100,50,.5),spawn.bodyRect(-600,950,75,75,.3),spawn.bodyRect(-500,1e3,75,25,.2),spawn.bodyRect(-900,1025,150,50),spawn.bodyRect(-1350,1e3,100,100,.4),spawn.bodyRect(-1225,1075,100,25),spawn.debris(900,-1e3,2e3,16),spawn.randomSmallMob(2900,-1e3),spawn.randomSmallMob(1750,-700),spawn.randomMob(4250,-1400),spawn.randomMob(4800,-2400,.3),spawn.randomMob(1e3,600,.3),spawn.randomMob(1650,950,.2),spawn.randomMob(1300,-1250,0),spawn.randomMob(-600,-1250,.1),spawn.randomMob(1e3,-600,.4),spawn.randomMob(1800,-700,.4),spawn.randomMob(2200,950,.2),spawn.randomMob(-1900,1400,.3),spawn.randomMob(-750,-1e3,.3),spawn.randomMob(3250,1e3,.1),spawn.randomMob(2e3,-2800,.4),spawn.randomMob(2200,-500,0),spawn.randomMob(1800,-450,.3),spawn.randomGroup(2300,-450,1),spawn.randomGroup(3e3,-450,.3),spawn.randomGroup(6e3,-2700,0),spawn.randomGroup(-1200,-1300,-.3),powerUps.addResearchToLevel(),simulation.difficulty>3?spawn.randomLevelBoss(1900,400,["shieldingBoss","shooterBoss","launcherBoss","streamBoss"]):a.isClosing=!1,spawn.secondaryBossChance(800,-800),powerUps.spawn(4450,1050,"heal"),Math.random()>.2+simulation.difficulty/60?(powerUps.spawn(4500,1050,"ammo"),powerUps.spawn(4550,1050,"ammo")):(powerUps.spawn(4500,1050,"tech"),spawn.randomMob(4550,1050,1/0)),powerUps.spawnStartingPowerUps(3750,-940);const M=500;for(let e=1;e<5;e++){spawn.bodyRect(700+100*e+M*(e-1),1110,M,20,1,spawn.propsIsNotHoldable);let t=body[body.length-1];cons[cons.length]=Constraint.create({pointA:{x:t.position.x-250+50,y:t.position.y-1025},bodyB:t,pointB:{x:-200,y:0},stiffness:.002,length:1e3}),cons[cons.length]=Constraint.create({pointA:{x:t.position.x+250-50,y:t.position.y-1025},bodyB:t,pointB:{x:200,y:0},stiffness:.002,length:1e3}),Composite.add(engine.world,[cons[cons.length-1],cons[cons.length-2]])}const T=level.boost(4400,-1385,1200);level.custom=()=>{if(T.query(),s.query(),n.query(),l.query(),s.isUp||(c||(Matter.Composite.remove(engine.world,cons[1]),cons.splice(1,2)),c=!0),n.isUp||(p=!0),l.isUp||(r=!0),t.isClosing=!(c&&p&&r),t.openClose(),a.openClose(),m.pos.y>1600&&700<m.pos.x&&m.pos.x<3200){Matter.Body.setVelocity(player,{x:0,y:0}),Matter.Body.setPosition(player,{x:200,y:1e3});for(let e=0;e<bullet.length;e++)bullet[e].botType&&(Matter.Body.setPosition(bullet[e],Vector.add(player.position,{x:250*(Math.random()-.5),y:250*(Math.random()-.5)})),Matter.Body.setVelocity(bullet[e],{x:0,y:0}));m.takeDamage(.1*simulation.difficultyMode),m.energy-=.1*simulation.difficultyMode}if(simulation.cycle>=e&&body.length<100){var d=body.length;body[d]=Matter.Bodies.polygon(Math.floor(1700*Math.random())+1050,100,Math.floor(11*Math.random())+10,Math.floor(20*Math.random())+15),body[d].collisionFilter.category=cat.body,body[d].collisionFilter.mask=cat.player|cat.map|cat.body|cat.bullet|cat.mob|cat.mobBullet,Composite.add(engine.world,body[d]),e=simulation.cycle+Math.floor(60*Math.random()+30)}if(a.isClosing)for(a.isClosing=!1,i=0;i<mob.length;i++)mob[i].isBoss&&525<mob[i].position.x<3200&&-2500<mob[i].position.y<100&&(a.isClosing=!0);for(let e=0,t=body.length;e<t;e++)if(body[e].position.x>700&&body[e].position.x<3200&&body[e].position.y>1200&&!body[e].isNotHoldable){Matter.Body.scale(body[e],.99,.99),body[e].velocity.y>3&&(body[e].force.y-=.96*body[e].mass*simulation.g);const t=body[e].velocity.y>0?Math.max(.3,1-.0015*body[e].velocity.y*body[e].velocity.y):Math.max(.98,1-.001*Math.abs(body[e].velocity.y));if(Matter.Body.setVelocity(body[e],{x:Math.max(.6,1-.07*Math.abs(body[e].velocity.x))*body[e].velocity.x,y:t*body[e].velocity.y}),body[e].mass<.05){Matter.Composite.remove(engine.world,body[e]),body.splice(e,1);break}}for(let e=0,t=mob.length;e<t;++e)mob[e].position.x>700&&mob[e].position.x<3200&&mob[e].alive&&!mob[e].isShielded&&mob[e].position.y>1200&&mobs.statusDoT(mob[e],.005,30);ctx.beginPath(),ctx.fillStyle="#666",ctx.arc(s.min.x-50,s.min.y-70,20,0,2*Math.PI),ctx.fillRect(s.min.x-55,s.max.y+25,10,-95),ctx.fill(),ctx.beginPath(),ctx.arc(n.min.x-50,n.min.y-70,20,0,2*Math.PI),ctx.fillRect(n.min.x-55,n.max.y+25,10,-95),ctx.fill(),ctx.beginPath(),ctx.arc(l.min.x-50,l.min.y-70,20,0,2*Math.PI),ctx.fillRect(l.min.x-55,l.max.y+25,10,-95),ctx.fill(),ctx.beginPath(),ctx.arc(s.min.x-50,s.min.y-70,10,0,2*Math.PI),ctx.fillStyle=c?"rgba(0, 255, 0, 0.9)":"rgba(255, 0, 0, 0.9)",ctx.fill(),ctx.beginPath(),ctx.arc(n.min.x-50,n.min.y-70,10,0,2*Math.PI),ctx.fillStyle=p?"rgba(0, 255, 0, 0.9)":"rgba(255, 0, 0, 0.9)",ctx.fill(),ctx.beginPath(),ctx.arc(l.min.x-50,l.min.y-70,10,0,2*Math.PI),ctx.fillStyle=r?"rgba(0, 255, 0, 0.9)":"rgba(255, 0, 0, 0.9)",ctx.fill(),w.query(),ctx.shadowColor="hsla(160, 100%, 50%, 1)",ctx.shadowBlur=100,ctx.shadowBlur=0,ctx.shadowColor="rgba(0, 0, 0, 0)",o.query(),u[2].query(),R[2].query(),h.level(o.isUp),y.level(!r),x.rotate(),ctx.fillStyle="#d4f4f4",ctx.fillRect(3500,675,600,450),level.enter.draw(),level.exit.drawAndCheck()},level.customTopLayer=()=>{y.query(),h.query(),d.query(),b.draw(),f.draw(),g.draw(),ctx.fillStyle=`rgba(68, 68, 68, ${Math.max(.3,Math.min((4200-m.pos.x)/100,.99))})`,ctx.fillRect(4100,650,850,500),ctx.fillStyle="rgba(0,20,40,0.1)",ctx.fillRect(4025,-1300,475,300),ctx.fillRect(3325,-1e3,375,600),ctx.fillRect(425,100,3050,2400),ctx.fillRect(-1775,800,1750,2100),ctx.fillStyle="rgba(0,20,40,0.2)",ctx.fillRect(2725,-860,450,460),ctx.fillRect(2125,-760,450,360),ctx.fillRect(1525,-660,450,260),ctx.fillRect(925,-560,450,160),ctx.fillRect(3700,-980,100,1200),ctx.fillStyle="#444",ctx.fillRect(465,690,70,209),ctx.fillRect(3365,690,70,209),ctx.beginPath(),ctx.arc(500,870,20,0,2*Math.PI),ctx.arc(500,820,20,0,2*Math.PI),ctx.arc(500,770,20,0,2*Math.PI),ctx.fillStyle="rgba(0, 0, 0, 0.3",ctx.fill(),ctx.beginPath(),ctx.arc(500,870,10,0,2*Math.PI),ctx.fillStyle=c?"rgba(0, 255, 0, 0.9)":"rgba(255, 0, 0, 0.9)",ctx.fill(),ctx.beginPath(),ctx.arc(500,820,10,0,2*Math.PI),ctx.fillStyle=p?"rgba(0, 255, 0, 0.9)":"rgba(255, 0, 0, 0.9)",ctx.fill(),ctx.beginPath(),ctx.arc(500,770,10,0,2*Math.PI),ctx.fillStyle=r?"rgba(0, 255, 0, 0.9)":"rgba(255, 0, 0, 0.9)",ctx.fill(),o.draw(),s.draw(),n.draw(),l.draw(),u[0].draw(),u[2].draw(),R[0].draw(),R[2].draw()}},ngon(){simulation.inGameConsole("<strong>\"ngon\"</strong> by <span class='color-var'>Oranger</span>"),document.body.style.backgroundColor="#dcdcde";let e=[],t=-200,a=-2350,o=0,s=15,n={x:12,y:24},l={x:-30.96,y:58.34},i={x:0,y:91},c="#ccc",p="#bbb",r="#999",m="#aaa";const h=level.boost(2550,1500,1700),d=level.boost(-3400,-2050,2100);level.custom=()=>{h.query(),d.query(),level.exit.drawAndCheck(),level.enter.draw();for(let t=0;t<e.length;t++)e[t].force.y+=e[t].mass*simulation.g;ctx.fillStyle="#444",ctx.fillRect(2350,995,40,10),ctx.save(),ctx.translate(t,a),x(-3,m),x(0,r),ctx.rotate(o),ctx.beginPath(),ctx.arc(0,0,30*s,0,2*Math.PI);let n=ctx.createLinearGradient(-30*s,0,30*s,0);n.addColorStop(0,p),n.addColorStop(1,c),ctx.fillStyle=n,ctx.fill(),ctx.arc(15*s,0,4*s,0,2*Math.PI),ctx.strokeStyle=r,ctx.lineWidth=2*s,ctx.stroke(),ctx.restore()},level.customTopLayer=()=>{ctx.fillStyle="rgba(60,60,60,0.9)",ctx.fillRect(-3451,-4e3,202,1500),ctx.fillRect(2499,-170,202,1170),ctx.fillStyle="rgba(0,0,0,0.2)",ctx.beginPath(),ctx.moveTo(2360,1e3),ctx.lineTo(2120,900),ctx.lineTo(1500,900),ctx.lineTo(1500,1500),ctx.lineTo(3e3,1500),ctx.lineTo(3e3,1e3),ctx.lineTo(2380,1e3),ctx.lineTo(2870,1500),ctx.lineTo(1870,1500),ctx.lineTo(2360,1e3),ctx.fill(),ctx.fillStyle="rgba(0,0,0,0.3)",ctx.fillRect(1600,-1e3,1400,830),ctx.fillRect(1600,-170,520,170),ctx.fillRect(-1300,-200,2200,200),ctx.fillRect(-800,-400,1200,200),ctx.fillRect(-500,-700,600,300),ctx.fillRect(-4e3,-2500,2e3,2500)},level.setPosToSpawn(1810,1450),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),level.exit.x=2700,level.exit.y=-4030,spawn.mapRect(level.exit.x,level.exit.y+20,100,20),level.defaultZoom=3500,simulation.zoomTransition(level.defaultZoom),spawn.debris(2750,1500,200,4),spawn.debris(1770,-350,120,4),spawn.debris(-3200,0,1e3,6),spawn.mapRect(-4100,1500,7200,100),spawn.mapRect(3e3,-4e3,100,5600),spawn.mapRect(-4100,-4e3,100,5600),spawn.mapRect(1600,-4e3,1500,3e3),spawn.mapRect(-4100,0,5600,1550),spawn.mapRect(1500,0,700,900),spawn.mapRect(2120,-170,380,1170),spawn.mapRect(2700,-170,400,1170),spawn.mapRect(-3500,-300,300,400),spawn.mapRect(-3900,-600,300,100),spawn.mapRect(-3500,-900,300,100),spawn.mapRect(-3100,-1150,1e3,150),spawn.mapRect(-2200,-2600,200,1600),spawn.mapRect(-2700,-1450,300,100),spawn.mapRect(-3100,-1750,300,100),spawn.mapRect(-3500,-2050,300,100),spawn.mapRect(-4100,-4e3,650,1500),spawn.mapRect(-3250,-4e3,1250,1500),spawn.mapRect(-700,-900,1e3,200),spawn.mapRect(-700,-900,200,500),spawn.mapRect(-1e3,-600,500,200),spawn.mapRect(-1e3,-600,200,400),spawn.mapRect(-1300,-300,500,100),spawn.mapRect(100,-900,200,500),spawn.mapRect(100,-600,500,200),spawn.mapRect(400,-600,200,400),spawn.mapRect(400,-300,500,100),u(-1900,-4e3,1,1e3,1,!1,{density:.001,friction:1e-4,frictionAir:.001,frictionStatic:0,restitution:0,isNotHoldable:!0}),u(1900,-4600,.2,300,5e-4,!1,{density:5e-5,friction:1e-4,frictionAir:.003,frictionStatic:0,restitution:1,isNotHoldable:!0}),spawn.bodyRect(1920,-400,200,400),spawn.bodyRect(1720,-250,200,250),spawn.bodyRect(1770,-300,150,50),spawn.bodyRect(2120,-280,100,100),spawn.bodyRect(1990,-500,100,100),spawn.bodyRect(850,-50,50,50),spawn.bodyRect(850,-100,50,50),spawn.bodyRect(850,-150,50,50),spawn.bodyRect(850,-200,50,50),spawn.bodyRect(-1300,-50,50,50),spawn.bodyRect(-1300,-100,50,50),spawn.bodyRect(-1300,-150,50,50),spawn.bodyRect(-1300,-200,50,50),spawn.randomMob(700+100*Math.random(),100*Math.random()-500,1),spawn.randomMob(400+100*Math.random(),100*Math.random()-800,.4),spawn.randomMob(100+100*Math.random(),100*Math.random()-1100,-.2),spawn.randomGroup(-200,-1400,-.4),spawn.randomMob(100*Math.random()-600,100*Math.random()-1100,-.2),spawn.randomMob(100*Math.random()-900,100*Math.random()-800,.4),spawn.randomMob(100*Math.random()-1200,100*Math.random()-500,1),spawn.randomSmallMob(400+300*Math.random(),100*Math.random()-150,.2),spawn.randomSmallMob(300*Math.random()-1100,100*Math.random()-150,.2),spawn.randomMob(300*Math.random()-2600,300*Math.random()-700,.6),spawn.randomSmallMob(300*Math.random()-3e3,300*Math.random()-400,.2),spawn.randomSmallMob(300*Math.random()-3e3,300*Math.random()-400,0),spawn.randomMob(100*Math.random()-3900,100*Math.random()-200,.6),spawn.randomMob(100*Math.random()-3400,-400,.4),spawn.randomSmallMob(100*Math.random()-3800,-700,-.4),spawn.randomMob(100*Math.random()-3400,-1e3,.6),spawn.randomMob(100*Math.random()-3e3,-1850,0),spawn.randomGroup(-2700,-2e3,.4),spawn.randomSmallMob(-3800,-5800,-.2),spawn.randomSmallMob(-2400,-5200,.2),spawn.randomGroup(2e3,-5700,.6),powerUps.addResearchToLevel();let w=["shooterBoss","launcherBoss","laserTargetingBoss","streamBoss","pulsarBoss","spawnerBossCulture","laserBoss","growBossCulture"],y=Math.random();function x(e,t){ctx.save(),ctx.translate(e,e);let a=t;ctx.beginPath(),ctx.moveTo((n.x+e)*s,(n.y+e)*s),ctx.lineTo((l.x+2*e)*s,(l.y+e)*s),ctx.lineTo((i.x+e)*s,(i.y+e)*s),ctx.strokeStyle=a,ctx.lineWidth=7*s,ctx.stroke(),ctx.beginPath(),ctx.moveTo((i.x+e)*s,(i.y+e)*s),ctx.lineTo((i.x-15+e)*s,(i.y+5+e)*s),ctx.moveTo((i.x+e)*s,(i.y+e)*s),ctx.lineTo((i.x+15+e)*s,(i.y+5+e)*s),ctx.lineWidth=4*s,ctx.stroke(),ctx.beginPath(),ctx.arc((n.x+e)*s,(n.y+e)*s,11*s,0,2*Math.PI),ctx.moveTo((l.x+7+2*e)*s,(l.y+e)*s),ctx.arc((l.x+2*e)*s,(l.y+e)*s,7*s,0,2*Math.PI),ctx.moveTo((i.x+6+e)*s,(i.y+e)*s),ctx.arc((i.x+e)*s,(i.y+e)*s,6*s,0,2*Math.PI),ctx.fillStyle=c,ctx.fill(),ctx.lineWidth=2*s,ctx.stroke(),ctx.restore()}function u(t,a,o,s,n,l,i){function c(t,a,o,s,n,l,i,c,p,r){const m=Matter.Bodies.fromVertices(t,a,Vertices.fromPath(o),r),h=Matter.Bodies.fromVertices(s,n,Vertices.fromPath(l),r),d=Matter.Bodies.fromVertices(i,c,Vertices.fromPath(p),r),w=Body.create({parts:[m,h,d]});Composite.add(engine.world,[w]),e[e.length]=w,composite[composite.length]=w,body[body.length]=m,body[body.length]=h,body[body.length]=d,setTimeout(function(){w.collisionFilter.category=cat.body,w.collisionFilter.mask=cat.body|cat.player|cat.bullet|cat.mob|cat.mobBullet|cat.map},1e3)}function p(e,t,a,o,s,n,l=!1){l&&(map[map.length]=Bodies.polygon(e,t,0,15)),cons[cons.length]=Constraint.create({pointA:{x:e,y:t},bodyB:n,pointB:{x:a,y:o},stiffness:s}),Composite.add(engine.world,cons[cons.length-1])}c(t+100*o,a+310*o,"0 0 "+200*o+" 0 "+200*o+" "+620*o+" 0 "+620*o,t+300*o,a+160*o,200*o+" "+40*o+" "+400*o+" "+40*o+" "+400*o+" "+280*o+" "+200*o+" "+280*o,t+499*o,a+333.3*o,400*o+" "+40*o+" "+540*o+" "+40*o+" "+600*o+" "+100*o+" "+600*o+" "+620*o+" "+400*o+" "+620*o+" "+400*o+" "+280*o,i),p(t+300*o,a-s,0,-10*o,n,composite[composite.length-1],l),spawn.bodyRect(t+800*o,a+250*o,200*o,100*o,1,i),body[body.length-1].frictionAir=.05,p(t+900*o,a-s,0,-30*o,n,body[body.length-1],l),c(t+1400*o,a+300*o,"0 0 "+250*o+" 0 "+425*o+" "+175*o+" "+425*o+" "+450*o+" "+275*o+" "+600*o+" 0 "+600*o+" "+-175*o+" "+425*o+" "+-175*o+" "+175*o,t+1636*o,a+633*o,425*o+" "+450*o+" "+425*o+" "+750*o+" "+375*o+" "+800*o+" "+275*o+" "+675*o+" "+275*o+" "+600*o,t+1398*o,a+737*o,375*o+" "+800*o+" "+-75*o+" "+800*o+" "+-75*o+" "+675*o+" "+275*o+" "+675*o,i),p(t+1500*o,a-s,0,-15*o,n,composite[composite.length-1],l),spawn.bodyVertex(t+2300*o,a+300*o,"0 0 "+250*o+" 0 "+425*o+" "+175*o+" "+425*o+" "+425*o+" "+250*o+" "+600*o+" 0 "+600*o+" "+-175*o+" "+425*o+" "+-175*o+" "+175*o,i),p(t+2300*o,a-s,0,-10*o,n,body[body.length-1],l),c(t+2900*o,a+310*o,"0 0 "+200*o+" 0 "+200*o+" "+620*o+" 0 "+620*o,t+3100*o,a+160*o,200*o+" "+40*o+" "+400*o+" "+40*o+" "+400*o+" "+280*o+" "+200*o+" "+280*o,t+3300*o,a+333.3*o,400*o+" "+40*o+" "+540*o+" "+40*o+" "+600*o+" "+100*o+" "+600*o+" "+620*o+" "+400*o+" "+620*o+" "+400*o+" "+280*o,i),p(t+3100*o,a-s,0,-10*o,n,composite[composite.length-1],l)}simulation.difficulty>3&&(y<.6?spawn.randomLevelBoss(250*Math.random()-1500,200*Math.random()-1100,w):y<.85?spawn.laserBoss(300*Math.random()-350,200*Math.random()-600):spawn.randomLevelBoss(850+250*Math.random(),200*Math.random()-1100,w)),spawn.secondaryBossChance(850+250*Math.random(),200*Math.random()-1100)},tunnel(){simulation.inGameConsole("<strong>tunnel</strong> by <span class='color-var'>Scarlettt</span>"),level.custom=()=>{if(level.exit.drawAndCheck(),ctx.beginPath(),ctx.moveTo(level.enter.x,level.enter.y+30),ctx.lineTo(level.enter.x,level.enter.y-80),ctx.bezierCurveTo(level.enter.x,level.enter.y-170,level.enter.x+100,level.enter.y-170,level.enter.x+100,level.enter.y-80),ctx.lineTo(level.enter.x+100,level.enter.y+30),ctx.lineTo(level.enter.x,level.enter.y+30),ctx.fillStyle="#013",ctx.fill(),ctx.beginPath(),ctx.moveTo(level.exit.x,level.exit.y+30),ctx.lineTo(level.exit.x,level.exit.y-80),ctx.bezierCurveTo(level.exit.x,level.exit.y-170,level.exit.x+100,level.exit.y-170,level.exit.x+100,level.exit.y-80),ctx.lineTo(level.exit.x+100,level.exit.y+30),ctx.lineTo(level.exit.x,level.exit.y+30),ctx.fillStyle="#9ff",ctx.fill(),ctx.fillStyle="#322",ctx.fillRect(3750,-1650,3500,350),m.pos.x>1500&&m.pos.x<2500&&m.pos.y>-4e3&&m.pos.y<-3500&&mob.reduce((e,t)=>e||Math.sqrt((t.position.x-3600)*(t.position.x-3600)+(t.position.y+3600)*(t.position.y+3600))<2e4&&t.isDropPowerUp,!1)&&!c&&Matter.Body.setPosition(player,{x:2800,y:m.pos.y}),h.query(),w=w||!h.isUp,d.level(!w),Matter.Query.region([player],d).length&&(m.energy-=.001),e.query(),e.draw(),!e.isUp&&!a){for(var p=0;p<5;p++)powerUps.spawn(3614,-3700,"ammo");a=!0}if(t.query(),t.draw(),!t.isUp&&!o){for(p=0;p<1;p++)powerUps.spawn(1614,-3700,"research");o=!0}e.isUp?(s--,n&&(s+=3),s=Math.min(60,Math.max(s,0))):(s+=2,n=1,s=Math.max(0,Math.min(s,60))),n>0&&(n++,n>150&&(n=0)),c||!t.isUp?(l+=2,i=1,l=Math.max(0,Math.min(l,60))):(l--,i&&(l+=3),l=Math.min(60,Math.max(l,0))),i>0&&(i++,i>150&&(i=0)),ctx.beginPath(),ctx.arc(m.pos.x,m.pos.y,200,0,2*Math.PI),ctx.fillStyle="#ff25",ctx.fill(),ctx.beginPath(),ctx.arc(m.pos.x,m.pos.y,400,0,2*Math.PI),ctx.fillStyle="#ff22",ctx.fill(),ctx.beginPath(),ctx.arc(m.pos.x,m.pos.y,700,0,2*Math.PI),ctx.fillStyle="#ff21",ctx.fill(),y.move(),y.drawTrack()},level.customTopLayer=()=>{d.query(),r.level(c),r.query(),h.draw();let e=x.reduce((e,t)=>e||Math.sqrt((m.pos.x-t[0])*(m.pos.x-t[0])+(m.pos.y+90-t[1])*(m.pos.y+90-t[1]))<50,!1);e?(u++,u=Math.min(u,100)):(u--,u=Math.max(u,-8)),u>-8&&(ctx.fillStyle="#fa0b",ctx.fillRect(m.pos.x-50,m.pos.y-100,Math.min(12.5*u+100,100),15)),u>0&&(ctx.fillStyle="#f00c",ctx.fillRect(m.pos.x-50,m.pos.y-100,u,15),m.takeDamage(.001*(1.5*e+1)),T(m.pos.x,m.pos.y+90,"#d40",Math.PI/2+1),T(m.pos.x,m.pos.y+90,"#d40",Math.PI/2+1),T(m.pos.x,m.pos.y+90,"#d40",Math.PI/2+1),T(m.pos.x,m.pos.y+90,"#d40",Math.PI/2-1),T(m.pos.x,m.pos.y+90,"#d40",Math.PI/2-1),T(m.pos.x,m.pos.y+90,"#d40",Math.PI/2-1),T(m.pos.x,m.pos.y+90,"#f70",Math.PI/2),T(m.pos.x,m.pos.y+90,"#f70",Math.PI/2),T(m.pos.x,m.pos.y+90,"#f70",Math.PI/2));for(let e=0;e<5;e++){T(1130+10*e,-1700);for(let e=0;e<7;e++)T(2550+200*e,-2800);for(let e=0;e<10;e++)T(2800+500*e,-1650);for(let e=0;e<9;e++)T(1595+95*e,-3860);T(4850,-1300),T(6350,-1300)}ctx.fillStyle="#541";for(let e=0;e<9;e++)ctx.fillRect(1592+95*e,-3860,6,70);m.pos.x>1500&&m.pos.x<3750&&m.pos.y>-5e3&&m.pos.y<-3300?(R-=5,R=Math.max(R,85)):(R+=5,R=Math.min(R,250));let t=mob.reduce((e,t)=>e||Math.sqrt((t.position.x-3600)*(t.position.x-3600)+(t.position.y+3600)*(t.position.y+3600))<2e4&&t.isDropPowerUp,!1)&&!c;if(p.isClosing=t,p.openClose(),ctx.fillStyle="#444444"+R.toString(16),ctx.fillRect(1480,-5e3,2270,1710),t&&(ctx.fillStyle="#444",ctx.fillRect(1480,-5e3,1070,1710)),s>0&&(P([3614,-3530],[2900,-3900],[3400,-3600],s,60),s>=42&&(ctx.font="27px monospace",ctx.textAlign="start",ctx.fillStyle="#00ffff"+Math.floor(12.75*(s-40)).toString(16),ctx.fillText("Waste Discharge Interruption:",2910,-3870),ctx.fillText("Owner 'Scarlet' not found",2910,-3830),ctx.fillText("Detected user: 'm'",2910,-3790),ctx.fillStyle=(t?"#ff6644":"#ffff44")+Math.floor(12.75*(s-40)).toString(16),ctx.fillText(t?"AREA HAS MOBS.":"Area clear.",2910,-3710),ctx.fillText(t?"'openDoor' failed.":"'openDoor' complete.",2910,-3670),ctx.strokeStyle="#00ff00"+Math.floor(6*(s-40)).toString(16),ctx.beginPath(),ctx.arc(3300,-3730,60,0,2*Math.PI),ctx.stroke(),ctx.arc(3330,-3730,8,0,2*Math.PI),ctx.lineWidth=4,ctx.stroke(),ctx.textAlign="center",ctx.fillStyle="#00ffff"+Math.floor(12.75*(s-40)).toString(16),ctx.font="30px monospace",ctx.fillText("n-gon inc",3300,-3630),ctx.font="25px Arial")),l>0&&(P([1614,-3530],[2050,-3900],[1550,-3600],l,60),l>=42&&(ctx.font="27px monospace",ctx.textAlign="start",ctx.fillStyle="#00ffff"+Math.floor(12.75*(l-40)).toString(16),ctx.fillText("SECURITY BREACH DETECTED",1560,-3870),ctx.fillText("Entity name: m",1560,-3830),ctx.fillStyle=(tech.totalCount<25?tech.totalCount<10?"#ffff44":"#22ff22":"#ff6644")+Math.floor(12.75*(l-40)).toString(16),ctx.fillText("Threat level: "+(tech.totalCount<25?tech.totalCount<10?"Low":"Medium":"HIGH"),1560,-3790),tech.totalCount>=15&&ctx.fillText("PROCEDURE ACTIVATED",1560,-3750),ctx.strokeStyle="#00ff00"+Math.floor(6*(l-40)).toString(16),ctx.beginPath(),ctx.arc(1950,-3730,60,0,2*Math.PI),ctx.stroke(),ctx.arc(1980,-3730,8,0,2*Math.PI),ctx.lineWidth=4,ctx.stroke(),ctx.textAlign="center",ctx.fillStyle="#00ffff"+Math.floor(12.75*(l-40)).toString(16),ctx.font="30px monospace",ctx.fillText("n-gon inc",1950,-3630),ctx.font="25px Arial",l>=60&&!c&&tech.totalCount>=10))){for(let e=0;e<5;e++)spawn.exploder(1614,-3900),tech.totalCount>=25&&spawn.randomMob(1614,-3900,1/0);c=!0}},level.setPosToSpawn(0,-50),level.exit.x=8500,level.exit.y=680,level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#123",spawn.mapRect(-100,0,1050,100),spawn.mapRect(900,-300,50,300),spawn.mapRect(700,-300,50,200),spawn.mapRect(-100,-350,850,50),spawn.mapRect(900,-350,850,50),spawn.mapRect(-100,-1550,50,1200),spawn.mapRect(1700,-1550,50,1200),spawn.mapRect(-100,-1550,850,50),spawn.mapRect(900,-1550,850,50),spawn.bodyRect(700,-400,50,50),spawn.bodyRect(900,-400,50,50),spawn.mapRect(500,-650,650,25),spawn.mapRect(200,-1e3,200,25),spawn.mapRect(1250,-1e3,200,25),spawn.mapRect(600,-1300,450,25),spawn.mapRect(700,-1650,50,100),spawn.mapRect(900,-1650,50,100),spawn.mapRect(950,-1650,3050,50),spawn.mapRect(1100,-1700,100,50),spawn.mapRect(0,-5e3,1500,3e3),spawn.mapRect(1500,-2050,300,50),spawn.mapRect(2e3,-3100,300,1100),spawn.mapRect(1500,-5e3,2250,1e3),spawn.mapRect(1500,-3500,1050,225),spawn.mapRect(4e3,-5e3,500,3e3),spawn.mapRect(3748,-5e3,252,1550),spawn.mapRect(1700,-2400,300,50),spawn.mapRect(1500,-2750,300,50),spawn.mapRect(2300,-3e3,1700,50),spawn.mapRect(2300,-2800,1700,800),spawn.mapRect(2450,-3300,1300,100),spawn.mapRect(2700,-3500,1050,50),spawn.mapRect(2549,-5e3,1201,1e3);const e=level.button(3550,-3500),t=level.button(1550,-3500);let a=!1,o=!1,s=0,n=0,l=0,i=0,c=!1;const p=level.door(2450,-4e3,100,500,490),r=level.hazard(1500,-4e3,1e3,510,.01),h=level.button(3800,-3e3),d=level.hazard(2300,-3090,1700,110,.005);let w=!1;powerUps.spawn(3900,-3100,"heal",!0,30),powerUps.spawn(3900,-3100,"heal",!0,30),spawn.mapRect(2e3,-1850,50,200),spawn.mapRect(2200,-2e3,50,200),spawn.mapRect(2400,-1850,50,200),spawn.mapRect(4200,-1650,1300,50),spawn.mapRect(5700,-1650,1300,50),spawn.mapRect(7200,-1650,750,50),spawn.mapRect(3700,-1600,50,350),spawn.mapRect(7250,-1600,50,350),spawn.mapRect(3750,-1300,3500,50),spawn.mapRect(4500,-2150,3550,50),spawn.mapRect(7900,-1600,50,1e3),spawn.mapRect(8050,-3e3,50,2400),spawn.mapRect(7e3,-600,950,50),spawn.mapRect(8050,-600,950,50),spawn.mapRect(7e3,-600,50,1e3),spawn.mapRect(8950,-600,50,1e3),spawn.mapRect(7e3,400,950,50),spawn.mapRect(8050,400,950,50),spawn.mapRect(7900,400,50,300),spawn.mapRect(7900,700,1e3,50);const y=level.elevator(7962.5,500,75,50,-1800),x=[];x.push([1150,-1700],[1150,-1770]);for(let e=0;e<10;e++)x.push([2800+500*e,-1650],[2800+500*e,-1720]);x.push([4850,-1300],[6350,-1300],[4850,-1370],[6350,-1370]);let u=-8,R=250,b=[[500,-750],[1150,-750],[825,-1100],[300,-1100],[1350,-1100]];for(;b.length>5-Math.sqrt(2.5*simulation.difficulty)&&b.length;){let e=Math.floor(Math.random()*b.length);spawn[["hopper","sneaker","striker"][Math.floor(3*Math.random())]](b[e][0],b[e][1],60+10*Math.random()),b.splice(e,1)}let f=spawn.pickList.includes("laser");f&&spawn.pickList.splice(spawn.pickList.indexOf("laser"),1);let g=[[50,-1400],[1600,-450],[50,-450],[1600,-1400]];for(let e=0;e<10;e++)g.push([2800+500*e,-1800]);for(;g.length&&mob.length<16*Math.log10(simulation.difficulty+1)-1;){let e=Math.floor(Math.random()*g.length);spawn.randomMob(...g[e]),g.splice(e,1)}let v=["spawn.randomGroup(8250, 575);","spawn.randomGroup(3200, -3700);\n        if (simulation.difficulty > 15) \n            spawn.randomGroup(3500, -3700, 0.3);","spawn.randomGroup(7800, -1800, 0.5);"];for(;v.length>0;){let e=Math.floor(Math.random()*v.length);Function(v[e])(),v.splice(e,1)}f&&spawn.pickList.push("laser"),spawn.shieldingBoss(3900,-3200,70);let M=Math.floor(2*Math.random());function T(e,t,a="#f81",o=Math.PI/2){ctx.beginPath(),ctx.moveTo(e,t),ctx.strokeStyle=a,ctx.lineWidth=3;for(let a=0;a<3;a++){let a=2*(Math.random()-.5)+o;randLen=30+10*Math.random(),e+=Math.cos(a)*randLen,t-=Math.sin(a)*randLen,ctx.lineTo(e,t)}ctx.stroke()}function P(e,t,a,o,s){ctx.strokeStyle="#003",ctx.fillStyle="#0055aa"+("0"+(60*o/s).toString(16)).slice(-2);let n=(s-o)/s,l=t.map((t,a)=>(e[a]-t)*n),i=a.map((t,a)=>(e[a]-t)*n);ctx.beginPath(),ctx.moveTo(t[0]+l[0],t[1]+l[1]),ctx.lineTo(...e),ctx.lineTo(a[0]+i[0],t[1]+l[1]),ctx.fill(),ctx.stroke(),ctx.beginPath(),ctx.moveTo(t[0]+l[0],t[1]+l[1]),ctx.lineTo(...e),ctx.lineTo(t[0]+l[0],a[1]+i[1]),ctx.fill(),ctx.stroke(),ctx.beginPath(),ctx.moveTo(t[0]+l[0],a[1]+i[1]),ctx.lineTo(...e),ctx.lineTo(a[0]+i[0],a[1]+i[1]),ctx.fill(),ctx.stroke(),ctx.beginPath(),ctx.moveTo(a[0]+i[0],a[1]+i[1]),ctx.lineTo(...e),ctx.lineTo(a[0]+i[0],t[1]+l[1]),ctx.fill(),ctx.stroke(),o>=2*s/3&&(ctx.fillStyle="#0055aa"+("0"+Math.floor(6.25*(o-2*s/3)*60/s).toString(16)).slice(-2),ctx.strokeStyle="#000033"+("0"+Math.floor(12.75*(o-2*s/3)*60/s).toString(16)).slice(-2),ctx.fillRect(t[0],t[1],a[0]-t[0],a[1]-t[1]),ctx.shadowColor="#00aaaa"+("0"+Math.floor(12.75*(o-2*s/3)*60/s).toString(16)).slice(-2),ctx.shadowBlur=10,ctx.strokeRect(t[0],t[1],a[0]-t[0],a[1]-t[1]),ctx.shadowBlur=0,ctx.shadowColor="#0000")}simulation.difficulty>5?spawn[["shooterBoss","launcherBoss"][M]](7500,-150,100,!1):spawn[["shooter","launcher"][M]](7500,-150,150),spawn[["shooter","launcher"][M]](8500,-150,150)},run(){simulation.inGameConsole("<strong>run</strong> by <span class='color-var'>iNoobBoi</span>"),addPartToMap=e=>{map[e].collisionFilter.category=cat.map,map[e].collisionFilter.mask=cat.player|cat.map|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet,Matter.Body.setStatic(map[e],!0),Composite.add(engine.world,map[e])},anotherBoss=(e,t)=>{tech.isDuplicateMobs&&Math.random()<tech.duplicationChance()&&spawn.randomLevelBoss(e,t,["historyBoss"])};const e=level.boost(8200,-200,500);var t=!1,a=0,o=!1;let s=["hopper","slasher","striker","stabber","springer","pulsar","sneaker","spinner","grower","focuser","spawner"];level.custom=()=>{for(i in level.exit.drawAndCheck(),level.enter.draw(),e.query(),m.pos.x>8e3&&!1===t&&(spawn.mapRect(7800,-900,200,900),addPartToMap(map.length-1),simulation.draw.setPaths(),simulation.inGameConsole('<strong>UNKNOWN</strong>: "Well done. Now climb."',600),simulation.inGameConsole('<strong>UNKNOWN</strong>: "I left a gift at the top."',600),t=!0),m.pos.x>9e3&&!1===o&&(simulation.inGameConsole('<strong>UNKNOWN</strong>: "Good luck. I hope you get out of here."',600),o=!0),mob)mob[i].damageReduction=0,Matter.Body.setVelocity(mob[i],{x:.97*mob[i].velocity.x,y:.97*mob[i].velocity.y})},level.customTopLayer=()=>{if(ctx.fillStyle="#888",0===a?(ctx.fillRect(8e3,-900,300,100),ctx.fillRect(8500,-1800,300,100),ctx.fillRect(8300,-2700,300,100),ctx.fillRect(8e3,-3600,300,100),ctx.fillRect(8200,-4500,300,100)):1===a?(ctx.fillRect(8300,-1200,300,100),ctx.fillRect(8500,-2100,300,100),ctx.fillRect(8100,-3e3,300,100),ctx.fillRect(8e3,-3900,300,100),ctx.fillRect(8200,-4800,300,100)):2===a&&(ctx.fillRect(8500,-600,300,100),ctx.fillRect(8100,-1500,300,100),ctx.fillRect(8e3,-2400,300,100),ctx.fillRect(8500,-3300,300,100),ctx.fillRect(8500,-4200,300,100)),simulation.cycle%120==0){for(var e=0;e<map.length;e++)map[e].isRemove&&(Matter.Composite.remove(engine.world,map[e]),map.splice(e,1));0===a?(spawn.mapRect(8e3,-900,300,100),addPartToMap(map.length-1),map[map.length-1].isRemove=!0,spawn.mapRect(8500,-1800,300,100),addPartToMap(map.length-1),map[map.length-1].isRemove=!0,spawn.mapRect(8300,-2700,300,100),addPartToMap(map.length-1),map[map.length-1].isRemove=!0,spawn.mapRect(8e3,-3600,300,100),addPartToMap(map.length-1),map[map.length-1].isRemove=!0,spawn.mapRect(8200,-4500,300,100),addPartToMap(map.length-1),map[map.length-1].isRemove=!0,a=1):1===a?(spawn.mapRect(8300,-1200,300,100),addPartToMap(map.length-1),map[map.length-1].isRemove=!0,spawn.mapRect(8500,-2100,300,100),addPartToMap(map.length-1),map[map.length-1].isRemove=!0,spawn.mapRect(8100,-3e3,300,100),addPartToMap(map.length-1),map[map.length-1].isRemove=!0,spawn.mapRect(8e3,-3900,300,100),addPartToMap(map.length-1),map[map.length-1].isRemove=!0,spawn.mapRect(8200,-4800,300,100),addPartToMap(map.length-1),map[map.length-1].isRemove=!0,a=2):2===a&&(spawn.mapRect(8500,-600,300,100),addPartToMap(map.length-1),map[map.length-1].isRemove=!0,spawn.mapRect(8100,-1500,300,100),addPartToMap(map.length-1),map[map.length-1].isRemove=!0,spawn.mapRect(8e3,-2400,300,100),addPartToMap(map.length-1),map[map.length-1].isRemove=!0,spawn.mapRect(8500,-3300,300,100),addPartToMap(map.length-1),map[map.length-1].isRemove=!0,spawn.mapRect(8500,-4200,300,100),addPartToMap(map.length-1),map[map.length-1].isRemove=!0,a=0),simulation.draw.setPaths()}},level.defaultZoom=1300,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#dcdcde",level.setPosToSpawn(-100,-1450),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),level.exit.x=9300,level.exit.y=-5130,spawn.mapRect(level.exit.x,level.exit.y+20,100,20),spawn.mapRect(-1400,-2200,1700,200),spawn.mapRect(100,-2200,200,1e3),spawn.mapRect(-600,-1400,8600,200),spawn.mapRect(-1400,-2200,200,1e3),spawn.mapRect(-2800,-1400,1600,200),spawn.mapRect(-2800,-1400,200,1400),spawn.mapRect(-2800,-200,11800,200),spawn.mapRect(-900,-600,600,600),spawn.mapRect(200,-800,500,100),spawn.mapRect(1300,-1400,200,900),spawn.mapRect(1300,-600,500,100),spawn.mapRect(2300,-800,200,200),spawn.mapRect(2900,-400,100,400),spawn.mapRect(3200,-600,100,600),spawn.mapRect(3500,-800,100,800),spawn.mapRect(4400,-900,500,100),spawn.mapRect(4400,-600,500,100),spawn.mapRect(4800,-900,100,400),spawn.mapRect(5300,-550,600,550),spawn.mapRect(5600,-900,300,800),spawn.mapRect(6300,-300,1100,300),spawn.mapRect(6600,-400,500,200),spawn.mapRect(6600,-800,500,100),spawn.mapRect(7e3,-1400,100,700),spawn.mapRect(7800,-5900,200,5100),spawn.mapRect(7800,-5900,1900,200),spawn.mapRect(9500,-5900,200,1e3),spawn.mapRect(8800,-5100,900,200),spawn.mapRect(8800,-5100,200,5100),spawn.mapRect(400,-1600,100,10),spawn.mapRect(400,-1600,10,100),spawn.mapRect(490,-1600,10,40),spawn.mapRect(400,-1570,100,10),spawn.mapRect(400,-1540,100,10),spawn.mapRect(490,-1540,10,40),spawn.mapRect(600,-1600,10,100),spawn.mapRect(600,-1510,100,10),spawn.mapRect(690,-1600,10,100),spawn.mapRect(800,-1600,100,10),spawn.mapRect(800,-1600,10,100),spawn.mapRect(890,-1600,10,100),spawn.mapRect(0,0,1,1),spawn.mapRect(1,0,1,1),spawn.mapRect(0,1,1,1),spawn.mapRect(1,1,1,1),spawn.mapRect(-1,0,1,1),spawn.mapRect(0,-1,1,1),spawn.mapRect(-1,-1,1,1),spawn.mapRect(1,-1,1,1),spawn.mapRect(-1,1,1,1),setTimeout(()=>{simulation.inGameConsole('<strong>UNKNOWN</strong>: "You cannot kill them."',600)},2e3),setTimeout(()=>{simulation.inGameConsole('<strong>UNKNOWN</strong>: "But I have slowed them down for you."',600)},6e3),spawn[s[Math.floor(Math.random()*s.length)]](200,-400),spawn[s[Math.floor(Math.random()*s.length)]](1800,-1e3),spawn[s[Math.floor(Math.random()*s.length)]](3200,-1e3),spawn[s[Math.floor(Math.random()*s.length)]](6200,-400),simulation.difficulty>10&&(spawn[s[Math.floor(Math.random()*s.length)]](1e3,-400),spawn[s[Math.floor(Math.random()*s.length)]](2400,-400),spawn[s[Math.floor(Math.random()*s.length)]](4e3,-400),spawn[s[Math.floor(Math.random()*s.length)]](6600,-1e3),setTimeout(()=>{simulation.inGameConsole('<strong>UNKNOWN</strong>: "Run."',600)},1e4)),simulation.difficulty>20&&(spawn[s[Math.floor(Math.random()*s.length)]](1e3,-1e3),spawn[s[Math.floor(Math.random()*s.length)]](3100,-300),spawn[s[Math.floor(Math.random()*s.length)]](4200,-1e3),spawn[s[Math.floor(Math.random()*s.length)]](7400,-800),setTimeout(()=>{simulation.inGameConsole('<strong>UNKNOWN</strong>: "RUN!"',600)},11e3)),simulation.difficulty>30&&(spawn[s[Math.floor(Math.random()*s.length)]](200,-1e3),spawn[s[Math.floor(Math.random()*s.length)]](3400,-300),spawn[s[Math.floor(Math.random()*s.length)]](5200,-800),spawn[s[Math.floor(Math.random()*s.length)]](7500,-300),setTimeout(()=>{simulation.inGameConsole('<strong>UNKNOWN</strong>: "GET OUT OF HERE."',600)},12e3)),simulation.difficulty>5&&(spawn.randomLevelBoss(-2200,-700,["powerUpBossBaby","blockBoss","revolutionBoss"]),setTimeout(()=>{simulation.inGameConsole('<strong>UNKNOWN</strong>: "They are coming for you."',600)},14e3)),anotherBoss(-1800,-700),spawn.bodyRect(1300,-500,200,100),spawn.bodyRect(1400,-500,200,100),spawn.bodyRect(1500,-500,200,100),spawn.bodyRect(5700,-1200,100,100),spawn.bodyRect(5700,-1100,100,100),spawn.bodyRect(5700,-1e3,100,100),spawn.bodyRect(6800,-700,100,100),spawn.bodyRect(6800,-600,100,100),spawn.bodyRect(6800,-500,100,100),spawn.debris(4400,-300,500,16),spawn.debris(3300,-600,200,6),spawn.debris(3e3,-500,20,6),spawn.debris(2300,-300,200,6),spawn.debris(200,-300,500,16),simulation.difficulty>10&&powerUps.spawn(1600,-700,"tech"),powerUps.spawnRandomPowerUp(1700,-700),powerUps.spawnRandomPowerUp(4700,-700),powerUps.spawnRandomPowerUp(6900,-1e3),powerUps.spawn(9200,-5400,"tech"),simulation.difficulty>10&&powerUps.spawn(9200,-5500,"tech"),powerUps.addResearchToLevel()},islands(){simulation.inGameConsole("<strong>islands</strong> by <span class='color-var'>Richard0820</span>");const e=level.boost(58500,-18264,1300);let t,a;const o=level.drip(59300,-18975,-18250,100),s=level.drip(6e4,-18953,-18250,150),n=level.drip(60905,-18652,-18250,70),l=level.hazard(58850,-18300,2275,100,.01),i=level.hazard(74400,-18075,350,100,.01);let c=!1;if(level.custom=()=>{level.exit.drawAndCheck(),e.query(),level.enter.draw(),o.draw(),s.draw(),n.draw(),t[2].query(),t[3].query(),t[0].draw(),t[1].draw(),t[2].draw(),t[3].draw(),a[2].query(),a[3].query(),a[0].draw(),a[1].draw(),a[2].draw(),a[3].draw()},level.customTopLayer=()=>{l.query(),i.query(),ctx.fillStyle=`rgba(68, 68, 68, ${Math.max(.3,Math.min((-17650-m.pos.y)/100,.99))})`,ctx.fillRect(58390,-17655,1490,740)},document.body.style.backgroundColor="hsl(138, 3%, 74%)",level.setPosToSpawn(57680,-18330),level.exit.x=76343,level.exit.y=-18020,spawn.mapRect(level.enter.x,level.enter.y+20,100,30),spawn.mapRect(level.exit.x,level.exit.y+20,100,30),level.defaultZoom=2e3,simulation.zoomTransition(level.defaultZoom),spawn.mapRect(57800,-18550,50,100),spawn.mapRect(57500,-18550,50,275),spawn.mapRect(66900,-18675,300,200),spawn.mapRect(66925,-19050,125,225),spawn.mapRect(67825,-16975,125,100),spawn.mapRect(74900,-18075,225,100),spawn.mapRect(73925,-18225,150,275),spawn.mapRect(76200,-18325,50,125),spawn.mapRect(76525,-18325,75,400),spawn.mapRect(61325,-18350,50,25),spawn.mapRect(61450,-18425,50,25),spawn.mapRect(61475,-18450,25,25),spawn.mapRect(58725,-18350,125,50),spawn.mapRect(58675,-18275,50,75),spawn.mapRect(58600,-18275,75,75),spawn.mapRect(58675,-18325,50,50),spawn.mapRect(58250,-16925,1825,1050),spawn.mapRect(57500,-18200,4475,550),spawn.mapRect(61500,-18475,475,275),spawn.mapRect(62175,-18575,325,400),spawn.mapRect(62900,-18850,525,375),spawn.mapRect(63900,-18925,450,400),spawn.mapRect(64725,-19e3,625,500),spawn.mapRect(65825,-19050,675,400),spawn.mapRect(66800,-18950,400,400),spawn.mapRect(68775,-18850,525,400),spawn.mapRect(67375,-16900,1800,1450),spawn.mapRect(67375,-17475,325,575),spawn.mapRect(68900,-17500,250,500),spawn.mapRect(69425,-17050,500,475),spawn.mapRect(70400,-17150,425,175),spawn.mapRect(71175,-17325,450,325),spawn.mapRect(72e3,-17425,325,300),spawn.mapRect(72725,-17450,350,275),spawn.mapRect(70050,-18800,550,350),spawn.mapRect(67750,-19400,375,1200),spawn.mapRect(67750,-18200,1425,700),spawn.mapRect(66800,-18550,575,1650),spawn.mapRect(66800,-16900,575,1450),spawn.mapRect(67350,-18175,250,750),spawn.mapRect(71050,-18450,725,275),spawn.mapRect(72100,-18150,475,200),spawn.mapRect(73325,-17975,3275,475),spawn.mapRect(73175,-17775,150,300),spawn.mapRect(72975,-17675,225,250),spawn.mapRect(76200,-18325,400,75),spawn.mapRect(76525,-18250,75,275),spawn.mapRect(76200,-18250,50,50),spawn.mapRect(57500,-17675,900,1800),spawn.mapRect(59875,-17675,1975,1800),spawn.mapRect(57550,-18275,225,75),spawn.mapRect(61375,-18375,50,50),spawn.mapRect(61100,-18350,75,50),spawn.mapRect(61175,-18325,50,25),spawn.mapRect(61850,-16525,250,175),spawn.mapRect(57500,-18500,50,325),spawn.mapRect(57500,-18550,350,50),spawn.mapRect(57800,-18500,50,50),spawn.mapRect(61275,-18325,375,125),spawn.mapRect(61425,-18400,200,75),spawn.mapRect(62125,-18575,125,75),spawn.mapRect(62250,-18200,175,125),spawn.mapRect(62850,-18725,100,75),spawn.mapRect(63075,-18550,225,225),spawn.mapRect(62800,-18275,75,75),spawn.mapRect(62500,-18475,75,50),spawn.mapRect(63825,-18900,150,50),spawn.mapRect(63950,-18575,150,125),spawn.mapRect(64200,-18550,100,250),spawn.mapRect(64925,-18525,200,275),spawn.mapRect(64625,-18425,75,125),spawn.mapRect(65225,-18675,150,175),spawn.mapRect(65350,-18950,75,100),spawn.mapRect(65950,-18575,75,150),spawn.mapRect(66e3,-18725,225,175),spawn.mapRect(66275,-18675,75,125),spawn.mapRect(66275,-18550,75,75),spawn.mapRect(66150,-18550,100,50),spawn.mapRect(66225,-18875,25,150),spawn.mapRect(66200,-18750,75,25),spawn.mapRect(66925,-19100,125,150),spawn.mapRect(66e3,-19100,75,50),spawn.mapRect(65e3,-19075,100,75),spawn.mapRect(66750,-18625,100,100),spawn.mapRect(68050,-18500,350,350),spawn.mapRect(68125,-18975,150,475),spawn.mapRect(69850,-18675,150,200),spawn.mapRect(7e4,-18625,150,50),spawn.mapRect(68850,-18575,325,225),spawn.mapRect(69100,-18400,75,100),spawn.mapRect(70150,-18525,125,200),spawn.mapRect(70425,-18525,125,200),spawn.mapRect(70250,-18350,175,225),spawn.mapRect(70325,-18475,50,150),spawn.mapRect(70275,-18450,150,150),spawn.mapRect(71175,-18250,525,250),spawn.mapRect(71050,-18200,150,375),spawn.mapRect(70925,-18300,200,250),spawn.mapRect(71425,-18525,175,150),spawn.mapRect(70225,-18950,275,250),spawn.mapRect(70475,-17050,225,175),spawn.mapRect(70625,-17250,100,150),spawn.mapRect(71300,-17150,200,350),spawn.mapRect(71100,-17250,125,100),spawn.mapRect(71550,-17400,150,150),spawn.mapRect(67675,-17150,225,300),spawn.mapRect(68225,-17e3,100,125),spawn.mapRect(67900,-16975,375,100),spawn.mapRect(68275,-16950,150,50),spawn.bodyRect(76200,-18200,50,200),spawn.mapRect(76200,-18e3,50,25),spawn.bodyRect(57800,-18450,50,175),spawn.mapRect(68725,-17600,300,250),spawn.mapRect(68625,-17550,175,100),spawn.mapRect(68850,-17400,150,125),spawn.mapRect(69325,-16900,200,225),spawn.mapRect(69575,-16625,175,275),spawn.mapRect(69850,-16875,250,200),spawn.mapRect(69875,-16650,150,300),spawn.mapRect(69825,-16800,375,325),spawn.mapRect(69650,-16775,325,475),spawn.mapRect(71975,-17325,100,125),spawn.mapRect(72075,-17200,150,150),spawn.mapRect(72275,-17350,150,150),spawn.mapRect(72325,-17275,150,225),spawn.mapRect(72225,-18050,200,225),spawn.mapRect(71925,-18150,250,175),spawn.mapRect(72075,-18275,125,175),spawn.mapRect(72500,-18025,125,175),spawn.mapRect(72400,-17975,150,175),spawn.mapRect(73925,-18225,350,275),spawn.mapRect(74750,-18125,275,175),spawn.mapRect(74250,-18100,150,75),spawn.mapRect(74275,-18050,200,75),spawn.mapRect(73750,-18100,275,125),spawn.mapRect(73075,-17475,3525,300),spawn.mapRect(73275,-17600,3325,225),spawn.mapRect(57775,-18250,150,50),spawn.mapRect(57775,-18275,75,25),spawn.mapRect(57925,-18225,50,25),spawn.debris(68300,-17e3,3700,16),spawn.mapRect(62e3,-16525,100,200),spawn.mapRect(59125,-19125,325,200),spawn.mapRect(59925,-19175,350,225),spawn.mapRect(60800,-18850,275,200),spawn.mapRect(75025,-18075,200,100),spawn.mapRect(75225,-18025,100,50),spawn.bodyRect(74300,-18150,50,25),spawn.bodyRect(73850,-18150,75,75),spawn.bodyRect(74700,-18e3,75,50),spawn.bodyRect(74250,-18325,25,25),spawn.bodyRect(74275,-18325,25,25),spawn.bodyRect(74275,-18325,25,25),spawn.bodyRect(74300,-18325,100,25),t=level.portal({x:61920,y:-16525},1.5*Math.PI,{x:58400,y:-17325},2*Math.PI),a=level.portal({x:59865,y:-17300},3*Math.PI,{x:60820,y:-31130},2.5*Math.PI),spawn.mapRect(60275,-32250,975,400),spawn.mapRect(60375,-31925,275,225),spawn.mapRect(61025,-31950,175,300),spawn.mapRect(60825,-31725,100,350),spawn.mapRect(60675,-31875,200,225),spawn.mapRect(60225,-31950,100,725),spawn.mapRect(60250,-31525,250,375),spawn.mapRect(60675,-31475,425,350),spawn.mapRect(60625,-32500,225,300),spawn.mapRect(61025,-32325,125,175),spawn.mapRect(60375,-32325,175,150),spawn.mapRect(60250,-19075,100,100),spawn.randomMob(59850,-18825,1/0),spawn.randomMob(62325,-18800,1/0),spawn.randomMob(61725,-18800,1/0),spawn.randomMob(63050,-19025,1/0),spawn.randomMob(64100,-19200,1/0),spawn.randomMob(64225,-19100,1/0),spawn.randomMob(64875,-19300,1/0),spawn.randomMob(65125,-19325,1/0),spawn.randomMob(65850,-19275,1/0),spawn.randomMob(66200,-19300,1/0),spawn.randomMob(65975,-19425,1/0),spawn.randomMob(67925,-19600,1/0),spawn.randomMob(66975,-19275,1/0),spawn.randomMob(67550,-18750,1/0),spawn.randomMob(69625,-17275,1/0),spawn.randomMob(70550,-17350,1/0),spawn.randomMob(71375,-17475,1/0),spawn.randomMob(72200,-17600,1/0),spawn.randomMob(73e3,-18025,1/0),spawn.randomMob(73850,-18350,1/0),spawn.randomMob(75725,-18300,1/0),spawn.randomMob(75875,-18275,1/0),spawn.randomMob(75700,-18200,1/0),spawn.randomMob(75550,-18275,1/0),spawn.randomMob(75825,-18150,1/0),spawn.randomMob(75575,-18150,1/0),spawn.randomGroup(75575,-18150,0),level.chain(67250,-19325,0,!0,14,20),spawn.mapRect(58725,-18300,125,100),spawn.mapRect(61100,-18300,175,100),spawn.mapRect(67175,-19375,100,100),spawn.mapRect(59125,-19125,325,200),spawn.mapRect(59925,-19175,350,225),spawn.mapRect(60800,-18850,275,200),spawn.mapRect(60850,-18725,50,200),spawn.mapRect(60950,-18675,50,200),spawn.mapRect(59975,-19025,50,250),spawn.mapRect(60125,-19025,50,400),spawn.mapRect(60075,-19025,50,450),spawn.mapRect(59425,-19075,100,100),spawn.mapRect(59175,-19e3,100,225),spawn.mapRect(59325,-19e3,75,450),spawn.mapRect(59050,-19e3,100,100),spawn.mapRect(61050,-18775,100,75),spawn.mapRect(60725,-18850,125,125),spawn.bodyRect(61850,-16525,250,175),simulation.difficulty>1&&(spawn.randomGroup(75575,-18150,0),spawn.randomLevelBoss(68450,-17300)),!c){if(c=!0,Math.random()<.33)for(let e=0,t=Math.min(simulation.difficulty/20,6);e<t;++e)spawn.bounceBoss(59025,-17325,50,!1);else if(Math.random()<.5)for(let e=0,t=Math.min(simulation.difficulty/9,8);e<t;++e)spawn.sprayBoss(59025,-17325,50,!1);else for(let e=0,t=Math.min(simulation.difficulty/6,10);e<t;++e)spawn.mineBoss(59025,-17325,50,!1);powerUps.spawn(59352,-17115,"tech")}simulation.fallHeight=-15e3,powerUps.addResearchToLevel(),powerUps.spawn(3e3,-230,"heal")},temple(){simulation.inGameConsole("<strong>temple</strong> by <span class='color-var'>Scar1337</span>");const e=Vector,t=function(){function e(e,t,a){this.a=e,this.b=t,this.c=a}return e.prototype.getXfromY=function(e){return(-this.b*e-this.c)/this.a},e.prototype.getYfromX=function(e){return(-this.a*e-this.c)/this.b},e.fromPoints=function(t,a){if(t.x===a.x)return new e(1,0,-t.x);if(t.y===a.y)return new e(0,1,-t.y);const o=(a.y-t.y)/(a.x-t.x);return new e(-o,1,o*t.x-t.y)},e}(),a=function(){function t(e,t,a,o){this.pos={x:e,y:t},this.width=a,this.height=o}return t.prototype.has=function({x:e,y:t}){return e>=this.pos.x&&e<=this.pos.x+this.width&&t>=this.pos.y&&t<=this.pos.y+this.height},t.prototype.hasLine=function(e){const t=e.getYfromX(this.pos.x),a=e.getYfromX(this.pos.x+this.width),o=e.getXfromY(this.pos.y);return t>=this.pos.y&&t<=this.pos.y+this.height||a>=this.pos.y&&a<=this.pos.y+this.height||o>=this.pos.x&&o<=this.pos.x+this.width},t.prototype.addToMap=function(){spawn.mapRect(this.pos.x,this.pos.y,this.width,this.height)},Object.defineProperty(t.prototype,"midPos",{get(){return e.add(this.pos,{x:this.width/2,y:this.height/2})}}),t.fromBounds=function(e,a){return new t(e.x,e.y,a.x-e.x,a.y-e.y)},t.prototype.isCollidingWith=function(e){const t=[this.pos.x,this.pos.y],a=[this.pos.x+this.width,this.pos.y+this.height],o=[e.pos.x,e.pos.y],s=[e.pos.x+e.width,e.pos.y+e.height];return!(t[0]>=s[0]||o[0]>=a[0])&&!(t[1]>=s[1]||o[1]>=a[1])},t}();function o(e){return e.has(player.bounds.min)||e.has(player.bounds.max)}function s(e,t){for(const a of mob)a.isWIMP&&D(a,{x:e+300*(Math.random()-.5),y:t+300*(Math.random()-.5)})}function n(t,a,o=!1,s=25){mobs.spawn(t,a,12,s,o?"#000":"#fff");let n=mob[mob.length-1];n.isBoss=!0,n.isDark=o,n.stroke="transparent",n.eventHorizon=500,n.seeAtDistance2=5e6,n.accelMag=3e-5*simulation.accelScale,n.collisionFilter.mask=cat.player|cat.bullet,n.memory=1600,n.randomPRNGMult=500*Math.random(),n.attackCycle=0,n.lastAttackCycle=0,Matter.Body.setDensity(n,.012),n.onDeath=function(){powerUps.spawn(this.position.x+20,this.position.y,"ammo"),Math.random()>.5&&powerUps.spawn(this.position.x,this.position.y,"ammo"),Math.random()>.3&&powerUps.spawn(this.position.x,this.position.y,"heal",!0,30*simulation.healScale**.25*Math.sqrt(tech.largerHeals)*Math.sqrt(.1+.5*Math.random()))},n.damageReduction=.25,n.do=function(){if(this.speed>1&&Matter.Body.setVelocity(this,{x:.95*this.velocity.x,y:.95*this.velocity.y}),simulation.cycle%this.seePlayerFreq||(this.distanceToPlayer2()<this.seeAtDistance2?(this.locatePlayer(),this.seePlayer.yes||(this.seePlayer.yes=!0)):this.seePlayer.recall&&this.lostPlayer()),this.checkStatus(),this.seePlayer.recall){const t=this.accelMag*this.mass,a=this.seePlayer.position.x-this.position.x,o=this.seePlayer.position.y-this.position.y,s=Math.sqrt(a*a+o*o);this.force.x+=t*a/s,this.force.y+=t*o/s;const n=this.eventHorizon*(1+.2*Math.sin(.008*simulation.cycle));if(ctx.fillStyle=this.isDark?"rgba(0,20,40,0.6)":"rgba(225,215,255,0.6)",k.arc(this.position.x,this.position.y,.2*n,0,2*Math.PI),ctx.fillStyle=this.isDark?"rgba(0,20,40,0.4)":"rgba(225,215,255,0.4)",k.arc(this.position.x,this.position.y,.4*n,0,2*Math.PI),ctx.fillStyle=this.isDark?"rgba(0,20,40,0.3)":"rgba(225,215,255,0.3)",k.arc(this.position.x,this.position.y,.6*n,0,2*Math.PI),ctx.fillStyle=this.isDark?"rgba(0,20,40,0.2)":"rgba(225,215,255,0.2)",k.arc(this.position.x,this.position.y,.8*n,0,2*Math.PI),ctx.fillStyle=this.isDark?"rgba(0,0,0,0.05)":"rgba(255,255,255,0.05)",k.arc(this.position.x,this.position.y,n,0,2*Math.PI),U(this.position,player.position)<n)if(this.isDark){m.immuneCycle<m.cycle&&(m.energy>0&&(m.energy-=.003),m.energy<.1&&m.takeDamage(15e-5*spawn.dmgToPlayerByLevelsCleared()));const e=Math.atan2(player.position.y-this.position.y,player.position.x-this.position.x);player.force.x-=5e-4*Math.cos(e)*player.mass*(m.onGround?1.7:1),player.force.y-=5e-4*Math.sin(e)*player.mass,ctx.lineWidth=Math.min(60,2*this.radius),ctx.strokeStyle="rgba(0,0,0,0.5)",k.line([this.position,m.pos]),ctx.fillStyle="rgba(0,0,0,0.3)",k.arc(m.pos.x,m.pos.y,40,0,2*Math.PI)}else this.attackCycle++,this.attackCycle>=30&&(this.attackCycle=0,this.lastAttackCycle=simulation.cycle,Matter.Body.setVelocity(player,e.add(player.velocity,{x:0,y:-10})),m.immuneCycle<m.cycle&&(m.energy>0&&(m.energy-=.03),m.takeDamage(.005*spawn.dmgToPlayerByLevelsCleared()))),k.lightning(this.position,m.pos,this.lastAttackCycle,this.randomPRNGMult),ctx.fillStyle=`rgba(255,240,127,${.12*Math.max(15-simulation.cycle+this.lastAttackCycle,0)})`,k.arc(m.pos.x,m.pos.y,40,0,2*Math.PI)}}}function l(e,t,o=!1,s=70){mobs.spawn(e,t,o?3:4,s,o?"#0008":"#fff8");let n=mob[mob.length-1];n.isBoss=!0,n.isDark=o,n.stroke=o?"#000":"#fff",n.seeAtDistance2=5e6,n.accelMag=1e-4*simulation.accelScale,n.collisionFilter.mask=cat.player|cat.bullet,n.memory=1600,n.randomPRNGMult=500*Math.random(),n.attackCycle=0,n.maxAttackCycle=o?90:240,Matter.Body.setDensity(n,.006),n.onDeath=function(){powerUps.spawn(this.position.x+20,this.position.y,"ammo"),Math.random()>.5&&powerUps.spawn(this.position.x,this.position.y,"ammo"),Math.random()>.3&&powerUps.spawn(this.position.x,this.position.y,"heal",!0,30*simulation.healScale**.25*Math.sqrt(tech.largerHeals)*Math.sqrt(.1+.5*Math.random()))},n.damageReduction=.25,n.do=function(){if(this.speed>2&&Matter.Body.setVelocity(this,{x:.95*this.velocity.x,y:.95*this.velocity.y}),simulation.cycle%this.seePlayerFreq||(this.distanceToPlayer2()<this.seeAtDistance2?(this.locatePlayer(),this.seePlayer.yes||(this.seePlayer.yes=!0)):this.seePlayer.recall&&this.lostPlayer()),this.checkStatus(),this.seePlayer.recall){const e=this.accelMag*this.mass,t=this.seePlayer.position.x-this.position.x,o=this.seePlayer.position.y-this.position.y,n=Math.sqrt(t*t+o*o);this.force.x+=e*t/n,this.force.y+=e*o/n,this.attackCycle++,this.attackCycle>this.maxAttackCycle&&(this.attackCycle=0,function(e,t,o=!1,s=70){mobs.spawn(e,t,o?3:4,s,o?"#0004":"#fff4");let n=mob[mob.length-1];n.stroke=o?"#000b":"#fffb",n.collisionFilter.mask=o?cat.player|cat.bullet:0,n.isDropPowerUp=!1,n.showHealthBar=!1,n.leaveBody=!1,n.timeLeft=1200,n.isObstacle=!0,n.damageReduction=o?.5:0,o||(n.isBadTarget=!0,n.attackCycle=0,n.maxAttackCycle=10,n.inertia=1/0);n.do=o?function(){Matter.Body.setVelocity(this,{x:.95*this.velocity.x,y:.95*this.velocity.y})}:function(){if(Matter.Body.setVelocity(this,{x:.95*this.velocity.x,y:.95*this.velocity.y}),a.fromBounds(this.bounds.min,this.bounds.max).isCollidingWith(a.fromBounds(player.bounds.min,player.bounds.max))?(this.attackCycle++,this.attackCycle=Math.min(this.attackCycle,10)):(this.attackCycle--,this.attackCycle=Math.max(this.attackCycle,0)),this.attackCycle>0){ctx.beginPath();const e=this.vertices;ctx.moveTo(e[0].x,e[0].y);for(let t=1,a=e.length;t<a;++t)ctx.lineTo(e[t].x,e[t].y);ctx.lineTo(e[0].x,e[0].y),this.attackCycle>=10&&(ctx.shadowBlur=10,ctx.shadowColor="rgb(255, 210, 64)"),ctx.fillStyle=`rgba(255, 210, 64, ${this.attackCycle/15})`,ctx.fill(),ctx.shadowBlur=0,this.attackCycle>=10&&(k.lightning(this.position,m.pos,simulation.cycle),m.takeDamage(.003*spawn.dmgToPlayerByLevelsCleared()))}this.timeLimit()}}(this.position.x,this.position.y,this.isDark,s))}}}function i(...e){spawn.grenade(...e);const t=e[3]||Math.min(550,250+3*simulation.difficulty);let a=mob[mob.length-1];a.fill="#ace",a.damageReduction=0,a.onDeath=function(){U(player.position,this.position)<t&&m.immuneCycle<m.cycle&&(m.immuneCycle=m.cycle+m.collisionImmuneCycles,m.takeDamage(.02*spawn.dmgToPlayerByLevelsCleared())),simulation.drawList.push({x:this.position.x,y:this.position.y,radius:t,color:"rgba(170,204,238,0.3)",time:simulation.drawTime})},a.do=function(){this.timeLimit(),ctx.beginPath(),ctx.arc(this.position.x,this.position.y,t*(1.01-this.timeLeft/this.lifeSpan),0,2*Math.PI),ctx.fillStyle="rgba(170,204,238,0.1)",ctx.fill()}}let c=level.nextLevel;const p=simulation.fallHeight;level.nextLevel=()=>{color.map="#444",m.death=m.oldDeath,canvas.style.filter="",level.nextLevel=c,simulation.fallHeight=p,c()};let r=[],h=Array.from(Array(10),()=>[]);m.oldDeath=m.death,m.death=function(){tech.isImmortal?(m.switchWorlds(),Matter.Body.setPosition(player,{x:level.enter.x+50,y:level.enter.y-20}),F("How did you not die?"),setTimeout(()=>F("I'll let you off this one time."),2e3),tech.isImmortal=!1):(requestAnimationFrame(()=>color.map="#444"),m.death=m.oldDeath,canvas.style.filter="",level.nextLevel=c,simulation.fallHeight=p,m.oldDeath())};let d="⥟ᘊ5⪊Ыᳪៗⱕ␥ዘᑧ⍗";function w(e,t,a,o,s){spawn.mapRect(e,t,a,s),spawn.mapRect(e,t,s,o),spawn.mapRect(e+a-s,t,s,o),spawn.mapRect(e,t+o-s,a,s)}function y(e,t,a){spawn.mapVertex(e,t,`0 -${a}  -${a} 0  0 ${a}  ${a} 0`)}addPartToMap=(e=map.length-1)=>{map[e].collisionFilter.category=cat.map,map[e].collisionFilter.mask=cat.player|cat.map|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet,Matter.Body.setStatic(map[e],!0),Composite.add(engine.world,map[e])},level.setPosToSpawn(50,-50),level.exit.x=1e6,level.exit.y=-1e6,Promise.resolve().then(()=>{for(let e=0;e<mob.length;e++)mob[e]&&!mob[e].isDarkMatter&&(mob[e].isWIMP=!0);s(0,-10030);for(let e=0;e<powerUp.length;e++)for(;powerUp[e]&&"research"===powerUp[e].name;)Matter.Composite.remove(engine.world,powerUp[e]),powerUp.splice(e,1);level.exit.x=1500,level.exit.y=-30}),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),spawn.mapRect(1500,-10,100,20),level.defaultZoom=1800,simulation.zoomTransition(1200),document.body.style.backgroundColor="#daa69f",color.map="#600",r.push(new a(-200,-500,2e3,600)),w(-200,-500,2e3,600,100);const x=new a(-200,-4e3,5e3,2100);r.push(x),w(-200,-4e3,5e3,2100,100),spawn.mapRect(-200,-2500,1300,100),spawn.mapRect(3500,-2500,1300,100),spawn.mapRect(-200,-4e3,1e3,1600),spawn.mapRect(3800,-4e3,1e3,1600),spawn.mapRect(0,-2010,100,20),spawn.mapRect(4500,-2010,100,20),spawn.mapRect(2100,-2200,100,300),spawn.mapRect(2400,-2200,100,300),spawn.mapRect(2070,-2200,460,20),spawn.debris(1700,-2100,300,10),spawn.debris(2500,-2100,300,10);const u=new a(-1500,-10500,3e3,3600);r.push(u),w(-1500,-10500,3e3,3600,100),spawn.mapRect(-2e3,-8500,1600,1600),spawn.mapRect(400,-8500,1600,1600),spawn.mapRect(-50,-7010,100,20),spawn.mapRect(-50,-10010,100,20),spawn.mapRect(-300,-7320,800,20),spawn.mapRect(175,-7600,325,20),spawn.mapRect(200,-7775,300,20),spawn.mapRect(-500,-7600,325,20),spawn.mapRect(-500,-7775,300,20),spawn.mapRect(-500,-7950,800,20),spawn.mapRect(-300,-8100,800,20),spawn.mapRect(-500,-8250,800,20);for(let e=0;e<2;e++)spawn.mapRect(-250,150*e-8400,500,60);const R=level.hazard(-400,-8410,800,1090);R.logic=function(){if(this.height>0&&Matter.Query.region([player],this).length){if(m.immuneCycle<m.cycle){const e=tech.isRewindAvoidDeath;tech.isRewindAvoidDeath=!1;const t=.002*(tech.isRadioactiveResistance?.2:1)+.001;if(m.energy>t&&!tech.isEnergyHealth&&(m.energy-=t),m.takeDamage(15e-5*(tech.isRadioactiveResistance?.2:1)),tech.isEnergyHealth){const e=m.energy;m.regenEnergy();const t=m.energy-e;t>0&&(m.energy=e,m.takeDamage(t))}tech.isRewindAvoidDeath=e}player.force.y-=.3*player.mass*simulation.g,A(player,Vector.sub(player.velocity,{x:0,y:.02*player.velocity.y}))}powerUpCollide=Matter.Query.region(powerUp,this);for(let e=0,t=powerUpCollide.length;e<t;e++){const t=2*powerUpCollide[e].size,a=1-.2*Math.max(0,Math.min(t,this.min.y-powerUpCollide[e].position.y+powerUpCollide[e].size))/t;powerUpCollide[e].force.y-=1.14*a*powerUpCollide[e].mass*simulation.g,A(powerUpCollide[e],{x:powerUpCollide[e].velocity.x,y:.96*powerUpCollide[e].velocity.y})}},R.draw=function(){this.isOn&&(ctx.fillStyle="hsla(160, 100%, 35%, 0.75)",ctx.fillRect(this.min.x,this.min.y,this.width,this.height))};const b=new a(-1500,-10500,3e3,2e3);spawn.mapRect(-700,-8700,150,20),spawn.mapRect(550,-8700,150,20),spawn.mapRect(-400,-8900,800,20),y(-600,-9800,30),y(0,-9800,30),y(600,-9800,30),spawn.mapRect(-1e3,-1e4,2e3,30);const f=new a(-200,-14500,4e3,1600);r.push(f),w(-200,-14500,4e3,1600,100),spawn.mapRect(-200,-14500,800,1100),spawn.mapRect(3e3,-14500,800,1100),spawn.mapRect(0,-13110,100,20),spawn.mapRect(-200,-13100,800,200),spawn.mapRect(3500,-13110,100,20),spawn.mapRect(3e3,-13100,800,200);for(let e=0;e<4;e++)spawn.bodyRect(570,75*e-13400,30,75);for(let e=0;e<3;e++)y(1100+700*e,-13e3,30),y(1100+700*e,-14400,30);const g={altar:{get isHeal(){return simulation.cycle%600>=300},pos:{x:2300,y:-2200},get isActive(){const t=e.add(m.pos,{x:0,y:40});return U(t,this.pos)<240&&Math.abs(L(t,this.pos)-Math.PI/2)<1},logic(){this.isActive&&(this.isHeal?m.energy+=.005:(m.energy=Math.max(m.energy-.006,0),m.energy<=.01&&m.immuneCycle<m.cycle&&m.takeDamage(.002)))},drawTop(){if(!o(x))return;const e=this.isHeal?m.fieldMeterColor:"#f00";k.flame([2300,-2200,26,4,e],7),ctx.fillStyle=e,ctx.fillRect(2200,-2200,200,200)},drawBottom(){ctx.fillStyle=this.isHeal?"#fff5":"#0005";for(const e of[230,180,130,80,30])k.arc(2300,-2200,e,0,Math.PI,!0)}},room2Initiator:{pos:{x:0,y:-9050},get distance(){return U(player.position,this.pos)},range:120,rings:[{colour:[102,85,255],radius:200},{colour:[0,255,0],radius:300},{colour:[255,0,0],radius:400}],get ringNumber(){return this.rings.length},get cap(){return 90*this.ringNumber+180},get capped(){return v.room2.spawnInitiatorCycles>this.cap},logic(){this.distance<this.range&&v.room2.spawnInitiatorCycles++},draw(){Promise.resolve().then(()=>{const t=v.room2.spawnInitiatorCycles;if(!this.capped&&this.distance<400&&(ctx.fillStyle=`rgba(0, 0, 0, ${.9*Math.min(1,(400-this.distance)/(400-this.range))})`,ctx.fillRect(0,0,canvas.width,canvas.height)),ctx.save(),simulation.camera(),this.distance<this.range&&!this.capped&&(k.lightning(e.sub(this.pos,{x:300,y:300}),e.add(this.pos,{x:300,y:300}),simulation.cycle-5),k.lightning(e.add(this.pos,{x:-300,y:300}),e.add(this.pos,{x:300,y:-300}),simulation.cycle-5)),!this.capped&&t>=this.cap-180){const e=.4*(t-this.cap+180);ctx.translate((Math.random()-.5)*e,(Math.random()-.5)*e)}if(ctx.shadowBlur=20,ctx.lineWidth=12,ctx.strokeStyle=v.room2.cycles%60<30?"#fff":"#000",ctx.shadowColor=v.room2.cycles%60<30?"#fff":"#000",k.arcOut(this.pos.x,this.pos.y,100,0,2*Math.PI),v.room2.cycles<=100)for(let e=0;e<this.ringNumber&&!(t<90*e);e++){const a=this.rings[e];ctx.shadowColor=`rgb(${a.colour.join(",")})`;const o=this.capped?1-.01*v.room2.cycles:t/180-e/2;ctx.strokeStyle=`rgba(${a.colour.join(",")}, ${Math.min(o,1)})`;const s=(this.capped?1+.07*v.room2.cycles:Math.sin(Math.min(t-90*e,45)/90*Math.PI))*a.radius;k.arcOut(this.pos.x,this.pos.y,s,0,2*Math.PI)}ctx.restore()})}},room2Lightning:{one:[{x:-1400,y:-10400},{x:1400,y:-8500}],two:[{x:-1400,y:-8500},{x:1400,y:-10400}],get isHeal(){return simulation.cycle%360<180},get oneEq(){return t.fromPoints(this.one[0],this.one[1])},get twoEq(){return t.fromPoints(this.two[0],this.two[1])},logic(){if(!o(b)||!v.room2.cycles)return;const e=a.fromBounds(player.bounds.min,player.bounds.max);(e.hasLine(this.oneEq)||e.hasLine(this.twoEq))&&(this.isHeal?m.energy+=.003:m.immuneCycle<m.cycle&&(m.energy-=.003))},draw(){if(!o(u)||!v.room2.cycles)return;const e=this.isHeal?void 0:[0,0,0];k.lightning(...this.one,15*Math.floor(simulation.cycle/15),1,9,e),k.lightning(...this.two,15*Math.floor(simulation.cycle/15),2,9,e)}},room2GeneratedPath:{rects:function(){const e=[];for(let t=0;t<4;t++)e.push(new a(200*(1&t)-1405,300*t-9700,205,30)),e.push(new a(1200-200*(1&t),300*t-9700,205,30));return e}(),logic(){if(v.room2.readyPathCycle&&simulation.cycle-v.room2.readyPathCycle===180)for(const e of this.rects)e.addToMap(),addPartToMap(),simulation.draw.setPaths()},draw(){if(v.room2.readyPathCycle&&simulation.cycle-v.room2.readyPathCycle<180){ctx.fillStyle="#fe79";for(const e of this.rects)ctx.fillRect(e.pos.x,e.pos.y,e.width,e.height)}else if(simulation.cycle-v.room2.readyPathCycle<195)for(const e of this.rects)k.lightning(g.room2Initiator.pos,e.midPos,v.room2.readyPathCycle+180)}},room3Rotors:{rotor1:function(){const e=level.spinner(900,-13700,200,30);return e.rotate=function(){Matter.Body.setAngularVelocity(this.bodyB,.9*(this.bodyB.angularVelocity+.01))},e}(),rotor2:function(){const e=level.spinner(2700,-13700,200,30);return e.rotate=function(){Matter.Body.setAngularVelocity(this.bodyB,.9*(this.bodyB.angularVelocity-.01))},e}(),logic(){this.rotor1.rotate(),this.rotor2.rotate()}},room3SlimePits:{pit1:level.hazard(-100,-13400,0,0,.004),pit2:level.hazard(3700,-13400,0,0,.004),logic(){v.room2ToRoom3Anim>=1320&&v.room2ToRoom3Anim<=1570&&(this.pit1.height=this.pit2.height=300,this.pit1.max.y=this.pit2.max.y=-13100,this.pit1.width=this.pit2.width=2*v.room2ToRoom3Anim-2640,this.pit1.max.x=this.pit1.min.x+this.pit1.width,this.pit2.min.x=this.pit2.max.x-this.pit2.width),v.room3ToEndAnim&&(this.pit1.height=this.pit1.width=0,this.pit2.height=this.pit2.width=0)},draw(){this.pit1.query(),this.pit2.query()}}};let v={room1:{cycles:300},room2:{spawnInitiatorCycles:0,cycles:0,readyPathCycle:0},stage:1,startAnim:0,room1ToRoom2Anim:0,room2ToRoom3Anim:0,room3ToEndAnim:0,initialTrapY:0,clearedCycle:0,drawExit:!0};const M={room0(){v.startAnim<=0||(v.startAnim++,60==v.startAnim&&F("Not so fast."),v.startAnim<180?V(1e3,v.initialTrapY):(level.exit.x=4500,level.exit.y=-2030,s(level.exit.x,level.exit.y),I(50,-2050),simulation.fallHeight=-1e3,level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),v.startAnim=-1,v.drawExit=!1))},room1(){const e=v.room1ToRoom2Anim;if(!(e<=0)){if(1===e&&(level.exit.x=-50,level.exit.y=-10030,F("Pathetic.")),e>=1&&e<=360){const t=100-100*Math.cos(e/90*Math.PI);ctx.translate(t,t),Promise.resolve().then(()=>{ctx.save(),ctx.globalCompositeOperation="color-burn",ctx.fillStyle=k.randomColours(e*(360-e)/32400),k.updateRandomColours(5),ctx.fillRect(0,0,canvas.width,canvas.height),ctx.restore()})}180===e&&(F("You are trying too hard."),I(0,-7050),simulation.fallHeight=-6e3,v.stage=2,s(level.exit.x,level.exit.y-3e3)),v.room1ToRoom2Anim++}},room2(){if(!(v.room2ToRoom3Anim<=0)){if(1===v.room2ToRoom3Anim&&(level.exit.x=3500,level.exit.y=-13130,F("Do not try me.")),v.room2ToRoom3Anim>=1&&v.room2ToRoom3Anim<=180&&(canvas.style.filter=`sepia(${v.room2ToRoom3Anim/180}) invert(${v.room2ToRoom3Anim/180})`),180===v.room2ToRoom3Anim){v.stage=3,I(50,-13150),simulation.fallHeight=-1e4,simulation.zoomTransition(1800),v.startAnim=-1;for(let e=0;e<mob.length;e++)for(;mob[e]&&!mob[e].isWIMP;)mob[e].replace(e);v.drawExit=!0;for(let e=0;e<7*tech.wimpCount;e++)powerUps.spawn(level.exit.x+100*(Math.random()-.5),level.exit.y-100+100*(Math.random()-.5),"research",!1);canvas.style.filter=""}v.room2ToRoom3Anim>180&&v.room2ToRoom3Anim<=360&&(canvas.style.filter=`sepia(${(360-v.room2ToRoom3Anim)/180}) invert(${(360-v.room2ToRoom3Anim)/180})`),v.room2ToRoom3Anim++}},room3(){if(!(v.room3ToEndAnim<=0)){if(1===v.room3ToEndAnim){const e="Nooooooooooo".split("");for(let t=0;t<e.length/1.6;t++){const t=Math.floor(Math.random()*e.length);" "!==e[t]&&(e[t]=String.fromCharCode(Math.floor(50*Math.random())+192))}F(e.join(""))}v.room3ToEndAnim++}},end(){v.clearedCycle&&(Promise.resolve().then(()=>{ctx.save(),ctx.setTransform(1,0,0,1,0,0),ctx.fillStyle=`rgba(0, 0, 0, ${(simulation.cycle-v.clearedCycle)/30})`,ctx.fillRect(0,0,canvas.width,canvas.height),ctx.restore()}),simulation.cycle-v.clearedCycle>30&&level.nextLevel())}},T={bounds(){let e=!1;for(const t of r)if(o(t)){e=!0;break}e||(m.takeDamage(.1*simulation.difficultyMode),V(level.enter.x,level.enter.y),simulation.inGameConsole("<span style='color: #f00'>"+d+"</span>: &nbsp; You thought I could let you get away with that?"))},room0(){m.pos.x>1e3&&0===v.startAnim&&(spawn.mapRect(1200,-500,100,600),v.initialTrapY=Math.min(player.position.y,-75),V(1e3,v.initialTrapY),addPartToMap(),simulation.draw.setPaths(),v.startAnim=1)},room1(){S.room1(),g.altar.logic()},room2(){R.logic(),g.room2Initiator.logic(),g.room2Lightning.logic(),g.room2GeneratedPath.logic(),S.room2()},room3(){g.room3Rotors.logic(),g.room3SlimePits.logic(),S.room3()},exit(){v.drawExit&&player.position.x>level.exit.x&&player.position.x<level.exit.x+100&&player.position.y>level.exit.y-150&&player.position.y<level.exit.y-40&&player.velocity.y<.1&&level.exitCount+(input.down?8:2)>100&&(1===v.stage?(v.drawExit=!1,level.exitCount=0,v.room1ToRoom2Anim=1):2===v.stage?(v.drawExit=!1,v.room2ToRoom3Anim=1,level.exitCount=0):(level.exitCount=99-(input.down?8:2),v.clearedCycle||(v.clearedCycle=simulation.cycle)))}},P={base(){ctx.save(),ctx.setTransform(1,0,0,1,0,0),ctx.fillStyle=color.map,ctx.fillRect(0,0,canvas.width,canvas.height),ctx.restore(),ctx.fillStyle="#eab6af";for(const e of r)o(e)&&ctx.fillRect(e.pos.x+2,e.pos.y+2,e.width-4,e.height-4)},entrance(){ctx.beginPath(),ctx.moveTo(level.enter.x,level.enter.y+30),ctx.lineTo(level.enter.x,level.enter.y-80),ctx.bezierCurveTo(level.enter.x,level.enter.y-170,level.enter.x+100,level.enter.y-170,level.enter.x+100,level.enter.y-80),ctx.lineTo(level.enter.x+100,level.enter.y+30),ctx.lineTo(level.enter.x,level.enter.y+30),ctx.fillStyle="#fca",ctx.fill()},room1(){if(!o(x))return;ctx.fillStyle="#fed",ctx.fillRect(2200,-3300,200,800),ctx.fillRect(2e3,-3100,600,200);const e=Math.min(Math.min(v.room1.cycles,2520)%600,120)*Math.PI/30+Math.PI/2;k.flame([2300,-3e3,26,4,"#f60",e],7),g.altar.drawBottom()},room2(){o(u)&&(v.room2.cycles&&(ctx.fillStyle="#0006",ctx.fillRect(u.pos.x+2,u.pos.y+2,u.width-4,u.height-4)),R.draw())},room3(){o(f)&&(ctx.fillStyle="#0006",ctx.fillRect(f.pos.x+2,f.pos.y+2,f.width-4,f.height-4),g.room3SlimePits.draw())},mobTrails(){if(simulation.cycle%4==0){let e=[];for(const t of mob)t.isDarkMatter||t.isWIMP||t.isObstacle||e.push({x:t.position.x,y:t.position.y});h.shift(),h.push(e)}ctx.strokeStyle="#bae",ctx.lineWidth=3;for(let e=0;e<10;e++){const t=h[e];for(const a of t)k.holy(a.x,a.y,e/2+10)}ctx.shadowBlur=0},waveTimer(){const e=[o(x)&&v.room1.cycles<2400,o(u)&&v.room2.cycles>0&&v.room2.cycles<2160,o(f)&&v.room2ToRoom3Anim<540];Promise.resolve(e).then(e=>{e[0]&&(ctx.save(),ctx.setTransform(1,0,0,1,0,0),ctx.fillStyle="#0004",ctx.fillRect(canvas.width2-288,50,576,20),ctx.fillStyle="#0cf",ctx.fillRect(canvas.width2-288,50,.96*(600-v.room1.cycles%600),20),ctx.restore()),e[1]&&(ctx.save(),ctx.setTransform(1,0,0,1,0,0),ctx.fillStyle="#0004",ctx.fillRect(canvas.width2-288,50,576,20),ctx.fillStyle=1&Math.ceil(v.room2.cycles/720)?"#000":"#e1d7ff",ctx.fillRect(canvas.width2-288,50,.8*(720-v.room2.cycles%720),20),ctx.restore()),e[2]&&(ctx.save(),ctx.setTransform(1,0,0,1,0,0),ctx.fillStyle="#0004",ctx.fillRect(canvas.width2-288,50,576,20),ctx.fillStyle="#000",ctx.fillRect(canvas.width2-288,50,1.6*(540-v.room2ToRoom3Anim),20),ctx.restore())})},room2Top(){o(u)&&(g.room2Lightning.draw(),g.room2GeneratedPath.draw(),g.room2Initiator.draw())}},S={room1(){if(o(x)){if(0===v.room1.cycles&&powerUps.spawnStartingPowerUps(0,-2050),v.room1.cycles++,2400===v.room1.cycles&&(spawn.secondaryBossChance(2300,-2800),powerUps.addResearchToLevel()),v.room1.cycles%600==0&&v.room1.cycles<=2400){const e=Math.min(3+Math.pow(simulation.difficulty/1.7,.6),10)+Math.floor(v.room1.cycles/720);for(let t=0;t<e;t++)Math.random()<.5+.07*simulation.difficulty&&spawn.randomMob(800+3e3*Math.random(),-2400-600*Math.random(),1/0);spawn.randomMob(800+3e3*Math.random(),-2400-600*Math.random(),1/0)}2520===v.room1.cycles&&(v.drawExit=!0)}},room2(){if(o(u)&&v.room2.spawnInitiatorCycles>g.room2Initiator.cap){const e=[n,l];if(v.room2.cycles%720==0&&v.room2.cycles<=2160){const t=1&Math.floor(v.room2.cycles/720);e[Math.floor(e.length*Math.random())](-600,-9800,t),e[Math.floor(e.length*Math.random())](600,-9800,t),e[Math.floor(e.length*Math.random())](0,-9800,!t)}v.room2.cycles++,2400===v.room2.cycles&&(v.drawExit=!0,v.room2.readyPathCycle=simulation.cycle)}},room3(){if(540===v.room2ToRoom3Anim){!function(t,a){mobs.spawn(t,a,6,60,"#000");let o=mob[mob.length-1];o.constraint=Constraint.create({pointA:{x:o.position.x,y:o.position.y},bodyB:o,stiffness:1,damping:1}),Composite.add(engine.world,o.constraint),o.isBoss=!0,o.stroke="transparent",o.eventHorizon=900,o.collisionFilter.mask=cat.player|cat.bullet|cat.body,o.memory=1/0,o.attackCycle=0,o.lastAttackCycle=0,o.spawnCycle=0,Matter.Body.setDensity(o,.08),o.onDeath=function(){for(let e=0;e<8;e++)for(let e=0,t=mob.length;e<t;++e)mob[e]!==this&&(mob[e].isInvulnerable&&(mob[e].isInvulnerable=!1,mob[e].damageReduction=1),mob[e].damage(1/0,!0));powerUps.spawn(this.position.x,this.position.y,"tech"),powerUps.spawnBossPowerUp(this.position.x,this.position.y),v.room3ToEndAnim=1},o.nextHealthThreshold=.75,o.trapCycle=0,o.onDamage=function(){this.health<this.nextHealthThreshold&&(this.health=this.nextHealthThreshold-.01,this.nextHealthThreshold=Math.floor(4*this.health)/4,this.trapCycle=1,this.isInvulnerable=!0,this.damageReduction=0)},o.damageReduction=.25,o.rings=[{colour:"#65f",radius:300,id:0},{colour:"#0f0",radius:400,id:1},{colour:"#f00",radius:500,id:2}],o.ring=function(){if(!this.isInvulnerable){ctx.lineWidth=10;for(const e of this.rings){const t=e.radius*(1+.3*Math.sin(simulation.cycle/60*(e.id+2)));Math.abs(U(player.position,this.position)-t)<60&&m.immuneCycle<simulation.cycle&&m.takeDamage(.4/t),ctx.strokeStyle=e.colour,k.arcOut(this.position.x,this.position.y,t,0,2*Math.PI)}}},o.horizon=function(){if(this.isInvulnerable)return this.fill="#f00";const t=this.eventHorizon*(1+.2*Math.sin(.008*simulation.cycle)),a=this.attackCycle/90;if(this.fill=`rgb(${255*a},${255*a},${255*a})`,ctx.fillStyle=`rgba(${225*a},${20+195*a},${40+215*a},0.6)`,k.arc(this.position.x,this.position.y,.2*t,0,2*Math.PI),ctx.fillStyle=`rgba(${225*a},${20+195*a},${40+215*a},0.4)`,k.arc(this.position.x,this.position.y,.4*t,0,2*Math.PI),ctx.fillStyle=`rgba(${225*a},${20+195*a},${40+215*a},0.3)`,k.arc(this.position.x,this.position.y,.6*t,0,2*Math.PI),ctx.fillStyle=`rgba(${225*a},${20+195*a},${40+215*a},0.2)`,k.arc(this.position.x,this.position.y,.8*t,0,2*Math.PI),ctx.fillStyle=`rgba(${255*a},${255*a},${255*a},0.05)`,k.arc(this.position.x,this.position.y,t,0,2*Math.PI),e.magnitude(e.sub(this.position,player.position))<t){m.immuneCycle<m.cycle&&(m.energy>0&&(m.energy-=.004),m.energy<.1&&m.takeDamage(2e-4*spawn.dmgToPlayerByLevelsCleared()));const t=Math.atan2(player.position.y-this.position.y,player.position.x-this.position.x);player.force.x-=.001*Math.cos(t)*player.mass*(m.onGround?1.7:1),player.force.y-=.001*Math.sin(t)*player.mass,ctx.lineWidth=Math.min(60,2*this.radius),ctx.strokeStyle="rgba(0,0,0,0.5)",k.line([this.position,m.pos]),ctx.fillStyle="rgba(0,0,0,0.3)",k.arc(m.pos.x,m.pos.y,40,0,2*Math.PI),this.attackCycle++,this.attackCycle>=90&&(this.attackCycle=0,this.lastAttackCycle=simulation.cycle,Matter.Body.setVelocity(player,e.add(player.velocity,{x:0,y:-20})),m.immuneCycle<m.cycle&&m.takeDamage(.012*spawn.dmgToPlayerByLevelsCleared()));const a=2*simulation.cycle/3+this.lastAttackCycle/3;k.lightning(this.position,m.pos,a,1,12),k.lightning(this.position,m.pos,a,2,12),ctx.fillStyle=`rgba(255,240,127,${.12*Math.max(15-simulation.cycle+this.lastAttackCycle,0)})`,k.arc(m.pos.x,m.pos.y,40,0,2*Math.PI)}},o.periodicSpawns=function(){if(!this.isInvulnerable){if(this.spawnCycle++,this.spawnCycle%180||(spawn.seeker(this.position.x,this.position.y,15*(.7+.5*Math.random()),7),spawn.seeker(this.position.x,this.position.y,4*(.7+.5*Math.random()),7),spawn.seeker(this.position.x,this.position.y,4*(.7+.5*Math.random()),7)),!(this.spawnCycle%300))for(let e=0;e<3;e++)i(1100+700*e,-13030,void 0,Math.min(700,300+4*simulation.difficulty),10),A(mob[mob.length-1],{x:0,y:-10}),i(1100+700*e,-14370,void 0,Math.min(700,300+4*simulation.difficulty),10),A(mob[mob.length-1],{x:0,y:10});if(simulation.difficulty>10&&!(this.spawnCycle%600)){const e=3,o=Math.ceil(10*Math.random())+18,s=Math.ceil(100*Math.random())+70,n=.03*Math.random()+.005;spawn.allowShields=!1;const l=2*Math.PI/e;for(let n=0;n<e;++n)spawn.focuser(t+s*Math.sin(n*l),a+s*Math.cos(n*l),o);spawn.constrainAllMobCombos(e,n),spawn.allowShields=!0}}},o.invulnerableTrap=function(){if(this.trapCycle<1)return;this.trapCycle++;const e=Math.min(24,Math.max(6,4+Math.floor(simulation.difficulty/3))),t=Math.floor(5+10/(1+Math.sqrt(simulation.difficulty)/5));if(this.trapCycle>=90){const a=this.trapCycle-90;if(!(a%t)){const o=Math.min(500,200+3*simulation.difficulty);i(600,-13050,30,o),Matter.Body.setVelocity(mob[mob.length-1],{x:35,y:0}),i(3e3,-13050,30,o),Matter.Body.setVelocity(mob[mob.length-1],{x:-35,y:0}),i(600,-14350,30,o),Matter.Body.setVelocity(mob[mob.length-1],{x:35,y:0}),i(3e3,-14350,30,o),Matter.Body.setVelocity(mob[mob.length-1],{x:-35,y:0}),Math.floor(a/t)>=e-1&&(this.trapCycle=0,this.isInvulnerable=!1,this.damageReduction=.25)}}ctx.font="100px Arial",ctx.fillStyle="#f00",ctx.shadowBlur=10,ctx.shadowColor="#f00",ctx.textAlign="center",ctx.textBaseLine="middle",ctx.fillText("!",900,-13050),ctx.fillText("!",900,-14350),ctx.fillText("!",1800,-13050),ctx.fillText("!",1800,-14350),ctx.fillText("!",2700,-13050),ctx.fillText("!",2700,-14350),ctx.shadowBlur=0},o.do=function(){this.checkStatus(),this.horizon(),this.ring(),this.periodicSpawns(),this.invulnerableTrap()}}(1800,-13700);for(let e=0;e<3;e++)powerUps.spawn(m.spawnPos.x,m.spawnPos.y,"heal")}}},k={randomColours(e=1){return`rgba(${this._randomColours.join(",")},${e})`},_randomColours:[255*Math.random(),255*Math.random(),255*Math.random()],updateRandomColours(e=.8){for(let t=0;t<this._randomColours.length;t++)this._randomColours[t]=Math.max(Math.min(this._randomColours[t]+this.randFact()*e*2-e,255),0)},randFact:()=>.8*Math.random()+.2*Math.sin(Date.now()/300),line(e){ctx.beginPath(),ctx.moveTo(e[0].x,e[0].y);for(const t of e.slice(1))ctx.lineTo(t.x,t.y);ctx.stroke()},arc(...e){ctx.beginPath(),ctx.arc(...e),ctx.fill()},arcOut(...e){ctx.beginPath(),ctx.arc(...e),ctx.stroke()},flame(e,t){for(let a=0;a<t;a++)this.singleFlame(...e)},singleFlame(e,t,a=10,o=3,s="#f00",n=Math.PI/2){ctx.strokeStyle=s,ctx.lineWidth=3;const l=[{x:e,y:t}];for(let s=0;s<o;s++){const o=2*(Math.random()-.5)+n,s=2*a+Math.random()*a;e+=Math.cos(o)*s,t-=Math.sin(o)*s,l.push({x:e,y:t})}k.line(l)},lightning(t,a,o,s=1,n=8,l=[255,240,127]){const i=simulation.cycle-o;if(i>=15)return;ctx.strokeStyle=`rgba(${l.join(",")},${255*(1-i/15)})`,ctx.lineWidth=n*(1-i/15),ctx.shadowColor=`rgb(${l.join(",")})`,ctx.shadowBlur=20;const c=[{x:t.x,y:t.y}];let p={x:t.x,y:t.y},r=e.magnitude(e.sub(t,a));const m=r>800?r/40:20,h=e.normalise(e.sub(a,t));for(;;){const t=B({y:2*C(Math.floor(o*s+r))*m-m,x:0},h),n=C(Math.floor(o*(s+1)+r))*m+m;if(r-=n,r<=0){c.push({x:a.x,y:a.y});break}p=e.add(p,e.mult(h,n)),c.push({x:p.x+t.x,y:p.y+t.y})}k.line(c),ctx.shadowBlur=0},holy(e,t,a=12){this.line([{x:e,y:t-a},{x:e-a,y:t},{x:e,y:t+a},{x:e+a,y:t},{x:e,y:t-a}])}};function C(e){e+=Math.seed;let t=232344573*Math.pow(e%97,4.3);const a=15485863,o=521791;t=t*a%o;for(let s=0;s<e*e%90+90;s++)t=t*a%o;return t/o}function B(t,a){const o="number"==typeof a?{x:Math.cos(a),y:Math.sin(a)}:e.normalise(a);return{x:t.x*o.x-t.y*o.y,y:t.y*o.x+t.x*o.y}}function V(t,a){q(player,{x:t,y:a});const o=bullet.length;for(let t=0;t<o;t++)bullet[t].botType&&q(bullet[t],e.add(player.position,{x:100*(C(t)-.5),y:100*(C(t+o)-.5)}))}function I(e,t){level.setPosToSpawn(e,t),V(e,t);for(let a=0;a<mob.length;a++)if(mob[a].isDarkMatter){D(mob[a],{x:e,y:t});break}m.resetHistory()}const U=(t,a)=>e.magnitude(e.sub(t,a)),L=(e,t)=>Math.atan2(t.y-e.y,e.x-t.x),D=(e,t)=>Matter.Body.setPosition(e,t),A=(e,t)=>Matter.Body.setVelocity(e,t),q=(e,t)=>{D(e,t),(e=>{A(e,{x:0,y:0})})(e)},F=(e,t)=>simulation.inGameConsole(`<h2 style='color: #f00; display: inline-block'>${d}:</h2> &nbsp; <h3 style='display: inline-block'>${e}</h3>`,t);level.custom=()=>{for(const e in T)T[e]();for(const e in M)M[e]();P.base(),P.room1(),P.room2(),P.room3(),P.entrance(),v.drawExit&&level.exit.drawAndCheck()},level.customTopLayer=()=>{P.mobTrails(),g.altar.drawTop(),P.waveTimer(),P.room2Top()}},dripp(){simulation.inGameConsole("<strong>dripp</strong> by <span class='color-var'>M. B.</span>");const e=level.door(780,-350,15,400,265),t=level.button(420,-10),a=level.boost(130,-445),o=level.hazard(690,-1050,10,700,.4),s=level.hazard(2470,-1515,162,14,.4),n=level.hazard(740,-1050,10,700,.4),l=level.hazard(3400,-380,350,6,.2),i=level.hazard(3425,-1420,400,8,.2),c=level.hazard(2250,-100,2700,200,.004),p=level.door(3131,-898,40,520,522),r=level.button(2495,-270),m=level.toggle(1463,-708,!0),h=level.elevator(4310,-150,200,50,-1443,.0025,{up:.1,down:.2}),d=level.portal({x:2117,y:-1560},-2*Math.PI,{x:-80,y:-475},-Math.PI/100),w=level.drip(4100+1e3*Math.random(),-1900,50,100),y=level.drip(4100+1e3*Math.random(),-1900,50,207),x=level.drip(4100+1e3*Math.random(),-1900,50,133),u=level.drip(4100+1e3*Math.random(),-1900,50,157);level.custom=()=>{level.exit.drawAndCheck(),w.draw(),y.draw(),x.draw(),u.draw(),t.query(),t.draw(),t.isUp?e.isClosing=!0:e.isClosing=!1,e.openClose(),r.query(),r.draw(),r.isUp?p.isClosing=!0:p.isClosing=!1,p.openClose(),ctx.fillStyle="rgba(0, 0, 0, 0.05)",ctx.fillRect(3169,-900,891,580),ctx.fillRect(417,-1057,380,730),ctx.fillRect(930,-515,207,520),ctx.fillRect(930,-1280,207,760),ctx.fillRect(1220,-1280,54,800),ctx.fillRect(1221,-1394,451,1398),ctx.fillRect(1924,-800,219,674),ctx.fillRect(2264,-1488,214,1550),ctx.fillRect(2631,-1488,201,1550),ctx.fillRect(2889,-930,237,1090),ctx.fillRect(3124,-311,957,360),ctx.fillRect(1919,-1480,220,700),level.enter.draw(),h.move(),m.query()},level.customTopLayer=()=>{a.query(),o.opticalQuery(),s.opticalQuery(),n.opticalQuery(),l.opticalQuery(),i.opticalQuery(),c.query(),o.isOn=m.isOn,n.isOn=m.isOn,d[0].draw(),d[1].draw(),d[2].draw(),d[2].query(),d[3].query()},level.setPosToSpawn(0,-50),level.exit.x=1400,level.exit.y=-1500,spawn.mapRect(level.enter.x,level.enter.y+20,100,20),level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#d8dadf",spawn.mapRect(-100,0,1485,100),spawn.mapRect(-279,-750,200,850),spawn.mapRect(1781,-125,375,75),spawn.mapRect(1670,-100,590,200),spawn.mapRect(2261,50,3100,50),spawn.mapRect(2420,-260,300,50),spawn.bodyRect(235,-240,50,50,1,spawn.propSLide),spawn.mapRect(410,-1100,400,50),spawn.mapRect(1220,-1470,420,80),spawn.mapRect(927,-1325,220,50),spawn.mapRect(4950,-200,425,375),spawn.bodyRect(5200,-300,100,100),spawn.mapRect(2150,50,225,50),spawn.mapRect(-300,-2375,6075,475),spawn.mapRect(-951,-2374,675,2476),spawn.mapRect(-950,100,6950,500),spawn.mapRect(5300,-2374,700,2700),spawn.randomMob(3e3,-300,.5),spawn.randomMob(1900,-1e3,.5),spawn.randomMob(2960,-800,.6),spawn.randomMob(3500,-1700,.4),spawn.randomMob(800,-1700,.6),spawn.randomMob(100,-1150,.6),spawn.randomMob(1095,-700,.6),powerUps.spawn(590,-200,"ammo"),powerUps.spawn(600,-200,"heal"),powerUps.spawnStartingPowerUps(590,-200),spawn.blockDoor(1230,-1490),spawn.mapRect(-100,-380,900,50),spawn.mapRect(-279,-1400,200,650),spawn.mapRect(-279,-1900,200,650),spawn.mapRect(2270,-1530,199,50),spawn.mapRect(2633,-1530,199,50),spawn.mapRect(3106,-400,300,50),spawn.mapRect(3750,-400,330,50),spawn.mapRect(3130,-1030,930,130),spawn.mapRect(4015,-900,46,275),spawn.blockDoor(4016,-400),spawn.mapRect(3168,-1440,290,50),spawn.mapRect(3771,-1440,294,50),spawn.mapRect(3106,-355,974,42),spawn.mapRect(3228,-1395,834,380),spawn.mapRect(3129,-1350,100,325),spawn.mapRect(3129,-1400,175,100),spawn.mapRect(3129,-1437,125,75),spawn.mapRect(1382,0,295,100),spawn.mapRect(1600,-50,560,85),spawn.mapRect(2264,-945,220,50),spawn.mapRect(1925,-800,220,50),spawn.mapRect(1390,-700,260,50),spawn.mapRect(927,-520,220,50),spawn.mapRect(2894,-948,300,50),spawn.mapRect(1230,-1825,440,81),spawn.mapRect(1616,-1750,54,360),spawn.mapRect(3128,-1440,50,50),spawn.mapRect(1705,-120,125,75),spawn.mapRect(1550,-25,150,50),spawn.mapRect(1628,-75,100,50),spawn.mapRect(1729,-130,650,75),spawn.mapRect(1917,-1484,300,50),spawn.mapRect(1917,-1950,200,325),spawn.mapRect(1917,-1825,50,375),spawn.mapRect(1221,-1420,57,465),spawn.mapRect(1221,-634,57,450),spawn.bodyRect(1227,-105,42,189,1,spawn.propSlide),spawn.mapRect(1770,-780,70,400),spawn.bodyRect(1783,-289,38,250,1,spawn.propSlide),simulation.difficulty>1&&spawn.randomLevelBoss(4800,-750),spawn.secondaryBossChance(4700,-1500),powerUps.addResearchToLevel()},biohazard(){simulation.inGameConsole("<strong>biohazard</strong> by <span class='color-var'>INOOBBOI</span> and <span class='color-var'>THESHWARMA</span>"),level.setPosToSpawn(-2800,-150),simulation.cutscene=(e,t,a,o=m.pos.x,s=m.pos.y)=>{e.reverse();const n=simulation.camera;simulation.camera=()=>{ctx.save(),ctx.translate(canvas.width2,canvas.height2),ctx.scale(simulation.zoom,simulation.zoom);const e=canvas.width2-o,t=canvas.height2-s;ctx.translate(-canvas.width2+e,-canvas.height2+t)};const l=()=>simulation.camera=n;let i=e.pop();const c=(e,t,a)=>e*(1-a)+t*a,p=t/5;let r=0;return()=>{o=c(o,i.x,p),s=c(s,i.y,p);return(Math.abs(i.x-o)<100&&Math.abs(i.y-s)<100&&++r>a&&(r=0,!(i=e.pop()))||!!input.field)&&(l(),!0)}};const e=level.boost(-1400,-100,900),t=level.boost(500,-900,2500),a=level.boost(4200,-100,900),o=level.boost(2200,-900,2500),s=level.toggle(1340,-600,!1,!0);let n=!1;const l=simulation.cutscene([{x:230,y:-2700},{x:3500,y:-1400},{x:1450,y:-1150},m.pos],.1,10);let i=!1;const c=(e,t)=>Math.random()*(t-e)+e,p=Math.round(5+20*Math.random()),r=[];for(let e=0;e<p;e++){const e=c(-2e3,4800);r.push(level.drip(e,-3100,1500,200+500*Math.random()))}const h=(e,t,a)=>{mobs.spawn(e,t,4,75,"rgb(232, 191, 40)");const o=mob[mob.length-1],s=Matter.Bodies.rectangle(e,t,75,127.5).vertices;o.vertices=s,o.collisionFilter.mask=cat.player|cat.map|cat.body|cat.mob|cat.bullet,o.g=simulation.g,o.leaveBody=o.isDropPowerUp=!1,o.do=function(){if(this.gravity(),this.speed>5){Matter.Query.collides(this,map).length>0&&(this.health=this.health-this.speed/250)}this.fill=`rgb(${232*this.health}, 191, 40)`},o.onDeath=function(){const e=Math.floor(input.down?10:7),t=(input.down?.4:1.3)/10;let a=m.angle-10*t/2;for(let o=0;o<10;o++){a+=t;const o=bullet.length;bullet[o]=Bodies.rectangle(this.position.x+50*Math.cos(this.angle),this.position.y+50*Math.sin(this.angle),17,4,b.fireAttributes(a));const s=e+4*Math.random();bullet[o].endCycle=2*s+simulation.cycle;const n=25*s/e,l=a+3*(Math.random()-.5);Matter.Body.setVelocity(bullet[o],{x:n*Math.cos(l),y:n*Math.sin(l)}),bullet[o].onEnd=function(){b.explosion(this.position,150+40*(Math.random()-.5))},bullet[o].beforeDmg=function(){this.endCycle=0},bullet[o].do=function(){},Composite.add(engine.world,bullet[o])}const o=~~(5*Math.random()*simulation.difficulty/10);for(let e=0;e<o;e++)powerUps.spawn(this.position.x,this.position.y,"ammo",!0),Math.random()>.7&&powerUps.spawn(this.position.x,this.position.y,"heal",!0)},Matter.Body.rotate(o,Math.random()*Math.PI),Matter.Body.setVelocity(o,a)},d=(e,t,a,o,s)=>{spawn.mapRect(e,t,a,o);const n=map[map.length-1],l=n.vertices[3],i=(e=>{const t=Vector.add(e,{x:0,y:3e3});let a=t;for(const o of map){const s=simulation.checkLineIntersection(e,t,o.vertices[0],o.vertices[1]);if(s.onLine1&&s.onLine2){a={x:s.x,y:s.y};break}}return a})(n.vertices[2]);s.push(((e,t)=>{const a=Math.abs(e.x-t.x),o=Math.abs(e.y-t.y);return{x:e.x,y:e.y,width:a,height:o}})(l,i))},w=(e,t,a,o,s=null,l=!1)=>{if(!l&&Math.random()>.5)return;s||(s=spawn.fullPickList[~~(Math.random()*spawn.fullPickList.length)]);const i=a/5+a*Math.random();spawn[s](0,0),mob[mob.length-1].leaveBody=mob[mob.length-1].isDropPowerUp=!1;const c=mob[mob.length-1].radius;mob[mob.length-1].alive=!1,spawn.allowShields=!1,spawn[s](e,t+i+2*c);const p=mob[mob.length-1];p.do=()=>{},mobs.spawn(e,t+i+2*c,4,p.radius+50,"rgba(150, 255, 150, 0.3)");const r=mob[mob.length-1];r.g=simulation.g,r.do=function(){this.gravity()},r.label="Cage";let h=0;r.onDamage=e=>{p.alive&&(h+=~~(l?5*e:50*e))},p.collisionFilter.mask=r.collisionFilter.mask=cat.player|cat.map|cat.bullet,spawn.constrain2AdjacentMobs(2,.05,!1),p.position=Vector.clone(r.position),p.health=r.health=1/0,p.isBadTarget=r.isBadTarget=!0,p.showHealthBar=r.showHealthBar=!1,p.leaveBody=p.isDropPowerUp=r.leaveBody=r.isDropPowerUp=!1;const d=r.vertices;let w=null;for(let a=0;a<d.length;a++){const o=d[a],s=d[(a+1)%d.length],n=simulation.checkLineIntersection(r.position,{x:e,y:t},o,s);if(n.onLine1&&n.onLine2){w=n;break}}w||(console.error("Couldn't find a cross... Origin: ",{x:e,y:t}," center: ",r.position," vertices: ",r.vertices),w=r.position);const y=Constraint.create({pointA:{x:e,y:t},pointB:Vector.sub(w,r.position),bodyB:r,stiffness:Math.max(5e-4-i/1e7,1e-8),length:i});Matter.Composite.add(engine.world,y);spawn.allowShields=!0,o.push(()=>{if(ctx.fillStyle=color.map,ctx.fillRect(e-20,t-5,40,25),r.alive){if(ctx.beginPath(),ctx.moveTo(e,t),ctx.lineTo(r.position.x+y.pointB.x,r.position.y+y.pointB.y),ctx.lineWidth=7,ctx.strokeStyle="rgba(0, 0, 0, 0.5)",ctx.stroke(),h&&h--,ctx.beginPath(),ctx.arc(r.position.x,r.position.y,r.radius+30,0,2*Math.PI),ctx.lineWidth=10,ctx.fillStyle=`rgba(255, 0, 0, ${Math.min(1,h/2e3)})`,ctx.strokeStyle=`rgba(255, 100, 0, ${Math.min(1,h/1e3)})`,ctx.setLineDash([125*Math.random(),125*Math.random()]),ctx.stroke(),ctx.setLineDash([]),ctx.fill(),l&&n){for(const e of mob)e.alive&&(ctx.beginPath(),ctx.moveTo(e.position.x,e.position.y),ctx.lineTo(p.position.x,p.position.y),ctx.lineWidth=10,ctx.strokeStyle="rgba(38, 0, 255, 0.67)",ctx.stroke(),e.damage(1),r.damage(1));r.damage(5)}h>2e3&&(b.explosion(r.position,10*r.radius),p.alive=r.alive=!1,h=0,l&&function(e,t,a=130,o=!0){const s=Math.round(3+Math.random()*simulation.difficulty/3);mobs.spawn(e,t,8,a,"rgb(83, 32, 58)");let l=mob[mob.length-1];l.isBoss=!0,l.accelMag=1e-4*simulation.accelScale,l.fireFreq=Math.floor(330*simulation.CDScale/simulation.difficulty),l.frictionStatic=0,l.friction=0,l.frictionAir=.02,l.memory=420/69*42,l.repulsionRange=1e6,l.energyBeacons=[],l.activeBalls=0;const i=()=>({genome:R(),score:0});l.fittestOrbs=localStorage&&localStorage.genome?JSON.parse(localStorage.genome):[i(),i(),i()],l.deadOrbs=[],l.energy=1,l.damageReduction=.25,spawn.shield(l,e,t,1/0),l.fireFreq=30,l.ionizeFreq=20,l.ionized=[],l.laserRange=4*a,Matter.Body.setDensity(l,.0088+2e-4*Math.sqrt(simulation.difficulty)),l.onDeath=function(){if(o){powerUps.spawnBossPowerUp(this.position.x,this.position.y);const e=2*~~(5*Math.random()*simulation.difficulty/10);for(let t=0;t<e;t++)powerUps.spawn(this.position.x,this.position.y,"ammo",!0),Math.random()>.7&&powerUps.spawn(this.position.x,this.position.y,"heal",!0)}localStorage&&localStorage.setItem("genome",JSON.stringify(this.fittestOrbs)),n=!1},l.onDamage=function(){},l.spawnBeacon=function(){const e=this.vertices[~~(Math.random()*this.vertices.length)],t=Vector.add(e,Vector.mult(Vector.normalise(Vector.sub(this.position,e)),-60)),a=Vector.mult(Vector.normalise(Vector.sub(this.position,e)),-5);!function(e,t,a){mobs.spawn(e,t,3,50,"");const o=mob[mob.length-1];o.laserRange=500,o.leaveBody=!1,o.isDropPowerUp=!1,o.energy=0,o.seed=simulation.cycle,o.chargeTicks=0,o.bossPos=null,o.density=2*o.density,Matter.Body.setDensity(o,.0066+2e-4*Math.sqrt(simulation.difficulty)),o.do=function(){if(a.alive||this.death(),Matter.Body.setAngularVelocity(this,.01),this.fill=`rgba(${255*this.energy}, 29, 136, 0.80)`,this.seePlayerCheck(),this.distanceToPlayer()<this.laserRange&&m.immuneCycle<m.cycle&&(m.energy>.1&&this.energy<.988&&(m.energy-=.012,this.energy+=.012),ctx.beginPath(),ctx.moveTo(this.position.x,this.position.y),ctx.lineTo(m.pos.x,m.pos.y),ctx.lineWidth=3+2*Math.abs(Math.sin((simulation.cycle+this.seed)/100)),ctx.strokeStyle=`rgb(${(255*Math.abs(Math.sin((simulation.cycle+this.seed+100)/100))).toFixed(3)}, 204, 255)`,ctx.setLineDash([125*Math.random(),125*Math.random()]),ctx.stroke(),ctx.setLineDash([])),this.energy>.5&&a.energy<1&&a.activeBalls<=5&&0===this.chargeTicks){0===Matter.Query.ray(map,this.position,a.position).length&&(this.chargeTicks=100,this.bossPos=Vector.clone(a.position))}if(this.chargeTicks>0){if(0===--this.chargeTicks){!function(e,t,a,o){const s=80;a.activeBalls++;const n=`rgba(${150+105*o}, 81, 50, 0.6)`;mobs.spawn(e.x,e.y,12,20+20*o,n);const l=mob[mob.length-1];l.end=function(){simulation.drawList.push({x:this.position.x,y:this.position.y,radius:this.radius,color:"#f3571d",time:~~(20*Math.random()+10)}),Math.random()>.95&&(spawn.bomb(this.position.x,this.position.y,this.radius,this.vertices.length),mob[mob.length-1].death()),a.activeBalls--,this.death()},l.collisionFilter.mask=cat.player|cat.map,l.life=0,l.isDropPowerUp=!1,l.leaveBody=!1,l.do=function(){Matter.Query.collides(this,map).length>0&&this.end(),++this.life>200-100*o&&this.end(),Matter.Query.collides(this,[a]).length>0&&(a.energy=Math.min(o*(s/100)+a.energy,1),a.spawnOrbs(),this.end());const n=Vector.normalise(Vector.sub(t,e));Matter.Body.setVelocity(this,{x:this.velocity.x+n.x,y:this.velocity.y+n.y}),simulation.drawList.push({x:this.position.x,y:this.position.y,radius:this.radius,color:"#e81e1e",time:3}),simulation.drawList.push({x:this.position.x,y:this.position.y,radius:this.radius,color:"#e87f1e",time:6}),simulation.drawList.push({x:this.position.x,y:this.position.y,radius:this.radius,color:"#e8e41e",time:9})},l.onDamage=l.end}(Vector.add(Vector.mult(Vector.normalise(Vector.sub(this.bossPos,this.position)),3*this.radius),this.position),this.bossPos,a,this.energy),this.energy=0}ctx.beginPath(),ctx.moveTo(this.position.x,this.position.y),ctx.lineTo(this.bossPos.x,this.bossPos.y),ctx.lineWidth=10+5*Math.abs(Math.sin((simulation.cycle+this.seed)/100)),ctx.strokeStyle=`rgb(${(255*Math.abs(Math.sin((simulation.cycle+this.seed+100)/100))).toFixed(3)}, 204, 255)`,ctx.setLineDash([125*Math.random(),125*Math.random()]),ctx.stroke(),ctx.setLineDash([])}this.energy<1&&(this.energy+=simulation.difficulty/4*.0015),u(this)},o.onDeath=function(){const e=a.energyBeacons;e.splice(e.indexOf(this),1),this.alive=!1,b.explosion(this.position,this.energy*this.radius*15),a.energy-=.025,mobs.statusStun(a,70+~~(100/simulation.difficulty))}}(t.x,t.y,this);const o=mob[mob.length-1];this.energyBeacons.push(o),Matter.Body.setVelocity(o,{x:this.velocity.x+a.x,y:this.velocity.y+a.y})},l.spawnOrbs=function(){Matter.Body.setAngularVelocity(this,.11);const e=[...this.vertices].sort(v);let t;for(;t=this.deadOrbs.pop();){const e=500*g(t.genome),a=t.score-e;for(let e=0;e<this.fittestOrbs.length;e++){if(this.fittestOrbs[e].score<a){this.fittestOrbs[e]=t;break}}}this.fittestOrbs.sort((e,t)=>e.score-t.score);const a=this.fittestOrbs.map(e=>e.genome);for(let t of e){let e=f(a[~~(Math.random()*a.length)]);const o=2*g(e);if(this.energy-o<0){e=R();const t=g(e);if(this.energy-t<0)continue}else this.energy-=Math.abs(o);T(t.x,t.y,e,this);const s=Vector.mult(Vector.perp(Vector.normalise(Vector.sub(this.position,t))),-10);Matter.Body.setVelocity(mob[mob.length-1],{x:this.velocity.x+s.x,y:this.velocity.y+s.y})}},l.do=function(){this.seePlayerCheck(),this.checkStatus(),this.attraction(),this.repulsion(),this.harmZone();const e=Math.random()>.99,t=Math.random()>.95&&this.energy>.25;if(0===this.energyBeacons.length&&this.spawnBeacon(),(this.energyBeacons.length<s&&t||e)&&(t&&(this.energy-=.1),this.spawnBeacon()),!this.seePlayer.recall||simulation.cycle%this.fireFreq||this.energy>.15&&this.spawnOrbs(),this.energy>1?this.energy-=.003:this.energy+=.001,!(simulation.cycle%this.ionizeFreq))for(let e=0;e<bullet.length;e++){const t=bullet[e];!t.botType&&M(this.position,t.position)<this.laserRange&&this.ionized.push({target:t,ticks:0})}for(let e=0;e<this.ionized.length;e++){const t=this.ionized[e];if(this.energy<=0)break;M(this.position,t.target.position)>this.laserRange?this.ionized.splice(e,1):10!==++t.ticks?(ctx.beginPath(),ctx.moveTo(this.position.x,this.position.y),ctx.lineTo(t.target.position.x,t.target.position.y),ctx.lineWidth=7,ctx.strokeStyle=`rgb(${60-2*t.ticks}, 50, 50)`,ctx.stroke(),this.energy-=t.target.mass/25):(t.target.endCycle=0,simulation.drawList.push({x:t.target.position.x,y:t.target.position.y,radius:5,color:"#f24",time:~~(20*Math.random()+10)}),this.ionized.splice(e,1))}!this.isShielded&&this.energy>.5&&(spawn.shield(this,this.position.x,this.position.y,1/0),this.energy-=.25),u(this),this.fill=`rgb(${(Math.sin(simulation.cycle/100)+1)/2*100}, 32, 58)`};const c=Math.ceil(2+Math.random()*simulation.difficulty/5);for(let e=0;e<c;e++)l.spawnBeacon()}(p.position.x,p.position.y))}})},y=[],x=[];level.custom=()=>{level.exit.drawAndCheck(),level.enter.draw(),player.force.y-=player.mass*simulation.g*.25,i||(i=l());for(const e of r)e.draw();if(Math.random()>.999&&n&&!i){const e=[-1415,-30,1345,2815,4285];h(e[~~(e.length*Math.random())],-4200,{x:0,y:0})}ctx.beginPath();for(const e of y)ctx.rect(e.x,e.y,e.width,e.height);ctx.fillStyle="rgba(0,10,30,0.1)",ctx.fill(),s.isOn&&!n&&(n=!0)},level.customTopLayer=()=>{e.query(),t.query(),a.query(),o.query(),s.query(),ctx.fillStyle="rgba(68, 68, 68,0.95)",ctx.fillRect(-1460,-4350,170,1250),ctx.fillRect(-60,-4350,170,1250),ctx.fillRect(1315,-4350,170,1250),ctx.fillRect(2790,-4350,170,1250),ctx.fillRect(4265,-4350,170,1250);for(const e of x)e()};function u(e){if(e.seePlayer.recall&&e.energy>0){const t=.3*e.radius,a=2*e.radius,o=e.position.x-a/2,s=e.position.y-.9*a;ctx.fillStyle="rgba(100, 100, 100, 0.3)",ctx.fillRect(o,s,a,t),ctx.fillStyle="#0cf",ctx.fillRect(o,s,a*e.energy,t)}}function R(){const e={density:.001*Math.random(),size:15+15*Math.random(),speed:.1*Math.random(),color:[255*Math.random(),255*Math.random(),255*Math.random(),50+205*Math.random()],vertexCount:Math.floor(5*Math.random())+3,vertexOffset:null};return e.vertexOffset=Array(e.vertexCount).fill().map(()=>({x:Math.random()-.5,y:Math.random()-.5})),e}function f(e){const t=e=>{return t=-e,a=e,Math.random()*(a-t)+t;var t,a},a=e=>({x:e.x+t(.5),y:e.y+t(.5)}),o={density:e.density+t(5e-4),size:e.size+t(5),speed:e.speed+t(.05),color:e.color.map(e=>(e+t(10))%255),vertexCount:Math.max(e.vertexCount+Math.round(t(1)),3),vertexOffset:e.vertexOffset.map(a)};if(e.vertexOffset.length<o.vertexCount){const e=o.vertexOffset;e.push(a(e[~~(e.length*Math.random())]))}else e.vertexOffset.length>o.vertexCount&&o.vertexOffset.pop();return o}function g(e){return 1/(e.density*e.size*e.speed)*1e-6}const v=(e,t)=>(e.x-t.x)**2+(e.y-t.y)**2,M=(e,t)=>Math.sqrt(v(e,t));function T(e,t,a,o){mobs.spawn(e,t,a.vertexCount,a.size,"#"+a.color.map(e=>(~~e).toString(16)).join(""));const s=mob[mob.length-1];Matter.Body.setDensity(s,a.density),s.accelMag=a.speed;for(let e=0;e<s.vertices.length;e++){const t=s.vertices[e],o=a.vertexOffset[e];o||console.log(a,s),t.x+=o.x,t.y+=o.y}s.stroke="transparent",Matter.Body.setDensity(s,1e-5),s.score=30,s.timeLeft=9001/9,s.accelMag=17e-5*simulation.accelScale,s.frictionAir=.01,s.restitution=.5,s.leaveBody=!1,s.isDropPowerUp=!1,s.isBadTarget=!0,s.isMobBullet=!0,s.showHealthBar=!1,s.collisionFilter.category=cat.mobBullet,s.collisionFilter.mask=cat.player|cat.map|cat.body|cat.bullet,s.do=function(){this.alwaysSeePlayer(),this.attraction(),this.timeLimit(),Matter.Query.collides(this,map).length>0&&(this.score-=.5),this.score-=.05,this.score<0&&(this.alive=!1);const e=bullet.some(e=>v(this.position,e.position)<1e4),t=v(this.position,simulation.mouseInGame)<1e4&&input.fire;(e||t)&&(this.score+=1),v(this.position,o.position)>4e6&&(this.alive=!1)},s.onHit=function(){this.score+=50,this.score+=2*this.mass,this.hitPlayer=!0,this.explode(this.mass)},s.onDeath=function(){this.hitPlayer||(this.score+=1e4/this.distanceToPlayer()),Math.random()>.97&&powerUps.spawn(this.position.x,this.position.y,"ammo",!0),o.deadOrbs.push({genome:a,score:this.score})}}var P,S;spawn.mapRect(level.enter.x,level.enter.y+20,100,20),level.exit.x=5700,level.exit.y=-130,spawn.mapRect(5800,-110,-100,10),level.defaultZoom=2e3,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="hsl(138, 3%, 74%)",spawn.mapRect(-3100,-100,9200,100),spawn.mapRect(-3100,-600,100,500),spawn.mapRect(-3100,-600,1100,100),spawn.mapRect(-2100,-3100,100,2700),spawn.mapRect(4800,-3100,100,2600),spawn.mapRect(4800,-600,1300,100),spawn.mapRect(6e3,-600,100,600),spawn.mapRect(400,-200,2e3,100),spawn.mapRect(600,-300,1600,100),spawn.mapRect(800,-400,1200,100),spawn.mapRect(1e3,-500,800,100),spawn.mapRect(1200,-600,400,100),spawn.mapRect(-2100,-4350,650,1250),spawn.mapRect(-1300,-4350,1250,1250),spawn.mapRect(100,-4350,1225,1250),spawn.mapRect(1475,-4350,1325,1250),spawn.mapRect(2950,-4350,1325,1250),spawn.mapRect(4425,-4350,475,1250),d(-1200,-500,300,100,y),d(-400,-700,300,100,y),d(400,-900,300,100,y),d(-2e3,-800,300,100,y),d(-1e3,-1e3,300,100,y),d(-400,-1300,300,100,y),d(-1600,-1300,300,100,y),d(-1300,-1600,300,100,y),d(-2e3,-1700,300,100,y),d(-700,-1800,300,100,y),d(-1500,-2100,300,100,y),d(-600,-2200,300,100,y),d(-2e3,-2500,300,100,y),d(-1100,-2400,300,100,y),d(-500,-2700,300,100,y),d(100,-2400,300,100,y),d(700,-2700,300,100,y),d(3700,-500,300,100,y),d(2900,-700,300,100,y),d(2100,-900,300,100,y),d(4500,-800,300,100,y),d(3500,-1e3,300,100,y),d(4100,-1300,300,100,y),d(2900,-1300,300,100,y),d(3800,-1600,300,100,y),d(4500,-1700,300,100,y),d(3200,-1800,300,100,y),d(4e3,-2100,300,100,y),d(3100,-2200,300,100,y),d(4500,-2500,300,100,y),d(3600,-2400,300,100,y),d(3e3,-2700,300,100,y),d(2400,-2400,300,100,y),d(1800,-2700,300,100,y),w(-1492,-1200,100,x),w(-875,-2300,300,x),w(-1600,-3100,1e3,x),w(225,-2300,1e3,x),w(-750,-3100,700,x),w(-625,-1700,1200,x),w(2200,-3100,500,x),w(3275,-1700,500,x),w(3650,-900,300,x),w(2500,-2300,300,x),w(3625,-2300,300,x),w(3875,-1500,300,x),w(4025,-3100,300,x),d(1275,-2150,250,100,y),w(1400,-2050,500,x,"starter",!0),map[map.length]=Bodies.trapezoid(1400,-2193,250,100,.5),spawn.debris(-550,-225,100),spawn.debris(-1150,-1725,75),spawn.debris(-275,-1400,50),spawn.debris(2850,-2075,150),spawn.debris(4250,-2250,150),P=0,S=0,tech.isDuplicateMobs&&Math.random()<tech.duplicationChance()&&spawn.historyBoss(P,S)},stereoMadness(){simulation.inGameConsole("<strong>stereoMadness</strong> by <span class='color-var'>Richard0820</span>");let e=0;const t=function(t,a,o=50){mobs.spawn(t,a,40,o,"yellow");let s=mob[mob.length-1];s.stroke="#00000055",s.isShielded=!0,s.leaveBody=!1,s.isBadTarget=!0,s.isUnblockable=!0,s.isDropPowerUp=!1,s.showHealthBar=!1,s.collisionFilter.category=0,Matter.Body.setDensity(s,.0045),s.onDeath=function(){e++},s.damageReduction=.35,s.do=function(){if(ctx.save(),ctx.translate(this.position.x,this.position.y),ctx.rotate(Math.PI/2+.5),ctx.strokeStyle="#000000",ctx.beginPath(),ctx.arc(0,0,30,-1,Math.PI,!1),ctx.moveTo(20,-5),ctx.arc(0,0,20,-1,Math.PI,!1),ctx.lineWidth=5,ctx.stroke(),ctx.restore(),!simulation.isTimeSkipping){const e=Math.sin(.015*simulation.cycle);this.radius=50*(1+.1*e);const t=Vector.sub(player.position,this.position),a=Vector.magnitude(t);Vector.mult(Vector.normalise(t),3e-9);a<this.radius&&(m.health<.7?m.takeDamage(-.001):(.7==m.health||m.health>.7)&&this.death(),ctx.strokeStyle="#00FFDD55",ctx.beginPath(),ctx.arc(m.pos.x,m.pos.y,34,0,2*Math.PI),ctx.lineWidth=6,ctx.stroke()),ctx.beginPath(),ctx.arc(this.position.x,this.position.y,this.radius+15,0,2*Math.PI),ctx.strokeStyle="#000",ctx.lineWidth=1,ctx.stroke()}}},a=function(e,t,a=.5*Math.PI,o=50){mobs.spawn(e,t,3,o,"#454545");let s=mob[mob.length-1];s.stroke="transparent",s.isDropPowerUp=!1,s.showHealthBar=!1,Matter.Body.setDensity(s,50),s.collisionFilter.mask=cat.player|cat.mob|cat.bullet,s.constraint=Constraint.create({pointA:{x:s.position.x,y:s.position.y},bodyB:s,stiffness:0,damping:0}),s.do=function(){this.health<1&&(this.health+=.001,simulation.drawList.push({x:this.position.x,y:this.position.y,radius:this.radius/1.5,color:`rgba(0, 255, 20, ${.1*Math.random()})`,time:simulation.drawTime})),this.checkStatus(),Matter.Body.setAngle(s,a)},s.onHit=function(){m.takeDamage(.01),s.collisionFilter.mask=0,setTimeout(()=>{s.collisionFilter.mask=cat.player|cat.mob|cat.bullet},1e3)},Composite.add(engine.world,s.constraint)};function o(e,t,a,o,s){o*=1+.1*Math.sin(.15*simulation.cycle),s*=1+.1*Math.sin(.15*simulation.cycle);var n=Math.PI/2*3,l=e,c=t,p=Math.PI/a;for(ctx.strokeSyle="#000",ctx.beginPath(),ctx.moveTo(e,t-o),i=0;i<a;i++)l=e+Math.cos(n)*o,c=t+Math.sin(n)*o,ctx.lineTo(l,c),n+=p,l=e+Math.cos(n)*s,c=t+Math.sin(n)*s,ctx.lineTo(l,c),n+=p;ctx.lineTo(e,t-o),ctx.closePath(),ctx.lineWidth=5,ctx.strokeStyle="red",ctx.stroke(),ctx.fillStyle="darkred",ctx.fill()}const s=level.hazard(7475,-75,475,100,.01),n=level.hazard(11275,-75,1450,100,.01),l=level.hazard(13400,-150,3500,200,.1),c=level.hazard(20275,-400,3475,450,.01),p=level.hazard(25300,-800,2e4,650,.003),r=level.hazard(47725,-425,2500,475,.01),h=level.hazard(50975,-575,4050,650,.01),d=level.hazard(54950,-950,6650,1050,.01),w=level.hazard(63550,-75,2150,100,.01),y=level.hazard(70875,-75,1200,100,.01),x=level.hazard(72075,-50,900,75,1),u=level.hazard(75900,-75,2575,100,.01),R=level.hazard(78475,-35,2300,70,.01),b=level.hazard(82875,-75,5100,100,.1),f=level.drip(32474,-2165,-800,100),g=level.drip(37750,-2165,-800,100),v=level.drip(43525,-2165,-800,100),M=level.drip(20475,-830,-375,100),T=level.drip(49960,-2315,-423,200);let P=0,S=0,k=!0,C=document.createElement("div");C.style.cssText="position: absolute; top: 80px; background-color: black; width: 80vw; z-index: 1; border-radius: 10px; height: 20px; left: 5em; right: 5em;",C.innerHTML+='<div id="innerBar" style="height: 12px; border-radius: 10px; margin-top: 3px; margin-left: 4px; border: 1px solid gray;"></div>',document.body.appendChild(C);let B=document.getElementById("innerBar");level.custom=()=>{level.exit.drawAndCheck(),1==k&&(B.style.width=`calc(${Math.max(0,Math.min(player.position.x/1310,80))}vw - 10px)`,B.style.backgroundColor=m.eyeFillColor),m.pos.x>25360&&0==P&&(simulation.inGameConsole("<div><em>A stong force pushes you forward...</em></div>"),P++),m.pos.x<-3e3&&(Matter.Body.setVelocity(player,{x:99,y:19}),0==S&&simulation.inGameConsole("<div><em>A strong force pushes you away...</em></div>"),S++),m.pos.y>1055&&(Matter.Body.setPosition(player,{x:0,y:-150}),simulation.inGameConsole("<div><em>There is nowhere to run...</em></div>"),m.takeDamage(.1*simulation.difficultyMode)),0==m.alive&&1==k&&(document.body.removeChild(C),k=!1),ctx.beginPath(),ctx.lineWidth=5,ctx.strokeStyle="#000000",ctx.moveTo(40,-1e3),ctx.arc(0,-1e3,40,0,2*Math.PI),ctx.stroke(),ctx.fillStyle="#FF00FF55",ctx.fillRect(89750,-1300,800,200),ctx.fillRect(89750,-200,800,200),ctx.fillRect(92050,-200,800,200),ctx.fillRect(92050,-1675,800,575),ctx.fillRect(93950,-350,200,350),ctx.fillRect(95100,-1350,150,375),ctx.fillRect(100900,-1325,1175,250),ctx.fillRect(100900,-225,1200,250),ctx.fillRect(98725,-1325,450,150),ctx.fillRect(98725,-125,450,150),ctx.beginPath(),ctx.lineWidth=10,ctx.strokeStyle="#000000",ctx.moveTo(7462.5,-250),ctx.lineTo(7462.5,-170),ctx.moveTo(7710,-330),ctx.lineTo(7710,-250),ctx.moveTo(7960,-420),ctx.lineTo(7960,-320),ctx.moveTo(13725,-250),ctx.lineTo(13725,-180),ctx.moveTo(14025,-350),ctx.lineTo(14025,-280),ctx.moveTo(14325,-450),ctx.lineTo(14325,-380),ctx.moveTo(14625,-550),ctx.lineTo(14625,-480),ctx.moveTo(14925,-650),ctx.lineTo(14925,-580),ctx.moveTo(15225,-750),ctx.lineTo(15225,-680),ctx.moveTo(15525,-850),ctx.lineTo(15525,-780),ctx.moveTo(15825,-950),ctx.lineTo(15825,-880),ctx.moveTo(16125,-1050),ctx.lineTo(16125,-980),ctx.moveTo(16425,-1150),ctx.lineTo(16425,-1080),ctx.moveTo(22600,-650),ctx.lineTo(22600,-580),ctx.moveTo(22800,-750),ctx.lineTo(22800,-680),ctx.moveTo(23e3,-850),ctx.lineTo(23e3,-780),ctx.moveTo(23200,-950),ctx.lineTo(23200,-880),ctx.moveTo(23400,-1050),ctx.lineTo(23400,-980),ctx.moveTo(23600,-1150),ctx.lineTo(23600,-1080),ctx.moveTo(29550,-1625),ctx.lineTo(29550,-1425),ctx.moveTo(32275,-2125),ctx.lineTo(32275,-1925),ctx.moveTo(33775,-2125),ctx.lineTo(33775,-1925),ctx.moveTo(32275,-350),ctx.lineTo(32275,-550),ctx.moveTo(33775,-350),ctx.lineTo(33775,-550),ctx.moveTo(35475,-650),ctx.lineTo(35475,-450),ctx.moveTo(37650,-2e3),ctx.lineTo(37650,-1800),ctx.moveTo(39675,-400),ctx.lineTo(39675,-600),ctx.moveTo(40375,-500),ctx.lineTo(40375,-700),ctx.moveTo(41075,-600),ctx.lineTo(41075,-800),ctx.moveTo(43625,-1925),ctx.lineTo(43625,-1725),ctx.moveTo(50975,-1125),ctx.lineTo(50975,-925),ctx.moveTo(51387.5,-1325),ctx.lineTo(51387.5,-1125),ctx.moveTo(51787.5,-1525),ctx.lineTo(51787.5,-1325),ctx.moveTo(52187.5,-1725),ctx.lineTo(52187.5,-1525),ctx.moveTo(52587.5,-1725),ctx.lineTo(52587.5,-1925),ctx.moveTo(52987.5,-2125),ctx.lineTo(52987.5,-1925),ctx.moveTo(53387.5,-2325),ctx.lineTo(53387.5,-2125),ctx.moveTo(53787.5,-2525),ctx.lineTo(53787.5,-2325),ctx.moveTo(54187.5,-2725),ctx.lineTo(54187.5,-2525),ctx.moveTo(54587.5,-2925),ctx.lineTo(54587.5,-2725),ctx.moveTo(54987.5,-3125),ctx.lineTo(54987.5,-2925),ctx.moveTo(57500,-1925),ctx.lineTo(57650,-1925),ctx.moveTo(57520,-1845),ctx.lineTo(57650,-1845),ctx.moveTo(57500,-1925),ctx.lineTo(58195,-1925),ctx.moveTo(57520,-1845),ctx.lineTo(58195,-1845),ctx.moveTo(58525,-1725),ctx.lineTo(58650,-1725),ctx.moveTo(58525,-1625),ctx.lineTo(58650,-1625),ctx.moveTo(59e3,-1725),ctx.lineTo(59150,-1725),ctx.moveTo(59150,-1625),ctx.lineTo(59e3,-1625),ctx.moveTo(70875,-200),ctx.lineTo(70875,-100),ctx.moveTo(63700,-200),ctx.lineTo(63800,-200),ctx.moveTo(64e3,-200),ctx.lineTo(64100,-200),ctx.moveTo(64675,-200),ctx.lineTo(64575,-200),ctx.moveTo(64875,-200),ctx.lineTo(64975,-200),ctx.moveTo(65025,-300),ctx.lineTo(64925,-300),ctx.moveTo(65225,-300),ctx.lineTo(65325,-300),ctx.moveTo(71275,-200),ctx.lineTo(71275,-300),ctx.moveTo(71675,-300),ctx.lineTo(71675,-400),ctx.moveTo(72075,-400),ctx.lineTo(72075,-500),ctx.moveTo(72425,-325),ctx.lineTo(72425,-425),ctx.moveTo(72675,-200),ctx.lineTo(72675,-300),ctx.moveTo(72925,-75),ctx.lineTo(72925,-175),ctx.moveTo(75225,-100),ctx.lineTo(75225,-200),ctx.moveTo(76600,-125),ctx.lineTo(76600,-225),ctx.moveTo(76900,-200),ctx.lineTo(76900,-300),ctx.moveTo(77175,-275),ctx.lineTo(77175,-375),ctx.moveTo(77475,-350),ctx.lineTo(77475,-450),ctx.moveTo(85575,-275),ctx.lineTo(85575,-375),ctx.moveTo(86e3,-275),ctx.lineTo(86e3,-375),ctx.moveTo(86275,-275),ctx.lineTo(86275,-375),ctx.moveTo(86950,-425),ctx.lineTo(86950,-525),ctx.moveTo(89700,-175),ctx.lineTo(89700,-75),ctx.moveTo(89700,-1125),ctx.lineTo(89700,-1225),ctx.moveTo(90600,-1225),ctx.lineTo(90600,-1125),ctx.moveTo(90600,-100),ctx.lineTo(90600,-175),ctx.moveTo(92e3,-100),ctx.lineTo(92e3,-175),ctx.moveTo(92900,-100),ctx.lineTo(92900,-175),ctx.moveTo(92900,-1225),ctx.lineTo(92900,-1125),ctx.moveTo(94500,-1475),ctx.lineTo(94500,-1575),ctx.moveTo(94700,-1475),ctx.lineTo(94700,-1575),ctx.moveTo(94900,-1475),ctx.lineTo(94900,-1575),ctx.moveTo(96125,-1500),ctx.lineTo(96125,-1575),ctx.moveTo(96550,-1575),ctx.lineTo(96550,-1500),ctx.moveTo(97e3,-1475),ctx.lineTo(97e3,-1575),ctx.stroke(),ctx.beginPath(),ctx.strokeStyle="#FFFFFF",ctx.fillStyle=document.body.style.backgroundColor;let t=Math.sin(.15*simulation.cycle);if(ctx.moveTo(7482.5,-270),ctx.arc(7462.5,-270,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(7730,-350),ctx.arc(7710,-350,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(7980,-420),ctx.arc(7960,-420,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(13745,-180),ctx.arc(13725,-180,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(14045,-280),ctx.arc(14025,-280,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(14345,-380),ctx.arc(14325,-380,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(14645,-480),ctx.arc(14625,-480,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(14945,-580),ctx.arc(14925,-580,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(15245,-680),ctx.arc(15225,-680,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(15545,-780),ctx.arc(15525,-780,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(15845,-880),ctx.arc(15825,-880,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(16145,-980),ctx.arc(16125,-980,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(16445,-1080),ctx.arc(16425,-1080,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(22620,-580),ctx.arc(22600,-580,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(22820,-680),ctx.arc(22800,-680,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(23020,-780),ctx.arc(23e3,-780,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(23220,-880),ctx.arc(23200,-880,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(23420,-980),ctx.arc(23400,-980,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(23620,-1080),ctx.arc(23600,-1080,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(29570,-1425),ctx.arc(29550,-1425,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(32295,-1925),ctx.arc(32275,-1925,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(33795,-1925),ctx.arc(33775,-1925,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(32295,-550),ctx.arc(32275,-550,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(33795,-550),ctx.arc(33775,-550,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(35495,-650),ctx.arc(35475,-650,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(37670,-1800),ctx.arc(37650,-1800,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(39695,-600),ctx.arc(39675,-600,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(40395,-700),ctx.arc(40375,-700,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(41095,-800),ctx.arc(41075,-800,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(43645,-1725),ctx.arc(43625,-1725,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(50995,-1125),ctx.arc(50975,-1125,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(51407.5,-1325),ctx.arc(51387.5,-1325,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(51807.5,-1525),ctx.arc(51787.5,-1525,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(52207.5,-1725),ctx.arc(52187.5,-1725,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(52607.5,-1925),ctx.arc(52587.5,-1925,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(53007.5,-2125),ctx.arc(52987.5,-2125,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(53407.5,-2325),ctx.arc(53387.5,-2325,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(53807.5,-2525),ctx.arc(53787.5,-2525,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(54207.5,-2725),ctx.arc(54187.5,-2725,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(54607.5,-2925),ctx.arc(54587.5,-2925,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(55007.5,-3125),ctx.arc(54987.5,-3125,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(57520,-1925),ctx.arc(57500,-1925,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(57520,-1845),ctx.arc(57500,-1845,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(58525,-1725),ctx.arc(58505,-1725,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(58195,-1925),ctx.arc(58175,-1925,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(58195,-1845),ctx.arc(58175,-1845,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(58525,-1625),ctx.arc(58505,-1625,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(59190,-1625),ctx.arc(59170,-1625,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(59190,-1725),ctx.arc(59170,-1725,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(70895,-200),ctx.arc(70875,-200,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(63720,-200),ctx.arc(63700,-200,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(64120,-200),ctx.arc(64100,-200,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(64595,-200),ctx.arc(64575,-200,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(64995,-200),ctx.arc(64975,-200,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(64945,-300),ctx.arc(64925,-300,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(65345,-300),ctx.arc(65325,-300,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(71295,-300),ctx.arc(71275,-300,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(71695,-400),ctx.arc(71675,-400,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(72095,-500),ctx.arc(72075,-500,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(72445,-425),ctx.arc(72425,-425,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(72695,-300),ctx.arc(72675,-300,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(72945,-175),ctx.arc(72925,-175,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(75245,-200),ctx.arc(75225,-200,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(76620,-125),ctx.arc(76600,-125,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(76920,-200),ctx.arc(76900,-200,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(77195,-275),ctx.arc(77175,-275,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(77495,-350),ctx.arc(77475,-350,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(85595,-375),ctx.arc(85575,-375,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(86020,-375),ctx.arc(86e3,-375,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(86295,-375),ctx.arc(86275,-375,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(86970,-525),ctx.arc(86950,-525,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(89720,-175),ctx.arc(89700,-175,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(89720,-1125),ctx.arc(89700,-1125,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(90620,-1125),ctx.arc(90600,-1125,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(90620,-175),ctx.arc(90600,-175,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(92020,-175),ctx.arc(92e3,-175,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(92920,-175),ctx.arc(92900,-175,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(92920,-1125),ctx.arc(92900,-1125,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(94520,-1575),ctx.arc(94500,-1575,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(94720,-1575),ctx.arc(94700,-1575,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(94920,-1575),ctx.arc(94900,-1575,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(96145,-1575),ctx.arc(96125,-1575,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(96570,-1500),ctx.arc(96550,-1500,20*(1+.1*t),0,2*Math.PI),ctx.moveTo(97020,-1575),ctx.arc(97e3,-1575,20*(1+.1*t),0,2*Math.PI),ctx.fill(),ctx.stroke(),s.query(),n.query(),l.query(),c.query(),p.query(),p.query(),r.query(),h.query(),d.query(),w.query(),y.query(),x.query(),u.query(),R.query(),b.query(),f.draw(),g.draw(),v.draw(),M.draw(),T.draw(),ctx.fillStyle="rgba(0,255,255,0.9)",ctx.fillRect(25325,-1375,75,400),ctx.fillRect(46425,-1350,100,500),ctx.fillRect(87925,-725,75,450),player.position.x>25360&&player.position.x<46470?(Matter.Body.setVelocity(player,{x:player.velocity.x,y:player.velocity.y}),input.up&&Matter.Body.setVelocity(player,{x:player.velocity.x,y:player.velocity.y}),document.body.style.backgroundColor="#fb3310"):player.position.x>46470&&player.position.x<61675||player.position.x>9700&&player.position.x<46470?document.body.style.backgroundColor="#7704FF":player.position.x>61675&&player.position.x<87950?document.body.style.backgroundColor="#DD1111":player.position.x>87950&&(document.body.style.backgroundColor="#7704FF"),m.pos.y>-200&&20350<m.pos.x&&m.pos.x<23635){Matter.Body.setVelocity(player,{x:0,y:0}),Matter.Body.setPosition(player,{x:20250,y:-1e3});for(let e=0;e<bullet.length;e++)bullet[e].botType&&(Matter.Body.setPosition(bullet[e],Vector.add(player.position,{x:250*(Math.random()-.5),y:250*(Math.random()-.5)})),Matter.Body.setVelocity(bullet[e],{x:0,y:0}));m.takeDamage(.1*simulation.difficultyMode),m.energy-=.1*simulation.difficultyMode}if(m.pos.y>-150&&m.pos.x>47770&&m.pos.x<50130){Matter.Body.setVelocity(player,{x:0,y:0}),Matter.Body.setPosition(player,{x:47640,y:-900});for(let e=0;e<bullet.length;e++)bullet[e].botType&&(Matter.Body.setPosition(bullet[e],Vector.add(player.position,{x:250*(Math.random()-.5),y:250*(Math.random()-.5)})),Matter.Body.setVelocity(bullet[e],{x:0,y:0}));m.takeDamage(.1*simulation.difficultyMode),m.energy-=.1*simulation.difficultyMode}if(m.pos.y>-150&&50975<m.pos.x&&m.pos.x<54925){Matter.Body.setVelocity(player,{x:0,y:0}),Matter.Body.setPosition(player,{x:50965,y:-1100});for(let e=0;e<bullet.length;e++)bullet[e].botType&&(Matter.Body.setPosition(bullet[e],Vector.add(player.position,{x:250*(Math.random()-.5),y:250*(Math.random()-.5)})),Matter.Body.setVelocity(bullet[e],{x:0,y:0}));m.takeDamage(.1*simulation.difficultyMode),m.energy-=.1*simulation.difficultyMode}if(m.pos.y>-150&&55025<m.pos.x&&m.pos.x<57675){Matter.Body.setVelocity(player,{x:0,y:0}),Matter.Body.setPosition(player,{x:55148,y:-3072});for(let e=0;e<bullet.length;e++)bullet[e].botType&&(Matter.Body.setPosition(bullet[e],Vector.add(player.position,{x:250*(Math.random()-.5),y:250*(Math.random()-.5)})),Matter.Body.setVelocity(bullet[e],{x:0,y:0}));m.takeDamage(.1*simulation.difficultyMode),m.energy-=.1*simulation.difficultyMode}if(m.pos.y>-150&&57875<m.pos.x&&m.pos.x<58700){Matter.Body.setVelocity(player,{x:0,y:0}),Matter.Body.setPosition(player,{x:57800,y:-2200});for(let e=0;e<bullet.length;e++)bullet[e].botType&&(Matter.Body.setPosition(bullet[e],Vector.add(player.position,{x:250*(Math.random()-.5),y:250*(Math.random()-.5)})),Matter.Body.setVelocity(bullet[e],{x:0,y:0}));m.takeDamage(.1*simulation.difficultyMode),m.energy-=.1*simulation.difficultyMode}if(m.pos.y>-150&&58875<m.pos.x&&m.pos.x<61650){Matter.Body.setVelocity(player,{x:0,y:0}),Matter.Body.setPosition(player,{x:58850,y:-2025});for(let e=0;e<bullet.length;e++)bullet[e].botType&&(Matter.Body.setPosition(bullet[e],Vector.add(player.position,{x:250*(Math.random()-.5),y:250*(Math.random()-.5)})),Matter.Body.setVelocity(bullet[e],{x:0,y:0}));m.takeDamage(.1*simulation.difficultyMode),m.energy-=.1*simulation.difficultyMode}if(m.pos.y>-1677&&104650<m.pos.x&&m.pos.x<105e3&&1==k){Matter.Body.setVelocity(player,{x:0,y:0}),Matter.Body.setPosition(player,{x:132577,y:-300});for(let e=0;e<bullet.length;e++)bullet[e].botType&&(Matter.Body.setPosition(bullet[e],Vector.add(player.position,{x:250*(Math.random()-.5),y:250*(Math.random()-.5)})),Matter.Body.setVelocity(bullet[e],{x:0,y:0}));if(document.body.style.transitionDuration="0ms",document.body.style.backgroundColor="#696969",simulation.inGameConsole("<div><em>You have earned: </em><b>"+Math.min(3,e)+"</b><em> tech</em></div>"),1==k){document.body.removeChild(C);for(let t=0,a=Math.min(3,e);t<a;t++)powerUps.directSpawn(player.position.x,player.position.y,"tech");k=!1}}ctx.fillStyle="#FFFFFF53",ctx.fillRect(57645,-2055,385,85),ctx.fillRect(58645,-1880,385,85),ctx.strokeStyle="#FF0000",ctx.strokeRect(66975,-725,25,50),ctx.strokeRect(67050,-725,25,50),ctx.strokeRect(68125,-725,25,50),ctx.strokeRect(68300,-725,25,50),ctx.strokeRect(69162,-725,25,50),ctx.strokeRect(69862,-725,25,50),ctx.strokeRect(74412.5,-412.5,25,50),ctx.strokeRect(74612.5,-412.5,25,50),ctx.strokeRect(77962.5,-900,25,50),ctx.strokeRect(78212.5,-775,25,50),ctx.strokeRect(78462.5,-650,25,50),ctx.strokeRect(81587.5,-725,25,50),ctx.strokeRect(81687.5,-725,25,50),ctx.strokeRect(81787.5,-725,25,50),ctx.strokeRect(83037.5,-215,25,50),ctx.strokeRect(83362.5,-215,25,50),ctx.strokeRect(83687.5,-215,25,50),ctx.strokeRect(84187.5,-315,25,50),ctx.strokeStyle="#FF000088",ctx.strokeRect(66975,-850,25,50),ctx.strokeRect(67050,-850,25,50),ctx.strokeRect(68125,-850,25,50),ctx.strokeRect(68300,-850,25,50),ctx.strokeRect(69162,-850,25,50),ctx.strokeRect(69862,-850,25,50),ctx.strokeRect(74412.5,-525,25,50),ctx.strokeRect(74612.5,-525,25,50),ctx.strokeRect(77962.5,-985,25,50),ctx.strokeRect(78212.5,-860,25,50),ctx.strokeRect(78462.5,-735,25,50),ctx.strokeRect(81587.5,-850,25,50),ctx.strokeRect(81687.5,-850,25,50),ctx.strokeRect(81787.5,-850,25,50),ctx.strokeRect(83037.5,-315,25,50),ctx.strokeRect(83362.5,-315,25,50),ctx.strokeRect(83687.5,-315,25,50),ctx.strokeRect(84187.5,-415,25,50),ctx.strokeStyle="#FF000044",ctx.strokeRect(66975,-975,25,50),ctx.strokeRect(67050,-975,25,50),ctx.strokeRect(68125,-975,25,50),ctx.strokeRect(68300,-975,25,50),ctx.strokeRect(69162,-975,25,50),ctx.strokeRect(69862,-975,25,50),ctx.strokeRect(74412.5,-633,25,50),ctx.strokeRect(74612.5,-633,25,50),ctx.strokeRect(77962.5,-1075,25,50),ctx.strokeRect(78212.5,-950,25,50),ctx.strokeRect(78462.5,-825,25,50),ctx.strokeRect(81587.5,-975,25,50),ctx.strokeRect(81687.5,-975,25,50),ctx.strokeRect(81787.5,-975,25,50),ctx.strokeRect(83037.5,-415,25,50),ctx.strokeRect(83362.5,-415,25,50),ctx.strokeRect(83687.5,-415,25,50),ctx.strokeRect(84187.5,-515,25,50),ctx.strokeStyle="#FF000011",ctx.strokeRect(66975,-1100,25,50),ctx.strokeRect(67050,-1100,25,50),ctx.strokeRect(68125,-1100,25,50),ctx.strokeRect(68300,-1100,25,50),ctx.strokeRect(69162,-1100,25,50),ctx.strokeRect(69862,-1100,25,50),ctx.strokeRect(74412.5,-741,25,50),ctx.strokeRect(74612.5,-741,25,50),ctx.strokeRect(77962.5,-1165,25,50),ctx.strokeRect(78212.5,-1040,25,50),ctx.strokeRect(78462.5,-915,25,50),ctx.strokeRect(81587.5,-1100,25,50),ctx.strokeRect(81687.5,-1100,25,50),ctx.strokeRect(81787.5,-1100,25,50),ctx.strokeRect(83037.5,-515,25,50),ctx.strokeRect(83362.5,-515,25,50),ctx.strokeRect(83687.5,-515,25,50),ctx.strokeRect(84187.5,-615,25,50),ctx.stroke(),ctx.beginPath(),ctx.strokeStyle="#FF0000",ctx.moveTo(66987.5,-680),ctx.lineTo(66987.5,-625),ctx.moveTo(67062.5,-680),ctx.lineTo(67062.5,-625),ctx.moveTo(68137.5,-680),ctx.lineTo(68137.5,-625),ctx.moveTo(68312.5,-680),ctx.lineTo(68312.5,-625),ctx.moveTo(69175,-680),ctx.lineTo(69175,-625),ctx.moveTo(69875,-680),ctx.lineTo(69875,-625),ctx.moveTo(74425,-290),ctx.lineTo(74425,-370),ctx.moveTo(74625,-290),ctx.lineTo(74625,-370),ctx.moveTo(77975,-790),ctx.lineTo(77975,-855),ctx.moveTo(78225,-665),ctx.lineTo(78225,-730),ctx.moveTo(78475,-540),ctx.lineTo(78475,-605),ctx.moveTo(81600,-680),ctx.lineTo(81600,-625),ctx.moveTo(81700,-680),ctx.lineTo(81700,-625),ctx.moveTo(81800,-680),ctx.lineTo(81800,-625),ctx.moveTo(83050,-100),ctx.lineTo(83050,-170),ctx.moveTo(83375,-100),ctx.lineTo(83375,-170),ctx.moveTo(83700,-100),ctx.lineTo(83700,-170),ctx.moveTo(84200,-200),ctx.lineTo(84200,-270),ctx.stroke(),ctx.strokeStyle="#FF000099",ctx.moveTo(66987.5,-810),ctx.lineTo(66987.5,-715),ctx.moveTo(67062.5,-810),ctx.lineTo(67062.5,-715),ctx.moveTo(68137.5,-810),ctx.lineTo(68137.5,-715),ctx.moveTo(68312.5,-810),ctx.lineTo(68312.5,-715),ctx.moveTo(69175,-810),ctx.lineTo(69175,-715),ctx.moveTo(69875,-810),ctx.lineTo(69875,-715),ctx.moveTo(74425,-405),ctx.lineTo(74425,-480),ctx.moveTo(74625,-405),ctx.lineTo(74625,-480),ctx.moveTo(77975,-890),ctx.lineTo(77975,-940),ctx.moveTo(78225,-765),ctx.lineTo(78225,-815),ctx.moveTo(78475,-640),ctx.lineTo(78475,-690),ctx.moveTo(81600,-810),ctx.lineTo(81600,-715),ctx.moveTo(81700,-810),ctx.lineTo(81700,-715),ctx.moveTo(81800,-810),ctx.lineTo(81800,-715),ctx.moveTo(83050,-210),ctx.lineTo(83050,-270),ctx.moveTo(83375,-210),ctx.lineTo(83375,-270),ctx.moveTo(83700,-210),ctx.lineTo(83700,-270),ctx.moveTo(84200,-310),ctx.lineTo(84200,-370),ctx.stroke(),ctx.strokeStyle="#FF000044",ctx.moveTo(66987.5,-930),ctx.lineTo(66987.5,-845),ctx.moveTo(67062.5,-930),ctx.lineTo(67062.5,-845),ctx.moveTo(68137.5,-930),ctx.lineTo(68137.5,-845),ctx.moveTo(68312.5,-930),ctx.lineTo(68312.5,-845),ctx.moveTo(69175,-930),ctx.lineTo(69175,-845),ctx.moveTo(69875,-930),ctx.lineTo(69875,-845),ctx.moveTo(74425,-515),ctx.lineTo(74425,-590),ctx.moveTo(74625,-515),ctx.lineTo(74625,-590),ctx.moveTo(77975,-975),ctx.lineTo(77975,-1040),ctx.moveTo(78225,-850),ctx.lineTo(78225,-915),ctx.moveTo(78475,-725),ctx.lineTo(78475,-790),ctx.moveTo(81600,-930),ctx.lineTo(81600,-845),ctx.moveTo(81700,-930),ctx.lineTo(81700,-845),ctx.moveTo(81800,-930),ctx.lineTo(81800,-845),ctx.moveTo(83050,-305),ctx.lineTo(83050,-370),ctx.moveTo(83375,-305),ctx.lineTo(83375,-370),ctx.moveTo(83700,-305),ctx.lineTo(83700,-370),ctx.moveTo(84200,-405),ctx.lineTo(84200,-470),ctx.stroke(),ctx.strokeStyle="#FF000022",ctx.moveTo(66987.5,-1060),ctx.lineTo(66987.5,-965),ctx.moveTo(67062.5,-1060),ctx.lineTo(67062.5,-965),ctx.moveTo(68137.5,-1060),ctx.lineTo(68137.5,-965),ctx.moveTo(68312.5,-1060),ctx.lineTo(68312.5,-965),ctx.moveTo(69175,-1060),ctx.lineTo(69175,-965),ctx.moveTo(69875,-1060),ctx.lineTo(69875,-965),ctx.moveTo(74425,-620),ctx.lineTo(74425,-712.5),ctx.moveTo(74625,-620),ctx.lineTo(74625,-712.5),ctx.moveTo(77975,-1075),ctx.lineTo(77975,-1120),ctx.moveTo(78225,-950),ctx.lineTo(78225,-995),ctx.moveTo(78475,-825),ctx.lineTo(78475,-870),ctx.moveTo(81600,-1060),ctx.lineTo(81600,-965),ctx.moveTo(81700,-1060),ctx.lineTo(81700,-965),ctx.moveTo(81800,-1060),ctx.lineTo(81800,-965),ctx.moveTo(83050,-405),ctx.lineTo(83050,-470),ctx.moveTo(83375,-405),ctx.lineTo(83375,-470),ctx.moveTo(83700,-405),ctx.lineTo(83700,-470),ctx.moveTo(84200,-505),ctx.lineTo(84200,-570),ctx.stroke();let a=95525;for(let e=0;e<3;e++)o(a,-1540,5,40,15),a+=200;o(97375,-1540,5,25,10),o(97675,-1540,5,25,10),o(97975,-1540,5,25,10),o(98275,-1540,5,25,10),o(98575,-1540,5,25,10)};var V=ctx.createLinearGradient(0,0,175,0);V.addColorStop(0,"#7704FF00"),V.addColorStop(1,"#00FFFF"),level.customTopLayer=()=>{player.position.x>25360&&player.position.x<46470&&player.position.y>-2348||player.position.x>87995&&player.position.x<103950&&player.position.y>-1350?(player.force.x+=.0045,m.airControl=()=>{input.up&&(player.force.y-=.02)},m.draw=()=>{ctx.save(),ctx.globalAlpha=m.immuneCycle<m.cycle?1:.5,ctx.translate(player.position.x,player.position.y),ctx.rotate(player.angle),input.up?ctx.rotate(`${Math.max(-.5,Math.min(m.angle,.5))}`):ctx.rotate(`${Math.max(.5,Math.min(m.angle,-.5))}`),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.arc(15,0,4,0,2*Math.PI),ctx.strokeStyle="#333",ctx.lineWidth=2,ctx.stroke(),ctx.beginPath(),ctx.moveTo(30,0),ctx.lineTo(60,10),ctx.lineTo(60,30),ctx.lineTo(20,40),ctx.lineTo(0,40),ctx.lineTo(-50,60),ctx.lineTo(-50,0),ctx.lineTo(-40,-40),ctx.lineTo(-40,-40),ctx.lineTo(-30,10),ctx.lineTo(30,10),ctx.lineTo(30,0),ctx.fill(),ctx.moveTo(-50,30),ctx.lineTo(-60,30),ctx.lineTo(-60,0),ctx.lineTo(-50,0),ctx.fill(),ctx.stroke(),ctx.restore()}):(m.resetSkin(),m.airControl=()=>{input.up&&m.buttonCD_jump+20<m.cycle&&m.yOffWhen.stand>23&&m.lastOnGroundCycle+5>m.cycle&&m.jump(),m.buttonCD_jump+60>m.cycle&&!input.up&&m.Vy<0&&Matter.Body.setVelocity(player,{x:player.velocity.x,y:.94*player.velocity.y}),input.left?player.velocity.x>-m.airSpeedLimit/player.mass/player.mass&&(player.force.x-=m.FxAir):input.right&&player.velocity.x<m.airSpeedLimit/player.mass/player.mass&&(player.force.x+=m.FxAir)}),ctx.fillStyle=`rgba(68, 68, 68, ${Math.max(.1,Math.min((-1400-m.pos.y)/-100,.99))})`,ctx.fillRect(91900,-1675,12050,375),ctx.save(),ctx.translate(104700,-1675),ctx.fillStyle=V,ctx.fillRect(0,0,175,1675),ctx.restore()},level.setPosToSpawn(0,-150),level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#0150FF",document.body.style.transitionDuration="1500ms",level.exit.x=133150,level.exit.y=-260,spawn.mapRect(level.exit.x,level.exit.y+25,100,20),spawn.mapRect(-5e3,0,11e4,1e3),spawn.mapVertex(-5775,-1330,"0 0 1000 7000 -1000 7000"),spawn.mapVertex(-7e3,-330,"0 0 1000 4000 -1000 4000"),spawn.mapVertex(-1e4,-330,"0 0 1000 4000 -1000 4000"),spawn.mapVertex(-9e3,-330,"0 0 1000 4000 -1000 4000"),spawn.mapVertex(-7500,-330,"0 0 1000 4000 -1000 4000"),spawn.mapRect(-1e4,0,3500,1e3),a(3e3,-30),a(5e3,-30),a(4925,0),a(7275,-30),a(7375,-30),a(9806,-30),a(9900,-30),a(12e3,-130),a(13050,-255),a(17300,-1105),a(17400,-1105),a(17200,-1105),a(17500,-1105),a(18200,-1105),a(18100,-1105),a(18300,-1105),a(18400,-1105),a(19875,-1108),a(19975,-930),a(21e3,-930),a(21725,-780),a(23600,-1230),spawn.mapVertex(62e3,-300,"0 1000 1000 1000 0 0");let I=1.5*Math.PI;a(18825,-1170,I),a(18925,-1170,I),a(19025,-1170,I),a(19125,-1170,I),a(19225,-1170,I),a(19325,-1170,I),a(49962.5,-2370,I),a(50062.5,-2370,I),a(50162.5,-2370,I),a(50262.5,-2370,I),a(50362.5,-2370,I),a(32375,-280),a(32475,-280),a(32575,-280),a(32675,-280),a(32775,-280),a(32875,-280),a(32975,-280),a(33075,-280),a(33175,-280),a(33275,-280),a(33375,-280),a(33475,-280),a(33575,-280),a(33675,-280),a(35575,-280),a(35675,-280),a(35775,-280),a(35875,-280),a(39775,-280),a(39875,-280),a(39975,-280),a(40075,-280),a(40175,-280),a(40275,-280),a(40475,-280),a(40575,-280),a(40675,-280),a(40775,-280),a(40875,-280),a(40975,-280),a(32375,-2193,I),a(32475,-2193,I),a(32575,-2193,I),a(32675,-2193,I),a(32775,-2193,I),a(32875,-2193,I),a(32975,-2193,I),a(33075,-2193,I),a(33175,-2193,I),a(33275,-2193,I),a(33375,-2193,I),a(33475,-2193,I),a(33575,-2193,I),a(33675,-2193,I),a(37750,-2193,I),a(37850,-2193,I),a(37950,-2193,I),a(38050,-2193,I),a(43025,-2193,I),a(43125,-2193,I),a(43225,-2193,I),a(43325,-2193,I),a(43425,-2193,I),a(43525,-2193,I),a(43725,-2193,I),a(43825,-2193,I),a(43925,-2193,I),a(44025,-2193,I),a(44125,-2193,I),a(44225,-2193,I),a(44325,-2193,I),a(44425,-2193,I),a(44525,-2193,I),a(44625,-2193,I),a(44725,-2193,I),a(44825,-2193,I),a(63375,-30),a(63475,-30),a(65775,-30),a(65875,-30),a(66975,-30),a(67075,-30),a(66975,-500,I),a(67075,-500,I),a(68125,-30),a(68225,-30),a(68325,-30),a(68125,-500,I),a(68225,-500,I),a(68325,-500,I),a(69175,-500,I),a(69175,-30),a(69875,-500,I),a(69875,-30),a(70675,-30),a(70775,-30),a(73725,-30),a(73825,-30),a(74425,-195,I),a(74525,-195,I),a(74625,-195,I),a(75125,-30),spawn.mapVertex(78725,-466,"0 50 100 50 50 0"),a(79300,-180),a(80800,-30),a(80900,-30),a(81600,-30),a(81700,-30),a(81800,-30),a(81600,-500,I),a(81700,-500,I),a(81800,-500,I),a(93425,-1430),a(93525,-1430),a(85800,-305),a(86475,-305),a(87150,-455),a(94025,-1570,I),a(94125,-1570,I),a(94500,-1430),a(94700,-1430),a(94900,-1430),a(94600,-1400),a(94800,-1400),a(94212.5,-1675,I),a(94287.5,-1675,I),a(95525,-1400),a(95525,-1675,I),a(95625,-1400),a(95625,-1675,I),a(95725,-1400),a(95725,-1675,I),a(95825,-1400),a(95825,-1675,I),a(95925,-1400),a(95925,-1675,I),a(96025,-1400),a(96225,-1400),a(96650,-1675,I),a(96900,-1400),a(97150,-1675,I),a(98900,-1400),a(96975,-155),a(97075,-155),a(97175,-155),a(97275,-155),a(97375,-155),a(97475,-155),a(96975,-1170,I),a(97075,-1170,I),a(97175,-1170,I),a(97275,-1170,I),a(97375,-1170,I),a(97475,-1170,I),a(98700,-1070,I),a(98800,-1070,I),a(98900,-1070,I),a(99e3,-1070,I),a(99100,-1070,I),a(99200,-1070,I),a(98700,-230),a(98800,-230),a(98900,-230),a(99e3,-230),a(99100,-230),a(99200,-230),a(98975,-1400),a(99375,-1675,I),a(99300,-1675,I),a(99575,-1675,I),a(1e5,-1400),spawn.mapRect(7425,-175,75,175),spawn.mapRect(7675,-250,75,250),spawn.mapRect(7925,-325,75,325),spawn.mapRect(10625,-100,725,100),spawn.mapRect(11625,-100,725,100),spawn.mapRect(12650,-225,800,225),spawn.mapRect(13675,-300,100,50),spawn.mapRect(13975,-400,100,50),spawn.mapRect(14275,-500,100,50),spawn.mapRect(14575,-600,100,50),spawn.mapRect(14875,-700,100,50),spawn.mapRect(15175,-800,100,50),spawn.mapRect(15475,-900,100,50),spawn.mapRect(15775,-1e3,100,50),spawn.mapRect(16075,-1100,100,50),spawn.mapRect(16375,-1200,100,50),spawn.mapRect(16625,-1075,350,100),spawn.mapRect(16800,-1075,1825,1125),spawn.mapRect(17250,-1225,200,50),spawn.mapRect(18150,-1225,200,50),spawn.mapRect(18550,-975,1050,1025),spawn.mapRect(19525,-1075,400,1125),spawn.mapRect(18775,-1275,600,75),spawn.mapRect(19825,-900,500,950),spawn.mapRect(20150,-900,375,125),spawn.mapRect(20750,-900,300,50),spawn.mapRect(21225,-750,550,50),spawn.mapRect(21950,-625,450,50),spawn.mapRect(22550,-700,100,50),spawn.mapRect(22750,-800,100,50),spawn.mapRect(22950,-900,100,50),spawn.mapRect(23150,-1e3,100,50),spawn.mapRect(23350,-1100,100,50),spawn.mapRect(23550,-1200,100,50),spawn.mapRect(23525,-975,400,100),spawn.mapRect(23650,-975,1825,1025),spawn.mapRect(23750,-2500,625,1125),spawn.mapRect(24e3,-2500,1200,1300),spawn.mapRect(24900,-2500,575,1125),spawn.mapRect(25425,-2500,2e4,275),spawn.mapRect(25425,-250,2e4,300),spawn.mapRect(29450,-2300,200,675),spawn.mapRect(32225,-2225,100,100),spawn.mapRect(33725,-2225,100,100),spawn.mapRect(32225,-350,100,100),spawn.mapRect(33725,-350,100,100),spawn.mapRect(37600,-2225,100,225),spawn.mapRect(35425,-475,100,225),spawn.mapRect(39625,-400,100,150),spawn.mapRect(40325,-500,100,250),spawn.mapRect(41025,-600,100,350),spawn.mapRect(43575,-2225,100,300),spawn.mapRect(44875,-2500,1675,1225),spawn.mapRect(44875,-950,1675,1e3),spawn.mapRect(46425,-825,1400,875),spawn.mapRect(48075,-1100,175,1150),spawn.mapRect(48575,-1300,175,1375),spawn.mapRect(49075,-1500,175,1550),spawn.mapRect(49575,-1700,175,975),spawn.mapRect(49575,-500,175,550),spawn.mapRect(50075,-1900,175,700),spawn.mapRect(50075,-1e3,1e3,1e3),spawn.mapRect(49912.5,-2525,500,125),spawn.mapRect(51300,-1200,175,1225),spawn.mapRect(51700,-1400,175,1425),spawn.mapRect(52100,-1600,175,1625),spawn.mapRect(52500,-1800,175,1825),spawn.mapRect(52900,-2e3,175,2025),spawn.mapRect(53300,-2200,175,2225),spawn.mapRect(53700,-2400,175,2425),spawn.mapRect(54100,-2600,175,2625),spawn.mapRect(54500,-2800,175,2825),spawn.mapRect(54900,-3e3,175,3025),spawn.mapRect(55050,-3e3,175,75),spawn.mapRect(55475,-2875,250,75),spawn.mapRect(55900,-2625,250,75),spawn.mapRect(56500,-2400,375,75),spawn.mapRect(57200,-2200,250,75),spawn.mapRect(57650,-2050,375,75),spawn.mapRect(57650,-1970,375,1975),spawn.mapRect(58650,-1875,375,75),spawn.mapRect(58650,-1795,375,1975),spawn.mapRect(59525,-1750,175,75),spawn.mapRect(60125,-1600,175,75),spawn.mapRect(60750,-1425,175,75),spawn.mapRect(61250,-1225,175,75),spawn.mapRect(61550,-1025,225,1125),spawn.mapRect(63525,-100,100,100),spawn.mapRect(63800,-225,200,50),spawn.mapRect(64175,-100,100,100),spawn.mapRect(64275,-100,100,100),spawn.mapRect(64375,-100,100,100),spawn.mapRect(64675,-225,200,50),spawn.mapRect(65025,-325,200,50),spawn.mapRect(65425,-100,300,100),spawn.mapRect(66925,-650,200,120),spawn.mapRect(68075,-650,300,120),spawn.mapRect(69125,-650,100,120),spawn.mapRect(69825,-650,100,120),spawn.mapRect(70825,-100,100,100),spawn.mapRect(71225,-200,100,200),spawn.mapRect(71625,-300,100,300),spawn.mapRect(72025,-400,100,400),spawn.mapRect(72125,-400,100,50),spawn.mapRect(72375,-325,100,50),spawn.mapRect(72625,-200,100,50),spawn.mapRect(72875,-75,100,50),spawn.mapRect(74375,-300,300,75),spawn.mapRect(75175,-100,100,100),spawn.mapRect(75900,-150,400,50),spawn.mapRect(76550,-250,100,50),spawn.mapRect(76850,-325,100,50),spawn.mapRect(77125,-400,100,50),spawn.mapRect(77425,-475,300,50),spawn.mapRect(77925,-400,100,100),spawn.mapRect(78175,-275,100,100),spawn.mapRect(78425,-150,100,100),spawn.mapRect(78675,-50,100,100),spawn.mapRect(77925,-800,100,100),spawn.mapRect(78175,-675,100,100),spawn.mapRect(78425,-550,100,100),spawn.mapRect(78675,-450,100,100),spawn.mapRect(78450,-100,50,125),spawn.mapRect(79025,-150,100,50),spawn.mapRect(79250,-150,100,50),spawn.mapRect(79475,-150,100,50),spawn.mapRect(79800,-225,300,50),spawn.mapRect(80250,-150,100,50),spawn.mapRect(80450,-100,300,50),spawn.mapRect(81550,-650,300,120),spawn.mapRect(82800,-100,100,100),spawn.mapRect(82900,-100,200,50),spawn.mapRect(83325,-100,100,50),spawn.mapRect(83650,-100,200,50),spawn.mapRect(83850,-100,100,100),spawn.mapRect(83950,-200,100,200),spawn.mapRect(84050,-200,200,50),spawn.mapRect(84500,-350,100,50),spawn.mapRect(84725,-250,100,50),spawn.mapRect(84950,-150,300,50),spawn.mapRect(85525,-275,100,50),spawn.mapRect(85750,-275,100,50),spawn.mapRect(85950,-275,375,50),spawn.mapRect(86425,-275,100,50),spawn.mapRect(86625,-275,100,50),spawn.mapRect(86900,-425,300,50),spawn.mapRect(87375,-275,300,50),spawn.mapRect(87900,-300,125,300),spawn.mapRect(87900,-1850,125,1150),spawn.mapRect(87900,-1850,17e3,175),spawn.mapRect(104875,-1850,125,2850),spawn.mapRect(87900,-1850,4e3,550),spawn.mapRect(89650,-100,100,100),spawn.mapRect(89750,-200,100,100),spawn.mapRect(89850,-300,600,100),spawn.mapRect(90450,-200,100,100),spawn.mapRect(90550,-100,100,100),spawn.mapRect(89650,-1300,100,100),spawn.mapRect(89750,-1200,100,100),spawn.mapRect(89850,-1100,600,100),spawn.mapRect(90450,-1200,100,100),spawn.mapRect(90550,-1300,100,100),spawn.mapRect(91950,-100,100,100),spawn.mapRect(92050,-200,100,100),spawn.mapRect(92150,-300,600,100),spawn.mapRect(92750,-200,100,100),spawn.mapRect(92850,-100,100,100),spawn.mapRect(92050,-1200,100,100),spawn.mapRect(92150,-1100,600,100),spawn.mapRect(92750,-1200,100,100),spawn.mapRect(92850,-1300,100,100),spawn.mapRect(92950,-1400,11e3,100),spawn.mapRect(93975,-1700,200,100),spawn.mapRect(96075,-1500,100,100),spawn.mapRect(96500,-1675,100,100),spawn.mapRect(96950,-1490,1900,100),spawn.mapRect(97200,-1685,1650,100),spawn.mapRect(93900,-300,100,300),spawn.mapRect(93900,-400,300,100),spawn.mapRect(94100,-300,100,300),spawn.mapRect(95025,-1300,100,300),spawn.mapRect(95025,-1e3,300,100),spawn.mapRect(95225,-1300,100,300),spawn.mapRect(96925,-1300,600,100),spawn.mapRect(96925,-125,600,125),spawn.mapRect(98650,-1300,100,200),spawn.mapRect(98650,-1200,600,100),spawn.mapRect(99150,-1300,100,200),spawn.mapRect(98650,-200,100,200),spawn.mapRect(99150,-200,100,200),spawn.mapRect(98650,-200,600,100),spawn.mapRect(100825,-1300,100,300),spawn.mapRect(100825,-1100,1325,100),spawn.mapRect(102050,-1300,100,300),spawn.mapRect(100825,-300,100,300),spawn.mapRect(100825,-300,1350,100),spawn.mapRect(102075,-300,100,300),spawn.mapRect(99425,-1675,100,125),spawn.mapRect(100050,-1525,100,125),spawn.mapRect(132025,-225,2325,525),spawn.mapRect(132025,-1450,500,1750),spawn.mapRect(133875,-1475,475,1775),spawn.mapRect(132025,-1925,2325,475),t(50165.9,-1090),t(78725.4,-600),t(103830,-1473),function(e,t,a=30){mobs.spawn(e,t,6,a,"black");let o=mob[mob.length-1];o.stroke="transparent",o.collisionFilter.mask=cat.player|cat.bullet,o.accelMag=6e-4*Math.min(simulation.difficulty+1,4),o.showHealthBar=!1,o.isUnblockable=!0,o.isShielded=!0,o.memory=1/0,o.seeAtDistance2=1/0,Matter.Body.setDensity(o,1),simulation.inGameConsole('<b style="color: #3498DB;">Ω:</b><em style="color: #141414;"><b> Intruder Detected</b></em>'),o.boost=10,o.do=function(){(1==o.boost&&3==m.fieldMode||9==m.fieldMode&&1==o.boost)&&(o.accelMag*=1.5,o.boost--),this.attraction(),this.checkStatus(),this.repelBullets(),this.locatePlayer(),this.alwaysSeePlayer(),player.position.x>105e3&&this.death()},o.onHit=function(){for(let e=0;e<10;e++)spawn.spawns(this.position.x+1e3*Math.random()-1e3*Math.random(),this.position.y-1e3*Math.random(),1)}}(0,-1e3)},yingYang(){simulation.inGameConsole("<strong>yingYang</strong> by <span class='color-var'>Richard0820</span>");let e=!1;const t=level.door(425,-1400,50,300,300),a=function(e,t,a=35+Math.ceil(30*Math.random())){mobs.spawn(e,t,3,a,"transparent");let o=mob[mob.length-1];o.vertices=Matter.Vertices.rotate(o.vertices,Math.PI,o.position),o.isVerticesChange=!0,o.stroke="transparent",o.alpha=1,o.showHealthBar=!1,o.frictionStatic=0,o.friction=0,o.canTouchPlayer=!1,o.isBadTarget=!0,o.collisionFilter.mask=cat.map|cat.body|cat.bullet|cat.mob,o.memory=30,o.fireFreq=.005+.002*Math.random()+5e-4*simulation.difficulty,o.noseLength=0,o.fireAngle=0,o.accelMag=5e-4*simulation.accelScale,o.frictionAir=.05,o.torque=1e-4*o.inertia,o.fireDir={x:0,y:0},o.onDeath=function(){},o.do=function(){this.seePlayerCheck(),this.checkStatus();const e=()=>{const e=this.radius+this.radius*this.noseLength;this.vertices[1].x=this.position.x+Math.cos(this.angle)*e,this.vertices[1].y=this.position.y+Math.sin(this.angle)*e};if(this.seePlayer.recall){simulation.cycle%this.seePlayerFreq||(this.fireDir=Vector.normalise(Vector.sub(this.seePlayer.position,this.position)));const t=this.angle+Math.PI/2,a=Vector.dot({x:Math.cos(t),y:Math.sin(t)},this.fireDir),o=.03;if(a>o)this.torque+=4e-6*this.inertia;else if(a<-o)this.torque-=4e-6*this.inertia;else if(this.noseLength>1.5&&a>-.2&&a<.2){spawn.sniperBullet(this.vertices[1].x,this.vertices[1].y,7+Math.ceil(this.radius/15),5);const e=10+8*simulation.accelScale;Matter.Body.setVelocity(mob[mob.length-1],{x:this.velocity.x+this.fireDir.x*e+Math.random(),y:this.velocity.y+this.fireDir.y*e+Math.random()}),this.noseLength=0,this.force.x-=.005*this.fireDir.x*this.mass,this.force.y-=.005*this.fireDir.y*this.mass}this.noseLength<1.5&&(this.noseLength+=this.fireFreq),e()}else this.noseLength>.1&&(this.noseLength-=this.fireFreq/2,e());if(this.seePlayer.recall?this.alpha<1&&(this.alpha+=.01):this.alpha>0&&(this.alpha-=.03),this.alpha>0){this.alpha>.95&&(this.seePlayer.recall&&this.healthBar1(),this.canTouchPlayer||(this.canTouchPlayer=!0,this.isBadTarget=!1,this.collisionFilter.mask=cat.player|cat.map|cat.body|cat.bullet|cat.mob)),ctx.beginPath();const e=this.vertices;ctx.moveTo(e[0].x,e[0].y);for(let t=1,a=e.length;t<a;++t)ctx.lineTo(e[t].x,e[t].y);ctx.lineTo(e[0].x,e[0].y),ctx.fillStyle=`rgba(250,250,250,${this.alpha*this.alpha})`,ctx.fill()}else this.canTouchPlayer&&(this.canTouchPlayer=!1,this.isBadTarget=!0,this.collisionFilter.mask=cat.map|cat.body|cat.bullet|cat.mob)}},o=level.portal({x:650,y:-1e3},1.5*Math.PI,{x:525,y:2625},-Math.PI);document.body.style.transition="0ms",document.body.style.backgroundColor="#061026";var s=new Image;s.src="https://raw.githubusercontent.com/Whyisthisnotavalable/image-yy/main/Hotpot6.png",color.map="#FFFFFF11",color.bullet="#FFFFFF",level.custom=()=>{level.enter.draw(),level.exit.drawAndCheck(),ctx.drawImage(s,-500,-500,1e3,1e3),o[0].draw(),o[1].draw(),o[2].query(),o[3].query(),t.isClosing=0==e,t.openClose()},level.customTopLayer=()=>{t.draw(),ctx.beginPath(),ctx.moveTo(m.pos.x,m.pos.y);const e=Math.PI/4;ctx.arc(m.pos.x,m.pos.y,100,m.angle+e,m.angle-e),ctx.arc(m.pos.x,m.pos.y,4e3,m.angle-e,m.angle+e),ctx.fillStyle="rgba(255,255,255,0.7)",ctx.globalCompositeOperation="destination-in",ctx.fill(),ctx.globalCompositeOperation="source-over",ctx.clip()},level.setPosToSpawn(0,-50),level.exit.x=-275,level.exit.y=2900,level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),spawn.mapRect(-125,-325,225,25),spawn.mapRect(300,-150,25,325),spawn.mapRect(-325,-125,25,300),spawn.mapRect(-150,300,275,25),spawn.mapRect(125,-300,25,25),spawn.mapRect(175,-275,25,25),spawn.mapRect(225,-250,25,25),spawn.mapRect(250,-200,25,25),spawn.mapRect(-175,-300,25,25),spawn.mapRect(-225,-275,25,25),spawn.mapRect(-300,-200,25,25),spawn.mapRect(150,275,25,25),spawn.mapRect(200,225,25,25),spawn.mapRect(250,200,25,25),spawn.mapRect(250,-225,25,25),spawn.mapRect(275,-175,25,25),spawn.mapRect(200,-275,25,25),spawn.mapRect(150,-300,25,25),spawn.mapRect(100,-325,25,25),spawn.mapRect(-150,-300,25,25),spawn.mapRect(-200,-300,25,25),spawn.mapRect(-250,-250,25,25),spawn.mapRect(-275,-225,25,25),spawn.mapRect(-300,-175,25,50),spawn.mapRect(275,175,25,25),spawn.mapRect(250,200,25,25),spawn.mapRect(225,225,25,25),spawn.mapRect(175,250,25,25),spawn.mapRect(125,300,25,25),spawn.mapRect(-300,325,200,150),spawn.mapRect(-400,425,225,150),spawn.mapRect(-4450,2900,1550,150),spawn.mapRect(-4500,2525,150,525),spawn.mapRect(-4800,2150,150,400),spawn.mapRect(-4400,2025,650,150),spawn.mapRect(-2425,50,2125,150),spawn.mapRect(-2425,50,150,1300),spawn.mapRect(-4600,1175,2325,175),spawn.mapRect(-5075,1650,450,150),spawn.mapRect(-4650,1225,75,125),spawn.mapRect(-4700,1275,75,75),spawn.mapRect(-425,2925,425,125),spawn.mapRect(-450,2375,450,100),spawn.mapRect(-3050,550,150,450),spawn.mapRect(-2925,825,100,175),spawn.mapRect(-2650,375,275,125),spawn.mapRect(-75,2950,300,100),spawn.mapRect(-625,-500,125,575),spawn.mapRect(-1050,-325,275,100),spawn.mapRect(-1075,-775,100,550),spawn.mapRect(-1075,-775,300,100),spawn.mapRect(-525,-1100,1025,625),spawn.mapRect(450,-1e3,450,1500),spawn.mapRect(-300,500,1200,75),spawn.mapRect(-200,425,725,100),spawn.mapRect(525,2450,275,600),spawn.mapRect(-25,2375,825,125),spawn.mapRect(400,-1500,500,100),spawn.mapRect(800,-1500,100,525),spawn.mapRect(-400,500,1250,1900),spawn.mapRect(-300,2910,150,25),spawn.mapRect(-625,-1e3,125,175),spawn.spawnStairs(-400,3e3,25,2500,2500,250),spawn.spawnStairs(500,3e3,5,250,250,250),spawn.debris(-1550,-250,100),spawn.debris(-1100,850,100),spawn.debris(-3700,1025,100),spawn.debris(-3525,2725,100),spawn.debris(-4750,2050,100),spawn.debris(-4e3,1900,100),spawn.debris(225,-1225,100),spawn.sneaker(-1350,1350),spawn.sneaker(-2275,2275),a(-3050+Math.floor(100*Math.random())-Math.floor(100*Math.random()),1475+Math.floor(100*Math.random())-Math.floor(100*Math.random())),a(-2925+Math.floor(100*Math.random())-Math.floor(100*Math.random()),1775+Math.floor(100*Math.random())-Math.floor(100*Math.random())),a(-3075+Math.floor(100*Math.random())-Math.floor(100*Math.random()),1600+Math.floor(100*Math.random())-Math.floor(100*Math.random())),a(-3100+Math.floor(100*Math.random())-Math.floor(100*Math.random()),1975+Math.floor(100*Math.random())-Math.floor(100*Math.random())),a(-3075+Math.floor(100*Math.random())-Math.floor(100*Math.random()),1750+Math.floor(100*Math.random())-Math.floor(100*Math.random())),a(-3350,425),a(-3550,600),a(-3325,775),a(-5525,1975),a(-50,-1300);for(let e=0;e<10+simulation.difficulty;e++)spawn.ghoster(0+Math.floor(5e3*Math.random())-Math.floor(5e3*Math.random()),0+Math.floor(5e3*Math.random())-Math.floor(5e3*Math.random()));!function(t,a,o=100+Math.ceil(25*Math.random())){o=9+o/8,mobs.spawn(t,a,6,o,"transparent");let s=mob[mob.length-1];s.constraint=Constraint.create({pointA:{x:s.position.x,y:s.position.y},bodyB:s,stiffness:1,damping:1}),Composite.add(engine.world,s.constraint),s.stroke="transparent",s.eventHorizon=40*o,s.seeAtDistance2=(s.eventHorizon+400)*(s.eventHorizon+400),s.accelMag=12e-5*simulation.accelScale,s.frictionAir=.025,s.collisionFilter.mask=cat.player|cat.bullet,s.showHealthBar=!1,s.memory=1/0,s.isBoss=!0,Matter.Body.setDensity(s,1),s.onDeath=function(){e=!0,powerUps.spawnBossPowerUp(this.position.x,this.position.y)},s.do=function(){this.health<1&&(this.health+=.001,simulation.drawList.push({x:this.position.x,y:this.position.y,radius:this.radius/1.5,color:`rgba(0, 255, 20, ${.1*Math.random()})`,time:simulation.drawTime})),this.curl(),this.repelBullets(),this.seePlayerCheckByDistance(),this.checkStatus();const e=this.eventHorizon*(.93+.17*Math.sin(.011*simulation.cycle));if(ctx.beginPath(),ctx.arc(this.position.x,this.position.y,.25*e,0,2*Math.PI),ctx.fillStyle="rgba(250,250,250,0.9)",ctx.fill(),ctx.beginPath(),ctx.arc(this.position.x,this.position.y,.55*e,0,2*Math.PI),ctx.fillStyle="rgba(250,250,250,0.5)",ctx.fill(),ctx.beginPath(),ctx.arc(this.position.x,this.position.y,e,0,2*Math.PI),ctx.fillStyle="rgba(250,250,250,0.1)",ctx.fill(),Vector.magnitude(Vector.sub(this.position,player.position))<e){m.immuneCycle<m.cycle&&(m.energy>0&&(m.energy-=.005),m.energy<.1&&m.takeDamage(1e-4*spawn.dmgToPlayerByLevelsCleared()));const e=Math.atan2(player.position.y-this.position.y,player.position.x-this.position.x);player.force.x+=.00125*player.mass*Math.cos(e)*(m.onGround?1.8:1),player.force.y+=1e-4*player.mass*Math.sin(e),ctx.beginPath(),ctx.moveTo(this.position.x,this.position.y),ctx.lineTo(m.pos.x,m.pos.y),ctx.lineWidth=Math.min(60,2*this.radius),ctx.strokeStyle="rgba(250,250,250,0.5)",ctx.stroke(),ctx.beginPath(),ctx.arc(m.pos.x,m.pos.y,40,0,2*Math.PI),ctx.fillStyle="rgba(250,250,250,0.3)",ctx.fill()}}}(-2e3,-1e3),powerUps.spawnStartingPowerUps(0,0),powerUps.addResearchToLevel()},staircase(){simulation.inGameConsole("<strong>staircase</strong> by <span class='color-var'>ryanbear</span>"),level.custom=()=>{level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{e.query(),t.query(),a.query(),s.move(),o.query(),n.query(),l.query(),i.query(),c.query(),p.query(),r.query(),m.query(),h.query(),d.query(),w.query(),y.query()},level.setPosToSpawn(0,-50),level.exit.x=7300,level.exit.y=-5154,level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#d8dadf",spawn.mapRect(-100,0,2100,100),spawn.mapRect(1984,17,100,500),spawn.mapRect(2013,522,1618,100),spawn.bodyRect(2090,328,100,100),spawn.mapRect(3619,14,100,500);var e=level.hazard(1999,10,1618,500),t=level.vanish(2320,-345,234,20),a=level.vanish(2862,-324,234,20),o=level.vanish(3002,-1100,234,20),s=level.elevator(3399,-420,200,200,-950,.003,{up:.1,down:.2}),n=level.vanish(3359,-1300,234,20),l=level.boost(3020,-1600,700),i=level.vanish(2700,-1940,1147,20),c=level.boost(5038,-2e3,700),p=level.vanish(5092,-3498,100,100),r=level.boost(5092,-3772,700),m=level.boost(5372,-2824,700),h=level.vanish(5112,-3e3,100,100),d=level.vanish(5367,-3e3,100,100),w=level.boost(4810,-3161,700),y=level.vanish(5383,-3485,100,100);spawn.mapRect(5377,-4198,1e3,100),spawn.mapRect(6390,-4359,200,200),spawn.mapRect(6605,-4563,200,200),spawn.mapRect(6809,-4758,200,200),spawn.mapRect(7014,-4962,200,200),spawn.mapRect(7212,-5158,200,200),spawn.mapRect(4156,-1898,1e3,100),spawn.randomMob(590,-315),spawn.randomMob(1343,-757),spawn.randomMob(4037,-926),spawn.randomMob(3621,-2376),spawn.randomMob(5026,-2441),spawn.randomMob(4253,-2863),spawn.randomMob(4355,-2430),spawn.randomMob(5316,-3265),spawn.randomMob(5885,-4427),spawn.randomMob(6666,-4979),spawn.laserBoss(6128,-4905),powerUps.addResearchToLevel()},fortress(){simulation.inGameConsole("<strong>fortress</strong> by <span class='color-var'>Desboot</span>");const e=level.boost(3600,-250,1e3),t=level.boost(60,-604,1e3),a=level.boost(2160,-1260,1e3);powerUps.spawnStartingPowerUps(1033.3,-121.4),level.custom=()=>{e.query(),t.query(),a.query(),level.exit.drawAndCheck(),level.enter.draw()},level.setPosToSpawn(0,-50),level.exit.x=3586,level.exit.y=-1494,spawn.mapRect(level.enter.x,level.enter.y+20,100,20),level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#d8dadf",level.customTopLayer=()=>{ctx.fillStyle="rgba(0,0,0,0.3)",ctx.fillRect(-272,-580,1700,600),ctx.fillRect(1427.5,-487,1280,600),ctx.fillRect(2707.3,-580,1200,600),ctx.fillStyle="rgba(0,0,0,0.2)",ctx.fillRect(2752,-1744,1075,1164),ctx.fillRect(937,-1590,339,550),ctx.fillRect(1158,-1040,118,550),ctx.fillRect(3049,-1063,339,500),ctx.fillRect(1439,-1281,297,800),ctx.fillRect(2130,-1182,167,800),ctx.fillRect(1892,-2073,238,1593),ctx.fillRect(2297,-2073,238,1593),ctx.fillStyle="rgba(0,0,0,0.15)",ctx.fillRect(483,-1277,350,700),ctx.fillRect(833,-1e3,325,450),ctx.fillStyle="rgba(64,64,64,0.97)",ctx.fillRect(2800,-1712,730,300)},spawn.debris(2700,-120,180,3),spawn.debris(1350,-100,280,3),spawn.debris(2300,-700,380,5),spawn.debris(976,-775,38,5),spawn.debris(840,-1424,3080,5),spawn.debris(2300,-700,3080,5),spawn.mapRect(-272,0,4198,123),spawn.mapRect(-272,-581,132,581),spawn.mapRect(-272,-581,572,326),spawn.mapRect(1462,-229,92,229),spawn.mapRect(1462,-229,352,57),spawn.mapRect(2872,-220,1056,330),spawn.mapRect(170,-260,484,80),spawn.mapRect(476,-581,1162,75),spawn.mapRect(951,-519,1760,132),spawn.mapRect(1747,-492,506,66),spawn.mapRect(2462,-581,1074,75),spawn.mapRect(1136,-616,510,100),spawn.mapRect(3815.6,-1461,114,1300),spawn.mapRect(480,-1456,106,651),spawn.mapRect(1426,-906,106,400),spawn.mapRect(480,-1302,374,57),spawn.mapRect(788,-1302,75,308),spawn.mapRect(788,-1055,370,62),spawn.mapRect(3049,-1170,471,106),spawn.mapRect(3348,-1170,188,663),spawn.mapRect(2751,-1461,1088,53),spawn.mapRect(2751,-1743,92,915),spawn.mapRect(937,-1667,339,84),spawn.mapRect(1135,-3239,119,1450),spawn.mapRect(1440,-1346,295,66),spawn.mapRect(2090,-1240,242,57),spawn.mapRect(1892,-2214,88,220),spawn.mapRect(1892,-2073,238,84),spawn.mapRect(2447,-2214,88,220),spawn.mapRect(2297,-2073,238,84),spawn.mapRect(2751,-1743,1078,57),spawn.mapRect(3584,-1470,103,57),spawn.mapRect(3428,-1735,103,173),spawn.mapRect(-11e3,-1e3,100,10),spawn.mapRect(-11e3,-1e3,10,100),spawn.mapRect(-10900,-900,10,100),spawn.mapRect(-11e3,-900,100,10),spawn.mapRect(-11e3,-800,100,10),spawn.mapRect(-10800,-1e3,10,200),spawn.mapRect(-10700,-1e3,10,200),spawn.mapRect(-10800,-1e3,100,10),spawn.mapRect(-10800,-900,100,10),spawn.mapRect(-10600,-1e3,10,200),spawn.mapRect(-10600,-800,100,10),spawn.mapRect(-11e3,-91e3,100,10),spawn.mapRect(-11e3,-91e3,10,100),spawn.mapRect(-10900,-90900,10,100),spawn.mapRect(-11e3,-90900,100,10),spawn.mapRect(-11e3,-90800,100,10),spawn.mapRect(-10800,-91e3,10,200),spawn.mapRect(-10700,-91e3,10,200),spawn.mapRect(-10800,-91e3,100,10),spawn.mapRect(-10800,-90900,100,10),spawn.mapRect(-10600,-91e3,10,200),spawn.mapRect(-10600,-90800,100,10),spawn.randomMob(3104.9,-1284.9,.2),spawn.randomMob(1784.7,-95.9,.2),spawn.randomMob(3474.2,-406.7,.1),spawn.randomMob(1603.2,-1493.5,.4),spawn.randomMob(772.4,-1505.2,.2),spawn.randomMob(824.6,-781.3,.2),spawn.randomMob(818.8,-1468.9,.2),spawn.randomMob(-124.7,-853,.2),spawn.randomMob(3011.1,-1978,-.2),spawn.randomMob(2428,-236.8,.1),spawn.randomSmallMob(694.3,-385.3),spawn.randomSmallMob(1142,-808.4),spawn.randomSmallMob(791.5,-803.7),spawn.randomSmallMob(3175.8,-830.8),spawn.randomSmallMob(1558.5,-1940.8),spawn.randomSmallMob(2700,-475),spawn.randomSmallMob(2700,-475),spawn.pulsar(1762.9,-2768.3),spawn.pulsar(3821.5,-2373.9);let o=Math.floor(5*Math.random());spawn[["laserBoss","blinkBoss","shooterBoss","launcherBoss","pulsarBoss","beetleBoss","bladeBoss","revolutionBoss","dragonFlyBoss","spiderBoss"][o]](2058.5,-711.4,100,!1),powerUps.spawn(3125.8,-1543.4,"tech"),powerUps.spawn(3125.8,-1543.4,"heal"),powerUps.spawn(3125.8,-1543.4,"ammo"),powerUps.spawn(3125.8,-1543.4,"ammo"),powerUps.spawn(3137.6,-1300,"ammo"),powerUps.spawn(1605.2,-1436.9,"heal"),powerUps.spawn(2912.9,-1940.9,"ammo"),powerUps.spawn(3167.6,-1300,"heal"),powerUps.spawn(1,1,"ammo"),powerUps.addResearchToLevel()},commandeer(){simulation.inGameConsole("<strong>commandeer</strong> by <span class='color-var'>Desboot</span>");let e=400,t=15900;const a=level.elevator(-80.4,-931.6,180,50,-1550);player.position.x<16300&&player.position.y;const o=level.hazard(15147.2,-1782.4,2e3,822),s=level.boost(5950,-20,700),n=level.boost(21088,-1672,700),l=level.boost(19390,-31,1700),i=level.boost(19390,-31,1700),c=level.boost(17274,-1242,1e3),p=level.portal({x:443,y:-1636},Math.PI,{x:21391.9,y:-1806.3},-Math.PI),r=level.portal({x:16838.3,y:-626.7},Math.PI,{x:16882.8,y:-2566.5},-Math.PI),h=level.button(21889,-10),d=level.door(19119,-2133,110,510,480),w=level.button(18711,-2210),y=level.door(17041,-412,110,510,480),x=level.button(20456.6,-1636.2),u=level.door(20238,-781.4,88,452,412),R=level.hazard(2550,-150,10,.4);level.setPosToSpawn(0,-50),level.exit.x=15316,level.exit.y=-30,spawn.mapRect(level.enter.x,level.enter.y+20,100,20),spawn.mapRect(level.exit.x,level.exit.y+20,100,20),level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#001738",color.map="#444",level.custom=()=>{ctx.fillStyle="rgba(250,250,250,0.8)",ctx.beginPath(),ctx.moveTo(1124,-628),ctx.lineTo(496,0),ctx.lineTo(1852,0),ctx.lineTo(1224,-628),ctx.fill(),ctx.beginPath(),ctx.moveTo(906,-1365),ctx.lineTo(206,-690),ctx.lineTo(1706,-690),ctx.lineTo(1006,-1365),ctx.fill(),ctx.beginPath(),ctx.moveTo(3330,-1905),ctx.lineTo(2815.6,-1405.8),ctx.lineTo(2815.6,-1230),ctx.lineTo(4022.9,-1283.9),ctx.lineTo(4023.5,-1405.8),ctx.lineTo(3430,-1905),ctx.fill(),ctx.fillStyle="rgba(63,247,251,0.8)",ctx.fillRect(22330,-2713.75,550,700),ctx.fillRect(22330,-1743.5,550,700),ctx.fillRect(22330,-754.25,550,700),ctx.fillRect(6237,-1830.7,550,700),ctx.fillRect(6237,-840.4,550,700),ctx.fillStyle="rgba(200,200,200,0.8)",ctx.fillRect(-192,-1973,6484,2071),ctx.fillStyle="rgba(240,240,240,0.8)",ctx.fillRect(15109.5,-2867.5,7284,2971),ctx.fillStyle="rgba(35,35,35,0.8)",ctx.fillRect(15145.9,-960,200,25),ctx.fillStyle="rgba(255,255,255,0.9)",h.query(),h.draw(),w.query(),w.draw(),x.query(),x.draw(),o.query(),h.isUp?d.isClosing=!0:d.isClosing=!1,w.isUp?y.isClosing=!0:y.isClosing=!1,x.isUp?u.isClosing=!0:u.isClosing=!1,d.openClose(),y.openClose(),u.openClose(),p[2].query(),p[3].query(),r[2].query(),r[3].query(),s.query(),n.query(),l.query(),i.query(),c.query(),level.exit.drawAndCheck(),level.enter.draw(),ctx.fillStyle="rgba(0,0,0,0.2)",ctx.fillRect(2773,-682,469,500),ctx.fillRect(3947,-851,469,700),ctx.fillRect(4818,-1006,400,400),ctx.fillRect(5313,-1309,1e3,700),ctx.fillRect(16705,-2831,40,700),ctx.fillRect(16140,-2812,40,400),ctx.fillRect(15559,-2855,40,800),ctx.fillRect(16530,-2855,30,200),ctx.beginPath(),ctx.moveTo(18254.7,-2194.1),ctx.lineTo(18554.6,-1952.7),ctx.lineTo(18554.6,-1992.7),ctx.lineTo(18294.7,-2194.1),ctx.fill(),ctx.beginPath(),ctx.moveTo(18154.7,-1004.1),ctx.lineTo(18554.6,-762.7),ctx.lineTo(18554.6,-802.7),ctx.lineTo(18214.7,-1004.1),ctx.fill(),ctx.beginPath(),ctx.moveTo(17585.2,-1123.8),ctx.lineTo(17151.2,-781.7),ctx.lineTo(17151.2,-741.7),ctx.lineTo(17625.2,-1123.8),ctx.fill(),ctx.fillRect(20540,-1103,610,300),ctx.fillRect(20820,-243,410,300),ctx.fillRect(5772,-609,469,700),ctx.fillRect(5772,-609,469,700),ctx.fillStyle="rgba(48,184,140,255)",ctx.fillRect(t,-960,e,6e3),ctx.fillStyle=`hsla(160, 100%, 43%,${.3+.07*Math.random()})`,ctx.fillRect(t+e*Math.random(),-900-400*Math.random(),5*Math.random()+8,6e3),ctx.fillRect(t+e*Math.random(),-900-400*Math.random(),5*Math.random()+5,6e3),e=.995*e+4*Math.random(),waterFalSmoothlX=0+20*Math.random(),t=15900,ctx.fillStyle="rgba(0,0,0,0.4)",ctx.fillRect(20990,-2672,20,112),ctx.fillRect(21090,-2506,72,20),ctx.fillRect(21090,-1970,72,20),ctx.fillRect(16901.8,-2497.7,25,100),ctx.fillRect(16901.8,-2397.7,50,25),ctx.fillRect(16951.8,-2397.7,25,1640),ctx.fillRect(16901.8,-782.7,50,25),ctx.fillRect(16901.8,-757.7,25,100),ctx.fillRect(20900,-2666,500,9),ctx.fillRect(20900,-2651,1315,9),ctx.fillRect(20900,-2636,1300,9),ctx.fillRect(20900,-2621,245,9),ctx.fillRect(20900,-2606,230,9),ctx.fillRect(20900,-2591,215,9),ctx.fillRect(20900,-2576,200,9),ctx.fillRect(21145,-2621,9,700),ctx.fillRect(21130,-2606,9,1e3),ctx.fillRect(21115,-2591,9,1e3),ctx.fillRect(21100,-2576,9,850),ctx.fillRect(21400,-3066,9,409),ctx.fillRect(20900,-1726,209,9),ctx.fillRect(21145,-1921,270,9),ctx.fillRect(21415,-1921,9,50),ctx.fillRect(22200,-2636,9,1300),ctx.fillRect(22215,-2651,9,300),ctx.fillRect(22200,-1336,300,9),ctx.fillRect(22215,-2351,300,9),ctx.fillRect(916.5,-1725,80,80),ctx.fillRect(1204,-1706,25,40),ctx.fillRect(1354,-1706,25,40),ctx.fillRect(1504,-1885,25,40),ctx.fillRect(3504,-1885,25,40),ctx.fillRect(5504,-1885,25,40),ctx.fillRect(1019,-1718,9,20),ctx.fillRect(1019,-1674,9,20),ctx.fillRect(996,-1718,23,9),ctx.fillRect(996,-1663,23,9),ctx.fillRect(1019,-1698,425,9),ctx.fillRect(1444,-1868,9,179),ctx.fillRect(1444,-1877,4700,9),ctx.fillRect(1019,-1683,440,9),ctx.fillRect(1459,-1853,9,179),ctx.fillRect(1459,-1862,4670,9),ctx.fillRect(6144,-1877,9,100),ctx.fillRect(6144,-1777,100,9),ctx.fillRect(6129,-1862,9,1100),ctx.fillRect(6129,-762,150,9)},level.customTopLayer=()=>{d.draw(),y.draw(),u.draw(),p[0].draw(),p[1].draw(),p[2].draw(),p[3].draw(),r[0].draw(),r[1].draw(),r[2].draw(),r[3].draw(),a.move(),player.position.x>15900&&player.position.x<16300&&player.position.y>-1360.2?Matter.Body.setVelocity(player,{x:player.velocity.x,y:player.velocity.y+2}):Math.abs(player.velocity.x)>.5&&m.onGround?Matter.Body.setVelocity(player,{x:player.velocity.x+Math.abs(player.velocity.x)/player.velocity.x*.07,y:player.velocity.y-.2}):Matter.Body.setVelocity(player,{x:player.velocity.x,y:player.velocity.y-.2}),R.opticalQuery()},spawn.mapRect(1124,-653,100,25),spawn.mapRect(906,-1390,100,25),spawn.mapRect(3330,-1930,100,25),spawn.mapRect(-300,0,6684,100),spawn.mapRect(-300,-2071,154,2071),spawn.mapRect(2511,-300,1309,308),spawn.mapRect(3820,-184,1309,184),spawn.mapRect(-300,-739,2549,100),spawn.mapRect(2056,-1309,2764,169),spawn.mapRect(2056,-1309,193,650),spawn.mapRect(4636,-1309,193,793),spawn.mapRect(4821,-654,955,138),spawn.mapRect(6237,-2071,147,2071),spawn.mapRect(-300,-2071,6684,154),spawn.mapRect(245,-360,70,400),spawn.mapRect(500,-1929,154,462),spawn.mapRect(185,-1517,469,77),spawn.mapRect(2773,-682,469,77),spawn.mapRect(3743,-566,77,469),spawn.mapRect(3947,-851,469,77),spawn.mapRect(5313,-1309,1e3,70),spawn.mapRect(4818,-1006,400,70),spawn.mapRect(4768,-1626,800,70),spawn.mapRect(4760,-1626,70,400),spawn.mapRect(645.1,-1480.8,700,100),spawn.mapVertex(515,-1447,"0 0   0 100   -400 0"),spawn.mapRect(1245.1,-1980.8,100,500),spawn.mapRect(2346.9,-1658.8,469,77),spawn.mapRect(4023.6,-1723.7,469,77),spawn.mapRect(6237,-1880.7,400,800),spawn.mapRect(6237,-890.4,400,800),spawn.debris(3267.6,-797.1,700,5),spawn.debris(1626,-372.5,1700,8),spawn.debris(1880.1,-1508.9,3700,16),spawn.debris(5335.3,-1431.6,3700,16),spawn.debris(1563.8,-1087.9,700,5),spawn.bodyRect(1540,-1110,218,125,.9),spawn.randomSmallMob(893.5,-120.8),spawn.randomMob(18375.6,-1574.4,.2),spawn.randomSmallMob(15378.9,-2549.6),spawn.randomSmallMob(5820.2,-1545.2),spawn.randomMob(765.8,-1029.7,.2),spawn.randomMob(21284.2,-983.1,.3),spawn.randomSmallMob(3382.5,-1590.6),spawn.randomSmallMob(3545,-413),spawn.randomMob(20381,-254.2,.6),spawn.randomSmallMob(20432.4,-1374.3),spawn.randomSmallMob(5667,-847.8),spawn.randomMob(2903.9,-754.5,.2),spawn.randomSmallMob(3266.4,-1578.4),spawn.randomSmallMob(20648.1,-136.8),spawn.randomSmallMob(16114.6,-2524.2),spawn.randomSmallMob(20381,-254.2),spawn.randomMob(5577,-217,.3),spawn.randomSmallMob(1456.4,-1014.8),spawn.randomSmallMob(1068.7,-106.1),spawn.randomSmallMob(5099.7,-1204.2),spawn.randomSmallMob(17502.8,-1520.6),spawn.randomMob(15547.2,-2249.6,.2),spawn.randomMob(19448.2,-1323.3,.7),spawn.randomSmallMob(3158.5,-1581.8),spawn.randomSmallMob(17438.7,-876.7),spawn.randomMob(20079.4,-2219.7,.2),spawn.randomMob(2680.1,-1779.2,.6),spawn.randomMob(3924.9,-1504.1,.3),spawn.randomSmallMob(4652.3,-1729.4),spawn.randomMob(18397.7,-711.2,.3),spawn.randomSmallMob(4386.2,-439.6),spawn.randomSmallMob(3505.1,-1531.1),spawn.randomSmallMob(3866.7,-1483.2),spawn.debris(17732.3,-550,700,5),spawn.debris(17827.2,-2357.1,700,5),spawn.debris(16108.6,-2621.1,700,5),spawn.debris(20823.6,-1332.1,1300,5),spawn.debris(21095.5,-423.4,700,5),spawn.debris(20534.5,-1282.1,700,5),spawn.randomSmallMob(1300,-70),spawn.shieldingBoss(943.9,-1698),spawn.mapRect(15e3,0,515,185),spawn.mapRect(17015,0,5500,185),spawn.mapRect(15e3,-2972,185,2972),spawn.mapRect(15e3,-2972,7515,185),spawn.mapRect(22330,-2972,185,2972),spawn.mapRect(17002,-2972,169,2564),spawn.mapRect(19089,-2972,169,855),spawn.mapRect(19089,-1625,169,1800),spawn.mapRect(20760,-2972,169,1350),spawn.mapRect(19720,-1625,1725,162),spawn.mapRect(21440,-2325,169,863),spawn.mapRect(19720,-855,2725,162),spawn.mapRect(22330,-2763.75,400,800),spawn.mapRect(22330,-1793.5,400,800),spawn.mapRect(22330,-804.25,400,800),spawn.mapRect(19904,-1465,85,362),spawn.mapRect(19542,-1191,412,88),spawn.mapRect(18546,-2199,600,82),spawn.mapRect(18546,-2499,82,2300),spawn.mapRect(18108,-326,500,82),spawn.mapRect(17750,-682,300,82),spawn.mapRect(17156,-468,500,60),spawn.mapRect(18022,-1082,600,82),spawn.mapRect(17151,-1196,500,82),spawn.mapRect(17453,-2060,500,82),spawn.mapRect(18197,-2269,400,82),spawn.mapRect(18108,-326,500,82),spawn.mapRect(20542,-1191,612,88),spawn.mapRect(20238,-1191,88,412),spawn.mapRect(21520,-1468,88,412),spawn.mapRect(20238,-330.2,88,412),spawn.mapRect(20819,-328.3,412,88),spawn.mapRect(21532,-708,88,412),spawn.mapRect(15483.8,12.5,388,30),spawn.mapRect(15487.6,76.6,488,24),spawn.mapRect(15506.5,134.2,288,45),spawn.mapVertex(16758.6,135.3,"400 -30   -350 -40   -400 30   400 30"),spawn.mapVertex(16758.6,55.3,"423 -30   -408 -20   -400 20   400 20"),spawn.mapRect(15310,-960,600,135),spawn.mapRect(16290,-960,800,135),spawn.mapRect(16524.8,-2726.8,40,400),spawn.mapRect(16524.8,-2130.9,400,40),spawn.mapRect(16010.2,-2412.2,300,40),spawn.mapRect(15379.2,-2055.1,400,40),spawn.mapVertex(17626.3,-3035,"-245 0   -220 -110   -173 -173   -110 -220   0 -250   110 -220   173 -173   220 -110   245 0"),spawn.mapRect(17226.3,-3035,400,40),spawn.mapVertex(17626.3,225,"-245 0   -220 110   -173 173   -110 220   0 250   110 220   173 173   220 110   245 0"),spawn.mapRect(17226.3,225,400,40),spawn.mapVertex(19626.3,-3035,"-245 0   -220 -110   -173 -173   -110 -220   0 -250   110 -220   173 -173   220 -110   245 0"),spawn.mapRect(19226.3,-3035,400,40),spawn.mapVertex(19626.3,225,"-245 0   -220 110   -173 173   -110 220   0 250   110 220   173 173   220 110   245 0"),spawn.mapRect(19226.3,225,400,40),spawn.mapVertex(21626.3,-3035,"-245 0   -220 -110   -173 -173   -110 -220   0 -250   110 -220   173 -173   220 -110   245 0"),spawn.mapRect(21226.3,-3035,400,40),spawn.mapVertex(21626.3,225,"-245 0   -220 110   -173 173   -110 220   0 250   110 220   173 173   220 110   245 0"),spawn.mapRect(21226.3,225,400,40),spawn.mapRect(21531.9,-707.8,488,8),spawn.mapVertex(22207.8,-103,"325 -200   100 -200   325 -300"),spawn.mapRect(22056.6,-70,225,212),spawn.mapVertex(20723.1,-1734,"325 -200   100 -200   325 -300"),spawn.mapRect(20571.9,-1701,225,212),spawn.mapVertex(22207.8,-103,"325 -200   100 -200   325 -300"),spawn.mapRect(22056.6,-70,225,212),spawn.bodyRect(21525,-113,50,50,9),spawn.bodyRect(18993,-2283,50,50,9),spawn.bodyRect(20303,-1736,50,50,9),spawn.randomLevelBoss(17902,-1689,["launcherBoss","laserTargetingBoss","blinkBoss","streamBoss","historyBoss","grenadierBoss","blockBoss","revolutionBoss","slashBoss"]),powerUps.addResearchToLevel()},clock(){function e(e,t,o,s,n,l,i,c=5,p=75,r=2){var m=a(e,t,o,s,c,simulation.cycle*i+n,p/100);ctx.beginPath(),ctx.moveTo(m[0].x,m[0].y);for(var h=1;h<m.length;h++)ctx.lineTo(m[h].x,m[h].y);ctx.lineTo(m[0].x,m[0].y),ctx.lineWidth=2,ctx.fillStyle=l,ctx.fill(),ctx.strokeStyle="#3a3f20",ctx.lineWidth=r,ctx.stroke()}function t(e,t,a,o,s,n,l,i,c,p=5,r=2){s*=l,p*=2;const m=2*Math.PI/p;ctx.beginPath();for(var h=0;h<=p;h++){var d=o;h%2==1&&(d=a),ctx.arc(e,t+(simulation.cycle-c)*i,d,h*m+s,(h+1)*m+s)}ctx.fillStyle=n,ctx.fill(),ctx.strokeStyle="#3a3f20",ctx.lineWidth=r,ctx.stroke()}function a(e,t,a,o,s,n=0,l=0){0==l&&(l=2*Math.PI/(2*s));const i=2*Math.PI/s;for(var c=[],p=0;p<s;p++){var r=p*i+n,m=Math.sin(r+l/2)*a,h=Math.cos(r+l/2)*a,d={x:m,y:h,point:1},w={x:m=Math.sin(r-l/2)*a,y:h=Math.cos(r-l/2)*a,point:4};0==(m=Math.sin(r)*a)&&(m=1e-4);h=Math.cos(r)*a;var y=Math.atan2(h,m),x={x:d.x,y:d.y,point:2};x.x+=Math.cos(y)*(o-a),x.y+=Math.sin(y)*(o-a);var u={x:w.x,y:w.y,point:3};u.x+=Math.cos(y)*(o-a),u.y+=Math.sin(y)*(o-a),c.push(w),c.push(u),c.push(x),c.push(d)}for(p=0;p<c.length;p++)c[p].x+=e,c[p].y+=t;return c}function o(e,t,a,o,s,n,l=0){0==l&&(l=2*Math.PI/(2*s));const i=2*Math.PI/s;for(var c=[],p=0;p<s;p++){var r=p*i,m=Math.sin(r+l/2)*a,h=Math.cos(r+l/2)*a,d={x:m,y:h,point:1},w={x:m=Math.sin(r-l/2)*a,y:h=Math.cos(r-l/2)*a,point:4};0==(m=Math.sin(r)*a)&&(m=1e-4);h=Math.cos(r)*a;var y=Math.atan2(h,m),x={x:d.x,y:d.y,point:2};x.x+=Math.cos(y)*(o-a),x.y+=Math.sin(y)*(o-a);var u={x:w.x,y:w.y,point:3};u.x+=Math.cos(y)*(o-a),u.y+=Math.sin(y)*(o-a),p==n&&(c.push(w),c.push(u),c.push(x),c.push(d))}for(p=0;p<c.length;p++)c[p].x+=e,c[p].y+=t;return c}function s(e,t,a,s,n,l,i=5,c=50,p=10){for(var r=[body[body.length]=Bodies.polygon(e,t,0,a+p,{collisionFilter:{category:cat.body,mask:cat.player|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet},isNotHoldable:!0,frictionAir:0,friction:1,frictionStatic:1,restitution:0})],m=0;m<i;m++){var h=o(0,0,s-a,c+s-a,i,m,70),d={x:h[3].x-h[0].x,y:h[3].y-h[0].y};distanceToCenter=Math.sqrt(d.x**2+d.y**2);var w=(a+(s-a)/2)/distanceToCenter;gearToothSlope=d.y/d.x;var y=body[body.length]=Bodies.fromVertices(e+d.x*w,t+d.y*w,h,{collisionFilter:{category:cat.body,mask:cat.player|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet},isNotHoldable:!0,frictionAir:.01,friction:1,frictionStatic:1,restitution:0});r.push(y)}const x=Body.create({parts:r});Composite.add(engine.world,x),composite[composite.length]=x,x.collisionFilter.category=cat.body,x.collisionFilter.mask=cat.body|cat.player|cat.bullet|cat.mob|cat.mobBullet|cat.map;const u=Constraint.create({pointA:{x:e,y:t},bodyB:x,stiffness:1,damping:1});return Matter.Body.setDensity(x,1e-4),Composite.add(engine.world,u),Matter.Body.setAngle(x,0),Matter.Body.setAngularVelocity(x,0),x.center={x:e,y:t},x.rotate=function(){var e=simulation.cycle*l+n;Matter.Body.setAngle(x,e)},x.gearSettings={x:e,y:t,r1:a,r2:s,rot:n,speed:l,numTeeth:i,toothWidth:c},x}function n(e,t,a,o){e+=a/2,t+=o/2;const s=body[body.length]=Bodies.rectangle(e,t,a,o,{collisionFilter:{category:cat.map,mask:cat.player|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet},inertia:1/0,isNotHoldable:!0,friction:1,frictionStatic:1,restitution:0,isClosing:!1,setPos(e,t){if(t-this.position.y<=0||0===Matter.Query.ray([player],Matter.Vector.create(this.position.x-a/2,this.position.y+o/2),Matter.Vector.create(this.position.x+a/2,this.position.y+o/2),5).length&&Matter.Query.ray(body,Matter.Vector.create(this.position.x-a/2,this.position.y+o/2),Matter.Vector.create(this.position.x+a/2,this.position.y+o/2),5).length<=1&&0===Matter.Query.ray(mob,Matter.Vector.create(this.position.x-a/2,this.position.y+o/2),Matter.Vector.create(this.position.x+a/2,this.position.y+o/2),5).length){const a={x:e,y:t};Matter.Body.setPosition(this,a)}},draw(){ctx.fillStyle="#555",ctx.beginPath();const e=this.vertices;ctx.moveTo(e[0].x,e[0].y);for(let t=1;t<e.length;++t)ctx.lineTo(e[t].x,e[t].y);ctx.lineTo(e[0].x,e[0].y),ctx.fill()}});return Matter.Body.setStatic(s,!0),Composite.add(engine.world,s),s.classType="body",s}function l(e,t,a,o,s,n=1){e+=a/2,t+=o/2;const l=body[body.length]=Bodies.rectangle(e,t,a,o,{collisionFilter:{category:cat.map,mask:cat.player|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet},inertia:1/0,isNotHoldable:!0,friction:1,frictionStatic:1,restitution:0,isClosing:!1,openClose(){if(!m.isTimeDilated)if(this.isClosing){if(this.position.x>e&&0===Matter.Query.collides(this,[player]).length&&Matter.Query.collides(this,body).length<2&&0===Matter.Query.collides(this,mob).length){const e={x:this.position.x-n,y:this.position.y};Matter.Body.setPosition(this,e)}}else if(this.position.x<e+s){const e={x:this.position.x+n,y:this.position.y};Matter.Body.setPosition(this,e)}},isClosed(){return this.position.x<e+1},draw(){ctx.fillStyle="#555",ctx.beginPath();const e=this.vertices;ctx.moveTo(e[0].x,e[0].y);for(let t=1;t<e.length;++t)ctx.lineTo(e[t].x,e[t].y);ctx.lineTo(e[0].x,e[0].y),ctx.fill()}});return Matter.Body.setStatic(l,!0),Composite.add(engine.world,l),l.classType="body",l}function i(e,t,a){const o=c(e,t,a);var s={x:t.x,y:t.y,dist:Math.sqrt((t.x-e.x)**2+(t.y-e.y)**2)};for(const t of o){const a=Math.sqrt((t.x-e.x)**2+(t.y-e.y)**2);a<s.dist&&(s={x:t.x,y:t.y,dist:a})}return s}function c(e,t,a){const o=[];for(const n of a){for(var s=0;s<n.vertices.length-1;s++)results=simulation.checkLineIntersection(e,t,n.vertices[s],n.vertices[s+1]),results.onLine1&&results.onLine2&&o.push({x:results.x,y:results.y});results=simulation.checkLineIntersection(e,t,n.vertices[n.vertices.length-1],n.vertices[0]),results.onLine1&&results.onLine2&&o.push({x:results.x,y:results.y})}return o}function p(e,t){for(var a=0;a<e.length;a++)if(e[a]!=t[a])return!1;return!0}function r(){const e=[];for(var t=0;t<map.length;t++){const s=map[t],n=[],l=[...map].slice(0,t).concat([...map].slice(t+1));for(var a=0;a<s.vertices.length-1;a++){var o=c(s.vertices[a],s.vertices[a+1],l);n.push(s.vertices[a]);for(const e of o)n.push({x:e.x,y:e.y})}o=c(s.vertices[s.vertices.length-1],s.vertices[0],l),n.push(s.vertices[s.vertices.length-1]);for(const e of o)n.push({x:e.x,y:e.y});e.push({vertices:n})}return e}function h(e){map[e].collisionFilter.category=cat.map,map[e].collisionFilter.mask=cat.player|cat.map|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet,Matter.Body.setStatic(map[e],!0),Composite.add(engine.world,map[e])}simulation.inGameConsole("<strong>clock</strong> by <span class='color-var'>Cornbread 2100</span>"),level.setPosToSpawn(-500,-50),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),level.exit.x=250,level.exit.y=720,spawn.mapRect(level.exit.x,level.exit.y+20,100,20),level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#d8dadf",spawn.mapRect(-925,0,2650,100),spawn.mapRect(-925,-1700,325,1800),spawn.mapRect(-650,-325,325,50),spawn.mapRect(-650,-1400,325,50),spawn.mapRect(-1700,-1700,1100,200),spawn.mapRect(-1700,-4600,300,3100),spawn.mapRect(-1700,-4600,1250,200),spawn.mapRect(200,-4600,2750,200),spawn.mapRect(-400,-4225,200,50),spawn.mapRect(2800,-4600,150,1400),spawn.mapRect(1350,-325,100,50),spawn.mapRect(1400,-1500,325,1600),spawn.mapRect(1400,-1500,1550,50),spawn.mapRect(1250,-1900,1050,50),spawn.mapRect(1250,-2900,100,1050),spawn.mapRect(-600,-2900,3550,100),spawn.mapRect(2850,-2900,100,700),spawn.mapRect(2850,-2200,100,350),map[map.length-1].fallsOff2=!0,spawn.mapRect(2300,-1900,500,50),map[map.length-1].fallsOff=!0,spawn.mapRect(2800,-1900,200,50),spawn.mapRect(2900,-1900,50,450),powerUps.directSpawn(2700,-1675,"tech"),spawn.mapRect(2800,-3300,825,100),spawn.mapRect(3525,-3300,100,3e3),spawn.mapRect(3400,-2850,225,50),spawn.mapRect(2875,-2525,175,25),spawn.mapRect(3325,-2675,150,25),spawn.mapRect(3400,-2850,75,200),spawn.mapRect(3150,-2225,100,25),spawn.mapRect(-2300,750,5450,100),pendulum1=function(e,t,a,o,s=50,n=.5,l=0,i=200,c=100,p=0,r=0,m=0){const h=body[body.length]=Bodies.rectangle(e,t+o/2,a,o,{collisionFilter:{category:cat.body,mask:cat.player|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet},isNotHoldable:!0,frictionAir:r,friction:1,frictionStatic:1,restitution:0}),d=body[body.length]=Bodies.polygon(e,t+o,l,i,{collisionFilter:{category:cat.body,mask:cat.player|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet},isNotHoldable:!0,frictionAir:.01,friction:1,frictionStatic:1,restitution:0}),w=Body.create({parts:[h,d]});Composite.add(engine.world,w),composite[composite.length]=w,w.collisionFilter.category=cat.body,w.collisionFilter.mask=cat.body|cat.player|cat.bullet|cat.mob|cat.mobBullet|cat.map,w.position.y=t;const y=Constraint.create({pointA:{x:e,y:t},bodyB:w,stiffness:1,damping:1});return Matter.Body.setDensity(w,c),Composite.add(engine.world,y),Matter.Body.setAngle(w,p),Matter.Body.setAngularVelocity(w,m),w.center={x:e,y:t+o/2},w.rotate=function(){var a=Math.sin(simulation.cycle/s)*n;if(0!=Matter.Query.collides(player,[this]).length){var o=Math.atan((player.position.y-t)/(player.position.x-e))+a-Math.sin((simulation.cycle-1)/s)*n;player.position.x-e<0&&(o+=Math.PI);const l=Math.sqrt((player.position.x-e)**2+(player.position.y-t)**2);Matter.Body.setPosition(player,{x:e+Math.cos(o)*l,y:t+Math.sin(o)*l})}Matter.Body.setAngle(w,a)},w}(400,-2500,75,1700,50,.3,0,300);const d=s(-1200,-2e3,100,200,0,-.05,5,75),w=s(-700,-2500,150,270,-.5,.05,5,50),y=s(-3500,-1e3,1100,1500,-.5,.005,10,150,40),x=n(1650,-1850,100,350),u=n(1950,-1850,100,350),R=l(-2e3,-4200,300,100,300,20),b=l(-2e3,-3800,300,100,300,20),f=l(-2e3,-3400,300,100,300,20),g=l(-2e3,-3e3,300,100,300,20),v=l(-2e3,-2600,300,100,300,20),M=function(e,t,a,o,s=15*Math.PI/180,n=0,l=.001){var i=body[body.length]=Bodies.rectangle(e,t+o/2,a,o,{collisionFilter:{category:cat.body,mask:cat.player|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet},isNotHoldable:!0,friction:1,frictionStatic:1,restitution:0});const c=Body.create({parts:[i],handRotation:0});Composite.add(engine.world,c),composite[composite.length]=c,c.collisionFilter.category=cat.body,c.collisionFilter.mask=cat.body|cat.player|cat.bullet|cat.mob|cat.mobBullet|cat.map,c.position.y=t;const p=Constraint.create({pointA:{x:c.position.x,y:c.position.y},bodyB:c,stiffness:1,damping:1});return Matter.Body.setDensity(c,l),Composite.add(engine.world,p),c.center={x:c.position.x,y:c.position.y},c.rotate=function(){if(simulation.cycle%60==0){if(c.handRotation+=s,Math.abs(c.handRotation%(2*Math.PI)-Math.PI)<.2){const e=spawn.fullPickList[Math.floor(Math.random()*spawn.fullPickList.length)];spawn[e](300,600)}if(0!=Matter.Query.collides(player,[this]).length){var a=Math.atan((m.pos.y-t)/(m.pos.x-e));m.pos.x-e<0&&(a+=Math.PI);const o=Math.sqrt((m.pos.x-e)**2+(m.pos.y-t)**2);Matter.Body.setPosition(player,{x:e+Math.cos(a+s)*o,y:t+Math.sin(a+s)*o})}}Matter.Body.setAngle(c,c.handRotation+n)},c}(400,-3700,75,600),T=level.elevator(3200,0,150,50,-1750,.0025,{up:.05,down:.2}),P=level.button(1400,-1900);P.isUp=!0;var S=!1;simulation.ephemera.push({do(){"clock"==level.levels[level.onLevel]?(ctx.beginPath(),ctx.moveTo(1460,-1887),ctx.lineTo(1300,-1887),ctx.lineTo(1300,-2860),ctx.lineTo(400,-2860),ctx.lineTo(400,-2800),ctx.lineWidth=6,ctx.strokeStyle=S?"#ffd700":"000",ctx.stroke()):simulation.removeEphemera(this)}}),spawn.debris(-300,0,1300,6),spawn.debris(0,-2900,2500,8),spawn.randomSmallMob(-500,-500,1),spawn.randomMob(190,-1300,1),spawn.randomMob(200,-320,.3),spawn.randomMob(1e3,-1100,1),spawn.randomMob(-160,-2050,1),spawn.randomMob(-1100,-2900,.5),spawn.randomLevelBoss(1900,-3800,[...spawn.randomBossList].splice(0,spawn.randomBossList.indexOf("shieldingBoss"),1).concat([...spawn.randomBossList].splice(spawn.randomBossList.indexOf("shieldingBoss")+1))),spawn.randomMob(2500,-3500,.3),spawn.randomMob(1300,-4100,.5),spawn.randomMob(3400,-2450,1),spawn.randomMob(2850,-2050,.4),spawn.randomGroup(-150,-2400,.5),spawn.randomMob(-1250,-5150,1),spawn.randomMob(-2900,-4e3,.4),spawn.randomMob(-1350,-950,1),spawn.randomMob(2700,-850,.4),spawn.randomMob(2500,-50,.4),powerUps.addResearchToLevel();for(var k=!1,C=!1,B=!1,V=!1,I=!1,U=!1,L=!1,D=!1,A=0,q=!1,F=simulation.cycle,G=[],H=0,$=0;$<15;$++)G.push({x:2400+200*Math.random(),y:-3300-3e3*Math.random()});var z=[];for($=0;$<15;$++){const e=30+50*Math.random();z.push({r1:e,r2:e+15+30*Math.random()})}var O,W,E=Matter.Bodies.polygon(m.pos.x,m.pos.y,0,31),N=r().concat(mob.filter(e=>null==e.isNotCloaked&&(e.isBoss||"Circle Body"!=e.label)),[pendulum1,d,w,player,E]),Z=[...map],Q=[...mob],j=0,X=0,Y=0,_=0,K=0,J=0,ee=simulation.cycle;level.custom=()=>{if(S&&(Matter.Body.setPosition(E,m.pos),p(Z,map)&&p(Q,mob)||(N=r().concat(mob.filter(e=>null==e.isNotCloaked&&(e.isBoss||"Circle Body"!=e.label)),[pendulum1,d,w,player,E])),Z=[...map],Q=[...mob]),ctx.fillStyle="#b0b0b2",ctx.fillRect(-600,-1700,2e3,1700),ctx.fillRect(1350,-1851,1550,350),ctx.fillRect(-1400,-2950,4250,1450),ctx.fillRect(-1400,-4400,4350,1500),ctx.fillRect(-450,-4600,650,250),ctx.fillRect(2750,-3200,200,1300),ctx.fillRect(2750,-3200,200,1300),ctx.fillStyle="#000",ctx.fillRect(350,-2800,100,25),S){var o={x:400,y:-2775},s=2950;const e=function(e,t,a){function o(e,t,a,o){const s=Math.atan2(t.y-e.y,t.x-e.x),n=Math.sqrt((e.x-a.x)**2+(e.y-a.y)**2),l=Math.sqrt((t.x-e.x)**2+(t.y-e.y)**2),i=Math.sqrt((a.x-t.x)**2+(a.y-t.y)**2),c=Math.acos((n**2+l**2-i**2)/(2*n*l))*(e.x-a.x)/-Math.abs(e.x-a.x),p=Math.cos(c)*n,r={x:Math.cos(s)*p+e.x,y:Math.sin(s)*p+e.y},m=Math.sqrt((r.x-a.x)**2+(r.y-a.y)**2);if(m==o)return[r];if(m<o){const s=Math.atan2(r.y-a.y,r.x-a.x),c=Math.acos(m/o),p={x:Math.cos(s+c)*o+a.x,y:Math.sin(s+c)*o+a.y},h={x:Math.cos(s-c)*o+a.x,y:Math.sin(s-c)*o+a.y},d={a:Math.sqrt((p.x-e.x)**2+(p.y-e.y)**2),b:Math.sqrt((p.x-t.x)**2+(p.y-t.y)**2)},w={a:Math.sqrt((h.x-e.x)**2+(h.y-e.y)**2),b:Math.sqrt((h.x-t.x)**2+(h.y-t.y)**2)},y=[];return Math.abs(l-(d.a+d.b))<.01?y.push(p):d.a<d.b?n<=o&&y.push(e):i<=o&&y.push(t),Math.abs(l-(w.a+w.b))<.01?y.push(h):w.a<=w.b?n<=o&&y.push(e):i<=o&&y.push(t),y}return[]}var s=[];for(const o of N)for(var n=0;n<o.vertices.length;n++){const r=o.vertices[n],m=Math.atan2(r.y-e.y,r.x-e.x),h={x:Math.cos(m+Math.PI)+r.x,y:Math.sin(m+Math.PI)+r.y};if(0==Matter.Query.ray(a,e,h).length){var l=Math.sqrt((r.x-e.x)**2+(r.y-e.y)**2),c={x:r.x,y:r.y};if(l>t){const a=Math.atan2(r.y-e.y,r.x-e.x);c={x:Math.cos(a)*t+e.x,y:Math.sin(a)*t+e.y},l=t}(y=i(e,c,a)).dist>=l&&(y={x:c.x,y:c.y,dist:l}),s.push(y);var p=Math.atan2(r.y-e.y,r.x-e.x);c={x:Math.cos(p+.001)*t+e.x,y:Math.sin(p+.001)*t+e.y},(y=i(e,c,a)).dist>=t&&(y={x:c.x,y:c.y,dist:t}),s.push(y),p=Math.atan2(r.y-e.y,r.x-e.x),c={x:Math.cos(p-.001)*t+e.x,y:Math.sin(p-.001)*t+e.y},(y=i(e,c,a)).dist>=t&&(y={x:c.x,y:c.y,dist:t}),s.push(y)}}const r=function(e,t,a){var s=[];for(const l of a){for(var n=0;n<l.vertices.length-1;n++)s.push(o(l.vertices[n],l.vertices[n+1],e,t));s.push(o(l.vertices[l.vertices.length-1],l.vertices[0],e,t))}const l=[];for(const t of s)if(2==t.length){Math.sqrt((t[0].x-e.x)**2+(t[0].y-e.y)**2);const a=Math.atan2(t[0].y-e.y,t[0].x-e.x),o=(Math.cos(a),e.x,Math.sin(a),e.y,Math.sqrt((t[1].x-e.x)**2+(t[1].y-e.y)**2),Math.atan2(t[1].y-e.y,t[1].x-e.x));Math.cos(o),e.x,Math.sin(o),e.y,l.push(t)}return l}(e,t,a),m=[];for(const o of r)for(const s of o){const o=Math.sqrt((s.x-e.x)**2+(s.y-e.y)**2),n=Math.atan2(s.y-e.y,s.x-e.x),l={x:Math.cos(n)*(o-1)+e.x,y:Math.sin(n)*(o-1)+e.y};Math.abs(o-t)<1&&0==Matter.Query.ray(a,e,l).length&&m.push(s)}for(n=0;n<m.length;n++){const o=m[n];var h=n+1;h==m.length&&(h=0);const l=m[h],p=Math.atan2(o.y-e.y,o.x-e.x),r=Math.atan2(l.y-e.y,l.x-e.x);var d,w;if(Math.abs(p)>Math.PI/2&&Math.abs(r)>Math.PI/2&&p/Math.abs(p)!=r/Math.abs(r))w=0==(d=((Math.PI-Math.abs(p))*(p/Math.abs(p))+(Math.PI-Math.abs(r))*(r/Math.abs(r)))/2)?1:d/Math.abs(d),d=Math.PI*w-d*w,test=!0;else d=(p+r)/2;c={x:Math.cos(d)*t+e.x,y:Math.sin(d)*t+e.y};var y=i(e,c,a);s.push(o),y.dist<=t&&s.push({x:y.x,y:y.y})}return s.sort((t,a)=>Math.atan2(t.y-e.y,t.x-e.x)-Math.atan2(a.y-e.y,a.x-e.x)),s}(o,s,map.concat(mob.filter(e=>null==e.isNotCloaked&&(e.isBoss||"Circle Body"!=e.label)),[pendulum1,d,w,player,E]));if(e.length>0&&e[0].x){ctx.beginPath(),ctx.moveTo(e[0].x,e[0].y);for(var n=1;n<e.length;n++){var l=Math.sqrt((e[n-1].x-o.x)**2+(e[n-1].y-o.y)**2),c=Math.sqrt((e[n].x-o.x)**2+(e[n].y-o.y)**2);if(Math.abs(l-s)<1&&Math.abs(c-s)<1){const t=Math.atan2(e[n-1].y-o.y,e[n-1].x-o.x),a=Math.atan2(e[n].y-o.y,e[n].x-o.x);ctx.arc(o.x,o.y,s,t,a)}else ctx.lineTo(e[n].x,e[n].y)}if(c=Math.sqrt((e[0].x-o.x)**2+(e[0].y-o.y)**2),l=Math.sqrt((e[e.length-1].x-o.x)**2+(e[e.length-1].y-o.y)**2),Math.abs(l-s)<1&&Math.abs(c-s)<1){const t=Math.atan2(e[e.length-1].y-o.y,e[e.length-1].x-o.x),a=Math.atan2(e[0].y-o.y,e[0].x-o.x);ctx.arc(o.x,o.y,s,t,a)}else ctx.lineTo(e[0].x,e[0].y);ctx.fillStyle="rgba(216, 218, 223, 0.5)",ctx.fill()}}ctx.beginPath(),ctx.moveTo(425,-2775),ctx.arc(400,-2775,25,0,Math.PI),ctx.fillStyle=S?"#ffe245":"transparent",ctx.fill(),ctx.strokeStyle="#000000",ctx.lineWidth=1,ctx.stroke(),pendulum1.rotate(),d.rotate(),w.rotate(),y.rotate(),M.rotate(),e(-1200,-2300,75,150,.3,"#ccc",-.05),e(-1010,-2380,30,100,-.1,"#ccc",.05),m.isTimeDilated||(K+=.3*Math.sin((simulation.cycle-ee)/50)-.3*Math.sin((simulation.cycle-ee-1)/50)),K>.1&&(K=.1),K<-.1&&(K=-.1);var h,T,P=2*Math.PI*150,$=(K-.2*Math.sin((simulation.cycle-ee)/50))/(2*Math.PI)*P;if(Y=_,_=$/(2*Math.PI*50)*Math.PI*-2+.6,.1==Math.abs(K)&&(J+=Math.abs(50/75*(_-Y))),e(740,-2625,270,330,J,"#d2d3d4",0,15,20),e(400,-2500,100,150,-.3*Math.sin((simulation.cycle-ee)/50),"#ccc",0,8,20),e(400+200*Math.cos(K),200*Math.sin(K)-2500,50,75,_,"#ccc",0,7,20),ctx.beginPath(),ctx.arc(400+200*Math.cos(K),200*Math.sin(K)-2500,10,0,2*Math.PI),ctx.strokeStyle="#444",ctx.lineWidth=10,ctx.stroke(),ctx.beginPath(),ctx.arc(400,-2500,200,-.1,.1),ctx.strokeStyle="#444",ctx.lineWidth=10,ctx.stroke(),e(740,-2625,75,110,J,"#ccc",0,8,20),ctx.beginPath(),ctx.arc(740,-2625,40,0,2*Math.PI),ctx.fillStyle="#bbb",ctx.fill(),ctx.strokeStyle="#000",ctx.lineWidth=2,ctx.stroke(),e(740,-2375,75,110,-1*J,"#ccc",0,8,20),ctx.beginPath(),ctx.arc(740,-2375,40,0,2*Math.PI),ctx.fillStyle="#bbb",ctx.fill(),ctx.strokeStyle="#000",ctx.lineWidth=2,ctx.stroke(),function(e,t){const a=Math.sqrt((t.x-e.x)**2+(t.y-e.y)**2),o=e.radius*a/(e.radius+t.radius),s=Math.atan((t.y-e.y)/(t.x-e.x)),n=Math.acos(e.radius/o),l=(Math.cos(s),e.x,Math.sin(s),e.y,{x:Math.cos(n+s)*e.radius+e.x,y:Math.sin(n+s)*e.radius+e.y}),i={x:Math.cos(-n+s)*e.radius+e.x,y:Math.sin(-n+s)*e.radius+e.y},c={x:Math.cos(n+s)*-t.radius+t.x,y:Math.sin(n+s)*-t.radius+t.y},p=Math.cos(-n+s)*-t.radius+t.x,r=Math.sin(-n+s)*-t.radius+t.y;ctx.beginPath(),ctx.moveTo(l.x,l.y),ctx.lineTo(c.x,c.y);const m=Math.atan((c.y-t.y)/(c.x-t.x)),h=Math.atan((r-t.y)/(p-t.x));ctx.arc(t.x,t.y,t.radius,m,h+Math.PI),ctx.lineTo(i.x,i.y);const d=Math.atan((i.y-e.y)/(i.x-e.x)),w=Math.atan((l.y-e.y)/(l.x-e.x));ctx.arc(e.x,e.y,e.radius,d,w+Math.PI,!0),ctx.strokeStyle="#000",ctx.lineWidth=5,ctx.stroke()}({x:740,y:-2625,radius:40},{x:740,y:-2375,radius:40}),null!=O&&(W=O),e(1080,-2650,10,20,O=Math.round(294.72*-J/25*100)/100+Math.PI/2,"#ccc",0,5,50),ctx.beginPath(),ctx.arc(1080,-2650,10,0,2*Math.PI),ctx.fillStyle="#bbb",ctx.fill(),ctx.strokeStyle="#000",ctx.lineWidth=2,ctx.stroke(),e(1650,-2550,300,360,O,"#ccc",0,6,50),ctx.beginPath(),ctx.arc(1650,-2550,100,0,2*Math.PI),ctx.fillStyle="#bbb",ctx.fill(),ctx.strokeStyle="#000",ctx.lineWidth=2,ctx.stroke(),function(e,t){const a=Math.sqrt((t.x-e.x)**2+(t.y-e.y)**2),o=-e.radius*a/(-e.radius+t.radius),s=Math.atan((t.y-e.y)/(t.x-e.x)),n=Math.acos(-e.radius/o),l=(Math.cos(s),e.x,Math.sin(s),e.y,{x:Math.cos(n+s)*-e.radius+e.x,y:Math.sin(n+s)*-e.radius+e.y}),i={x:Math.cos(-n+s)*-e.radius+e.x,y:Math.sin(-n+s)*-e.radius+e.y},c={x:Math.cos(n+s)*-t.radius+t.x,y:Math.sin(n+s)*-t.radius+t.y},p=Math.cos(-n+s)*-t.radius+t.x,r=Math.sin(-n+s)*-t.radius+t.y;ctx.beginPath(),ctx.moveTo(l.x,l.y),ctx.lineTo(c.x,c.y);const m=Math.atan((c.y-t.y)/(c.x-t.x)),h=Math.atan((r-t.y)/(p-t.x));ctx.arc(t.x,t.y,t.radius,m,h+Math.PI),ctx.lineTo(i.x,i.y);const d=Math.atan((i.y-e.y)/(i.x-e.x)),w=Math.atan((l.y-e.y)/(l.x-e.x));ctx.arc(e.x,e.y,e.radius,d+Math.PI,w),ctx.strokeStyle="#000",ctx.lineWidth=5,ctx.stroke()}({x:1080,y:-2650,radius:10},{x:1650,y:-2550,radius:100}),ctx.beginPath(),ctx.arc(294*Math.cos(-O)+1650,294*Math.sin(-O)-2550,25,0,2*Math.PI),ctx.fillStyle="#000",ctx.fill(),e(2300,-2550,300,360,.5-O,"#ccc",0,6,50),ctx.beginPath(),ctx.arc(294*Math.cos(O)+2300,294*Math.sin(O)-2550,25,0,2*Math.PI),ctx.fillStyle="#000",ctx.fill(),ctx.beginPath(),ctx.arc(1630,-2215,15,0,2*Math.PI),ctx.fillStyle="#000",ctx.fill(),ctx.beginPath(),ctx.arc(1670,-2215,15,0,2*Math.PI),ctx.fillStyle="#000",ctx.fill(),ctx.beginPath(),ctx.arc(1940,-2250,15,0,2*Math.PI),ctx.fillStyle="#000",ctx.fill(),ctx.beginPath(),ctx.arc(2300,-2215,15,0,2*Math.PI),ctx.fillStyle="#000",ctx.fill(),!L&&!U&&m.pos.x>2100&&m.pos.x<2900&&m.pos.y>-1850&&m.pos.y<-1500&&(U=!0,A=simulation.cycle+250,D=!0),D&&simulation.cycle>=A){for(n=0;n<map.length;n++)map[n].fallsOff&&(Matter.Composite.remove(engine.world,map[n]),map.splice(n,1));spawn.bodyRect(2310,-1900,480,50),D=!1,q=!0,F=simulation.cycle+100}if(q&&simulation.cycle>=F){for(n=0;n<15;n++)t(G[n].x,G[n].y,z[n].r1,z[n].r2,simulation.cycle,"#ccc",.1,25,F);0==j&&(j=simulation.cycle+100)}if(j>0&&simulation.cycle>=j&&(X<40?(!function(e,t,o=!0,s=!1,n=Math.floor(25+40*Math.random()),l=0){0==l&&(l=n+15+Math.floor(20*Math.random())),mobs.spawn(e,t,0,l,"transparent");let i=mob[mob.length-1];i.stroke="transparent",i.delay=100+40*simulation.CDScale,i.accelMag=Math.PI/1e4,i.memory=120,i.seeAtDistance2=2e6,Matter.Body.setDensity(i,.001),i.leaveBody=o;const c=Math.round(5+3*Math.random());i.gearRotation=0,i.gearSpeed=Math.round(.2*Math.random()-.1),i.gearAccelerating=!0,i.do=function(){s&&i.locatePlayer(),this.seePlayerByLookingAt(),this.checkStatus(),this.attraction(),i.gearAccelerating&&(Math.random()>.99||i.gearSpeed>=.1)?i.gearAccelerating=!1:!i.gearAccelerating&&(Math.random()>.99||i.gearSpeed<=-.1)&&(i.gearAccelerating=!0),i.gearAccelerating?i.gearSpeed+=.001:i.gearSpeed-=.001,i.gearRotation+=i.gearSpeed;var e=a(i.position.x,i.position.y,n,l,c,i.gearRotation);ctx.beginPath(),ctx.moveTo(e[0].x,e[0].y);for(let t=1;t<e.length;t++)ctx.lineTo(e[t].x,e[t].y);ctx.lineTo(e[0].x,e[0].y),ctx.fillStyle="#7b3f00",ctx.fill(),ctx.strokeStyle="#000",ctx.lineWidth=2,ctx.stroke()}}(1600+1e3*Math.random(),-2300-300*Math.random(),!1,!0),X++,j=simulation.cycle+25-(simulation.difficulty-simulation.difficultyMode)/2):0==H&&(H=simulation.cycle+50)),!L&&H>0&&simulation.cycle>H){U=!1,L=!0;for(n=0;n<map.length;n++)map[n].fallsOff2&&(Matter.Composite.remove(engine.world,map[n]),map.splice(n,1));spawn.bodyRect(2850,-2180,100,280),Matter.Body.setAngularVelocity(body[body.length-1],.025)}Math.sin((simulation.cycle+15)/25)<0&&!I?(R.isClosing=!0,b.isClosing=!1,f.isClosing=!0,g.isClosing=!1,v.isClosing=!0):Math.sin((simulation.cycle+15)/25)>0&&I&&(R.isClosing=!1,b.isClosing=!0,f.isClosing=!1,g.isClosing=!0,v.isClosing=!1),Math.sin(-O)-Math.sin(-W)<-.01&&(k=!1,B=!1),Math.sin(-O)-Math.sin(-W)>.01&&(C=!1,V=!1),R.openClose(),b.openClose(),f.openClose(),g.openClose(),v.openClose(),U||(x.isLocked=!1),!U||(Math.sin(-O)-Math.sin(-W)!=0||x.position.y<-1850)&&!x.isLocked?x.setPos(1650,175*Math.sin(-O)-1850):x.isLocked=!0,u.setPos(1950,175*Math.sin(O)-1850),ctx.beginPath(),ctx.moveTo(294*Math.cos(-O)+1650,294*Math.sin(-O)-2550),ctx.lineTo(1650,-2230),ctx.lineTo(x.position.x,x.position.y-175),ctx.strokeStyle="#777",ctx.lineWidth=10,ctx.stroke(),294*Math.cos(O)>0?(h={x:294*Math.cos(O)+2300,y:294*Math.sin(O)-2550,radius:-25},T={x:2300,y:-2215,radius:-15}):(h={x:294*Math.cos(O)+2300,y:294*Math.sin(O)-2550,radius:25},T={x:2300,y:-2215,radius:15});var te=Math.sqrt((T.x-h.x)**2+(T.y-h.y)**2),ae=-h.radius*te/(-h.radius+T.radius),oe=Math.atan((T.y-h.y)/(T.x-h.x)),se=Math.acos(-h.radius/ae);const ne={x:Math.cos(se+oe)*-T.radius+T.x,y:Math.sin(se+oe)*-T.radius+T.y},le=1940,ie=-2250,ce=15;ae=ce*(te=Math.sqrt((T.x-le)**2+(T.y-ie)**2))/(ce+T.radius),oe=Math.atan((T.y-ie)/(T.x-le)),se=Math.acos(ce/ae);const pe={x:Math.cos(-se+oe)*ce+le,y:Math.sin(-se+oe)*ce+ie},re=Math.cos(se+oe)*-T.radius+T.x,me=Math.sin(se+oe)*-T.radius+T.y;te=Math.sqrt((u.position.y-175-ie)**2+(u.position.x-50-le)**2),oe=Math.atan((u.position.y-175-ie)/(u.position.x-50-le)),se=Math.acos(ce/te);const he={x:Math.cos(se)*te+le,y:Math.sin(se)*te+ie};ctx.beginPath(),ctx.moveTo(h.x,h.y),ctx.lineTo(ne.x,ne.y);const de=Math.atan((ne.y-T.y)/(ne.x-T.x)),we=Math.atan((me-T.y)/(re-T.x));ctx.arc(T.x,T.y,Math.abs(T.radius),de,-we),ctx.lineTo(pe.x,pe.y);const ye=Math.atan((pe.y-ie)/(pe.x-le));ctx.arc(le,ie,ce,ye,Math.PI/2+se,!0),ctx.lineTo(he.x,he.y),ctx.strokeStyle="#777",ctx.lineWidth=10,ctx.stroke(),I=Math.sin((simulation.cycle+15)/25)<0,Matter.Query.ray([player],Matter.Vector.create(x.position.x-50,x.position.y+175),Matter.Vector.create(x.position.x+50,x.position.y+175),5).length>0&&!k&&Math.sin(-O)-Math.sin(-W)>.01&&(m.takeDamage(.1),k=!0);var xe=Matter.Query.ray(mob,Matter.Vector.create(x.position.x-50,x.position.y+175),Matter.Vector.create(x.position.x+50,x.position.y+175),5);if(xe.length>0&&!B&&Math.sin(-O)-Math.sin(-W)>.01){for(var ue of xe)ue.body.damage(1);B=!0}Matter.Query.ray([player],Matter.Vector.create(u.position.x-50,u.position.y+175),Matter.Vector.create(u.position.x+50,u.position.y+175),5).length>0&&!C&&Math.sin(-O)-Math.sin(-W)<-.01&&(m.takeDamage(.1),C=!0);var Re=Matter.Query.ray(mob,Matter.Vector.create(u.position.x-50,u.position.y+175),Matter.Vector.create(u.position.x+50,u.position.y+175),5);if(Re.length>0&&!V&&Math.sin(-O)-Math.sin(-W)>.01){for(var ue of Re)ue.body.damage(1);V=!0}ctx.beginPath(),ctx.arc(400,-3700,600,0,2*Math.PI),ctx.fillStyle="#e9e9e9",ctx.fill(),ctx.strokeStyle="#3a3f20",ctx.lineWidth=2,ctx.stroke(),ctx.lineCap="butt",ctx.beginPath(),ctx.moveTo(350,-4275),ctx.lineTo(390,-4150),ctx.strokeStyle="#000",ctx.lineWidth=20,ctx.stroke(),ctx.beginPath(),ctx.moveTo(390,-4275),ctx.lineTo(350,-4150),ctx.stroke(),ctx.beginPath(),ctx.moveTo(420,-4275),ctx.lineTo(420,-4150),ctx.stroke(),ctx.beginPath(),ctx.moveTo(450,-4275),ctx.lineTo(450,-4150),ctx.stroke();var be={x:400+510*Math.cos(-Math.PI/3),y:510*Math.sin(-Math.PI/3)-3700};ctx.beginPath(),ctx.moveTo(be.x,be.y-62),ctx.lineTo(be.x,be.y+63),ctx.stroke();be={x:400+510*Math.cos(-Math.PI/6),y:510*Math.sin(-Math.PI/6)-3700};ctx.beginPath(),ctx.moveTo(be.x-20,be.y-62),ctx.lineTo(be.x-20,be.y+63),ctx.stroke(),ctx.beginPath(),ctx.moveTo(be.x+20,be.y-62),ctx.lineTo(be.x+20,be.y+63),ctx.stroke(),ctx.beginPath(),ctx.moveTo(870,-3762),ctx.lineTo(870,-3637),ctx.stroke(),ctx.beginPath(),ctx.moveTo(910,-3762),ctx.lineTo(910,-3637),ctx.stroke(),ctx.beginPath(),ctx.moveTo(950,-3762),ctx.lineTo(950,-3637),ctx.stroke();be={x:400+535*Math.cos(Math.PI/6),y:535*Math.sin(Math.PI/6)-3700};ctx.beginPath(),ctx.moveTo(be.x-50,be.y-62),ctx.lineTo(be.x-50,be.y+63),ctx.stroke(),ctx.beginPath(),ctx.moveTo(be.x-20,be.y-62),ctx.lineTo(be.x,be.y+53),ctx.lineTo(be.x+20,be.y-62),ctx.stroke();be={x:400+515*Math.cos(Math.PI/3),y:515*Math.sin(Math.PI/3)-3700};ctx.beginPath(),ctx.moveTo(be.x-20,be.y-62),ctx.lineTo(be.x,be.y+53),ctx.lineTo(be.x+20,be.y-62),ctx.stroke();be={x:400+515*Math.cos(Math.PI/2),y:515*Math.sin(Math.PI/2)-3700};ctx.beginPath(),ctx.moveTo(be.x-35,be.y-62),ctx.lineTo(be.x-15,be.y+53),ctx.lineTo(be.x+5,be.y-62),ctx.stroke(),ctx.beginPath(),ctx.moveTo(be.x+35,be.y-62),ctx.lineTo(be.x+35,be.y+63),ctx.stroke();be={x:400+500*Math.cos(2*Math.PI/3),y:500*Math.sin(2*Math.PI/3)-3700};ctx.beginPath(),ctx.moveTo(be.x-65,be.y-62),ctx.lineTo(be.x-45,be.y+53),ctx.lineTo(be.x-25,be.y-62),ctx.stroke(),ctx.beginPath(),ctx.moveTo(be.x+5,be.y-62),ctx.lineTo(be.x+5,be.y+63),ctx.stroke(),ctx.beginPath(),ctx.moveTo(be.x+35,be.y-62),ctx.lineTo(be.x+35,be.y+63),ctx.stroke();be={x:400+500*Math.cos(5*Math.PI/6),y:500*Math.sin(5*Math.PI/6)-3700};ctx.beginPath(),ctx.moveTo(be.x-65,be.y-62),ctx.lineTo(be.x-45,be.y+53),ctx.lineTo(be.x-25,be.y-62),ctx.stroke(),ctx.beginPath(),ctx.moveTo(be.x+5,be.y-62),ctx.lineTo(be.x+5,be.y+63),ctx.stroke(),ctx.beginPath(),ctx.moveTo(be.x+35,be.y-62),ctx.lineTo(be.x+35,be.y+63),ctx.stroke(),ctx.beginPath(),ctx.moveTo(be.x+65,be.y-62),ctx.lineTo(be.x+65,be.y+63),ctx.stroke();be={x:400+500*Math.cos(Math.PI),y:500*Math.sin(Math.PI)-3700};ctx.beginPath(),ctx.moveTo(be.x-5,be.y-62),ctx.lineTo(be.x+35,be.y+63),ctx.stroke(),ctx.beginPath(),ctx.moveTo(be.x-5,be.y+63),ctx.lineTo(be.x+35,be.y-62),ctx.stroke(),ctx.beginPath(),ctx.moveTo(be.x-35,be.y-62),ctx.lineTo(be.x-35,be.y+63),ctx.stroke();be={x:400+500*Math.cos(5*-Math.PI/6),y:500*Math.sin(5*-Math.PI/6)-3700};ctx.beginPath(),ctx.moveTo(be.x-25,be.y-62),ctx.lineTo(be.x+25,be.y+63),ctx.stroke(),ctx.beginPath(),ctx.moveTo(be.x-25,be.y+63),ctx.lineTo(be.x+25,be.y-62),ctx.stroke();be={x:400+500*Math.cos(2*-Math.PI/3),y:500*Math.sin(2*-Math.PI/3)-3700};ctx.beginPath(),ctx.moveTo(be.x-10,be.y-62),ctx.lineTo(be.x+40,be.y+63),ctx.stroke(),ctx.beginPath(),ctx.moveTo(be.x-10,be.y+63),ctx.lineTo(be.x+40,be.y-62),ctx.stroke(),ctx.beginPath(),ctx.moveTo(be.x-40,be.y+63),ctx.lineTo(be.x-40,be.y-62),ctx.stroke(),ctx.lineCap="round",level.exit.drawAndCheck(),level.enter.draw()};var te=Math.sin(simulation.cycle/50)<0;level.customTopLayer=()=>{S||P.query(),P.isUp||(S=!0),P.draw(),T.move(),ctx.beginPath(),ctx.moveTo(pendulum1.parts[2].vertices[0].x,pendulum1.parts[2].vertices[0].y);for(var e=0;e<pendulum1.parts[2].vertices.length;e++)ctx.lineTo(pendulum1.parts[2].vertices[e].x,pendulum1.parts[2].vertices[e].y);ctx.lineTo(pendulum1.parts[2].vertices[0].x,pendulum1.parts[2].vertices[0].y),ctx.fillStyle="#999",ctx.fill(),ctx.lineWidth=2,ctx.strokeStyle=color.blockS,ctx.stroke(),ctx.beginPath(),ctx.moveTo(y.parts[1].vertices[0].x,y.parts[1].vertices[0].y);for(e=0;e<y.parts[1].vertices.length;e++)ctx.lineTo(y.parts[1].vertices[e].x,y.parts[1].vertices[e].y);if(ctx.lineTo(y.parts[1].vertices[0].x,y.parts[1].vertices[0].y),ctx.fillStyle="#999",ctx.fill(),ctx.lineWidth=2,ctx.strokeStyle=color.blockS,ctx.stroke(),ctx.fillStyle="#444",ctx.fillRect(3275,-1750,1,1750),ctx.fillStyle="#888",Math.sin(simulation.cycle/50)<0&&!te){for(e=0;e<map.length;e++)map[e].isRemove&&(Matter.Composite.remove(engine.world,map[e]),map.splice(e,1));spawn.mapRect(-200,-600,275,50),h(map.length-1),map[map.length-1].isRemove=!0}else if(.3*Math.sin(simulation.cycle/50)>=0&&te){for(e=0;e<map.length;e++)map[e].isRemove&&(Matter.Composite.remove(engine.world,map[e]),map.splice(e,1));spawn.mapRect(825,-600,275,50),h(map.length-1),map[map.length-1].isRemove=!0}simulation.draw.setPaths(),te=.3*Math.sin(simulation.cycle/50)<0}},buttonbutton(){simulation.inGameConsole("<strong>buttonbutton</strong> by <span class='color-var'>||Destabilized E||</span>");const e=level.mover(1425,-1949,600,25);let t;t=level.portal({x:-146,y:131},2*Math.PI,{x:1805,y:-2295},90);const a=level.button(-456,-1320);spawn.bodyRect(-400,-1475,75,75);const o=level.button(1781,-61);spawn.bodyRect(1781,-161,75,75);const s=level.boost(1366,-1942,1300);a.isUp=!0,o.isUp=!0;const n=level.transport(-250,1151,400,50,8+simulation.difficultyMode);level.custom=()=>{n.position.x<-244?n.changeDirection(!0):n.position.x>1700&&n.changeDirection(!1),a.isUp&&o.isUp&&n.move(),e.push(),ctx.fillStyle="rgba(0,255,255,0.1)",ctx.fillRect(6400,-550,300,350),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{a.query(),a.draw(),o.query(),o.draw(),s.query(),n.draw(),t[2].query(),t[3].query(),t[0].draw(),t[1].draw(),e.draw(),ctx.fillStyle="rgba(0,0,0,0.1)",ctx.fillRect(-150,-650,900,250)},level.setPosToSpawn(0,-450),spawn.mapRect(level.enter.x,level.enter.y+20,100,20),level.exit.x=-525,level.exit.y=1128,level.defaultZoom=1500,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#ddd",spawn.mapRect(-725,-1325,575,1900),spawn.mapRect(1425,-1925,600,1550),spawn.mapRect(1450,-50,500,425),spawn.mapRect(1950,75,325,300),spawn.mapRect(2275,200,200,175),spawn.mapRect(-150,-400,900,250),spawn.mapRect(-150,300,900,275),spawn.mapRect(1700,900,450,275),spawn.mapRect(1800,1600,450,250),spawn.mapRect(1675,1675,275,175),spawn.mapRect(1575,1675,275,175),spawn.mapRect(-550,1150,150,100),spawn.bodyRect(-1475,-225,50,50),spawn.bodyRect(2450,1525,925,850),spawn.mapRect(2275,1400,300,150),spawn.mapRect(2125,1025,125,150),spawn.mapRect(2250,1175,175,75),spawn.mapRect(2150,1175,175,75),spawn.mapRect(1725,1150,475,100),spawn.mapRect(2225,675,650,50),spawn.bodyRect(2400,500,150,175),spawn.nodeGroup(326,85,"grenadier",6),spawn.mapRect(-225,-1325,625,225),spawn.randomMob(151,-1500),spawn.randomMob(-88,-1829),spawn.randomMob(2339,896),spawn.randomMob(1907,1381),spawn.randomMob(2398,1301),spawn.randomMob(1839,811),spawn.randomMob(2282,1103),spawn.randomMob(8,124),spawn.randomMob(629,111),spawn.randomMob(43,831),spawn.randomMob(168,1002),spawn.randomMob(2956,1006),spawn.randomMob(2713,535),spawn.randomMob(2396,117),spawn.randomMob(1498,-121),spawn.nodeGroup(2030,-16,"grower",6),spawn.randomLevelBoss(1840,675)},movers(){simulation.inGameConsole("<strong>movers</strong> by <span class='color-var'>ryanbear</span>"),level.custom=()=>{level.exit.drawAndCheck(),level.enter.draw();for(var a=0;a<e.length;a++)e[a].position.x<5075?e[a].changeDirection(!0):e[a].position.x>7875&&e[a].changeDirection(!1),e[a].draw(),e[a].move();for(var o=0;o<t.length;o++)t[o][0].query();i.push(),c.query(),ctx.fillStyle="rgba(68,68,68,1)",ctx.fillRect(1725,-2400,1e3,150),ctx.fillRect(2175,-2775,250,450),ctx.fillRect(2200,-2825,225,200),ctx.fillRect(2075,-2575,150,200),ctx.fillRect(2075,-2700,150,150),ctx.fillRect(1875,-2525,300,125),ctx.fillRect(1975,-2575,150,75),ctx.fillRect(1800,-2475,175,100),ctx.fillRect(2150,-2725,350,375),ctx.fillRect(2475,-2575,175,200),ctx.fillRect(2675,-2550,25,175),ctx.fillRect(2625,-2550,75,200),ctx.fillRect(2025,-2600,200,175),ctx.fillRect(2025,-2675,225,225),ctx.fillRect(2125,-2800,250,375),ctx.fillRect(2400,-2625,175,175),ctx.fillRect(2450,-2700,100,225),ctx.fillRect(1950,-2600,150,200),ctx.fillRect(1675,-2325,250,75),ctx.fillRect(2700,-2525,25,150)},level.setPosToSpawn(0,-50),level.exit.x=23885,level.exit.y=800,spawn.mapRect(-98,-8,1e3,20),spawn.mapRect(972,-287,200,20),level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom);var e=[],t=[];spawn.mapRect(9850,475,200,75);for(var a=0;a<6;a++)e.push(level.transport(6275,525*a-2100,600,50,4*(2*a%2-1)*Math.min(simulation.difficulty/2,2)*(1+Math.random()))),t.push([level.boost(6275,525*a-2100,100),6275]);document.body.style.backgroundColor="#d8dadf";const o=level.portal({x:3984,y:1293},-2*Math.PI,{x:23863,y:82},2*Math.PI);spawn.mapRect(1825,-2250,3300,300),spawn.mapRect(3250,-2875,150,625),spawn.mapRect(3250,-2875,425,125),spawn.mapRect(3425,-2725,150,300),spawn.mapRect(3400,-2750,175,350),spawn.mapRect(3575,-2625,150,375),spawn.mapRect(3175,-2750,75,300),spawn.mapRect(3100,-2750,275,300),spawn.mapRect(3675,-2875,75,125),spawn.mapRect(3675,-2625,75,400),spawn.mapRect(3350,-2425,100,175),spawn.mapRect(8350,825,1825,250),spawn.mapRect(3950,800,800,375);var s=level.hazard(3750,-2625,1375,375),n=level.vanish(3975,-2600,225,25),l=level.vanish(4275,-2975,225,25),i=level.mover(2585,1928,2375,100),c=level.vanish(4925,1725,100,25);for(a=0;a<16;a++)a<10?level.boost(1600+62*a,-2307-62*a,100):level.boost(1600+62*a,62*a-3547,100);for(a=-1;a<10;a++)level.boost(3847-62*a,879+62*a,100);spawn.mapRect(3050,1500,1600,200),spawn.mapRect(1850,-1950,3275,1275),spawn.mapRect(1850,-675,3275,1300),spawn.mapRect(2700,-2525,25,175),spawn.mapRect(3825,925,125,575),spawn.mapRect(3600,1100,350,400),spawn.mapRect(3375,1350,275,150),spawn.mapRect(3550,1300,100,50),spawn.mapRect(3800,1e3,100,150),spawn.mapRect(3725,1075,150,125),spawn.mapRect(3725,1025,150,125),spawn.mapRect(3550,1225,150,125),spawn.mapRect(3500,1275,175,125),bosses=["laserBoss","blinkBoss","shooterBoss","launcherBoss","pulsarBoss","beetleBoss","bladeBoss","revolutionBoss","dragonFlyBoss","spiderBoss"];let p=Math.floor(Math.random()*bosses.length);spawn[bosses[p]](2240,-2499,100,!1);var r=level.button(9889,747);r.isUp=!0,spawn.randomMob(475,-725,.7),spawn.randomMob(825,-1825,.7),spawn.randomMob(3275,-3475,.7),spawn.randomMob(8550,350,.7),spawn.randomMob(9350,-175,.7),spawn.randomMob(1575,225,.7),spawn.randomMob(22825,250,.7),spawn.mapRect(-100,0,1e3,100);var m=level.elevator(1326,-447,200,200,-2131,.003,{up:.1,down:.2});spawn.mapRect(9500,750,675,75),spawn.mapRect(22350,825,3e3,150),powerUps.spawn(4246,1335,"tech"),powerUps.spawn(4246.8,1335,"heal"),powerUps.spawn(4246.8,1335.4,"ammo"),spawn.bodyRect(9200,725,50,25),spawn.mapRect(12200,675,125,50),spawn.mapRect(12925,675,100,100),spawn.mapRect(13675,650,150,150),spawn.mapRect(14200,750,25,25),spawn.mapRect(14200,675,25,75),spawn.mapRect(14550,675,125,50),spawn.mapRect(15850,675,125,100),spawn.mapRect(17175,600,25,200),spawn.mapRect(17725,700,175,50),spawn.mapRect(18775,675,175,75),spawn.bodyRect(8975,700,25,25),spawn.bodyRect(8850,575,50,50),spawn.bodyRect(9050,650,50,50),spawn.bodyRect(8625,575,100,75),spawn.bodyRect(8475,675,75,25);var h=level.transport(9550,775,Math.max(1200/simulation.difficulty,200),1350,8);level.customTopLayer=()=>{m.move(),s.query(),n.query(),l.query(),r.draw(),o[2].query(),o[2].draw(),o[3].query(),o[3].draw(),r.query(),r.isUp||spawn.mapRect(4050,1175,600,325),!r.isUp&&h.position.x<23785&&(h.draw(),h.move())},powerUps.addResearchToLevel()},downpour(){simulation.inGameConsole("<strong>Downpour</strong> by <span class='color-var'>DesBoot</span>");const e=level.hazard(7492,-2612,10,500,.3);spawn.mapRect(340,-2032.5,20,25);const t=level.button(5485,-2510),a=(level.button(7618,-3204),level.toggle(5088.4,1226.7)),o=level.toggle(100,0),s=level.door(6500,-1200,100,350,100),n=level.door(10700,-2500,100,500,200),l=level.boost(7300,1209,2200),i=level.boost(6232.6,-832.8,1400),c=level.portal({x:4886.4,y:1050.7},2*Math.PI,{x:7686,y:-2121},2*Math.PI),p=level.hazard(-1800,10,4200,400),r=level.hazard(2400,-2100,200,2100),h=level.hazard(2600,-2100,3600,200),d=level.hazard(6400,-2100,3600,200),w=level.hazard(-2e3,10,200,3e3),y=level.drip(1750,-700,0,70);level.levelsCleared;let x=2*Math.random();const u=(e,t)=>Math.random()*(t-e)+e,R=Math.round(15+20*Math.random()),f=[];for(let e=0;e<R;e++){if(x<1.25){const e=u(3800,6e3);f.push(level.drip(e,-1700,-800,200+500*Math.random()))}else{const e=u(4900,7100);f.push(level.drip(e,200,1200,200+500*Math.random()))}x=2*Math.random()}level.setPosToSpawn(0,-50),level.exit.x=13130.3,level.exit.y=-370,level.defaultZoom=1800;let g=!1,v=0,M=0,T=0,P=0,S=Math.round(25*Math.random()+260),k=0,C=0,B=0,V=0;spawn.mapRect(level.enter.x,level.enter.y+20,100,20),spawn.mapRect(level.exit.x,level.exit.y+20,100,20),simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#2e416e";let I=new Audio("https://github.com/des-boot/n-gon-downpour-sound-effects/blob/main/thunder1.mp3?raw=true");new Audio("https://github.com/des-boot/n-gon-downpour-sound-effects/blob/main/Chemical%20Love%20thunder.mp3?raw=true").play();let U=new Audio("https://github.com/des-boot/n-gon-downpour-sound-effects/blob/main/thunder2.mp3?raw=true"),L=new Audio("https://github.com/des-boot/n-gon-downpour-sound-effects/blob/main/thunder3.wav?raw=true"),D=new Audio("https://github.com/des-boot/n-gon-downpour-sound-effects/blob/main/thunder4.wav?raw=true"),A=new Audio("https://github.com/des-boot/n-gon-downpour-sound-effects/blob/main/buzz%20(1).wav?raw=true"),q=new Audio("https://github.com/des-boot/n-gon-downpour-sound-effects/blob/main/light-rain-109591.mp3?raw=true"),F=new Audio("https://github.com/des-boot/n-gon-downpour-sound-effects/blob/main/8mb.video-ggm-Jd62jXAH.m4a?raw=true");function G(){q.muted=!0,A.muted=!0,F.muted=!0,I.muted=!0,U.muted=!0,L.muted=!0,D.muted=!0}function H(e,t){let a=0;return t>-70&&e<2785&&(a=-1*(2+t/150)),e>2600&&e<4500&&t<-1900&&t>-2121.3&&(a=-2),e>4500&&e<6e3&&t<-1900&&t>-2121.3&&(a=.4),e>6500&&e<1e4&&t<-1900&&t>-2121.3&&(a=-1),e>2600&&e<6100&&t<-650&&t>-920&&(a=-.4),e>6500&&e<7300&&t<-650&&t>-920&&m.onGround&&(a=.2),a}function $(e,t){let a=0;return e>2400&&e<2600&&(a=4),player.position.x>7200&&player.position.x<7350&&player.position.y>-950&&player.position.y<1250&&(a=.8),player.position.x>6100&&player.position.x<6200&&player.position.y<-800&&player.position.y>-2e3&&(a=.3),player.position.x>6400&&player.position.x<6500&&player.position.y<-800&&player.position.y>-2e3&&(a=.3),a}function z(e,t){return t>-70&&e<2785||e>2400&&e<2600||e>2600&&e<6e3&&t<-1900&&t>-2121.3||e>6500&&e<1e4&&t<-1900&&t>-2121.3||e>2600&&e<6100&&t<-650&&t>-920||e>6500&&e<7300&&t<-650&&t>-920||e>7200&&e<7350&&t>-950&&t<1250||e>6100&&e<6200&&t<-800&&t>-2e3||e>6400&&e<6500&&t<-800&&t>-2e3}q.volume=.125,F.volume=.125,I.volume=.25,U.volume=.25,L.volume=.25,D.volume=.25,level.custom=()=>{for(const e of f)e.draw();y.draw(),ctx.fillStyle="rgba(0,0,0,0.5)",ctx.beginPath(),ctx.moveTo(10800,-2400),ctx.lineTo(10800,-340),ctx.lineTo(12980,-340),ctx.lineTo(12980,-700),ctx.lineTo(13465,-700),ctx.lineTo(13541,-1737),ctx.lineTo(11864.6,-1967),ctx.lineTo(11003,-2400),ctx.fill(),ctx.fillRect(6100,-2e3,400,50),simulation.paused?(q.pause(),F.pause(),I.pause(),U.pause(),L.pause(),D.pause()):(F.play(),player.position.x>3100&&player.position.y>-1700?(q.pause(),F.volume=.025):(player.position.x>2600&&player.position.x<3200&&(q.volume=(3200-player.position.x)/4e3,F.volume=(3200-player.position.x)/4e3),player.position.y>-2e3&&player.position.y<-1700&&(q.volume=-3*player.position.y/68e3-.05,F.volume=-1*(1700+player.position.y)/3e3),q.play())),C=Math.sqrt((player.position.x-6300)*(player.position.x-6300)+(player.position.y-212)*(player.position.y-212)),B=Math.sqrt((player.position.x-4877)*(player.position.x-4877)+(player.position.y+1690)*(player.position.y+1690)),a.isOn&&(simulation.paused?A.pause():C<2e3||B<2e3?(A.play(),A.volume=B<C?1-B/2e3:1-C/2e3):A.pause()),o.isOn?G():(q.muted=!1,A.muted=!1,F.muted=!1,I.muted=!1,U.muted=!1,L.muted=!1,D.muted=!1);do{ctx.fillStyle="rgba(242, 255, 0, 0.3})",ctx.fillStyle=`rgba(242,255,0,${Math.round(Math.random+.3)/3})`,ctx.fillStyle="rgba(242,255,0,0.3)",a.isOn&&(ctx.beginPath(),ctx.moveTo(6325,212),ctx.lineTo(6250,212),ctx.lineTo(5912,550),ctx.lineTo(6335,550),ctx.lineTo(6354.97,1230),ctx.lineTo(6922.4443,1230),ctx.lineTo(6775,975),ctx.lineTo(6775,900),ctx.lineTo(7088,900),ctx.lineTo(6500,312),ctx.lineTo(6400,212),ctx.fill(),ctx.beginPath(),ctx.moveTo(4875,-1688),ctx.lineTo(4800,-1688),ctx.lineTo(4162,-1050),ctx.lineTo(4312,-1050),ctx.lineTo(4485,-1240),ctx.lineTo(5085,-1243),ctx.lineTo(5530,-798),ctx.lineTo(5460,-880),ctx.lineTo(5488,-1150),ctx.lineTo(4950,-1688),ctx.fill()),ctx.beginPath(),ctx.fillStyle="rgba(30,150,117,255)",ctx.rect(4500*Math.random()-2e3,-5e3,5.5,5030),ctx.rect(4500*Math.random()-2e3,-5e3,5.5,5030),ctx.rect(4500*Math.random()-2e3,-5e3,5.5,5030),ctx.rect(2e3*Math.random()+2500,-5e3,5.5,3e3),ctx.rect(2e3*Math.random()+2500,-5e3,5.5,3e3),ctx.rect(1300*Math.random()+4500,-5e3,5.5,2500),ctx.rect(1300*Math.random()+7500,-5e3,5.5,1800),ctx.rect(1800*Math.random()+5700,-5e3,5.5,3e3),ctx.rect(1800*Math.random()+5700,-5e3,5.5,3e3),ctx.rect(1800*Math.random()+8400,-5e3,5.5,3e3),ctx.rect(1800*Math.random()+8400,-5e3,5.5,3e3),ctx.rect(4500*Math.random()-2e3,-5e3,5.5,5030),ctx.fillStyle="rgba(30,150,117,255)",ctx.fill(),M=900*Math.random()+11100,T=900*Math.random()+10200,T<10800?ctx.rect(T,-5e3,3*Math.random()+2.5,3e3):ctx.rect(T,-5e3,3*Math.random()+2.5,2600),ctx.rect(M,-5e3,3*Math.random()+2.5,5e3+.5468*M-8507),ctx.rect(1800*Math.random()+12e3,-5e3,3*Math.random()+2.5,3e3),ctx.rect(1800*Math.random()+12e3,-5e3,3*Math.random()+2.5,3e3),ctx.rect(1500*Math.random()-3500,-5e3,3*Math.random()+2.5,10030),ctx.fillStyle="rgba(30,150,117,255)",ctx.fill()}while(Math.random()<.5);if(P>300)Math.random()>.8&&0==g?(S=Math.round(10*Math.random()+275),P=S-20,g=!0):(S=Math.round(25*Math.random()+260),P=-100*Math.random(),g=!1),document.body.style.backgroundColor="#2e416e",function(){switch(Math.floor(4*Math.random())){case 1:I.play();break;case 2:U.play();break;case 3:L.play();break;default:D.play()}}();else{if(P>S){document.body.style.backgroundColor="#7391ff";for(let e=0;e<mob.length;e++)mobs.statusStun(mob[e],300-S);v=S-300}P+=1}ctx.textAlign="start",ctx.fillStyle="#00ffff",ctx.font="27px monospace",ctx.fillText("Audio:",150,-270),ctx.font="54px monospace",ctx.textAlign="right",ctx.fillText(o.isOn?"Muted":"Unmuted",250,-210),o.isOn?ctx.strokeStyle="#ff0400":ctx.strokeStyle="#00ff00",ctx.lineWidth=10,ctx.beginPath(),ctx.moveTo(130,-167.5),ctx.lineTo(160,-167.5),ctx.lineTo(190,-187.5),ctx.lineTo(190,-97.5),ctx.lineTo(160,-123.5),ctx.lineTo(130,-123.5),ctx.lineTo(130,-167.5),ctx.stroke(),o.isOn?(ctx.lineWidth=9,ctx.moveTo(230,-185),ctx.lineTo(140,-95),ctx.stroke(),ctx.lineWidth=5,ctx.stroke(),ctx.beginPath(),ctx.arc(170,-145,45,1.75*Math.PI,.25*Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(170,-145,60,1.75*Math.PI,.25*Math.PI),ctx.stroke()):(ctx.stroke(),ctx.beginPath(),ctx.arc(170,-145,45,1.75*Math.PI,.25*Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(170,-145,60,1.75*Math.PI,.25*Math.PI),ctx.stroke()),ctx.lineWidth=4,ctx.stroke(),ctx.textAlign="center",ctx.fillStyle="#00ffff",ctx.font="25px Arial",ctx.fillStyle="#d4f4f4",ctx.fillRect(12984,-704,420,450),ctx.fillStyle="rgba(0,0,0,0.5)",ctx.fillRect(4703,-2362,100,100),ctx.fillRect(5053,-2362,100,100),ctx.fillRect(5403,-2362,100,100),ctx.fillRect(4703,-2062,100,100),ctx.fillRect(5053,-2062,100,100),ctx.fillRect(5403,-2062,100,100),ctx.fillStyle="rgba(0,0,0,0.5)",ctx.fillRect(4523,-2512,1150,800),ctx.fillRect(4735,-1233,100,500),ctx.beginPath(),ctx.moveTo(4487,-1195),ctx.lineTo(4736,-792),ctx.lineTo(4736,-852),ctx.lineTo(4527,-1195),ctx.moveTo(5087,-1195),ctx.lineTo(4836,-792),ctx.lineTo(4836,-852),ctx.lineTo(5047,-1195),ctx.fill(),ctx.moveTo(5252.4,-2483.5),ctx.lineTo(5141.2,-2507.8),ctx.lineTo(5209.2,-2625.2),ctx.lineTo(5290.2,-2626.6),ctx.lineTo(5361.2,-2697.9),ctx.lineTo(5410.6,-2717),ctx.lineTo(5680.2,-2648.7),ctx.lineTo(5687.7,-2471.5),ctx.fill(),ctx.fillRect(8673,-2137,50,175),ctx.fillRect(7630,-2540,100,100),ctx.fillRect(7930,-2540,100,100),ctx.fillRect(8230,-2540,100,100),ctx.fillRect(8530,-2765,100,100),ctx.fillRect(7630,-2990,100,100),ctx.fillRect(7930,-2990,100,100),ctx.fillRect(8230,-2990,100,100),ctx.beginPath(),ctx.moveTo(7475,-3213),ctx.lineTo(8100,-3213),ctx.lineTo(8191.2,-3334.7),ctx.lineTo(8318,-3388.3),ctx.lineTo(8348.5,-3496.9),ctx.lineTo(8480,-3512.6),ctx.lineTo(8670,-3482),ctx.lineTo(8725,-3213),ctx.lineTo(8725,-1463),ctx.lineTo(7475,-1463),ctx.fill(),ctx.fillRect(8523,-2563,50,50),ctx.fillRect(8473,-2613,50,50),ctx.fillRect(8423,-2663,50,50),ctx.fillRect(8373,-2713,50,50),ctx.fillRect(8323,-2763,50,50),ctx.fillRect(8323,-2813,50,50),ctx.fillRect(8373,-2863,50,50),ctx.fillRect(8423,-2913,50,50),ctx.fillRect(8473,-2963,50,50),ctx.fillRect(8523,-3013,50,50),ctx.fillRect(8473,-3063,50,50),ctx.fillRect(8423,-3113,50,50),ctx.fillRect(8373,-3163,50,50),ctx.fillRect(8323,-3213,50,50),ctx.fillStyle="rgba(30,150,117,255)",ctx.fillRect(6100,-1900,100,1050),ctx.fillRect(6400,-1900,100,1050),ctx.fillRect(2600,-850,4700,200),ctx.fillRect(7200,-650,100,1900),ctx.fillRect(2399,-1,200,400),ctx.fillStyle="rgba(0,0,0,0.5)",ctx.fillStyle="rgba(0,0,0,0.6)",ctx.beginPath(),ctx.moveTo(6100,-1700),ctx.lineTo(5799.5,-800),ctx.lineTo(2600,-800),ctx.lineTo(2600,-1700),ctx.lineTo(5799.5,-1700),ctx.moveTo(6500,-1200),ctx.lineTo(7600,-1200),ctx.lineTo(8e3,1400),ctx.lineTo(4600,1500),ctx.lineTo(4500.5,0),ctx.lineTo(6500,-200),ctx.lineTo(6500,-1200),ctx.fill(),ctx.fillStyle="rgba(50,50,50,0.6)",ctx.beginPath(),ctx.moveTo(-2050,0),ctx.lineTo(1725,0),ctx.lineTo(1980,88),ctx.lineTo(2118,257),ctx.lineTo(2167,491),ctx.lineTo(-1800,3e3),ctx.lineTo(-2050,3e3),ctx.fill(),c[2].query(),c[3].query(),t.isUp?e.isOn=!0:e.isOn=!1,ctx.fillStyle="rgba(0,0,0,0.6)",ctx.fillRect(2013,-791,600,75),ctx.fillRect(1766,-1091,250,310),ctx.beginPath(),ctx.moveTo(1816,-781),ctx.lineTo(1816,32),ctx.lineTo(1966,84),ctx.lineTo(1966,-781),ctx.fill(),ctx.fillRect(4473,-2912,50,1e3),ctx.fillRect(5673,-2712,50,800),ctx.fillStyle="rgba(0,0,0,0.2)",ctx.fillRect(4523,-2512,350,75),ctx.fillRect(5273,-2212,400,75),player.position.x>level.exit.x&&player.position.x<level.exit.x+100&&player.position.y>level.exit.y-150&&player.position.y<level.exit.y-0&&player.velocity.y<.15?V+=3:V>0&&(V-=3),V>80&&G(),level.exit.drawAndCheck(),addEventListener("keydown",function(e){"u"==e.key&&G()}),p.query(),r.query(),h.query(),d.query(),w.query(),ctx.fillStyle=`hsla(160, 100%, 26%,${.5+.07*Math.random()})`,ctx.fillRect(100*Math.random()-1800,10+400*Math.random(),3900,5),ctx.fillRect(-1800,10+400*Math.random(),4400,5),ctx.fillRect(2400+200*Math.random(),-100*Math.random()-2e3,5,2e3),ctx.fillRect(6100+100*Math.random(),-100*Math.random()-1900,5,1050),ctx.fillRect(6400+100*Math.random(),-100*Math.random()-1900,5,1050),ctx.fillRect(200*Math.random()-2e3,100*Math.random(),5,2e3),ctx.fillRect(7200+100*Math.random(),-800-50*Math.random(),5,2032),level.enter.draw(),t.query(),t.draw(),a.query(),o.query(),a.isOn?(s.isClosing=!1,n.isClosing=!1,0==k&&(spawn.randomSmallMob(6128,822.6),spawn.randomSmallMob(6854.8,560.2),spawn.randomSmallMob(8320.7,-3402.4),spawn.randomMob(6629,711.3,.8),spawn.randomMob(8199.2,-2545.5,.8),spawn.randomMob(8067.7,-2957.2,.8),spawn.randomMob(5149.6,-1444.1,.8),k=1)):(s.isClosing=!0,n.isClosing=!0),s.openClose(),n.openClose()},level.customTopLayer=()=>{s.draw(),n.draw(),spawn.mapRect(6250,200,150,12),e.opticalQuery(),z(m.pos.x,m.pos.y)&&Matter.Body.setVelocity(player,{x:player.velocity.x+H(m.pos.x,m.pos.y),y:player.velocity.y+$(m.pos.x,m.pos.y)});for(let e=0,t=body.length;e<t;++e){z(body[e].position.x,body[e].position.y)&&(0==$(body[e].position.x,body[e].position.y)?(body[e].force.x+=H(body[e].position.x,body[e].position.y)/300,body[e].force.y+=$(body[e].position.x,body[e].position.y)/1e3-.001):(body[e].force.x+=H(body[e].position.x,body[e].position.y)/300,body[e].force.y+=$(body[e].position.x,body[e].position.y)/1e3));for(let e=0,t=powerUp.length;e<t;++e)z(powerUp[e].position.x,powerUp[e].position.y-50)&&(powerUp[e].force.x+=H(powerUp[e].position.x,powerUp[e].position.y)/800,powerUp[e].force.y+=$(powerUp[e].position.x,powerUp[e].position.y)/800,powerUp[e].position.x-=.1)}for(let e=0,t=mob.length;e<t;++e)z(mob[e].position.x,mob[e].position.y)&&(mob[e].force.x+=H(mob[e].position.x,mob[e].position.y)/2e3,mob[e].force.y+=$(mob[e].position.x,mob[e].position.y)/2e3);for(let e=0,t=bullet.length;e<t;++e)z(bullet[e].position.x,bullet[e].position.y)&&(0!=b.activeGun&&1!=b.activeGun&&2!=b.activeGun&&4!=b.activeGun&&7!=b.activeGun||(bullet[e].velocity.x+=100*H(bullet[e].position.x,bullet[e].position.y),bullet[e].velocity.y+=100*$(bullet[e].position.x,bullet[e].position.y)));l.query(),i.query(),c[0].draw(),c[1].draw(),c[2].draw(),c[3].draw()},spawn.mapRect(50,-10,250,20),spawn.mapRect(4800,-1700,150,12),spawn.mapRect(-100,0,1e3,100),spawn.mapRect(-1800,400,4400,1300),spawn.mapRect(2600,-2e3,3500,300),spawn.mapRect(2600,-2e3,500,800),spawn.mapRect(2955,-1779,800,300),spawn.mapRect(2600,-800,2300,2500),spawn.mapRect(-460,100,1570,400),spawn.mapVertex(965,67,"0 -100   220 0   0 0"),spawn.mapVertex(-185,67,"0 -100   -420 0   0 0"),spawn.mapVertex(1210,365,"0 -400   300 0   0 0"),spawn.mapRect(257.5,-358.5,50,360),spawn.mapRect(-83,-358.5,350,50),spawn.mapRect(1275,0,450,75),spawn.mapRect(2027,-388,600,75),spawn.mapRect(1726,-791,330,19),spawn.mapRect(1696,-772,390,19),spawn.mapRect(1666,-753,450,19),spawn.mapRect(1636,-734,510,19),spawn.mapRect(1666,-1091,450,75),spawn.mapRect(4873,-2512,800,75),spawn.mapRect(4473,-2212,800,75),spawn.mapRect(4473,-2912,50,800),spawn.mapRect(5673,-2712,50,575),spawn.mapRect(6671.5,-2401.4,500,50),spawn.mapRect(6105.1,-2354.1,400,50),spawn.mapRect(4473,-2952,8,75),spawn.mapRect(4493,-3032,15,150),spawn.mapRect(4513,-2982,7,75),spawn.mapRect(5673,-2742,12,50),spawn.mapRect(5703,-2772,8,100),spawn.mapRect(7473,-3412,50,800),spawn.mapRect(7473,-2312,50,500),spawn.mapRect(8673,-3212,50,1075),spawn.mapRect(7523,-2313,800,75),spawn.mapRect(7523,-2763,800,75),spawn.mapRect(7523,-3213,800,75),spawn.mapRect(8725,-2340,400,50),spawn.mapRect(8925,-2640,200,50),spawn.mapRect(8725,-2940,200,50),spawn.mapRect(8323,-2363,50,50),spawn.mapRect(8373,-2413,50,50),spawn.mapRect(8423,-2463,50,50),spawn.mapRect(8473,-2513,250,50),spawn.mapRect(8523,-3013,50,50),spawn.mapRect(8473,-3063,50,50),spawn.mapRect(8423,-3113,50,50),spawn.mapRect(4485,-1243,600,50),spawn.mapRect(3967,-1056,400,50),spawn.mapRect(5453,-1150,50,300),spawn.mapRect(5453,-1700,50,300),spawn.mapRect(6500,-2e3,3100,800),spawn.mapRect(7500,-2e3,3300,3700),spawn.mapRect(4900,-800,2300,1e3),spawn.mapRect(4354,1230,4e3,470),spawn.mapRect(5388,863,100,500),spawn.mapRect(5388,63,100,500),spawn.mapRect(5834,549,500,80),spawn.mapRect(6756,897,400,80),spawn.mapRect(6250,200,150,12),spawn.mapRect(9196,-11492,500,100),spawn.mapRect(9196,-11492,500,100),spawn.mapRect(11500,-2e3,1900,500),spawn.mapRect(10800,-900,800,2600),spawn.mapRect(11600,-340,1800,2600),spawn.mapRect(13400,-2e3,1800,3600),spawn.mapRect(10800,-2500,200,100),spawn.mapVertex(11400,-2233,"0 10  900 510  800 510  750 510  0 110"),spawn.mapVertex(10100,-2e3,"0 0  0 -250  400 0"),spawn.mapRect(12945,-741.9,600,50),spawn.mapRect(12945,-741.9,50,250),spawn.mapRect(11600,-850,50,550),spawn.mapRect(11650,-800,50,500),spawn.mapRect(11700,-750,50,450),spawn.mapRect(11750,-700,50,400),spawn.mapRect(11800,-650,50,350),spawn.mapRect(11850,-600,50,300),spawn.mapRect(11900,-550,50,250),spawn.mapRect(11950,-500,50,200),spawn.mapRect(12e3,-450,50,150),spawn.mapRect(12050,-400,50,100),spawn.mapRect(12100,-350,50,50),Math.random()<.15?spawn.tetherBoss(6480,992,{x:6480,y:210}):spawn.randomLevelBoss(5977,992),spawn.randomMob(1999.2,-487.4,.8),spawn.randomMob(2080,-1206.4,.8),spawn.randomSmallMob(3287.5,-1021.1),spawn.randomSmallMob(5018.1,-1483.5),spawn.randomGroup(6776.2,-3054.5,.4),spawn.randomGroup(4217.4,-1403.6,.4),spawn.randomSmallMob(5089,-2284.1),spawn.randomSmallMob(6988.3,-2580.2),spawn.randomSmallMob(7975,-2920.3),spawn.randomMob(5132,-2646.2,.8),spawn.randomMob(6365.2,-2459.2,.8),spawn.randomMob(8129,-2406.7,.8),spawn.randomMob(8129,-2406.7,.8),spawn.randomGroup(2225.3,-1543.2,.4),spawn.debris(4426.9,-1433.8,700,1),spawn.debris(4651.2,-2597.3,700,1),spawn.debris(9920.9,-2378.3,700,2),spawn.debris(8298.5,-2883.8,700,1),spawn.debris(6779.2,-2662.9,700,1),spawn.debris(6371.5,442.3,700,2),spawn.debris(1873.5,-1297.5,700,1),spawn.bodyRect(6457.9,-2541.5,300,25,.9),spawn.bodyRect(4473,-2110,50,110,1,1),spawn.bodyRect(6370.1,-2408.4,50,50,.9),spawn.bodyRect(4509,-1425.7,30+45*Math.random(),30+45*Math.random(),.9),spawn.bodyRect(7859.6,-2883.6,30+45*Math.random(),30+45*Math.random(),.9),spawn.bodyRect(5803.7,1125.5,30+45*Math.random(),30+45*Math.random(),.9),spawn.bodyRect(5582.1,1061.7,110,70,.9),spawn.bodyRect(4900+400*Math.random(),-2600,70,70,1),powerUps.addResearchToLevel()},dungeon(){const e=level.door(2650,-825,50,250,250,10),t=level.elevator(-11050,-650,450,75,-2975,.003,{up:.1,down:.1}),a=level.hazard(-4775,-350,1975,175),o=level.boost(137.5,-600,75,25);let s=Matter.Bodies.rectangle(-4375,-1e3,100,100,{density:.05,isNotHoldable:!0,restitution:1.05,isStatic:!1},!0,[!0],0),n=Matter.Bodies.rectangle(-4325,-1050,50,50,{density:.05,isNotHoldable:!0,isStatic:!1}),l=Matter.Bodies.rectangle(-4425,-1050,50,50,{density:.05,isNotHoldable:!0,isStatic:!1}),i=Matter.Bodies.rectangle(-4425,-950,50,50,{density:.05,isNotHoldable:!0,isStatic:!1}),c=Matter.Bodies.rectangle(-4325,-950,50,50,{density:.05,isNotHoldable:!0,isStatic:!1});dong=Matter.Body.create({parts:[s,n,l,i,c]}),body[body.length]=s,body[body.length]=n,body[body.length]=l,body[body.length]=i,body[body.length]=c,Matter.Composite.add(engine.world,dong),Matter.Composite.add(engine.world,Constraint.create({pointA:{x:-3825,y:-975},bodyB:dong,stiffness:.2,damping:.1})),composite[composite.length]=dong,setTimeout(function(){dong.collisionFilter.category=cat.body,dong.collisionFilter.mask=cat.body|cat.player|cat.bullet|cat.mobBullet|cat.mob},1e3),level.custom=()=>{if(ctx.save(),ctx.beginPath(),ctx.fillStyle="#80808077",ctx.strokeStyle="#80808022",ctx.fillRect(225,-1025,2400,450),ctx.fillRect(-2950,-1025,3100,450),ctx.fillRect(-7050,-1025,2400,450),ctx.fillRect(-10575,-3975,4525,1025),ctx.fillRect(-4650,-1700,1700,1100),ctx.fillRect(-11150,-3575,575,3050),ctx.fillRect(-11900,-1e3,750,475),ctx.fill(),ctx.stroke(),ctx.restore(),ctx.save(),ctx.beginPath(),ctx.fillStyle="#d8dadf",ctx.strokeStyle="#d8dadf",ctx.moveTo(-2950,-600),ctx.lineTo(-3730,-1725),ctx.lineTo(-3730,-600),ctx.moveTo(-4650,-600),ctx.lineTo(-3925,-1725),ctx.lineTo(-3925,-575),ctx.moveTo(-10575,-3425),ctx.lineTo(-10100,-2975),ctx.lineTo(-10575,-2975),ctx.moveTo(-7975,-2975),ctx.lineTo(-7625,-3800),ctx.lineTo(-7350,-2950),ctx.moveTo(-6750,-2975),ctx.lineTo(-7075,-3800),ctx.lineTo(-7350,-2950),ctx.moveTo(-11900,-950),ctx.lineTo(-11900,-550),ctx.lineTo(-11500,-550),ctx.fillRect(-3925,-1675,200,1075),ctx.fillRect(-7625,-3800,550,875),ctx.clearRect(-10600,-4e3,525,475),ctx.clearRect(-10100,-4e3,500,300),ctx.clearRect(-9625,-4e3,500,175),ctx.fillRect(-11125,-3600,550,50),ctx.fillRect(-10600,-3400,50,425),ctx.fillRect(-11925,-925,45,375),ctx.fillRect(-3950,-1675,75,1100),ctx.fillRect(-3925,-625,950,50),ctx.fillRect(-4650,-600,1700,375),ctx.fillRect(-14550,-2400,2650,2050),ctx.moveTo(-11150,-3575),ctx.lineTo(-10575,-2150),ctx.lineTo(-10575,-3575),ctx.stroke(),ctx.fill(),ctx.restore(),o.query(),a.query(),Matter.Query.collides(dong,[player]).length>0&&(!m.isCloak||!tech.isIntangible)&&m.immuneCycle<m.cycle){m.immuneCycle=m.cycle+m.collisionImmuneCycles;const e=.05*Math.min(spawn.dmgToPlayerByLevelsCleared(),simulation.difficulty);m.takeDamage(e),simulation.drawList.push({x:dong.position.x,y:dong.position.y,radius:200*Math.sqrt(e),color:simulation.mobDmgColor,time:simulation.drawTime})}for(let e=0;e<mob.length;e++)if(Matter.Query.collides(dong,[mob[e]]).length>0){const t=1;mob[e].damage(t,!0),simulation.drawList.push({x:dong.position.x,y:dong.position.y,radius:50*Math.sqrt(t),color:simulation.mobDmgColor,time:simulation.drawTime});break}level.exit.drawAndCheck(),ctx.beginPath(),ctx.fillStyle="#68686822",ctx.fillRect(-25,-2175,100,200),ctx.fill(),ctx.setLineDash([125*Math.random(),125*Math.random()]),ctx.moveTo(-3825,-975),ctx.lineTo(dong.position.x,dong.position.y),ctx.stroke(),ctx.setLineDash([]),simulation.drawList.push({x:dong.position.x,y:dong.position.y,radius:10,color:color.block,time:20}),ctx.beginPath(),ctx.fillStyle=`rgba(68,68,68, ${3*Math.sin(.015*simulation.cycle)})`,ctx.fillRect(-3e3,-2175,175,25),ctx.fillRect(-2850,-2300,25,150),ctx.fillRect(-3e3,-2300,175,25),ctx.fillRect(-3e3,-2425,25,150),ctx.fillRect(-3e3,-2425,175,25),ctx.fill(),ctx.fillStyle=`rgba(68,68,68, ${5*Math.sin(.015*simulation.cycle)})`,ctx.fillRect(-2725,-2425,25,275),ctx.fillRect(-2725,-2425,175,25),ctx.fillRect(-2575,-2425,25,275),ctx.fillRect(-2725,-2300,175,25),ctx.fill(),ctx.fillStyle=`rgba(68,68,68, ${7*Math.sin(.015*simulation.cycle)})`,ctx.fillRect(-2450,-2425,25,275),ctx.fillRect(-2450,-2175,175,25),ctx.fill(),ctx.stroke(),ctx.fillStyle="#00FFFF22",ctx.fillRect(-7650,-3075,600,2475),ctx.fill(),ctx.fillStyle="#00FFFF66",ctx.fillRect(-7650+Math.floor(600*Math.random()),-3075,5,2475),ctx.fillRect(-7650+Math.floor(600*Math.random()),-3075,5,2475),ctx.fillStyle="rgba(68, 68, 68)",ctx.fillRect(-7675,-3075,50,125),ctx.fillRect(-7075,-3075,50,125),ctx.fillRect(-7725,-3025,75,75),ctx.fillRect(-7050,-3025,75,75),ctx.fill();for(let e=0,t=body.length;e<t;++e)body[e].position.x>-7625&&body[e].position.x<-7075&&body[e].position.y>-3075&&body[e].position.y<-625&&(body[e].force.y-=simulation.g*body[e].mass+.012);for(let e=0,t=bullet.length;e<t;++e)bullet[e].position.x>-7625&&bullet[e].position.x<-7075&&bullet[e].position.y>-3075&&bullet[e].position.y<-625&&(bullet[e].force.y-=simulation.g*bullet[e].mass);for(let e=0,t=powerUp.length;e<t;++e)powerUp[e].position.x>-7625&&powerUp[e].position.x<-7075&&powerUp[e].position.y>-3075&&powerUp[e].position.y<-625&&(powerUp[e].force.y-=simulation.g*powerUp[e].mass+.12);for(let e=0,t=mob.length;e<t;++e)mob[e].position.x>-7625&&mob[e].position.x<-7075&&mob[e].position.y>-3075&&mob[e].position.y<-625&&(mob[e].force.y-=simulation.g*mob[e].mass+.0012);m.pos.x>-7625&&m.pos.x<-7075&&m.pos.y>-3075&&m.pos.y<-625&&(player.force.y-=m.mass*simulation.g+(input.down?0:.024)),t.move()},level.setPosToSpawn(30,-2e3),level.exit.x=2775,level.exit.y=-650,level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom+800),document.body.style.backgroundColor="#d8dadf",spawn.mapRect(-225,-1950,350,75),spawn.mapRect(225,-1950,50,75),spawn.mapRect(-250,-2025,50,150),spawn.mapRect(250,-2025,50,150),spawn.mapRect(-250,-2250,50,125),spawn.mapRect(-225,-2325,500,100),spawn.mapRect(250,-2250,50,125),spawn.mapRect(-100,-2400,250,100),spawn.mapRect(-25,-2475,100,100),spawn.mapRect(125,-2350,50,50),spawn.mapRect(-125,-2350,50,50),spawn.mapRect(-50,-2425,50,50),spawn.mapRect(50,-2425,50,50),spawn.mapRect(-250,-2350,50,50),spawn.mapRect(250,-2350,50,50),spawn.mapRect(-75,-1975,200,50),spawn.mapRect(-50,-2e3,150,50),spawn.mapRect(100,-1950,50,75),spawn.mapRect(-75,-2250,200,50),spawn.mapRect(-50,-2225,150,50),spawn.mapRect(-2950,-1900,3100,900),spawn.mapRect(225,-1900,2875,900),spawn.mapRect(-2950,-600,6050,450),spawn.mapRect(-3050,-500,200,350),spawn.mapRect(-3150,-400,200,250),spawn.mapRect(-3250,-300,200,150),spawn.mapRect(2950,-1050,150,500),spawn.mapRect(-4675,-1900,1825,200),spawn.mapRect(-5325,-1900,675,900),spawn.mapRect(-5325,-250,2100,100),spawn.mapRect(-5325,-600,675,450),spawn.mapRect(-4700,-500,150,350),spawn.mapRect(-4650,-400,200,250),spawn.mapRect(-4550,-300,200,150),spawn.mapRect(-3875,-1025,100,100),spawn.mapRect(-3800,-1050,50,50),spawn.mapRect(-3900,-1050,50,50),spawn.mapRect(-3800,-950,50,50),spawn.mapRect(-3900,-950,50,50),spawn.mapRect(-6925,-1175,1700,175),spawn.mapRect(-6925,-600,1725,175),spawn.mapRect(-7700,-600,800,425),spawn.mapRect(-7800,-2950,175,2775),spawn.mapRect(-7075,-2950,175,1950),spawn.mapRect(-9150,-2975,1525,175),spawn.mapRect(-7075,-2975,1150,175),spawn.mapRect(-6100,-3900,175,1100),spawn.mapRect(-9150,-3975,3225,175),spawn.mapRect(-9175,-3850,75,75),spawn.mapRect(-9625,-3825,500,150),spawn.mapRect(-9650,-3725,75,75),spawn.mapRect(-10100,-3700,500,150),spawn.mapRect(-10100,-2975,975,175),spawn.mapRect(-10125,-3600,75,75),spawn.mapRect(-10575,-3575,500,150),spawn.mapRect(-10575,-2975,500,175),spawn.mapRect(-11325,-2975,250,175),spawn.mapRect(-11325,-3575,175,775),spawn.mapRect(-11225,-2975,150,2e3),spawn.mapRect(-10575,-2975,150,2500),spawn.mapRect(-11650,-550,1225,150),spawn.mapRect(-11650,-1100,575,150),spawn.mapRect(-14675,-2525,2925,150),spawn.mapRect(-11900,-2525,150,1575),spawn.mapRect(-11850,-1100,250,150),spawn.mapRect(-11875,-550,275,150),spawn.mapRect(-11900,-550,150,350),spawn.mapRect(-14675,-2525,150,2300),spawn.mapRect(-14675,-375,2925,175),spawn.mapRect(2725,-625,250,50),spawn.mapRect(2625,-1025,100,225),spawn.mapRect(2700,-1025,300,125),spawn.mapRect(2625,-612.5,125,50),spawn.mapRect(-3950,-1725,250,50),spawn.mapRect(-7650,-3825,600,50),spawn.mapRect(-13900,-2400,200,50),spawn.mapVertex(-11957,-430,"-175 175 0 175 0 0"),spawn.mapVertex(-14470,-430,"175 175 0 175 0 0"),spawn.mapVertex(-11957,-2319,"-175 -175 0 -175 0 0"),spawn.mapVertex(-14470,-2319,"0 0 0 -175 175 -175");const p=function(){const e=-13800+Math.floor(100*Math.random()-100*Math.random());mobs.spawn(e,-2375,0,2,"transparent");let t=mob[mob.length-1],a=mob[0];t.collisionFilter.category=cat.body,t.collisionFilter.mask=cat.map,t.g=3e-4,t.restitution=0,t.stroke="transparent",t.freeOfWires=!1,t.frictionAir=.01,t.isDropPowerUp=!1,t.showHealthBar=!1,t.isBadTarget=!0,t.isUnblockable=!0;const o=e,s=Math.abs(10+Math.floor(10*Math.random()-10*Math.random())),n=Math.floor(30*Math.random()-30*Math.random()),l=Math.floor(10*Math.random()-10*Math.random());t.do=function(){this.freeOfWires?this.gravity():(a.position.y>-1600&&(this.freeOfWires=!0,this.force.y-=-6e-4,this.force.x+=Math.random()*a.velocity.x/1e4,this.fill="#111"),Matter.Body.setPosition(this,{x:a.position.x+n,y:a.position.y+l})),ctx.beginPath(),ctx.moveTo(o,-2375),ctx.quadraticCurveTo(o,-100,this.position.x,this.position.y),ctx.lineWidth=s,ctx.lineCap="butt",ctx.strokeStyle="#111",ctx.stroke(),ctx.lineCap="round"}},r=function(e,t,a=11*tech.bulletSize,o=70){mobs.spawn(e,t,o,a,"rgba(0,0,0)");let s=mob[mob.length-1];s.stroke="transparent",s.onHit=function(){simulation.drawList.push({x:this.position.x,y:this.position.y,radius:20,color:simulation.mobDmgColor,time:simulation.drawTime})},Matter.Body.setDensity(s,1e-5),s.timeLeft=500,s.friction=0,s.restitution=1,s.leaveBody=!1,s.isDropPowerUp=!1,s.isBadTarget=!0,s.isMobBullet=!0,s.showHealthBar=!1,s.collisionFilter.category=cat.mobBullet,s.collisionFilter.mask=cat.bullet|cat.player|cat.map|cat.body;s.do=function(){this.timeLimit(),this.alwaysSeePlayer(),this.force.y+=.0012*this.mass}},h=function(e,t,a=9,o=3){mobs.spawn(e,t,o,a,"rgba(0,0,0)");let s=mob[mob.length-1];s.stroke="transparent",s.vertices=Matter.Vertices.rotate(s.vertices,Math.PI,s.position),s.onHit=function(){simulation.drawList.push({x:this.position.x,y:this.position.y,radius:20,color:simulation.mobDmgColor,time:simulation.drawTime})},Matter.Body.setDensity(s,4e-5),s.timeLeft=220,s.frictionAir=-.01,s.restitution=-1,s.leaveBody=!1,s.isDropPowerUp=!1,s.isBadTarget=!0,s.isMobBullet=!0,s.showHealthBar=!1,s.collisionFilter.category=cat.mobBullet,s.collisionFilter.mask=null;let n=0;s.do=function(){this.timeLimit(),this.alwaysSeePlayer();const e=()=>{const e=this.radius+10*this.radius;this.vertices[1].x=this.position.x+Math.cos(this.angle)*e,this.vertices[1].y=this.position.y+Math.sin(this.angle)*e;const t=Math.atan2(player.position.y-this.position.y,player.position.x-this.position.x);Matter.Body.setAngle(this,t)},t=Vector.mult(Vector.normalise(Vector.sub(this.vertices[1],this.position)),1e3*a);if(this.vertices[1].x=this.position.x+t.x/100,this.vertices[1].y=this.position.y+t.y/100,0==n&&(e(),n++),Matter.Query.collides(this,map).length>0||Matter.Query.collides(this,body).length>0){const e=.69;Matter.Body.setVelocity(this,{x:this.velocity.x*e,y:this.velocity.y*e}),simulation.drawList.push({x:this.position.x,y:this.position.y,radius:10,color:"#000000",time:simulation.drawTime}),0==this.velocity.x&&0==this.velocity.y&&this.death(),this.frictionAir+=1e-4,Matter.Body.setAngularVelocity(this,0)}if(Matter.Query.collides(this,[player]).length>0&&(!m.isCloak||!tech.isIntangible)&&m.immuneCycle<m.cycle){m.immuneCycle=m.cycle+m.collisionImmuneCycles;const e=.013*spawn.dmgToPlayerByLevelsCleared();m.takeDamage(e),simulation.drawList.push({x:this.position.x,y:this.position.y,radius:200*Math.sqrt(e),color:"#000000",time:simulation.drawTime})}}},d=function(e,t,a,o,s){mobs.spawn(e.position.x,e.position.y,8,12,"rgba(0,0,0, 1)");let n=mob[mob.length-1];n.stroke="transparent",Matter.Body.setDensity(n,.01),n.leaveBody=!1,n.isDropPowerUp=!1,n.isBadTarget=!0,n.showHealthBar=!1,n.isOrbital=!0,n.isShielded=!0,n.collisionFilter.category=cat.mobBullet,n.collisionFilter.mask=cat.bullet,n.do=function(){if(!e||!e.alive)return void this.death();const n=simulation.cycle*o+a,l={x:Math.cos(n),y:Math.sin(n)};if(Matter.Body.setPosition(this,Vector.add(Vector.add(e.position,e.velocity),Vector.mult(l,t+s))),Matter.Query.collides(this,[player]).length>0&&(!m.isCloak||!tech.isIntangible)&&m.immuneCycle<m.cycle){m.immuneCycle=m.cycle+m.collisionImmuneCycles;const e=.013*spawn.dmgToPlayerByLevelsCleared();m.takeDamage(e),simulation.drawList.push({x:this.position.x,y:this.position.y,radius:200*Math.sqrt(e),color:simulation.mobDmgColor,time:simulation.drawTime})}}},w=function(e,t,a=30){mobs.spawn(e,t,8,a,"#00000000");let o=mob[mob.length-1];o.accelMag=3e-4,o.stroke="transparent",o.searchTarget=map[Math.floor(Math.random()*(map.length-1))].position,o.frictionStatic=0,o.friction=0,o.seeAtDistance2=2e7,o.vertices=Matter.Vertices.rotate(o.vertices,Math.PI,o.position),Matter.Body.rotate(o,Math.random()*Math.PI*2),o.showHealthBar=!1,Matter.Body.setDensity(o,.01),o.fireDir={x:0,y:0},o.seePlayerFreq=0,o.repulsionRange=4e5+a*a,o.collisionFilter.mask=cat.bullet|cat.player|cat.body|cat.map|cat.mob|cat.mobBullet,o.do=function(){if(this.seePlayerCheck(),this.attraction(),this.repulsion(),this.search(),this.seePlayer.recall){const e=.3*this.radius,t=2*this.radius,a=this.position.x-t/2,o=this.position.y-.7*t;ctx.fillStyle="rgba(100, 100, 100, 0.3)",ctx.fillRect(a,o,t,e),ctx.fillStyle="rgba(0,255,255,0.7)",ctx.fillRect(a,o,t*this.health,e)}if(this.health<1&&(this.health+=5e-4),ctx.save(),ctx.translate(this.position.x,this.position.y),ctx.rotate(Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x)),this.seePlayer.recall>0&&this.distanceToPlayer2()>this.repulsionRange)(e=ctx.createLinearGradient(0,0,-150,0)).addColorStop(0,"rgba(150, 200, 255, 0.7)"),e.addColorStop(1,"rgba(150, 200, 255, 0)"),ctx.fillStyle=e,ctx.beginPath(),ctx.moveTo(-18,-25),ctx.lineTo(-18,25),ctx.lineTo(-50-100*Math.random(),0),ctx.fill();else if(this.distanceToPlayer2()<this.repulsionRange){var e;(e=ctx.createLinearGradient(0,0,80,0)).addColorStop(0,"rgba(150, 200, 255, 0.7)"),e.addColorStop(1,"rgba(150, 200, 255, 0)"),ctx.fillStyle=e,ctx.beginPath(),ctx.moveTo(20,-16),ctx.lineTo(20,16),ctx.lineTo(35+43*Math.random(),0),ctx.fill()}if(ctx.restore(),ctx.save(),ctx.translate(this.position.x,this.position.y),ctx.rotate(Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x)),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.arc(15,0,4,0,2*Math.PI),ctx.strokeStyle="#333",ctx.lineWidth=2,ctx.stroke(),ctx.beginPath(),ctx.arc(15,0,3.5,0,2*Math.PI),ctx.fillStyle=`rgba(255, 0, 0, ${this.health*this.health})`,ctx.fill(),ctx.restore(),this.seePlayer.recall&&!(simulation.cycle%30)){this.seePlayer.recall-=10,this.fireDir=Vector.normalise(Vector.sub(this.seePlayer.position,this.position)),spawn.sniperBullet(this.position.x,this.position.y,7+Math.ceil(this.radius/15),5);const e=10+8*simulation.accelScale;Matter.Body.setVelocity(mob[mob.length-1],{x:this.velocity.x+this.fireDir.x*e,y:this.velocity.y+this.fireDir.y*e})}}},y=function(e,t,a=30){mobs.spawn(e,t,8,a,"#00000000");let o=mob[mob.length-1];o.accelMag=3e-4,o.stroke="transparent",o.frictionStatic=0,o.friction=0,o.seeAtDistance2=2e7,o.vertices=Matter.Vertices.rotate(o.vertices,Math.PI,o.position),Matter.Body.rotate(o,Math.random()*Math.PI*2),o.showHealthBar=!1,Matter.Body.setDensity(o,.01),o.seePlayerFreq=0,o.searchTarget=map[Math.floor(Math.random()*(map.length-1))].position,o.swordDamage=.025*spawn.dmgToPlayerByLevelsCleared(),o.collisionFilter.mask=cat.bullet|cat.player|cat.body|cat.map|cat.mob|cat.mobBullet,o.repulsionRange=5e4,o.do=function(){if(this.repulsion(),this.search(),this.seePlayer.recall){const e=.3*this.radius,t=2*this.radius,a=this.position.x-t/2,o=this.position.y-.7*t;ctx.fillStyle="rgba(100, 100, 100, 0.3)",ctx.fillRect(a,o,t,e),ctx.fillStyle="rgba(0,255,255,0.7)",ctx.fillRect(a,o,t*this.health,e)}if(this.health<1&&(this.health+=5e-4),this.seePlayer.recall&&this.laserSword(this.position,Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x),500*Math.random()),ctx.save(),ctx.translate(this.position.x,this.position.y),ctx.rotate(Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x)),this.seePlayer.recall>0&&this.distanceToPlayer2()>this.repulsionRange)(e=ctx.createLinearGradient(0,0,-150,0)).addColorStop(0,"rgba(150, 200, 255, 0.7)"),e.addColorStop(1,"rgba(150, 200, 255, 0)"),ctx.fillStyle=e,ctx.beginPath(),ctx.moveTo(-18,-25),ctx.lineTo(-18,25),ctx.lineTo(-50-100*Math.random(),0),ctx.fill();else if(this.distanceToPlayer2()<this.repulsionRange){var e;(e=ctx.createLinearGradient(0,0,80,0)).addColorStop(0,"rgba(150, 200, 255, 0.7)"),e.addColorStop(1,"rgba(150, 200, 255, 0)"),ctx.fillStyle=e,ctx.beginPath(),ctx.moveTo(20,-16),ctx.lineTo(20,16),ctx.lineTo(35+43*Math.random(),0),ctx.fill()}ctx.restore(),ctx.save(),ctx.translate(this.position.x,this.position.y),ctx.rotate(Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x)),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.arc(15,0,4,0,2*Math.PI),ctx.strokeStyle="#333",ctx.lineWidth=2,ctx.stroke(),ctx.beginPath(),ctx.arc(15,0,3.5,0,2*Math.PI),ctx.fillStyle=`rgba(255, 0, 0, ${this.health*this.health})`,ctx.fill(),ctx.restore(),this.seePlayerCheck(),this.attraction()},o.laserSword=function(e,t,a){const o=Vector.sub(this.seePlayer.position,this.position);Vector.normalise(o),this.position.x,Math.cos(this.angle),this.position.y,Math.sin(this.angle),this.position.x,Math.sqrt(Math.random()),Math.cos(this.angle),this.position.y,Math.sqrt(Math.random()),Math.sin(this.angle);this.seePlayer.recall-=3;const s=function(e,t,a){for(let o=0;o<a.length;++o){let s=a[o].vertices;const n=s.length-1;for(let l=0;l<n;l++)if(results=simulation.checkLineIntersection(e,t,s[l],s[l+1]),results.onLine1&&results.onLine2){const t=e.x-results.x,n=e.y-results.y,i=t*t+n*n;i<best.dist2&&(!a[o].mob||a[o].alive)&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[l],v2:s[l+1]})}if(results=simulation.checkLineIntersection(e,t,s[0],s[n]),results.onLine1&&results.onLine2){const t=e.x-results.x,l=e.y-results.y,i=t*t+l*l;i<best.dist2&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[0],v2:s[n]})}}};best={x:null,y:null,dist2:1/0,who:null,v1:null,v2:null};const n={x:e.x+a*Math.cos(t),y:e.y+a*Math.sin(t)};s(e,n,map),m.isCloak||s(e,n,[player]),best.who&&best.who===player&&m.immuneCycle<m.cycle&&(m.immuneCycle=m.cycle+m.collisionImmuneCycles,m.takeDamage(this.swordDamage),simulation.drawList.push({x:best.x,y:best.y,radius:1500*this.swordDamage,color:"rgba(80,0,255,0.5)",time:20})),best.dist2===1/0&&(best=n),ctx.beginPath(),ctx.moveTo(e.x,e.y),ctx.lineTo(best.x,best.y),ctx.strokeStyle="#50f",ctx.lineWidth=1.5,ctx.setLineDash([70+300*Math.random(),55*Math.random()]),ctx.stroke(),ctx.setLineDash([]),ctx.lineWidth=20,ctx.strokeStyle="rgba(80,0,255,0.07)",ctx.stroke();const l=Math.cos(Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x)),i=Math.sin(Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x));let c=this.position.x+40*l,p=this.position.y+40*i;ctx.beginPath(),ctx.moveTo(c,p);for(let e=0;e<6;e++)c+=40*(l+1.5*(Math.random()-.5)),p+=40*(i+1.5*(Math.random()-.5)),ctx.lineTo(c,p);ctx.strokeStyle="#50f",ctx.lineWidth=1.5,ctx.setLineDash([70+300*Math.random(),55*Math.random()]),ctx.stroke(),ctx.setLineDash([])}};if(null==powerUps.pass){let e={pass:!0,activated:!1};Object.assign(powerUps,e)}const x={loadOut:{name:"loadOut",color:"#000000",size:()=>40,effect(){if(m.alive){let e="";tech.isSuperDeterminism||(e+=`<div class='cancel' onclick='powerUps.endDraft("buff",true)'>${tech.isCancelTech&&0===tech.cancelTechCount?"?":"✕"}</div>`),e+="<h3 style = 'color:#fff; text-align:left; margin: 0px;'>Blessing Of Sal</h3>",e+='<div class="choose-grid-module" onclick="powerUps.loadOut.choose(1)"><div class="grid-title"><div class="circle-grid tech" style="background-image: linear-gradient(lightyellow, yellow);"></div> &nbsp; Speed Boost</div>Increase speed by 5%</div>',e+='<div class="choose-grid-module" onclick="powerUps.loadOut.choose(2)"><div class="grid-title"><div class="circle-grid tech" style="background-image: linear-gradient(gray, lightgray);"></div> &nbsp; Defense Boost</div>Reduce damage by 5%</div>',e+='<div class="choose-grid-module" onclick="powerUps.loadOut.choose(3)"><div class="grid-title"><div class="circle-grid tech" style="background-image: linear-gradient(red, orange);"></div> &nbsp; Damage Boost</div>Increase damage by 10%</div>',1==powerUps.pass&&(e+=`<div class="choose-grid-module" onclick="powerUps.loadOut.choose(4)"><div class="grid-title"><div class="circle-grid tech" style="background-image: radial-gradient(black, gray);"></div> &nbsp; Blade of Sal</div>Press Shift to summon the <b style="color: ${m.eyeFillColor};">Mythical</b> <em style="color: lightblue; text-shadow: ${m.eyeFillColor} 0px 0 5px;">Las Slayer</em><div>Drains <strong class='color-f'>Energy</strong></div></div>`),document.getElementById("choose-grid").innerHTML=e,powerUps.showDraft()}},choose(e){1==e?(m.squirrelFx+=.25,m.squirrelJump+=.1,m.setMovement(),powerUps.endDraft("buff")):2==e||3==e?powerUps.endDraft("buff"):4==e&&(powerUps.pass=!1,addEventListener("keydown",function(e){if("Shift"==e.key&&0==powerUps.activated)!function(){mobs.spawn(player.position.x,player.position.y,5,30,"transparent");let e=mob[mob.length-1];Matter.Body.setDensity(e,1),e.vertices=Matter.Vertices.rotate(e.vertices,Math.PI,e.position),e.collisionFilter.category=cat.bullet,e.collisionFilter.mask=cat.mob|cat.mobBullet,e.isDropPowerUp=!1,e.isShielded=!0,e.showHealthBar=!1,e.isUnblockable=!0,e.leaveBody=!1,e.isBadTarget=!0,e.stroke="transparent",e.isSword=!0;let t=0;e.do=function(){this.health=1/0;for(let e=0;e<mob.length;e++)if(Matter.Query.collides(this,[mob[e]]).length>0&&!mob[e].isSword){const t=.25;mob[e].damage(t,!0),simulation.drawList.push({x:mob[e].position.x,y:mob[e].position.y,radius:50*Math.sqrt(t),color:simulation.mobDmgColor,time:simulation.drawTime});break}Matter.Body.setPosition(this,{x:player.position.x+100*Math.cos(m.angle),y:player.position.y-(input.down?0:30)+100*Math.sin(m.angle)}),Matter.Body.setAngle(this,m.angle+2*Math.PI);const e=()=>{const e=550;this.vertices[2].x=this.position.x+Math.cos(this.angle)*e,this.vertices[2].y=this.position.y+Math.sin(this.angle)*e,this.vertices[4].x=this.position.x+Math.cos(this.angle)*e,this.vertices[4].y=this.position.y+Math.sin(this.angle)*e,this.vertices[0].x=this.position.x+Math.cos(this.angle)*e,this.vertices[0].y=this.position.y+Math.sin(this.angle)*e},a=Vector.mult(Vector.normalise(Vector.sub(this.vertices[2],this.position)),5e3),o=Vector.mult(Vector.normalise(Vector.sub(this.vertices[4],this.position)),25e3),s=Vector.mult(Vector.normalise(Vector.sub(this.vertices[0],this.position)),25e3);this.vertices[2].x=this.position.x+a.x/100,this.vertices[2].y=this.position.y+a.y/100,this.vertices[4].x=this.position.x+o.x/75,this.vertices[4].y=this.position.y+o.y/75,this.vertices[0].x=this.position.x+s.x/75,this.vertices[0].y=this.position.y+s.y/75,0==t&&(e(),t++),ctx.save(),ctx.beginPath();const n=this.vertices;ctx.lineWidth=100,ctx.moveTo(n[0].x,n[0].y);for(let e=1,t=n.length;e<t;++e)ctx.lineTo(n[e].x,n[e].y);ctx.lineTo(n[0].x,n[0].y);const l=ctx.createRadialGradient(this.position.x,this.position.y,15,this.position.x,this.position.y,Math.abs(275*Math.sin(simulation.cycle/50))+15);l.addColorStop(0,m.eyeFillColor),l.addColorStop(.9,"white"),l.addColorStop(1,"darkgray"),ctx.fillStyle=l,ctx.strokeStyle="transparent",ctx.shadowBlur=10,ctx.shadowColor=m.eyeFillColor,ctx.fill(),ctx.stroke(),ctx.restore();const i=Math.cos(m.angle),c=Math.sin(m.angle);let p=this.position.x+10*i,r=this.position.y+10*c;ctx.beginPath(),ctx.moveTo(p,r);for(let e=0;e<6;e++)p+=40*(i+1.5*(Math.random()-.5)),r+=40*(c+1.5*(Math.random()-.5)),ctx.lineTo(p,r);if(ctx.strokeStyle=m.eyeFillColor,ctx.lineWidth=1.5,ctx.setLineDash([70+300*Math.random(),55*Math.random()]),ctx.stroke(),ctx.setLineDash([]),this.alive&&m.energy>0){const e=ctx.createRadialGradient(this.position.x,this.position.y,0,this.position.x,this.position.y,Math.abs(20*Math.cos(simulation.cycle/50)));e.addColorStop(0,m.eyeFillColor),e.addColorStop(.9,"white"),e.addColorStop(1,"gray"),ctx.save(),ctx.beginPath(),ctx.moveTo(this.position.x,this.position.y),ctx.arc(this.position.x,this.position.y,20,0,2*Math.PI),ctx.fillStyle=e,ctx.strokeStyle="transparent",ctx.shadowBlur=10,ctx.shadowColor=m.eyeFillColor,ctx.fill(),ctx.stroke(),ctx.restore(),m.energy-=.002,ctx.save(),ctx.translate(this.vertices[2].x,this.vertices[2].y),ctx.rotate(m.angle+Math.PI/2),ctx.beginPath(),ctx.font="16px Arial",ctx.fillStyle="black",ctx.strokeStyle="black",ctx.fillText("Ω",0,55),ctx.fill(),ctx.stroke(),ctx.restore(),simulation.drawList.push({x:this.position.x+Math.floor(300*Math.random()-300*Math.random()),y:this.position.y+Math.floor(300*Math.random()-300*Math.random()),radius:2,color:m.eyeFillColor,time:simulation.drawTime})}else this.death(),powerUps.activated=!1}}(),powerUps.activated=!0;else if("Shift"==e.key&&1==powerUps.activated)for(let e=0;e<mob.length;e++)mob[e].isSword&&mob[e].death(),powerUps.activated=!1}),powerUps.endDraft("buff"))}}};Object.assign(powerUps,x);!function(e,t,a=30){mobs.spawn(e,t,8,a,"transparent");let o=mob[mob.length-1];o.stroke="transparent";let s="#FFFFFF";o.accelMag=6e-4,o.isBoss=!0,o.restoreBoss=!0,o.frictionStatic=0,o.friction=0,o.seeAtDistance2=2e7,o.vertices=Matter.Vertices.rotate(o.vertices,Math.PI,o.position),Matter.Body.rotate(o,Math.random()*Math.PI*2),o.showHealthBar=!1,Matter.Body.setDensity(o,m.maxHealth/(simulation.difficulty<5?.5:simulation.difficulty/simulation.difficultyMode)),o.seePlayerFreq=0,o.swordDamage=.025*spawn.dmgToPlayerByLevelsCleared(),o.collisionFilter.mask=cat.bullet|cat.player|cat.body|cat.map|cat.mob|cat.mobBullet,o.repulsionRange=5e5,o.isDropPowerUp=!1;let n=0;o.energy=1,o.maxEnergy=1,o.immuneCycle=0,o.cycle=0,o.onDeath=function(){powerUps.spawn(this.position.x,this.position.y,"loadOut")};for(let e=0;e<b.totalBots();e++)d(o,190+130*tech.isOrbitBotUpgrade,n/b.totalBots()*2*Math.PI,.05,Math.floor(100*Math.sin(simulation.cycle/10))),n++;o.do=function(){if(this.cycle++,this.seePlayer.recall){if(0==m.fieldMode&&this.distanceToPlayer2()<2e5&&(Vector.magnitude(Vector.sub(m.pos,this.position))-this.radius<m.fieldRange&&0===Matter.Query.ray(map,m.pos,this.position).length&&this.pushM(),this.drawField()),2==m.fieldMode&&(this.distanceToPlayer2()<2e5&&(Vector.magnitude(Vector.sub(m.pos,this.position))-this.radius<m.fieldRange&&0===Matter.Query.ray(map,m.pos,this.position).length&&this.pushM(),this.drawField()),tech.isPerfectBrake)){const e=200+140*Math.cos(.022*m.cycle)+150*m.energy,t=Vector.magnitude(Vector.sub(this.position,m.pos)),a=this.immuneCycle>this.cycle?8:4;t<e&&player.speed>a&&Vector.dot(player.velocity,Vector.sub(this.position,m.pos))>0&&Matter.Body.setVelocity(player,Vector.mult(Vector.normalise(player.velocity),a));for(let t=0;t<bullet.length;t++){Vector.magnitude(Vector.sub(this.position,bullet[t].position))<e&&bullet[t].speed>a&&Vector.dot(bullet[t].velocity,Vector.sub(this.position,bullet[t].position))>0&&Matter.Body.setVelocity(bullet[t],Vector.mult(Vector.normalise(bullet[t].velocity),a))}ctx.beginPath(),ctx.arc(this.position.x,this.position.y,e,0,2*Math.PI),ctx.fillStyle="rgba(0,0,0,0.08)",ctx.fill()}5==m.fieldMode&&this.distanceToPlayer2()<2e5&&this.laserSword(this.position,Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x),500*Math.random()),6==m.fieldMode&&this.timeAttack(),9==m.fieldMode&&this.distanceToPlayer2()<3e5&&this.teleportAway()}if(m.immuneCycle>m.cycle?o.damageReduction=0:o.damageReduction=1,this.repulsion(),this.seePlayerCheck(),this.attraction(),this.lostPlayer(),this.seePlayer.recall){const e=.3*this.radius,t=2*this.radius,a=this.position.x-t/2,o=this.position.y-.7*t;ctx.fillStyle="rgba(10, 10, 10, 0.3)",ctx.fillRect(a,o,t,e),ctx.fillStyle="rgba(0,0,0,0.7)",ctx.fillRect(a,o,t*this.energy,e)}if(this.health<1?this.health+=1e-4:this.health<1&&(this.health+=5e-5),this.energy<0?this.energy=0:this.energy>this.maxEnergy?this.energy=this.maxEnergy:this.energy<this.maxEnergy&&(this.energy+=.001),ctx.save(),ctx.translate(this.position.x,this.position.y),ctx.rotate(Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x)),this.seePlayer.recall>0&&this.distanceToPlayer2()>this.repulsionRange)ctx.globalAlpha=this.immuneCycle<this.cycle?1:.5,(e=ctx.createLinearGradient(0,0,-150,0)).addColorStop(0,"rgba(150, 200, 255, 0.7)"),e.addColorStop(1,"rgba(150, 200, 255, 0)"),ctx.fillStyle=e,ctx.beginPath(),ctx.moveTo(-18,-25),ctx.lineTo(-18,25),ctx.lineTo(-50-100*Math.random(),0),ctx.fill();else if(this.distanceToPlayer2()<this.repulsionRange){var e;ctx.globalAlpha=this.immuneCycle<this.cycle?1:.5,(e=ctx.createLinearGradient(0,0,80,0)).addColorStop(0,"rgba(150, 200, 255, 0.7)"),e.addColorStop(1,"rgba(150, 200, 255, 0)"),ctx.fillStyle=e,ctx.beginPath(),ctx.moveTo(20,-16),ctx.lineTo(20,16),ctx.lineTo(35+43*Math.random(),0),ctx.fill()}if(ctx.restore(),ctx.save(),ctx.globalAlpha=this.immuneCycle<this.cycle?1:.5,ctx.translate(this.position.x,this.position.y),ctx.rotate(Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x)),this.health>.5?(ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.arc(15,0,4,0,2*Math.PI),ctx.strokeStyle="#333",ctx.lineWidth=2,ctx.stroke(),ctx.beginPath(),ctx.arc(15,0,3.5,0,2*Math.PI),ctx.fillStyle=`rgba(255, 0, 0, ${this.health*this.health})`,ctx.fill(),ctx.restore()):(ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.strokeStyle="#333",ctx.lineWidth=2,Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x)>-Math.PI/2&&Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x)<Math.PI/2||ctx.scale(1,-1),ctx.stroke(),ctx.beginPath(),ctx.arc(2,-6,7,0,2*Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(25,-6,7,.25*Math.PI,1.6*Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(2,-10,9,1.25*Math.PI,1.75*Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(25,-10,9,1.25*Math.PI,1.4*Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(18,13,10,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.stroke(),ctx.beginPath(),ctx.arc(18,13,6,0,2*Math.PI),ctx.fillStyle="#555",ctx.fill(),ctx.stroke(),ctx.beginPath(),ctx.arc(3,-6,3,0,2*Math.PI),ctx.fill(),ctx.stroke(),ctx.beginPath(),ctx.arc(26,-6,3,0,2*Math.PI),ctx.fill(),ctx.stroke(),ctx.restore()),1==m.fieldMode&&this.energy>.1&&this.harmonic3Phase(),3==m.fieldMode){Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x);o.damageReduction=.5,o.accelMag=.0012,simulation.cycle%Math.floor(100+90*Math.random()*simulation.CDScale)||this.diveAttack(),ctx.beginPath(),ctx.arc(this.position.x,this.position.y,1e3,0,2*Math.PI),ctx.fillStyle="#f5f5ff",ctx.strokeStyle="#f5f5ff55",ctx.setLineDash([125*Math.random(),125*Math.random()]),ctx.globalCompositeOperation="difference",ctx.fill(),ctx.globalCompositeOperation="source-over",ctx.stroke(),ctx.setLineDash([])}else o.accelMag=6e-4;this.immuneCycle>this.cycle?this.damageReduction=0:3==m.fieldMode?this.damageReduction=.5:this.damageReduction=1,this.seePlayer.recall&&this.gun()},o.laserSword=function(e,t,a){const o=Vector.sub(this.seePlayer.position,this.position);Vector.normalise(o),this.position.x,Math.cos(this.angle),this.position.y,Math.sin(this.angle),this.position.x,Math.sqrt(Math.random()),Math.cos(this.angle),this.position.y,Math.sqrt(Math.random()),Math.sin(this.angle);this.seePlayer.recall-=3;const s=function(e,t,a){for(let o=0;o<a.length;++o){let s=a[o].vertices;const n=s.length-1;for(let l=0;l<n;l++)if(results=simulation.checkLineIntersection(e,t,s[l],s[l+1]),results.onLine1&&results.onLine2){const t=e.x-results.x,n=e.y-results.y,i=t*t+n*n;i<best.dist2&&(!a[o].mob||a[o].alive)&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[l],v2:s[l+1]})}if(results=simulation.checkLineIntersection(e,t,s[0],s[n]),results.onLine1&&results.onLine2){const t=e.x-results.x,l=e.y-results.y,i=t*t+l*l;i<best.dist2&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[0],v2:s[n]})}}};best={x:null,y:null,dist2:1/0,who:null,v1:null,v2:null};const n={x:e.x+a*Math.cos(t),y:e.y+a*Math.sin(t)};s(e,n,map),m.isCloak||s(e,n,[player]),best.who&&best.who===player&&m.immuneCycle<m.cycle&&(m.immuneCycle=m.cycle+m.collisionImmuneCycles,m.takeDamage(this.swordDamage),simulation.drawList.push({x:best.x,y:best.y,radius:1500*this.swordDamage,color:"rgba(0,0,0,0.5)",time:20})),best.dist2===1/0&&(best=n),ctx.beginPath(),ctx.moveTo(e.x,e.y),ctx.lineTo(best.x,best.y),ctx.strokeStyle="#000",ctx.lineWidth=1.5,ctx.setLineDash([70+300*Math.random(),55*Math.random()]),ctx.stroke(),ctx.setLineDash([]),ctx.lineWidth=20,ctx.strokeStyle="rgba(0,0,0,0.07)",ctx.stroke();const l=Math.cos(Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x)),i=Math.sin(Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x));let c=this.position.x+40*l,p=this.position.y+40*i;ctx.beginPath(),ctx.moveTo(c,p);for(let e=0;e<6;e++)c+=40*(l+1.5*(Math.random()-.5)),p+=40*(i+1.5*(Math.random()-.5)),ctx.lineTo(c,p);ctx.strokeStyle="#000",ctx.lineWidth=1.5,ctx.setLineDash([70+300*Math.random(),55*Math.random()]),ctx.stroke(),ctx.setLineDash([])},o.drawField=function(){if(2!=m.fieldMode){const e=Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x),t=m.fieldRange;ctx.beginPath(),ctx.arc(this.position.x,this.position.y,t,e-Math.PI*m.fieldArc,e+Math.PI*m.fieldArc,!1),ctx.lineWidth=2,ctx.stroke();let a=13;2==m.fieldMode&&(a=30);let o=.75*Math.PI*m.fieldArc,s=e+o,n=this.position.x+.6*t*Math.cos(s),l=this.position.y+.6*t*Math.sin(s);ctx.quadraticCurveTo(n,l,this.position.x+a*Math.cos(e),this.position.y+a*Math.sin(e)),s=e-o,n=this.position.x+.6*t*Math.cos(s),l=this.position.y+.6*t*Math.sin(s),ctx.quadraticCurveTo(n,l,this.position.x+1*t*Math.cos(e-Math.PI*m.fieldArc),this.position.y+1*t*Math.sin(e-Math.PI*m.fieldArc)),ctx.fill();let i=e+1.7*Math.PI*m.fieldArc*(Math.random()-.5);ctx.beginPath(),a=15,ctx.moveTo(this.position.x+a*Math.cos(e),this.position.y+a*Math.sin(e)),ctx.lineTo(this.position.x+t*Math.cos(i),this.position.y+t*Math.sin(i)),ctx.strokeStyle="rgba(0,0,0,0.6)",ctx.lineWidth=1,ctx.stroke()}else{ctx.beginPath();const e=Math.cos(.022*m.cycle),t=Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x);ctx.arc(this.position.x,this.position.y,m.fieldRange,t-Math.PI*m.fieldArc,t+Math.PI*m.fieldArc,!1),ctx.lineWidth=2.5-1.5*e,ctx.stroke();const a=.57+.04*e,o=(1-1.2*a)*Math.PI*m.fieldArc;let s=t+o,n=this.position.x+a*m.fieldRange*Math.cos(s),l=this.position.y+a*m.fieldRange*Math.sin(s);ctx.quadraticCurveTo(n,l,this.position.x+30*Math.cos(t),this.position.y+30*Math.sin(t)),s=t-o,n=this.position.x+a*m.fieldRange*Math.cos(s),l=this.position.y+a*m.fieldRange*Math.sin(s),ctx.quadraticCurveTo(n,l,this.position.x+1*m.fieldRange*Math.cos(t-Math.PI*m.fieldArc),this.position.y+1*m.fieldRange*Math.sin(t-Math.PI*m.fieldArc)),ctx.fill()}},o.pushM=function(){const e=Vector.normalise(Vector.sub(this.position,player.position));if(tech.blockDmg){Matter.Body.setVelocity(player,{x:.5*player.velocity.x,y:.5*player.velocity.y});const t=40;ctx.beginPath();for(let a=0,o=.8*tech.blockDmg;a<o;a++){let a=this.position.x-20*e.x,o=this.position.y-20*e.y;ctx.moveTo(a,o);for(let s=0;s<8;s++)a+=t*(-e.x+1.5*(Math.random()-.5)),o+=t*(-e.y+1.5*(Math.random()-.5)),ctx.lineTo(a,o)}m.immuneCycle<m.cycle&&(m.immuneCycle=m.cycle+m.collisionImmuneCycles,m.takeDamage(.025*spawn.dmgToPlayerByLevelsCleared())),ctx.lineWidth=3,ctx.strokeStyle="#000",ctx.stroke()}const t=Math.sqrt(Math.min(12,Math.max(.15,player.mass)));Matter.Body.setVelocity(player,{x:this.velocity.x-15*e.x/t,y:this.velocity.y-15*e.y/t})},o.diveAttack=function(){const e=this.accelMag*this.mass,t=Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x);this.force.x+=150*e*Math.cos(t),this.force.y+=150*e*Math.sin(t),ctx.beginPath(),ctx.moveTo(this.position.x+Math.sin(t),this.position.y+Math.cos(t)),ctx.lineTo(this.seePlayer.position.x,this.seePlayer.position.y),s="#000000",ctx.stroke()},o.teleportAway=function(){if(ctx.beginPath(),ctx.moveTo(this.position.x,this.position.y),this.seePlayer.recall&&!(simulation.cycle%17)){const e=Vector.sub(this.position,this.seePlayer.position),t=Vector.magnitude(e),a=Vector.normalise(e),o=50*(Math.random()-.5);t<2e4?Matter.Body.translate(this,Vector.mult(a,t+o)):Matter.Body.translate(this,Vector.mult(a,2e4+o))}if(ctx.lineTo(this.position.x,this.position.y),ctx.lineWidth=2*a,ctx.strokeStyle="rgba(0,0,0,0.08)",ctx.stroke(),!this.seePlayer.yes){if(ctx.beginPath(),ctx.moveTo(this.position.x,this.position.y),this.seePlayer.recall&&!(simulation.cycle%17)){const e=Vector.sub(this.seePlayer.position,this.position),t=Vector.magnitude(e),a=Vector.normalise(e),o=50*(Math.random()-.5);t<2e5?Matter.Body.translate(this,Vector.mult(a,t+o)):Matter.Body.translate(this,Vector.mult(a,2e5+o))}ctx.lineTo(this.position.x,this.position.y),ctx.lineWidth=2*a,ctx.strokeStyle="rgba(0,0,0,0.08)",ctx.stroke()}},o.timeAttack=function(){simulation.isTimeSkipping&&!input.field||requestAnimationFrame(()=>{simulation.timePlayerSkip(5),m.walk_cycle+=m.flipLegs*m.Vx*5})},o.harmonic3Phase=function(){if(2===tech.harmonics){const e=(.75+.3*Math.cos(m.cycle/23))*m.fieldRange*m.harmonicRadius,t=(.68+.37*Math.cos(m.cycle/37))*m.fieldRange*m.harmonicRadius,a=(.7+.35*Math.cos(m.cycle/47))*m.fieldRange*m.harmonicRadius,s=Math.max(e,t,a);ctx.fillStyle="rgba(0,0,0,"+Math.min(.6,.04+m.energy*(.1+.11*Math.random()))+")",ctx.beginPath(),ctx.arc(this.position.x,this.position.y,e,0,2*Math.PI),ctx.fill(),ctx.beginPath(),ctx.arc(this.position.x,this.position.y,t,0,2*Math.PI),ctx.fill(),ctx.beginPath(),ctx.arc(this.position.x,this.position.y,a,0,2*Math.PI),ctx.fill(),Vector.magnitude(Vector.sub(player.position,this.position))-this.radius<s&&o.pushM();for(let e=0;e<bullet.length;e++)if(Vector.magnitude(Vector.sub(bullet[e].position,this.position))-this.radius<s){const t=bullet[e].position.x-this.position.x,a=bullet[e].position.y-this.position.y,o=Math.sqrt(t*t+a*a);if(o<m.fieldRange){const s=Math.atan2(a,t),n=1500*bullet[e].mass*simulation.g/o;bullet[e].force.x+=n*Math.cos(s),bullet[e].force.y+=n*Math.sin(s)}this.energy-=.0012}}else{const e=.0031*simulation.cycle,t=.023*simulation.cycle,a=m.fieldRange*m.harmonicRadius;ctx.lineWidth=1,ctx.strokeStyle="rgba(0,0,0,0.5)",ctx.fillStyle=`rgba(0,0,0,${Math.min(.6,m.energy*(.11+.1*Math.random())*(3/tech.harmonics))})`;for(let o=0;o<tech.harmonics;o++)ctx.beginPath(),ctx.ellipse(this.position.x,this.position.y,a*Math.abs(Math.sin(t+o/tech.harmonics*Math.PI)),a,e+o/tech.harmonics*Math.PI,0,2*Math.PI),ctx.fill(),ctx.stroke();Vector.magnitude(Vector.sub(player.position,this.position))-this.radius<a&&o.pushM();for(let e=0;e<bullet.length;e++)if(Vector.magnitude(Vector.sub(bullet[e].position,this.position))-this.radius<a){const t=bullet[e].position.x-this.position.x,a=bullet[e].position.y-this.position.y,o=Math.sqrt(t*t+a*a);if(o<m.fieldRange){const s=Math.atan2(a,t),n=1500*bullet[e].mass*simulation.g/o;bullet[e].force.x+=n*Math.cos(s),bullet[e].force.y+=n*Math.sin(s)}this.energy-=.0012}}},o.railGun=function(){const e=Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x),t=this.position.x,a=this.position.y,o={x:Math.cos(e),y:Math.sin(e)},s=Vector.perp(o);function n(e,n){ctx.moveTo(t,a),ctx.bezierCurveTo(t+o.x*e,a+o.y*e,t+o.x*e+s.x*n,a+o.y*e+s.y*n,t+s.x*n,a+s.y*n),ctx.bezierCurveTo(t-o.x*e+s.x*n,a-o.y*e+s.y*n,t-o.x*e,a-o.y*e,t,a)}ctx.fillStyle="rgba(50,0,100,0.05)";const i=8*l*tech.railChargeRate**3,c=6*l*tech.railChargeRate**3;for(let e=3;e<7;e++){const t=i*e*e*(.93+.07*Math.random()),a=c*e*e*(.93+.07*Math.random());ctx.beginPath(),n(t,a),n(t,-a),ctx.fill()}},o.waves=[],o.doLongitudinal=function(){if(!m.isTimeDilated){ctx.strokeStyle="rgba(0,0,0,0.6)",ctx.lineWidth=2*tech.wavePacketDamage,ctx.beginPath();const e=1100*tech.bulletsLastLonger*Math.pow(.93,tech.waveReflections),t=5e-4*spawn.dmgToPlayerByLevelsCleared();for(let a=this.waves.length-1;a>-1;a--){const o=Vector.add(this.waves[a].position,Vector.mult(this.waves[a].unit1,this.waves[a].radius)),s=Vector.add(this.waves[a].position,Vector.mult(this.waves[a].unit2,this.waves[a].radius));ctx.moveTo(o.x,o.y),ctx.arc(this.waves[a].position.x,this.waves[a].position.y,this.waves[a].radius,this.waves[a].angle,this.waves[a].angle+this.waves[a].arc);let n=Matter.Query.ray([player],o,s,50);for(let e=0,a=Math.min(30,n.length);e<a;e++)player.force.x+=.01*(Math.random()-.5)*player.mass,player.force.y+=(.01*(Math.random()-.5)-.25*simulation.g)*player.mass,Matter.Body.setVelocity(player,{x:.95*player.velocity.x,y:.95*player.velocity.y}),m.takeDamage(t);n=Matter.Query.ray(body,o,s,50);for(let e=0,t=Math.min(30,n.length);e<t;e++){const t=n[e].body;t.force.x+=.01*(Math.random()-.5)*t.mass,t.force.y+=(.01*(Math.random()-.5)-.25*simulation.g)*t.mass;let a=t.vertices;const o=25;ctx.moveTo(a[0].x+o*(Math.random()-.5),a[0].y+o*(Math.random()-.5));for(let e=1;e<a.length;e++)ctx.lineTo(a[e].x+o*(Math.random()-.5),a[e].y+o*(Math.random()-.5));ctx.lineTo(a[0].x+o*(Math.random()-.5),a[0].y+o*(Math.random()-.5)),tech.isPhononBlock&&!t.isNotHoldable&&t.speed<5&&t.angularSpeed<.1&&(Math.random()<.5&&b.targetedBlock(t,50-Math.min(25,3*t.mass)),t.torque+=.001*t.inertia*(Math.random()-.5))}this.waves[a].radius+=1.8*tech.waveBeamSpeed*this.waves[a].expanding,this.waves[a].radius>e-30?(this.waves[a].expanding=-1,this.waves[a].reflection<1&&this.waves.splice(a,1)):this.waves[a].radius<25&&(this.waves[a].expanding=1,this.waves[a].reflection<1&&this.waves.splice(a,1))}ctx.stroke()}},o.lasers=function(e,t){const a=function(e,t,a){for(let o=0;o<a.length;++o){let s=a[o].vertices;const n=s.length-1;for(let l=0;l<n;l++)if(results=simulation.checkLineIntersection(e,t,s[l],s[l+1]),results.onLine1&&results.onLine2){const t=e.x-results.x,n=e.y-results.y,i=t*t+n*n;i<best.dist2&&(!a[o].mob||a[o].alive)&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[l],v2:s[l+1]})}if(results=simulation.checkLineIntersection(e,t,s[0],s[n]),results.onLine1&&results.onLine2){const t=e.x-results.x,l=e.y-results.y,i=t*t+l*l;i<best.dist2&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[0],v2:s[n]})}}};best={x:null,y:null,dist2:1/0,who:null,v1:null,v2:null};const o={x:e.x+7e3*Math.cos(t),y:e.y+7e3*Math.sin(t)};if(a(e,o,map),a(e,o,body),m.isCloak||a(e,o,[player]),best.who&&best.who===player&&m.immuneCycle<m.cycle){const e=.0011*spawn.dmgToPlayerByLevelsCleared();m.takeDamage(e),simulation.drawList.push({x:best.x,y:best.y,radius:1500*e,color:"rgba(80,0,255,0.5)",time:20})}best.dist2===1/0&&(best=o),ctx.moveTo(e.x,e.y),ctx.lineTo(best.x,best.y),ctx.lineWidth=10,ctx.stroke()},o.pulse=function(e,t,a=this.position){let o;t=Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x);let s=5.5*e;const n=[{x:a.x+20*Math.cos(t),y:a.y+20*Math.sin(t)},{x:a.x+5e3*Math.cos(t),y:a.y+5e3*Math.sin(t)}],l=function(e,t,a){for(let s=0;s<a.length;++s){let n=a[s].vertices;const l=n.length-1;for(let i=0;i<l;i++)if(results=simulation.checkLineIntersection(e,t,n[i],n[i+1]),results.onLine1&&results.onLine2){const t=e.x-results.x,l=e.y-results.y,c=t*t+l*l;c<o.dist2&&(!a[s].mob||a[s].alive)&&(o={x:results.x,y:results.y,dist2:c,who:a[s],v1:n[i],v2:n[i+1]})}if(results=simulation.checkLineIntersection(e,t,n[0],n[l]),results.onLine1&&results.onLine2){const t=e.x-results.x,i=e.y-results.y,c=t*t+i*i;c<o.dist2&&(o={x:results.x,y:results.y,dist2:c,who:a[s],v1:n[0],v2:n[l]})}}};if(o={x:null,y:null,dist2:1/0,who:null,v1:null,v2:null},o.who||(l(n[0],n[1],body),l(n[0],n[1],[player]),l(n[0],n[1],map),o.dist2!=1/0&&(n[n.length-1]={x:o.x,y:o.y})),o.who){b.explosion(n[1],s,"rgba(0,0,0,0)");const e=1.2*s;b.explosion({x:n[1].x+e*(Math.random()-.5),y:n[1].y+e*(Math.random()-.5)},s,"rgba(0,0,0,0.7)"),b.explosion({x:n[1].x+e*(Math.random()-.5),y:n[1].y+e*(Math.random()-.5)},s,"rgba(0,0,0,0.7)")}ctx.beginPath(),ctx.moveTo(n[0].x,n[0].y),ctx.lineTo(n[1].x,n[1].y),e>50&&(ctx.strokeStyle="rgba(0,0,0,0.10)",ctx.lineWidth=70,ctx.stroke()),ctx.strokeStyle="rgba(0,0,0,0.25)",ctx.lineWidth=20,ctx.stroke(),ctx.strokeStyle="#f00",ctx.lineWidth=4,ctx.stroke();const i=Vector.sub(n[1],n[0]),c=Vector.magnitude(i);for(let t=0,a=Math.floor(5e-4*c*e);t<a;t++){const e=Math.random();simulation.drawList.push({x:n[0].x+i.x*e+10*(Math.random()-.5),y:n[0].y+i.y*e+10*(Math.random()-.5),radius:1.5+5*Math.random(),color:"rgba(0,0,0,0.5)",time:Math.floor(9+25*Math.random()*Math.random())})}};let l=0;o.gun=function(){if(0==b.activeGun&&this.seePlayer.recall&&!(simulation.cycle%20)){this.fireDir=Vector.normalise(Vector.sub(this.seePlayer.position,this.position)),h(this.position.x,this.position.y);const e=10+8*simulation.accelScale;Matter.Body.setVelocity(mob[mob.length-1],{x:this.velocity.x+this.fireDir.x*e,y:this.velocity.y+this.fireDir.y*e})}if(1==b.activeGun){if(this.seePlayer.recall&&!(simulation.cycle%90)){for(let e=0;e<12;e++){const e=Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x),t=e+1*(Math.random()-.5),a=52+8*Math.random();h(this.position.x+35*Math.cos(e)+15*(Math.random()-.5),this.position.y+35*Math.sin(e)+15*(Math.random()-.5)),Matter.Body.setVelocity(mob[mob.length-1],{x:a*Math.cos(t),y:a*Math.sin(t)})}}}else if(2==b.activeGun){if(this.seePlayer.recall&&!(simulation.cycle%20)){const e=3,t=.13,a=Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x);let o=a-t*(e-1)/2;const s=33;for(let n=0;n<e;n++)r(this.position.x+30*Math.cos(a),this.position.y+30*Math.sin(a)),Matter.Body.setVelocity(mob[mob.length-1],{x:s*Math.cos(o),y:s*Math.sin(o)}),o+=t}}else if(3==b.activeGun){this.doLongitudinal();const e=.275,t=Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x),a=t+.3*(Math.random()-.5);this.waves.push({position:{x:this.position.x+25*Math.cos(t),y:this.position.y+25*Math.sin(t)},angle:a-e,unit1:{x:Math.cos(a-e),y:Math.sin(a-e)},unit2:{x:Math.cos(a+e),y:Math.sin(a+e)},arc:2*e,radius:25,reflection:0,expanding:1,resonanceCount:0})}else if(4==b.activeGun);else if(5==b.activeGun);else if(6==b.activeGun){if(this.seePlayer.recall&&!(simulation.cycle%30)){this.fireDir=Vector.normalise(Vector.sub(this.seePlayer.position,this.position)),o.drop(this.position.x,this.position.y);const e=10+8*simulation.accelScale+(20*Math.random()-20*Math.random());Matter.Body.setVelocity(mob[mob.length-1],{x:this.velocity.x+this.fireDir.x*e,y:this.velocity.y+this.fireDir.y*e})}}else if(7==b.activeGun);else if(8==b.activeGun){if(this.seePlayer.recall&&!(simulation.cycle%1)){this.fireDir=Vector.normalise(Vector.sub(this.seePlayer.position,this.position)),function(e,t,a=9,o=70){mobs.spawn(e,t,o,a,"rgb(0,0,0)");let s=mob[mob.length-1];s.stroke="transparent",Matter.Body.setDensity(s,5e-5),s.timeLeft=120,s.accelMag=6e-5,s.isVerticesChange=!0,s.delay=360*simulation.CDScale,s.spikeVertex=0,s.spikeLength=0,s.isSpikeGrowing=!1,s.spikeGrowth=0,s.isSpikeReset=!1,s.frictionAir=0,s.restitution=0,s.leaveBody=!1,s.isDropPowerUp=!1,s.isBadTarget=!0,s.isMobBullet=!0,s.showHealthBar=!1,s.isUnblockable=!0,s.collisionFilter.category=cat.mobBullet,s.collisionFilter.mask=cat.body,s.do=function(){if(this.distanceToPlayer2()<4e4){this.force=Vector.mult(Vector.normalise(Vector.sub(player.position,this.position)),.004*this.mass);const e=1;Matter.Body.setVelocity(this,{x:this.velocity.x*e,y:this.velocity.y*e})}if(this.timeLimit(),this.radius<50){const e=1.05;Matter.Body.scale(this,e,e),this.radius*=e}if(Matter.Query.collides(this,map).length>0||Matter.Query.collides(this,body).length>0&&this.speed<10){const e=.97;Matter.Body.setVelocity(this,{x:this.velocity.x*e,y:this.velocity.y*e});const t=.9;Matter.Body.scale(this,t,t),this.radius*=t,this.radius<1&&this.death()}else this.attach()},s.attach=function(){Matter.Query.collides(this,[player]).length>0&&(Matter.Body.setPosition(this,player.position),player.speed>2.5&&Matter.Body.setVelocity(player,Vector.mult(player.velocity,.94)),Matter.Body.setAngularVelocity(player,.9*player.angularVelocity),m.takeDamage(3e-5))}}(this.position.x,this.position.y,7+Math.ceil(this.radius/15),69);const e=10+8*simulation.accelScale+(20*Math.random()-20*Math.random());Matter.Body.setVelocity(mob[mob.length-1],{x:this.velocity.x+this.fireDir.x*e,y:this.velocity.y+this.fireDir.y*e})}}else if(9==b.activeGun)if(l>1){this.fireDir=Vector.normalise(Vector.sub(this.seePlayer.position,this.position)),this.railBullet(this.position.x,this.position.y);const e=10+80*simulation.accelScale;Matter.Body.setVelocity(mob[mob.length-1],{x:this.velocity.x+this.fireDir.x*e,y:this.velocity.y+this.fireDir.y*e}),l=0}else l+=.02,this.railGun();else if(10==b.activeGun){if(this.seePlayer.recall&&!(simulation.cycle%100)){this.fireDir=Vector.normalise(Vector.sub(this.seePlayer.position,this.position)),o.laserMine(this.position.x,this.position.y);const e=10+8*simulation.accelScale+(20*Math.random()-20*Math.random());Matter.Body.setVelocity(mob[mob.length-1],{x:this.velocity.x+this.fireDir.x*e,y:this.velocity.y+this.fireDir.y*e})}}else if(11==b.activeGun)if(l>1)this.pulse(100*l),l=0;else if(this.energy<1||this.energy>.5){l+=.01,ctx.beginPath();Math.sqrt(l);ctx.arc(this.position.x,this.position.y,30*l,0,2*Math.PI),ctx.fillStyle="#000000",ctx.strokeStyle="transparent",ctx.fill(),ctx.stroke(),this.energy-=.01,ctx.strokeStyle="#000000",ctx.lineWidth=1.5}else l=0,this.energy+=.1},o.railBullet=function(e,t){mobs.spawn(e,t,5,20,"black");let s=mob[mob.length-1];s.stroke="black",s.vertices=Matter.Vertices.rotate(s.vertices,Math.PI,s.position),s.onHit=function(){simulation.drawList.push({x:this.position.x,y:this.position.y,radius:20,color:simulation.mobDmgColor,time:simulation.drawTime})},Matter.Body.setDensity(s,4e-5),s.timeLeft=220,s.frictionAir=-.01,s.restitution=-1,s.leaveBody=!1,s.isDropPowerUp=!1,s.isBadTarget=!0,s.isMobBullet=!0,s.showHealthBar=!1,s.collisionFilter.category=cat.mobBullet,s.collisionFilter.mask=cat.player;let n=0;s.do=function(){this.timeLimit(),this.alwaysSeePlayer();const e=()=>{const e=this.radius+10*this.radius,t=Math.atan2(o.seePlayer.position.y-this.position.y,o.seePlayer.position.x-this.position.x);this.vertices[2].x=this.position.x+Math.cos(this.angle)*e,this.vertices[2].y=this.position.y+Math.sin(this.angle)*e,this.vertices[4].x=this.position.x+Math.cos(this.angle)*e,this.vertices[4].y=this.position.y+Math.sin(this.angle)*e,this.vertices[0].x=this.position.x+Math.cos(this.angle)*e,this.vertices[0].y=this.position.y+Math.sin(this.angle)*e,Matter.Body.setAngle(this,t)},t=Vector.mult(Vector.normalise(Vector.sub(this.vertices[2],this.position)),1e3*a),s=Vector.mult(Vector.normalise(Vector.sub(this.vertices[4],this.position)),1e3*a),l=Vector.mult(Vector.normalise(Vector.sub(this.vertices[0],this.position)),1e3*a);if(this.vertices[2].x=this.position.x+t.x/100,this.vertices[2].y=this.position.y+t.y/100,this.vertices[4].x=this.position.x+s.x/75,this.vertices[4].y=this.position.y+s.y/75,this.vertices[0].x=this.position.x+l.x/75,this.vertices[0].y=this.position.y+l.y/75,0==n&&(e(),n++),Matter.Query.collides(this,map).length>0||Matter.Query.collides(this,body).length>0){const e=.69;Matter.Body.setVelocity(this,{x:this.velocity.x*e,y:this.velocity.y*e}),0==this.velocity.x&&0==this.velocity.y&&this.death(),this.frictionAir+=1e-4,Matter.Body.setAngularVelocity(this,0)}if(Matter.Query.collides(this,[player]).length>0&&(!m.isCloak||!tech.isIntangible)&&m.immuneCycle<m.cycle){m.immuneCycle=m.cycle+m.collisionImmuneCycles;const e=.013*spawn.dmgToPlayerByLevelsCleared();m.takeDamage(e)}}},o.laserMine=function(e,t){mobs.spawn(e,t,3,20,"#000000");let a=mob[mob.length-1];a.stroke="#00000000",Matter.Body.setDensity(a,5e-6),a.isUnstable=!0,a.timeLeft=40+Math.floor(180*Math.random()),a.leaveBody=!1,a.isDropPowerUp=!1,a.collisionFilter.mask=cat.bullet|cat.player,a.showHealthBar=!1,o.onHit=function(){this.death()},a.do=function(){this.timeLimit(),Matter.Body.setAngularVelocity(this,.01),ctx.beginPath(),ctx.lineWidth=1,ctx.strokeStyle="#00000000";for(let e=0;e<this.vertices.length;e++){const t=this.vertices[e];Vector.add(t,Vector.mult(Vector.normalise(Vector.sub(t,this.position)),2500));o.lasers(this.vertices[0],this.angle+Math.PI/3),o.lasers(this.vertices[1],this.angle+Math.PI),o.lasers(this.vertices[2],this.angle-Math.PI/3)}ctx.strokeStyle=randomColor({hue:"#FF00FF"}),ctx.stroke(),ctx.save(),ctx.beginPath(),ctx.moveTo(this.vertices[0].x,this.vertices[0].y),ctx.lineTo(this.vertices[1].x,this.vertices[1].y),ctx.lineTo(this.vertices[2].x,this.vertices[2].y),ctx.fillStyle="#000000",ctx.strokeStyle="transparent",ctx.fill(),ctx.closePath(),ctx.stroke(),ctx.restore()}},o.seeker=function(e,t){mobs.spawn(e,t,sides=5,a=5,"rgb(0,0,0)");let o=mob[mob.length-1];o.stroke="transparent",o.onHit=function(){this.explode(20*this.mass)},Matter.Body.setDensity(o,15e-6),o.timeLeft=420,o.accelMag=17e-5*simulation.accelScale,o.frictionAir=.01,o.restitution=.5,o.leaveBody=!1,o.isDropPowerUp=!1,o.isBadTarget=!0,o.isMobBullet=!0,o.showHealthBar=!1,o.collisionFilter.category=cat.mobBullet,o.collisionFilter.mask=cat.player|cat.map|cat.body|cat.bullet;o.do=function(){this.alwaysSeePlayer(),this.timeLimit(),this.attraction()}},o.drop=function(e,t){mobs.spawn(e,t,sides=90,a=30,"rgb(0,255,100,0.7)");let s=mob[mob.length-1];s.stroke="transparent",s.onDeath=function(){for(let e=0,t=5;e<t;e++)o.seeker(this.position.x,this.position.y),Matter.Body.setVelocity(mob[mob.length-1],{x:30*Math.random()-30*Math.random(),y:30*Math.random()-30*Math.random()})},Matter.Body.setDensity(s,15e-6),s.timeLeft=60,s.frictionAir=.01,s.restitution=.5,s.leaveBody=!1,s.isDropPowerUp=!1,s.isBadTarget=!0,s.isMobBullet=!0,s.showHealthBar=!1,s.collisionFilter.category=cat.mobBullet,s.collisionFilter.mask=null,s.maxRadius=30;s.do=function(){Matter.Query.collides(this,[player]).length>0&&(!m.isCloak||!tech.isIntangible)&&m.immuneCycle<m.cycle&&(Matter.Body.setPosition(this,player.position),player.speed>2.5&&Matter.Body.setVelocity(player,Vector.mult(player.velocity,.94))),this.alwaysSeePlayer(),this.timeLimit(),ctx.save(),ctx.beginPath(),ctx.moveTo(this.position.x,this.position.y),ctx.fillStyle="black",ctx.arc(this.position.x,this.position.y,this.maxRadius,0,2*Math.PI),ctx.stroke(),ctx.fill(),ctx.restore(),this.maxRadius>0&&(this.maxRadius-=.5)}}}(-13350,-1800),y(-6500+Math.floor(200*Math.random())-Math.floor(200*Math.random()),-3400+Math.floor(200*Math.random())-Math.floor(200*Math.random())),w(-9275+Math.floor(200*Math.random())-Math.floor(200*Math.random()),-3325+Math.floor(200*Math.random())-Math.floor(200*Math.random())),y(-5750+Math.floor(200*Math.random())-Math.floor(200*Math.random()),-850+Math.floor(200*Math.random())-Math.floor(200*Math.random())),w(-3600+Math.floor(200*Math.random())-Math.floor(200*Math.random()),-1325+Math.floor(200*Math.random())-Math.floor(200*Math.random())),y(1425+Math.floor(200*Math.random())-Math.floor(200*Math.random()),-800+Math.floor(200*Math.random())-Math.floor(200*Math.random())),p(),p(),p(),p(),p(),color.map="#00000000",level.customTopLayer=()=>{dong.position.x>-3825?dong.force.y-=dong.mass*simulation.g:dong.force.y+=dong.mass*simulation.g,Matter.Body.setAngularVelocity(dong,-.5),e.isClosing=!1,e.openClose(),e.draw();for(let e=0,t=map.length;e<t;e++){ctx.beginPath(),ctx.moveTo(map[e].vertices[0].x,map[e].vertices[0].y);for(let t=0,a=map[e].vertices.length;t<a;t++)ctx.lineTo(map[e].vertices[t].x,map[e].vertices[t].y);ctx.lineTo(map[e].vertices[0].x,map[e].vertices[0].y),ctx.fillStyle="rgba(68,68,68)",ctx.strokeStyle="transparent",ctx.fill(),ctx.stroke()}for(let e=0,t=mob.length;e<t;e++)mob[e].restoreBoss&&(ctx.save(),ctx.setTransform(1,0,.5,1,0,0),ctx.fillStyle="rgba(100, 100, 100, 0.3)",ctx.fillRect(canvas.width2/2,canvas.height2/10,canvas.width2,30),ctx.fillStyle="rgba(0,0,0,0.7)",ctx.fillRect(canvas.width2/2,canvas.height2/10,canvas.width2*mob[e].health,30),ctx.restore())}},superNgonBros(){simulation.inGameConsole("<strong>Super N-gon Bros</strong> by <span class='color-var'>DesBoot</span>");let e=0,t=-750,a=0;const o=level.elevator(3975,-11650,450,50,-13100,.003),s=level.elevator(5575,-11650,450,50,-13100,.003);let n=-11650;const l=level.portal({x:3990,y:100},1.5*Math.PI,{x:100,y:-13500},-1.5*Math.PI),i=level.portal({x:7135,y:-12270},-1*Math.PI,{x:12325,y:-2e3},-1.5*Math.PI);!function(t,a,o=150){mobs.spawn(t,a,5,o,"rgb(0,200,180)");let s=mob[mob.length-1];s.tier=1,s.accelMag=.05,s.g=.002,s.frictionAir=.01,s.friction=1,s.frictionStatic=1,s.restitution=0,s.delay=80*simulation.CDScale,s.randomHopFrequency=200+Math.floor(150*Math.random()),s.randomHopCD=simulation.cycle+s.randomHopFrequency,Matter.Body.rotate(s,Math.random()*Math.PI),spawn.shield(s,t,a),s.do=function(){if(this.gravity(),this.seePlayerCheck(),this.checkStatus(),this.seePlayer.recall){if(this.cd<simulation.cycle&&(Matter.Query.collides(this,map).length||Matter.Query.collides(this,body).length)){this.cd=simulation.cycle+this.delay;const e=(this.accelMag+this.accelMag*Math.random())*this.mass,t=Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x);this.force.x+=e*Math.cos(t)*.5,this.force.y+=.7*(e*Math.sin(t)-(.07*Math.random()+.1)*this.mass),Math.random()<.5?(spawn.grenade(s.position.x,s.position.y-250*Math.random(),this.tier,500),Matter.Body.setVelocity(mob[mob.length-1],{x:-5,y:0})):(spawn.bullet(this.position.x,this.position.y,25),Matter.Body.setVelocity(mob[mob.length-1],{x:-25,y:-25}))}}else if(this.randomHopCD<simulation.cycle&&(Matter.Query.collides(this,map).length||Matter.Query.collides(this,body).length)){this.randomHopCD=simulation.cycle+this.randomHopFrequency,this.randomHopFrequency=Math.max(100,this.randomHopFrequency+200*(.5-Math.random()));const e=(this.accelMag+this.accelMag*Math.random())*this.mass*(.1+.3*Math.random()),t=-Math.PI/2+(Math.random()-.5)*Math.PI;this.force.x+=e*Math.cos(t),this.force.y+=e*Math.sin(t)-.07*this.mass,spawn.grenade(s.position.x,s.position.y-250*Math.random(),this.tier,500),Matter.Body.setVelocity(mob[mob.length-1],{x:-5,y:0})}},s.onDeath=function(){powerUps.spawnBossPowerUp(this.position.x,this.position.y),e=1}}(20500,-400);const c=function(e,t,a=.5*Math.PI,o=53){mobs.spawn(e,t,4,o,"#ab6101");let s=mob[mob.length-1];s.stroke="transparent",s.isDropPowerUp=!1,s.showHealthBar=!1,Matter.Body.setDensity(s,999999),s.collisionFilter.mask=cat.player|cat.mob|cat.bullet,s.constraint=Constraint.create({pointA:{x:s.position.x,y:s.position.y},bodyB:s,stiffness:0,damping:0}),s.do=function(){this.isStunned=!0,this.health<1&&(this.health+=.001),this.checkStatus(),Matter.Body.setAngle(s,a),(player.velocity.y<0&&player.position.y>s.position.y||player.velocity.y>30&&player.position.y<s.position.y)&&Math.abs(player.position.x-s.position.x)<50&&Math.abs(player.position.y-s.position.y)<150&&s.death()},s.onHit=function(){(player.velocity.y<0&&player.position.y>s.position.y||player.velocity.y>30&&player.position.y<s.position.y)&&s.death()},s.onDeath=function(){Math.random()<.1?(spawn.randomSmallMob(s.position.x,s.position.y-75),simulation.inGameConsole("mob")):Math.random()<.07?(powerUps.spawn(s.position.x,s.position.y+player.velocity.y/Math.abs(player.velocity.y)*75,"tech",!0),simulation.inGameConsole("tech")):Math.random()<.4?(powerUps.spawn(s.position.x,s.position.y+player.velocity.y/Math.abs(player.velocity.y)*75,"heal",!0),simulation.inGameConsole("heal")):(powerUps.spawn(s.position.x,s.position.y+player.velocity.y/Math.abs(player.velocity.y)*75,"ammo",!0),simulation.inGameConsole("ammo"))},Composite.add(engine.world,s.constraint)};let p=0,r=0,h=0,d=0,w=0,y=0,x=0,u=0,R=0,b=0;level.setPosToSpawn(0,-50),level.exit.x=22100,level.exit.y=-40,spawn.mapRect(level.enter.x,level.enter.y+20,100,20),spawn.mapRect(level.exit.x,level.exit.y+20,100,20),level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#a2a5ff",level.custom=()=>{player.position.x>14950&&0==a&&(a=1),1==a&&t<-150&&(t+=5),ctx.fillStyle="rgba(64,64,64,0.97)",ctx.fillRect(4200,-13100,2,1450),ctx.fillRect(5800,-13100,2,1450),n<-12099?n=-11650:n-=5,o.move(),s.move(),player.position.x>0&&player.position.y<-9e3&&player.position.y>-1e4&&(m.takeDamage(.05*simulation.difficultyMode),Matter.Body.setPosition(player,{x:275,y:-12175})),l[2].query(),l[3].query(),i[2].query(),i[3].query(),level.exit.drawAndCheck(),player.position.x>4100&&0==w&&(p=1),player.position.x>7e3&&0==y&&(r=1),player.position.x>14300&&0==x&&(h=1),player.position.y<-11e3&&0==b&&(R=1),m.onGround?Math.abs(player.velocity.x)>.3?Matter.Body.setVelocity(player,{x:player.velocity.x+Math.abs(player.velocity.x)/player.velocity.x*.1,y:player.velocity.y+.2}):Matter.Body.setVelocity(player,{x:player.velocity.x,y:player.velocity.y+.2}):input.down?Matter.Body.setVelocity(player,{x:player.velocity.x,y:player.velocity.y+2}):Matter.Body.setVelocity(player,{x:player.velocity.x,y:player.velocity.y+.2}),level.enter.draw(),0==u&&player.position.x>21150&&(u=1,simulation.inGameConsole("Thank you M, but our techs are in another castle!")),0==d&&(spawn.randomSmallMob(1260,-75),spawn.randomMob(2100,-75,.4),spawn.randomSmallMob(2400,-75),spawn.randomSmallMob(2500,-75),spawn.randomMob(2900,-75,.2),spawn.randomMob(3400,-75,.4),spawn.randomMob(3400,-75,.4),d=1),1==p&&0==w&&(spawn.randomSmallMob(4400,-75),spawn.randomSmallMob(5500,-75),spawn.randomSmallMob(5835.6,-402.4),spawn.randomSmallMob(5835.6,-402.4),spawn.randomSmallMob(6543.2,-730),spawn.randomMob(6795.4,-162.4,.1),spawn.randomMob(6795.4,-162.4,.1),w=1),1==r&&0==y&&(spawn.randomMob(8465.6,-469.9,.1),spawn.randomMob(9839.6,-444.5,.4),spawn.randomSmallMob(11033.2,-155.3),spawn.randomMob(12161.3,-85.1,.3),spawn.randomMob(12161.3,-85.1,.3),spawn.randomMob(13399.8,-93.4,.4),y=1),1==h&&0==x&&(spawn.randomSmallMob(16500,-400),spawn.randomSmallMob(19278.9,-211.1),spawn.randomMob(18839,-463.2,.3),spawn.randomMob(18036.9,-205.9,.3),spawn.randomMob(16950.4,-365.2,.4),spawn.randomMob(16355.6,-390.8,.1),x=1),1==R&&0==b&&(spawn.randomSmallMob(1140,-12228),spawn.randomSmallMob(2429.9,-12371.2),spawn.randomSmallMob(4899.4,-12139.6),spawn.randomMob(18839,-463.2,.3),spawn.randomMob(2844.5,-12281,.2),spawn.randomMob(4967.5,-12550.8,.4),spawn.randomMob(6696.9,-12437.9,.1),b=1),l[0].draw(),l[1].draw(),l[2].draw(),l[3].draw(),i[0].draw(),i[1].draw(),i[2].draw(),i[3].draw()},level.customTopLayer=()=>{ctx.fillStyle="rgba(64,64,64,0.97)",ctx.fillRect(3928,-300,120,500),ctx.fillRect(6940,-12350,170,120),ctx.fillRect(7090,-12380,120,200),ctx.fillRect(14980,-750,10,750),ctx.beginPath(),ctx.moveTo(14980,t),ctx.lineTo(14905,t),ctx.lineTo(14980,t+75),ctx.fill()},c(923.5,-262),spawn.mapRect(886,-304,75,5),spawn.mapRect(886,-229,75,5),spawn.mapRect(883,-304,5,80),spawn.mapRect(958,-304,5,80),c(1250.5,-262),spawn.mapRect(1138,-304,375,5),spawn.mapRect(1138,-229,375,5),c(1400.5,-262),c(1325.5,-562),spawn.mapRect(1288,-604,75,5),spawn.mapRect(1288,-529,75,5),spawn.mapRect(1285,-604,5,80),spawn.mapRect(1360,-604,5,80),c(5787.5,-262),spawn.mapRect(5675,-304,225,5),spawn.mapRect(5675,-229,225,5),c(6987.5,-562),spawn.mapRect(6725,-604,300,5),spawn.mapRect(6725,-529,300,5),spawn.mapRect(7025,-604,5,80),c(7887.5,-262),spawn.mapRect(7850,-304,75,5),spawn.mapRect(7850,-225,75,5),spawn.mapRect(7850,-304,5,80),spawn.mapRect(7925,-304,5,84),c(8112.5,-262),spawn.mapRect(8075,-304,75,5),spawn.mapRect(8075,-225,75,5),spawn.mapRect(8075,-304,5,80),spawn.mapRect(8150,-304,5,84),c(8337.5,-262),spawn.mapRect(8300,-304,75,5),spawn.mapRect(8300,-225,75,5),spawn.mapRect(8300,-304,5,80),spawn.mapRect(8375,-304,5,84),c(8112.5,-562),spawn.mapRect(8075,-604,75,5),spawn.mapRect(8075,-525,75,5),spawn.mapRect(8075,-604,5,80),spawn.mapRect(8150,-604,5,84),c(9612.5,-562),spawn.mapRect(9500,-604,300,5),spawn.mapRect(9500,-525,300,5),spawn.mapRect(9647.5,-600,5,75),c(9687.5,-562),c(12887.5,-262),spawn.mapRect(12700,-304,300,5),spawn.mapRect(12700,-225,300,5),c(5212.5,-12337.5),spawn.mapRect(4725,-12377,525,5),spawn.mapRect(4725,-12303,525,5),spawn.mapRect(5250,-12377,5,79),spawn.mapRect(-100,0,4033,2e3),spawn.mapRect(4043,0,882,2e3),spawn.mapRect(3909.5,203.6,150,2e3),spawn.mapRect(1138,-300,75,75),spawn.mapRect(1288,-300,75,75),spawn.mapRect(1438,-300,75,75),spawn.mapRect(1738,-150,150,75),spawn.mapRect(1753,-150,120,150),spawn.mapRect(2488,-225,150,75),spawn.mapRect(2503,-225,120,225),spawn.mapRect(3088,-300,150,75),spawn.mapRect(3103,-300,120,300),spawn.mapRect(3913,-300,20,75),spawn.mapRect(3928,-300,5,300),spawn.mapRect(4043,-300,20,75),spawn.mapRect(4043,-300,5,300),spawn.mapRect(5225,0,1125,2e3),spawn.mapRect(6575,0,4900,2e3),spawn.mapRect(5675,-300,75,75),spawn.mapRect(5825,-300,75,75),spawn.mapRect(5900,-600,600,75),spawn.mapRect(6725,-600,225,75),spawn.mapRect(6950,-300,75,75),spawn.mapRect(7400,-300,150,75),spawn.mapRect(8750,-300,75,75),spawn.mapRect(8975,-600,225,75),spawn.mapRect(9575,-300,150,75),spawn.mapRect(9500,-600,75,75),spawn.mapRect(9725,-600,75,75),spawn.mapRect(9950,-75,300,75),spawn.mapRect(10025,-150,225,75),spawn.mapRect(10100,-225,150,75),spawn.mapRect(10175,-300,75,75),spawn.mapRect(10475,-75,300,75),spawn.mapRect(10475,-150,225,75),spawn.mapRect(10475,-225,150,75),spawn.mapRect(10475,-300,75,75),spawn.mapRect(11100,-75,375,75),spawn.mapRect(11175,-150,300,75),spawn.mapRect(11250,-225,225,75),spawn.mapRect(11325,-300,150,75),spawn.mapRect(11725,-75,300,75),spawn.mapRect(11725,-150,225,75),spawn.mapRect(11725,-225,150,75),spawn.mapRect(11725,-300,75,75),spawn.mapRect(11725,0,5975,2e3),spawn.mapRect(12325,-150,150,75),spawn.mapRect(12340,-150,120,300),spawn.mapRect(12700,-300,150,75),spawn.mapRect(12925,-300,75,75),spawn.mapRect(13525,-150,150,72),spawn.mapRect(13540,-150,120,150),spawn.mapRect(13675,-75,675,75),spawn.mapRect(13750,-150,600,75),spawn.mapRect(13825,-225,525,75),spawn.mapRect(13900,-300,450,75),spawn.mapRect(13975,-375,375,75),spawn.mapRect(14050,-450,300,75),spawn.mapRect(14125,-525,225,75),spawn.mapRect(14200,-600,150,75),spawn.mapRect(14950,-75,75,75),spawn.mapRect(1750,-4600,500,25),spawn.mapRect(2e3,-4850,25,500),spawn.mapRect(1800,-4800,25,150),spawn.mapRect(2075,-4800,25,150),spawn.mapRect(2150,-4775,25,125),spawn.mapRect(1875,-4550,25,150),spawn.mapRect(1800,-4550,25,150),spawn.mapRect(2075,-4550,25,150),spawn.mapRect(2123,-4430,100,25),spawn.mapRect(0,-12e3,2025,2e3),spawn.mapRect(2325,-12225,150,2e3),spawn.mapRect(2775,-12e3,900,2e3),spawn.mapRect(3525,-12300,150,300),spawn.mapRect(3450,-12225,75,300),spawn.mapRect(3375,-12150,75,300),spawn.mapRect(3300,-12075,75,300),spawn.mapRect(4725,-12375,450,75),spawn.mapRect(4725,-12e3,600,2e3),spawn.mapRect(-100,-13500,100,3500),spawn.mapRect(-100,-13500,100,3500),spawn.mapRect(6375,-12225,1650,2e3),spawn.mapRect(7225,-13225,2850,3e3),spawn.mapRect(-100,-13700,100,200),spawn.mapRect(-100,-13700,3775,100),spawn.mapRect(6450,-13225,1e3,100),spawn.mapRect(7090,-13225,120,885),spawn.mapRect(6940,-12350,200,5),spawn.mapRect(6950,-12240,140,5),spawn.mapRect(6940,-12365,75,15),spawn.mapRect(6940,-12235,75,15),spawn.mapRect(17700,0,4975,2e3),spawn.mapRect(18600,-225,375,2225),spawn.mapRect(19500,-225,450,2225),spawn.mapRect(19500,-825,450,225),spawn.mapRect(15924,-1575,6751,750),spawn.mapRect(19950,-225,975,75),spawn.mapRect(20925,-300,225,300),spawn.mapRect(21e3,-825,150,300),spawn.mapRect(15924,-225,1776,2225),spawn.mapRect(17175,-825,525,225),spawn.mapRect(22600,-825,75,825),powerUps.addResearchToLevel()},underpass(){simulation.inGameConsole("<strong>underpass</strong> by <span class='color-var'>Richard0820</span>");let e=!1;const t=level.door(2650,-825,50,250,250,10),a=level.elevator(-11050,-650,450,75,-2975,.003,{up:.1,down:.1}),o=level.hazard(-4775,-350,1975,175),s=level.boost(137.5,-600,75);let n=Matter.Bodies.rectangle(-4375,-1e3,100,100,{density:.05,isNotHoldable:!0,restitution:1.05,isStatic:!1},!0,[!0],0),l=Matter.Bodies.rectangle(-4325,-1050,50,50,{density:.05,isNotHoldable:!0,isStatic:!1}),i=Matter.Bodies.rectangle(-4425,-1050,50,50,{density:.05,isNotHoldable:!0,isStatic:!1}),c=Matter.Bodies.rectangle(-4425,-950,50,50,{density:.05,isNotHoldable:!0,isStatic:!1}),p=Matter.Bodies.rectangle(-4325,-950,50,50,{density:.05,isNotHoldable:!0,isStatic:!1});dong=Matter.Body.create({parts:[n,l,i,c,p]}),body[body.length]=n,body[body.length]=l,body[body.length]=i,body[body.length]=c,body[body.length]=p,Matter.Composite.add(engine.world,dong),Matter.Composite.add(engine.world,Constraint.create({pointA:{x:-3825,y:-975},bodyB:dong,stiffness:.2,damping:.1})),composite[composite.length]=dong,setTimeout(function(){dong.collisionFilter.category=cat.body,dong.collisionFilter.mask=cat.body|cat.player|cat.bullet|cat.mobBullet|cat.mob},1e3),level.custom=()=>{if(ctx.save(),ctx.beginPath(),ctx.fillStyle="#80808077",ctx.strokeStyle="#80808022",ctx.fillRect(225,-1025,2400,450),ctx.fillRect(-2950,-1025,3100,450),ctx.fillRect(-7050,-1025,2400,450),ctx.fillRect(-10575,-3975,4525,1025),ctx.fillRect(-4650,-1700,1700,1100),ctx.fillRect(-11150,-3575,575,3050),ctx.fillRect(-11900,-1e3,750,475),ctx.fill(),ctx.stroke(),ctx.restore(),ctx.save(),ctx.beginPath(),ctx.fillStyle="#d8dadf",ctx.strokeStyle="#d8dadf",ctx.moveTo(-2950,-600),ctx.lineTo(-3730,-1725),ctx.lineTo(-3730,-600),ctx.moveTo(-4650,-600),ctx.lineTo(-3925,-1725),ctx.lineTo(-3925,-575),ctx.moveTo(-10575,-3425),ctx.lineTo(-10100,-2975),ctx.lineTo(-10575,-2975),ctx.moveTo(-7975,-2975),ctx.lineTo(-7625,-3800),ctx.lineTo(-7350,-2950),ctx.moveTo(-6750,-2975),ctx.lineTo(-7075,-3800),ctx.lineTo(-7350,-2950),ctx.moveTo(-11900,-950),ctx.lineTo(-11900,-550),ctx.lineTo(-11500,-550),ctx.fillRect(-3925,-1675,200,1075),ctx.fillRect(-7625,-3800,550,875),ctx.clearRect(-10600,-4e3,525,475),ctx.clearRect(-10100,-4e3,500,300),ctx.clearRect(-9625,-4e3,500,175),ctx.fillRect(-11125,-3600,550,50),ctx.fillRect(-10600,-3400,50,425),ctx.fillRect(-11925,-925,45,375),ctx.fillRect(-3950,-1675,75,1100),ctx.fillRect(-3925,-625,950,50),ctx.fillRect(-4650,-600,1700,375),ctx.fillRect(-14550,-2400,2650,2050),ctx.moveTo(-11150,-3575),ctx.lineTo(-10575,-2150),ctx.lineTo(-10575,-3575),ctx.stroke(),ctx.fill(),ctx.restore(),s.query(),o.query(),Matter.Query.collides(dong,[player]).length>0&&(!m.isCloak||!tech.isIntangible)&&m.immuneCycle<m.cycle){m.immuneCycle=m.cycle+m.collisionImmuneCycles;const e=.05*spawn.dmgToPlayerByLevelsCleared();m.takeDamage(e),simulation.drawList.push({x:dong.position.x,y:dong.position.y,radius:200*Math.sqrt(e),color:simulation.mobDmgColor,time:simulation.drawTime})}for(let e=0;e<mob.length;e++)if(Matter.Query.collides(dong,[mob[e]]).length>0){const t=1;mob[e].damage(t,!0),simulation.drawList.push({x:dong.position.x,y:dong.position.y,radius:50*Math.sqrt(t),color:simulation.mobDmgColor,time:simulation.drawTime});break}level.exit.drawAndCheck(),ctx.beginPath(),ctx.fillStyle="#68686822",ctx.fillRect(-25,-2175,100,200),ctx.fill(),ctx.setLineDash([125*Math.random(),125*Math.random()]),ctx.moveTo(-3825,-975),ctx.lineTo(dong.position.x,dong.position.y),ctx.stroke(),ctx.setLineDash([]),simulation.drawList.push({x:dong.position.x,y:dong.position.y,radius:10,color:color.block,time:20}),ctx.beginPath(),ctx.fillStyle=`rgba(68,68,68, ${3*Math.sin(.015*simulation.cycle)})`,ctx.fillRect(-3e3,-2175,175,25),ctx.fillRect(-2850,-2300,25,150),ctx.fillRect(-3e3,-2300,175,25),ctx.fillRect(-3e3,-2425,25,150),ctx.fillRect(-3e3,-2425,175,25),ctx.fill(),ctx.fillStyle=`rgba(68,68,68, ${5*Math.sin(.015*simulation.cycle)})`,ctx.fillRect(-2725,-2425,25,275),ctx.fillRect(-2725,-2425,175,25),ctx.fillRect(-2575,-2425,25,275),ctx.fillRect(-2725,-2300,175,25),ctx.fill(),ctx.fillStyle=`rgba(68,68,68, ${7*Math.sin(.015*simulation.cycle)})`,ctx.fillRect(-2450,-2425,25,275),ctx.fillRect(-2450,-2175,175,25),ctx.fill(),ctx.stroke(),ctx.fillStyle="#00FFFF22",ctx.fillRect(-7650,-3075,600,2475),ctx.fill(),ctx.fillStyle="#00FFFF66",ctx.fillRect(-7650+Math.floor(600*Math.random()),-3075,5,2475),ctx.fillRect(-7650+Math.floor(600*Math.random()),-3075,5,2475),ctx.fillStyle="rgba(68, 68, 68)",ctx.fillRect(-7675,-3075,50,125),ctx.fillRect(-7075,-3075,50,125),ctx.fillRect(-7725,-3025,75,75),ctx.fillRect(-7050,-3025,75,75),ctx.fill();for(let e=0,t=body.length;e<t;++e)body[e].position.x>-7625&&body[e].position.x<-7075&&body[e].position.y>-3075&&body[e].position.y<-625&&(body[e].force.y-=simulation.g*body[e].mass+.012);for(let e=0,t=bullet.length;e<t;++e)bullet[e].position.x>-7625&&bullet[e].position.x<-7075&&bullet[e].position.y>-3075&&bullet[e].position.y<-625&&(bullet[e].force.y-=simulation.g*bullet[e].mass);for(let e=0,t=powerUp.length;e<t;++e)powerUp[e].position.x>-7625&&powerUp[e].position.x<-7075&&powerUp[e].position.y>-3075&&powerUp[e].position.y<-625&&(powerUp[e].force.y-=simulation.g*powerUp[e].mass+.12);for(let e=0,t=mob.length;e<t;++e)mob[e].position.x>-7625&&mob[e].position.x<-7075&&mob[e].position.y>-3075&&mob[e].position.y<-625&&(mob[e].force.y-=simulation.g*mob[e].mass+.0012);if(m.pos.x>-7625&&m.pos.x<-7075&&m.pos.y>-3075&&m.pos.y<-625&&(player.force.y-=m.mass*simulation.g+(input.down?0:.024)),ctx.save(),ctx.beginPath(),ctx.fillStyle="rgba(0,250,250, 0.05)",ctx.fillRect(2625,-1e3,350,450),ctx.fill(),ctx.restore(),a.move(),mob.length<=5&&(e=!0),e)level.exit.x=2775,level.exit.y=-650;else{ctx.save(),ctx.beginPath(),ctx.moveTo(2775,-620),ctx.lineTo(2775,-730),ctx.bezierCurveTo(2775,-820,2875,-820,2875,-730),ctx.lineTo(2875,-620),ctx.lineTo(2775,-620),ctx.fillStyle="#00ffff",ctx.fill(),ctx.restore();const e=new Image;let t=40*Math.random(),a=40*Math.random();e.src="https://raw.githubusercontent.com/Whyisthisnotavalable/image-yy/main/MOSHED-2023-4-20-12-55-58-removebg-preview.png",ctx.drawImage(e,2825-t,-700-a,2*t,2*a),ctx.save(),ctx.setLineDash([70+300*Math.random(),55*Math.random()]),ctx.beginPath(),ctx.strokeStyle="gray",ctx.arc(2825,-700,100*Math.abs(Math.sin(.07*m.cycle))+10,0+Math.sin(.1*m.cycle*Math.PI),0+Math.cos(.1*m.cycle+Math.PI)),ctx.shadowBlur=10,ctx.shadowColor="black",ctx.stroke(),ctx.restore(),ctx.save(),ctx.setLineDash([70+300*Math.random(),55*Math.random()]),ctx.beginPath(),ctx.strokeStyle="gray",ctx.arc(2825,-700,90*Math.abs(Math.sin(.08*m.cycle))+10,0+Math.cos(.1*m.cycle*Math.PI),0+Math.sin(.1*m.cycle+Math.PI)),ctx.shadowBlur=10,ctx.shadowColor="black",ctx.stroke(),ctx.restore(),ctx.save(),ctx.setLineDash([70+300*Math.random(),55*Math.random()]),ctx.beginPath(),ctx.strokeStyle="gray",ctx.arc(2825,-700,80*Math.abs(Math.sin(.09*m.cycle))+10,0+Math.tan(.1*m.cycle*Math.PI),0+Math.tan(.1*m.cycle+Math.PI)),ctx.shadowBlur=10,ctx.shadowColor="black",ctx.stroke(),ctx.setLineDash([]),ctx.restore()}},level.setPosToSpawn(30,-2e3),level.exit.x=1375,level.exit.y=-1500,level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom+800),document.body.style.backgroundColor="#d8dadf",spawn.mapRect(-225,-1950,350,75),spawn.mapRect(225,-1950,50,75),spawn.mapRect(-250,-2025,50,150),spawn.mapRect(250,-2025,50,150),spawn.mapRect(-250,-2250,50,125),spawn.mapRect(-225,-2325,500,100),spawn.mapRect(250,-2250,50,125),spawn.mapRect(-100,-2400,250,100),spawn.mapRect(-25,-2475,100,100),spawn.mapRect(125,-2350,50,50),spawn.mapRect(-125,-2350,50,50),spawn.mapRect(-50,-2425,50,50),spawn.mapRect(50,-2425,50,50),spawn.mapRect(-250,-2350,50,50),spawn.mapRect(250,-2350,50,50),spawn.mapRect(-75,-1975,200,50),spawn.mapRect(-50,-2e3,150,50),spawn.mapRect(100,-1950,50,75),spawn.mapRect(-75,-2250,200,50),spawn.mapRect(-50,-2225,150,50),spawn.mapRect(-2950,-1900,3100,900),spawn.mapRect(225,-1900,2875,900),spawn.mapRect(-2950,-600,6050,450),spawn.mapRect(-3050,-500,200,350),spawn.mapRect(-3150,-400,200,250),spawn.mapRect(-3250,-300,200,150),spawn.mapRect(2950,-1050,150,500),spawn.mapRect(-4675,-1900,1825,200),spawn.mapRect(-5325,-1900,675,900),spawn.mapRect(-5325,-250,2100,100),spawn.mapRect(-5325,-600,675,450),spawn.mapRect(-4700,-500,150,350),spawn.mapRect(-4650,-400,200,250),spawn.mapRect(-4550,-300,200,150),spawn.mapRect(-3875,-1025,100,100),spawn.mapRect(-3800,-1050,50,50),spawn.mapRect(-3900,-1050,50,50),spawn.mapRect(-3800,-950,50,50),spawn.mapRect(-3900,-950,50,50),spawn.mapRect(-6925,-1175,1700,175),spawn.mapRect(-6925,-600,1725,175),spawn.mapRect(-7700,-600,800,425),spawn.mapRect(-7800,-2950,175,2775),spawn.mapRect(-7075,-2950,175,1950),spawn.mapRect(-9150,-2975,1525,175),spawn.mapRect(-7075,-2975,1150,175),spawn.mapRect(-6100,-3900,175,1100),spawn.mapRect(-9150,-3975,3225,175),spawn.mapRect(-9175,-3850,75,75),spawn.mapRect(-9625,-3825,500,150),spawn.mapRect(-9650,-3725,75,75),spawn.mapRect(-10100,-3700,500,150),spawn.mapRect(-10100,-2975,975,175),spawn.mapRect(-10125,-3600,75,75),spawn.mapRect(-10575,-3575,500,150),spawn.mapRect(-10575,-2975,500,175),spawn.mapRect(-11325,-2975,250,175),spawn.mapRect(-11325,-3575,175,775),spawn.mapRect(-11225,-2975,150,2e3),spawn.mapRect(-10575,-2975,150,2500),spawn.mapRect(-11650,-550,1225,150),spawn.mapRect(-11650,-1100,575,150),spawn.mapRect(-14675,-2525,2925,150),spawn.mapRect(-11900,-2525,150,1575),spawn.mapRect(-11850,-1100,250,150),spawn.mapRect(-11875,-550,275,150),spawn.mapRect(-11900,-550,150,350),spawn.mapRect(-14675,-2525,150,2300),spawn.mapRect(-14675,-375,2925,175),spawn.mapRect(2725,-625,250,50),spawn.mapRect(2625,-1025,100,225),spawn.mapRect(2700,-1025,300,125),spawn.mapRect(2625,-612.5,125,50),spawn.mapRect(-3950,-1725,250,50),spawn.mapRect(-7650,-3825,600,50),spawn.mapRect(-13900,-2400,200,50),spawn.mapVertex(-11957,-430,"-175 175 0 175 0 0"),spawn.mapVertex(-14470,-430,"175 175 0 175 0 0"),spawn.mapVertex(-11957,-2319,"-175 -175 0 -175 0 0"),spawn.mapVertex(-14470,-2319,"0 0 0 -175 175 -175");const r=function(){const e=-13800+Math.floor(100*Math.random()-100*Math.random());mobs.spawn(e,-2375,0,2,"transparent");let t=mob[mob.length-1],a=mob[0];t.collisionFilter.category=cat.body,t.collisionFilter.mask=cat.map,t.g=3e-4,t.restitution=0,t.stroke="transparent",t.freeOfWires=!1,t.frictionAir=.01,t.isDropPowerUp=!1,t.showHealthBar=!1,t.isBadTarget=!0,t.isUnblockable=!0;const o=e,s=Math.abs(10+Math.floor(10*Math.random()-10*Math.random())),n=Math.floor(30*Math.random()-30*Math.random()),l=Math.floor(10*Math.random()-10*Math.random());t.do=function(){this.freeOfWires?this.gravity():(a.position.y>-1600&&(this.freeOfWires=!0,this.force.y-=-6e-4,this.force.x+=Math.random()*a.velocity.x/1e4,this.fill="#111"),Matter.Body.setPosition(this,{x:a.position.x+n,y:a.position.y+l})),ctx.beginPath(),ctx.moveTo(o,-2375),ctx.quadraticCurveTo(o,-100,this.position.x,this.position.y),ctx.lineWidth=s,ctx.lineCap="butt",ctx.strokeStyle="#111",ctx.stroke(),ctx.lineCap="round"}},h=function(e,t,a=11*tech.bulletSize,o=70){mobs.spawn(e,t,o,a,"rgba(0,0,0)");let s=mob[mob.length-1];s.stroke="transparent",s.onHit=function(){simulation.drawList.push({x:this.position.x,y:this.position.y,radius:20,color:simulation.mobDmgColor,time:simulation.drawTime})},Matter.Body.setDensity(s,1e-5),s.timeLeft=500,s.friction=0,s.restitution=1,s.leaveBody=!1,s.isDropPowerUp=!1,s.isBadTarget=!0,s.isMobBullet=!0,s.showHealthBar=!1,s.collisionFilter.category=cat.mobBullet,s.collisionFilter.mask=cat.bullet|cat.player|cat.map|cat.body;s.do=function(){this.timeLimit(),this.alwaysSeePlayer(),this.force.y+=.0012*this.mass}},d=function(e,t,a=9,o=3){mobs.spawn(e,t,o,a,"rgba(0,0,0)");let s=mob[mob.length-1];s.stroke="transparent",s.vertices=Matter.Vertices.rotate(s.vertices,Math.PI,s.position),s.onHit=function(){simulation.drawList.push({x:this.position.x,y:this.position.y,radius:20,color:simulation.mobDmgColor,time:simulation.drawTime})},Matter.Body.setDensity(s,4e-5),s.timeLeft=220,s.frictionAir=-.01,s.restitution=-1,s.leaveBody=!1,s.isDropPowerUp=!1,s.isBadTarget=!0,s.isMobBullet=!0,s.showHealthBar=!1,s.collisionFilter.category=cat.mobBullet,s.collisionFilter.mask=null,s.boss=null;for(let e=0,t=mob.length;e<t;e++)mob[e].restoreBoss&&(s.boss=mob[e]);let n=0;s.do=function(){this.timeLimit(),this.alwaysSeePlayer();const e=()=>{const e=this.radius+10*this.radius;this.vertices[1].x=this.position.x+Math.cos(this.angle)*e,this.vertices[1].y=this.position.y+Math.sin(this.angle)*e;const t=Math.atan2(this.position.y-s.boss.position.y,this.position.x-s.boss.position.x);Matter.Body.setAngle(this,t)},t=Vector.mult(Vector.normalise(Vector.sub(this.vertices[1],this.position)),1e3*a);if(this.vertices[1].x=this.position.x+t.x/100,this.vertices[1].y=this.position.y+t.y/100,0==n&&(e(),n++),Matter.Query.collides(this,map).length>0||Matter.Query.collides(this,body).length>0){const e=.69;Matter.Body.setVelocity(this,{x:this.velocity.x*e,y:this.velocity.y*e}),simulation.drawList.push({x:this.position.x,y:this.position.y,radius:10,color:"#000000",time:simulation.drawTime}),0==this.velocity.x&&0==this.velocity.y&&this.death(),this.frictionAir+=1e-4,Matter.Body.setAngularVelocity(this,0)}if(Matter.Query.collides(this,[player]).length>0&&(!m.isCloak||!tech.isIntangible)&&m.immuneCycle<m.cycle){m.immuneCycle=m.cycle+m.collisionImmuneCycles;const e=.013*spawn.dmgToPlayerByLevelsCleared();m.takeDamage(e),simulation.drawList.push({x:this.position.x,y:this.position.y,radius:200*Math.sqrt(e),color:"#000000",time:simulation.drawTime})}}},w=function(e,t,a,o,s){mobs.spawn(e.position.x,e.position.y,8,12,"rgba(0,0,0, 1)");let n=mob[mob.length-1];n.stroke="transparent",Matter.Body.setDensity(n,.01),n.leaveBody=!1,n.isDropPowerUp=!1,n.isBadTarget=!0,n.showHealthBar=!1,n.isOrbital=!0,n.isShielded=!0,n.collisionFilter.category=cat.mobBullet,n.collisionFilter.mask=cat.bullet,n.do=function(){if(!e||!e.alive)return void this.death();const n=simulation.cycle*o+a,l={x:Math.cos(n),y:Math.sin(n)};if(Matter.Body.setPosition(this,Vector.add(Vector.add(e.position,e.velocity),Vector.mult(l,t+s))),Matter.Query.collides(this,[player]).length>0&&(!m.isCloak||!tech.isIntangible)&&m.immuneCycle<m.cycle){m.immuneCycle=m.cycle+m.collisionImmuneCycles;const e=.013*spawn.dmgToPlayerByLevelsCleared();m.takeDamage(e),simulation.drawList.push({x:this.position.x,y:this.position.y,radius:200*Math.sqrt(e),color:simulation.mobDmgColor,time:simulation.drawTime})}}},y=function(e,t,a=30){mobs.spawn(e,t,8,a,"#00000000");let o=mob[mob.length-1];o.accelMag=3e-4,o.stroke="transparent",o.searchTarget=map[Math.floor(Math.random()*(map.length-1))].position,o.frictionStatic=0,o.friction=0,o.seeAtDistance2=2e7,o.vertices=Matter.Vertices.rotate(o.vertices,Math.PI,o.position),Matter.Body.rotate(o,Math.random()*Math.PI*2),o.showHealthBar=!1,Matter.Body.setDensity(o,.01),o.fireDir={x:0,y:0},o.seePlayerFreq=0,o.repulsionRange=4e5+a*a,o.collisionFilter.mask=cat.bullet|cat.player|cat.body|cat.map|cat.mob|cat.mobBullet,o.do=function(){if(this.seePlayerCheck(),this.attraction(),this.repulsion(),this.search(),this.seePlayer.recall){const e=.3*this.radius,t=2*this.radius,a=this.position.x-t/2,o=this.position.y-.7*t;ctx.fillStyle="rgba(100, 100, 100, 0.3)",ctx.fillRect(a,o,t,e),ctx.fillStyle="rgba(0,255,255,0.7)",ctx.fillRect(a,o,t*this.health,e)}if(this.health<1&&(this.health+=5e-4),ctx.save(),ctx.translate(this.position.x,this.position.y),ctx.rotate(Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x)),this.seePlayer.recall>0&&this.distanceToPlayer2()>this.repulsionRange)(e=ctx.createLinearGradient(0,0,-150,0)).addColorStop(0,"rgba(150, 200, 255, 0.7)"),e.addColorStop(1,"rgba(150, 200, 255, 0)"),ctx.fillStyle=e,ctx.beginPath(),ctx.moveTo(-18,-25),ctx.lineTo(-18,25),ctx.lineTo(-50-100*Math.random(),0),ctx.fill();else if(this.distanceToPlayer2()<this.repulsionRange){var e;(e=ctx.createLinearGradient(0,0,80,0)).addColorStop(0,"rgba(150, 200, 255, 0.7)"),e.addColorStop(1,"rgba(150, 200, 255, 0)"),ctx.fillStyle=e,ctx.beginPath(),ctx.moveTo(20,-16),ctx.lineTo(20,16),ctx.lineTo(35+43*Math.random(),0),ctx.fill()}if(ctx.restore(),ctx.save(),ctx.translate(this.position.x,this.position.y),ctx.rotate(Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x)),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.arc(15,0,4,0,2*Math.PI),ctx.strokeStyle="#333",ctx.lineWidth=2,ctx.stroke(),ctx.beginPath(),ctx.arc(15,0,3.5,0,2*Math.PI),ctx.fillStyle=`rgba(255, 0, 0, ${this.health*this.health})`,ctx.fill(),ctx.restore(),this.seePlayer.recall&&!(simulation.cycle%30)){this.seePlayer.recall-=10,this.fireDir=Vector.normalise(Vector.sub(this.seePlayer.position,this.position)),spawn.sniperBullet(this.position.x,this.position.y,7+Math.ceil(this.radius/15),5);const e=10+8*simulation.accelScale;Matter.Body.setVelocity(mob[mob.length-1],{x:this.velocity.x+this.fireDir.x*e,y:this.velocity.y+this.fireDir.y*e})}}},x=function(e,t,a=30){mobs.spawn(e,t,8,a,"#00000000");let o=mob[mob.length-1];o.accelMag=3e-4,o.stroke="transparent",o.frictionStatic=0,o.friction=0,o.seeAtDistance2=2e7,o.vertices=Matter.Vertices.rotate(o.vertices,Math.PI,o.position),Matter.Body.rotate(o,Math.random()*Math.PI*2),o.showHealthBar=!1,Matter.Body.setDensity(o,.01),o.seePlayerFreq=0,o.searchTarget=map[Math.floor(Math.random()*(map.length-1))].position,o.swordDamage=.025*spawn.dmgToPlayerByLevelsCleared(),o.collisionFilter.mask=cat.bullet|cat.player|cat.body|cat.map|cat.mob|cat.mobBullet,o.repulsionRange=5e4,o.do=function(){if(this.repulsion(),this.search(),this.seePlayer.recall){const e=.3*this.radius,t=2*this.radius,a=this.position.x-t/2,o=this.position.y-.7*t;ctx.fillStyle="rgba(100, 100, 100, 0.3)",ctx.fillRect(a,o,t,e),ctx.fillStyle="rgba(0,255,255,0.7)",ctx.fillRect(a,o,t*this.health,e)}if(this.health<1&&(this.health+=5e-4),this.seePlayer.recall&&this.laserSword(this.position,Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x),500*Math.random()),ctx.save(),ctx.translate(this.position.x,this.position.y),ctx.rotate(Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x)),this.seePlayer.recall>0&&this.distanceToPlayer2()>this.repulsionRange)(e=ctx.createLinearGradient(0,0,-150,0)).addColorStop(0,"rgba(150, 200, 255, 0.7)"),e.addColorStop(1,"rgba(150, 200, 255, 0)"),ctx.fillStyle=e,ctx.beginPath(),ctx.moveTo(-18,-25),ctx.lineTo(-18,25),ctx.lineTo(-50-100*Math.random(),0),ctx.fill();else if(this.distanceToPlayer2()<this.repulsionRange){var e;(e=ctx.createLinearGradient(0,0,80,0)).addColorStop(0,"rgba(150, 200, 255, 0.7)"),e.addColorStop(1,"rgba(150, 200, 255, 0)"),ctx.fillStyle=e,ctx.beginPath(),ctx.moveTo(20,-16),ctx.lineTo(20,16),ctx.lineTo(35+43*Math.random(),0),ctx.fill()}ctx.restore(),ctx.save(),ctx.translate(this.position.x,this.position.y),ctx.rotate(Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x)),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.arc(15,0,4,0,2*Math.PI),ctx.strokeStyle="#333",ctx.lineWidth=2,ctx.stroke(),ctx.beginPath(),ctx.arc(15,0,3.5,0,2*Math.PI),ctx.fillStyle=`rgba(255, 0, 0, ${this.health*this.health})`,ctx.fill(),ctx.restore(),this.seePlayerCheck(),this.attraction()},o.laserSword=function(e,t,a){const o=Vector.sub(this.seePlayer.position,this.position);Vector.normalise(o),this.position.x,Math.cos(this.angle),this.position.y,Math.sin(this.angle),this.position.x,Math.sqrt(Math.random()),Math.cos(this.angle),this.position.y,Math.sqrt(Math.random()),Math.sin(this.angle);this.seePlayer.recall-=3;const s=function(e,t,a){for(let o=0;o<a.length;++o){let s=a[o].vertices;const n=s.length-1;for(let l=0;l<n;l++)if(results=simulation.checkLineIntersection(e,t,s[l],s[l+1]),results.onLine1&&results.onLine2){const t=e.x-results.x,n=e.y-results.y,i=t*t+n*n;i<best.dist2&&(!a[o].mob||a[o].alive)&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[l],v2:s[l+1]})}if(results=simulation.checkLineIntersection(e,t,s[0],s[n]),results.onLine1&&results.onLine2){const t=e.x-results.x,l=e.y-results.y,i=t*t+l*l;i<best.dist2&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[0],v2:s[n]})}}};best={x:null,y:null,dist2:1/0,who:null,v1:null,v2:null};const n={x:e.x+a*Math.cos(t),y:e.y+a*Math.sin(t)};s(e,n,map),m.isCloak||s(e,n,[player]),best.who&&best.who===player&&m.immuneCycle<m.cycle&&(m.immuneCycle=m.cycle+m.collisionImmuneCycles,m.takeDamage(this.swordDamage),simulation.drawList.push({x:best.x,y:best.y,radius:1500*this.swordDamage,color:"rgba(80,0,255,0.5)",time:20})),best.dist2===1/0&&(best=n),ctx.beginPath(),ctx.moveTo(e.x,e.y),ctx.lineTo(best.x,best.y),ctx.strokeStyle="#50f",ctx.lineWidth=1.5,ctx.setLineDash([70+300*Math.random(),55*Math.random()]),ctx.stroke(),ctx.setLineDash([]),ctx.lineWidth=20,ctx.strokeStyle="rgba(80,0,255,0.07)",ctx.stroke();const l=Math.cos(Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x)),i=Math.sin(Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x));let c=this.position.x+40*l,p=this.position.y+40*i;ctx.beginPath(),ctx.moveTo(c,p);for(let e=0;e<6;e++)c+=40*(l+1.5*(Math.random()-.5)),p+=40*(i+1.5*(Math.random()-.5)),ctx.lineTo(c,p);ctx.strokeStyle="#50f",ctx.lineWidth=1.5,ctx.setLineDash([70+300*Math.random(),55*Math.random()]),ctx.stroke(),ctx.setLineDash([])}},u=function(e,t,a=30){mobs.spawn(e,t,8,a,"transparent");let o=mob[mob.length-1];o.stroke="transparent";let s="#FFFFFF";o.accelMag=6e-4,o.isBoss=!0,o.restoreBoss=!0,o.frictionStatic=0,o.friction=0,o.seeAtDistance2=2e7,o.vertices=Matter.Vertices.rotate(o.vertices,Math.PI,o.position),Matter.Body.rotate(o,Math.random()*Math.PI*2),o.showHealthBar=!1,Matter.Body.setDensity(o,m.maxHealth/(simulation.difficulty<5?.5:simulation.difficulty/simulation.difficultyMode)),o.seePlayerFreq=0,o.swordDamage=.025*spawn.dmgToPlayerByLevelsCleared(),o.collisionFilter.mask=cat.bullet|cat.player|cat.body|cat.map|cat.mob|cat.mobBullet,o.repulsionRange=5e5,o.isDropPowerUp=!1;let n=0;o.curlRange=1e4,o.fieldPhase=0,o.energy=1,o.maxEnergy=1,o.immuneCycle=0,o.cycle=0;for(let e=0;e<b.totalBots();e++)w(o,190+130*tech.isOrbitBotUpgrade,n/b.totalBots()*2*Math.PI,.05,Math.floor(100*Math.sin(simulation.cycle/10))),n++;o.do=function(){if(this.position.x>-11500&&this.position.x<10510?o.collisionFilter.mask=cat.bullet|cat.player|cat.map|cat.mob|cat.mobBullet:o.collisionFilter.mask=cat.bullet|cat.player|cat.body|cat.map|cat.mob|cat.mobBullet,this.cycle++,0===Matter.Query.ray(map,player.position,this.position).length==0&&(this.seePlayer.recall=null),this.seePlayer.recall){if(0==m.fieldMode&&this.distanceToPlayer2()<2e5&&(Vector.magnitude(Vector.sub(m.pos,this.position))-this.radius<m.fieldRange&&this.pushM(),this.drawField()),2==m.fieldMode&&(this.distanceToPlayer2()<2e5&&(Vector.magnitude(Vector.sub(m.pos,this.position))-this.radius<m.fieldRange&&this.pushM(),this.drawField()),tech.isPerfectBrake)){const e=200+140*Math.cos(.022*m.cycle)+150*m.energy,t=Vector.magnitude(Vector.sub(this.position,m.pos)),a=this.immuneCycle>this.cycle?8:4;t<e&&player.speed>a&&Vector.dot(player.velocity,Vector.sub(this.position,m.pos))>0&&Matter.Body.setVelocity(player,Vector.mult(Vector.normalise(player.velocity),a));for(let t=0;t<bullet.length;t++){Vector.magnitude(Vector.sub(this.position,bullet[t].position))<e&&bullet[t].speed>a&&Vector.dot(bullet[t].velocity,Vector.sub(this.position,bullet[t].position))>0&&Matter.Body.setVelocity(bullet[t],Vector.mult(Vector.normalise(bullet[t].velocity),a))}ctx.beginPath(),ctx.arc(this.position.x,this.position.y,e,0,2*Math.PI),ctx.fillStyle="rgba(0,0,0,0.08)",ctx.fill()}5==m.fieldMode&&this.distanceToPlayer2()<2e5&&this.laserSword(this.position,Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x),500*Math.random()),9==m.fieldMode&&this.distanceToPlayer2()<3e5&&this.teleportAway()}if(m.immuneCycle>m.cycle?o.damageReduction=0:o.damageReduction=1,this.repulsion(),this.seePlayerCheck(),this.attraction(),this.lostPlayer(),this.speed>10&&Matter.Body.setVelocity(this,{x:.99*this.velocity.x,y:.99*this.velocity.y}),this.seePlayer.recall){const e=Math.atan2(this.position.y-player.position.y,this.position.x-player.position.x);let t={x:500*Math.cos(e)+mob[0].position.x,y:500*Math.sin(e)+mob[0].position.y},a=0===Matter.Query.ray(map,mob[0].position,t).length,o=0===Matter.Query.ray(body,mob[0].position,t).length;0!=a&&0!=o||(this.force.x-=10*Math.cos(e),this.force.y-=10*Math.sin(e))}if(this.seePlayer.recall){const e=Math.atan2(this.position.y-player.position.y,this.position.x-player.position.x)-1.5*Math.PI;let t={x:5e3*Math.cos(e)+mob[0].position.x,y:5e3*Math.sin(e)+mob[0].position.y};0==(0===Matter.Query.ray(bullet,mob[0].position,t).length)&&(this.force.x-=30*Math.cos(e),this.force.y-=30*Math.sin(e))}if(this.seePlayer.recall){const e=Math.atan2(this.position.y-player.position.y,this.position.x-player.position.x)-2.5*Math.PI;let t={x:5e3*Math.cos(e)+mob[0].position.x,y:5e3*Math.sin(e)+mob[0].position.y};0==(0===Matter.Query.ray(bullet,mob[0].position,t).length)&&(this.force.x-=30*Math.cos(e),this.force.y-=30*Math.sin(e))}if(this.seePlayer.recall){const e=.3*this.radius,t=2*this.radius,a=this.position.x-t/2,o=this.position.y-.7*t;ctx.fillStyle="rgba(10, 10, 10, 0.3)",ctx.fillRect(a,o,t,e),ctx.fillStyle="rgba(0,0,0,0.7)",ctx.fillRect(a,o,t*this.energy,e)}if(this.health<1?this.health+=1e-4:this.health<1&&(this.health+=5e-5),this.energy<0?this.energy=0:this.energy>this.maxEnergy?this.energy=this.maxEnergy:this.energy<this.maxEnergy&&(this.energy+=.001),ctx.save(),ctx.translate(this.position.x,this.position.y),ctx.rotate(Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x)),this.seePlayer.recall>0&&this.distanceToPlayer2()>this.repulsionRange)ctx.globalAlpha=this.immuneCycle<this.cycle?1:.5,(e=ctx.createLinearGradient(0,0,-150,0)).addColorStop(0,"rgba(150, 200, 255, 0.7)"),e.addColorStop(1,"rgba(150, 200, 255, 0)"),ctx.fillStyle=e,ctx.beginPath(),ctx.moveTo(-18,-25),ctx.lineTo(-18,25),ctx.lineTo(-50-100*Math.random(),0),ctx.fill();else if(this.distanceToPlayer2()<this.repulsionRange){var e;ctx.globalAlpha=this.immuneCycle<this.cycle?1:.5,(e=ctx.createLinearGradient(0,0,80,0)).addColorStop(0,"rgba(150, 200, 255, 0.7)"),e.addColorStop(1,"rgba(150, 200, 255, 0)"),ctx.fillStyle=e,ctx.beginPath(),ctx.moveTo(20,-16),ctx.lineTo(20,16),ctx.lineTo(35+43*Math.random(),0),ctx.fill()}if(ctx.restore(),ctx.save(),ctx.globalAlpha=this.immuneCycle<this.cycle?1:.5,ctx.translate(this.position.x,this.position.y),ctx.rotate(Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x)),this.health>.5?(ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.arc(15,0,4,0,2*Math.PI),ctx.strokeStyle="#333",ctx.lineWidth=2,ctx.stroke(),ctx.beginPath(),ctx.arc(15,0,3.5,0,2*Math.PI),ctx.fillStyle=`rgba(255, 0, 0, ${this.health*this.health})`,ctx.fill(),ctx.restore()):(ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.strokeStyle="#333",ctx.lineWidth=2,Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x)>-Math.PI/2&&Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x)<Math.PI/2||ctx.scale(1,-1),ctx.stroke(),ctx.beginPath(),ctx.arc(2,-6,7,0,2*Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(25,-6,7,.25*Math.PI,1.6*Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(2,-10,9,1.25*Math.PI,1.75*Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(25,-10,9,1.25*Math.PI,1.4*Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(18,13,10,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.stroke(),ctx.beginPath(),ctx.arc(18,13,6,0,2*Math.PI),ctx.fillStyle="#555",ctx.fill(),ctx.stroke(),ctx.beginPath(),ctx.arc(3,-6,3,0,2*Math.PI),ctx.fill(),ctx.stroke(),ctx.beginPath(),ctx.arc(26,-6,3,0,2*Math.PI),ctx.fill(),ctx.stroke(),ctx.restore()),1==m.fieldMode&&this.energy>.1&&this.harmonic3Phase(),7==m.fieldMode&&this.locatePlayer(),8==m.fieldMode&&o.pilotWave(),3==m.fieldMode){Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x);o.damageReduction=.5,o.accelMag=.0012,simulation.cycle%Math.floor(100+90*Math.random()*simulation.CDScale)||this.diveAttack(),ctx.beginPath(),ctx.arc(this.position.x,this.position.y,1e3,0,2*Math.PI),ctx.fillStyle="#f5f5ff",ctx.strokeStyle="#f5f5ff55",ctx.setLineDash([125*Math.random(),125*Math.random()]),ctx.globalCompositeOperation="difference",ctx.fill(),ctx.globalCompositeOperation="source-over",ctx.stroke(),ctx.setLineDash([])}else o.accelMag=6e-4;this.immuneCycle>this.cycle?this.damageReduction=0:3==m.fieldMode?this.damageReduction=.5:this.damageReduction=1,6==m.fieldMode&&(this.timeAttack(),ctx.globalCompositeOperation="saturation",ctx.fillStyle="#ccc",ctx.fillRect(-5e4,-5e4,1e5,1e5),ctx.globalCompositeOperation="source-over"),this.seePlayer.recall&&this.gun()},o.laserSword=function(e,t,a){const o=Vector.sub(this.seePlayer.position,this.position),s=(Vector.normalise(o),this.position.x,Math.cos(this.angle),this.position.y,Math.sin(this.angle),this.position.x,Math.sqrt(Math.random()),Math.cos(this.angle),this.position.y,Math.sqrt(Math.random()),Math.sin(this.angle),function(e,t,a){for(let o=0;o<a.length;++o){let s=a[o].vertices;const n=s.length-1;for(let l=0;l<n;l++)if(results=simulation.checkLineIntersection(e,t,s[l],s[l+1]),results.onLine1&&results.onLine2){const t=e.x-results.x,n=e.y-results.y,i=t*t+n*n;i<best.dist2&&(!a[o].mob||a[o].alive)&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[l],v2:s[l+1]})}if(results=simulation.checkLineIntersection(e,t,s[0],s[n]),results.onLine1&&results.onLine2){const t=e.x-results.x,l=e.y-results.y,i=t*t+l*l;i<best.dist2&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[0],v2:s[n]})}}});best={x:null,y:null,dist2:1/0,who:null,v1:null,v2:null};const n={x:e.x+a*Math.cos(t),y:e.y+a*Math.sin(t)};s(e,n,map),m.isCloak||s(e,n,[player]),best.who&&best.who===player&&m.immuneCycle<m.cycle&&(m.immuneCycle=m.cycle+m.collisionImmuneCycles,m.takeDamage(this.swordDamage),simulation.drawList.push({x:best.x,y:best.y,radius:1500*this.swordDamage,color:"rgba(0,0,0,0.5)",time:20})),best.dist2===1/0&&(best=n),ctx.beginPath(),ctx.moveTo(e.x,e.y),ctx.lineTo(best.x,best.y),ctx.strokeStyle="#000",ctx.lineWidth=1.5,ctx.setLineDash([70+300*Math.random(),55*Math.random()]),ctx.stroke(),ctx.setLineDash([]),ctx.lineWidth=20,ctx.strokeStyle="rgba(0,0,0,0.07)",ctx.stroke();const l=Math.cos(Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x)),i=Math.sin(Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x));let c=this.position.x+40*l,p=this.position.y+40*i;ctx.beginPath(),ctx.moveTo(c,p);for(let e=0;e<6;e++)c+=40*(l+1.5*(Math.random()-.5)),p+=40*(i+1.5*(Math.random()-.5)),ctx.lineTo(c,p);ctx.strokeStyle="#000",ctx.lineWidth=1.5,ctx.setLineDash([70+300*Math.random(),55*Math.random()]),ctx.stroke(),ctx.setLineDash([])},o.drawField=function(){if(2!=m.fieldMode){const e=Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x),t=m.fieldRange;ctx.save(),ctx.beginPath(),ctx.fillStyle="rgba(0,0,0,"+Math.min(.6,.04+m.energy*(.1+.11*Math.random()))+")",ctx.arc(this.position.x,this.position.y,t,e-Math.PI*m.fieldArc,e+Math.PI*m.fieldArc,!1),ctx.lineWidth=2,ctx.stroke();let a=13;2==m.fieldMode&&(a=30);let o=.75*Math.PI*m.fieldArc,s=e+o,n=this.position.x+.6*t*Math.cos(s),l=this.position.y+.6*t*Math.sin(s);ctx.quadraticCurveTo(n,l,this.position.x+a*Math.cos(e),this.position.y+a*Math.sin(e)),s=e-o,n=this.position.x+.6*t*Math.cos(s),l=this.position.y+.6*t*Math.sin(s),ctx.quadraticCurveTo(n,l,this.position.x+1*t*Math.cos(e-Math.PI*m.fieldArc),this.position.y+1*t*Math.sin(e-Math.PI*m.fieldArc)),ctx.fill();let i=e+1.7*Math.PI*m.fieldArc*(Math.random()-.5);ctx.beginPath(),a=15,ctx.moveTo(this.position.x+a*Math.cos(e),this.position.y+a*Math.sin(e)),ctx.lineTo(this.position.x+t*Math.cos(i),this.position.y+t*Math.sin(i)),ctx.strokeStyle="rgba(0,0,0,0.6)",ctx.lineWidth=1,ctx.stroke(),ctx.restore()}else{ctx.save(),ctx.beginPath();const e=Math.cos(.022*m.cycle),t=Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x);ctx.arc(this.position.x,this.position.y,m.fieldRange,t-Math.PI*m.fieldArc,t+Math.PI*m.fieldArc,!1),ctx.lineWidth=2.5-1.5*e,ctx.stroke();const a=.57+.04*e,o=(1-1.2*a)*Math.PI*m.fieldArc;let s=t+o,n=this.position.x+a*m.fieldRange*Math.cos(s),l=this.position.y+a*m.fieldRange*Math.sin(s);ctx.quadraticCurveTo(n,l,this.position.x+30*Math.cos(t),this.position.y+30*Math.sin(t)),s=t-o,n=this.position.x+a*m.fieldRange*Math.cos(s),l=this.position.y+a*m.fieldRange*Math.sin(s),ctx.quadraticCurveTo(n,l,this.position.x+1*m.fieldRange*Math.cos(t-Math.PI*m.fieldArc),this.position.y+1*m.fieldRange*Math.sin(t-Math.PI*m.fieldArc)),ctx.fill(),ctx.restore()}},o.pushM=function(){const e=Vector.normalise(Vector.sub(this.position,player.position));if(tech.blockDmg){Matter.Body.setVelocity(player,{x:.5*player.velocity.x,y:.5*player.velocity.y});const t=40;ctx.beginPath();for(let a=0,o=.8*tech.blockDmg;a<o;a++){let a=this.position.x-20*e.x,o=this.position.y-20*e.y;ctx.moveTo(a,o);for(let s=0;s<8;s++)a+=t*(-e.x+1.5*(Math.random()-.5)),o+=t*(-e.y+1.5*(Math.random()-.5)),ctx.lineTo(a,o)}m.immuneCycle<m.cycle&&(m.immuneCycle=m.cycle+m.collisionImmuneCycles,m.takeDamage(.025*spawn.dmgToPlayerByLevelsCleared())),ctx.lineWidth=3,ctx.strokeStyle="#000",ctx.stroke()}const t=Math.sqrt(Math.min(12,Math.max(.15,player.mass)));Matter.Body.setVelocity(player,{x:this.velocity.x-15*e.x/t,y:this.velocity.y-15*e.y/t})},o.diveAttack=function(){const e=this.accelMag*this.mass,t=Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x);this.force.x+=150*e*Math.cos(t),this.force.y+=150*e*Math.sin(t),ctx.beginPath(),ctx.moveTo(this.position.x+Math.sin(t),this.position.y+Math.cos(t)),ctx.lineTo(this.seePlayer.position.x,this.seePlayer.position.y),s="#000000",ctx.stroke()},o.phase=2*Math.PI*Math.random(),o.index2=0,o.pilotWave=function(){const e=.008*this.cycle;this.fieldPhase+=.002;const t=1+.01*Math.sin(this.fieldPhase),a=1-.01*Math.cos(this.fieldPhase);ctx.save(),ctx.beginPath(),ctx.ellipse(player.position.x,player.position.y,240*t,180*a,e,0,2*Math.PI),ctx.globalCompositeOperation="exclusion",ctx.fillStyle="#ffffff",ctx.fill(),ctx.globalCompositeOperation="source-over",ctx.beginPath(),ctx.ellipse(player.position.x,player.position.y,240*t,180*a,e,0,2*Math.PI*m.energy/m.maxEnergy),ctx.strokeStyle="#000000",ctx.lineWidth=4,ctx.stroke(),ctx.restore();const o=this.curlRange/15,s=Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x);!function(e,t,a=!0){for(let n=0;n<t.length;++n)if(!t[n].isNotHoldable){const l=Vector.sub(e,t[n].position),i=Vector.magnitudeSquared(l);if(i<o*o&&i>1e4){const e=Vector.mult(Vector.perp(Vector.normalise(l)),-50);t[n].isMobBullet?Matter.Body.setVelocity(t[n],{x:.97*t[n].velocity.x+.06*e.x-5*Math.cos(s),y:.97*t[n].velocity.y+.06*e.y-5*Math.sin(s)}):Matter.Body.setVelocity(t[n],{x:.94*t[n].velocity.x+.06*e.x-5*Math.cos(s),y:.94*t[n].velocity.y+.06*e.y-5*Math.sin(s)}),a&&(t[n].force.y-=.8*simulation.g*t[n].mass)}}}(this.position,[player])},o.teleportAway=function(){if(ctx.beginPath(),ctx.moveTo(this.position.x,this.position.y),this.seePlayer.recall&&!(simulation.cycle%17)){const e=Vector.sub(this.position,this.seePlayer.position),t=Vector.magnitude(e),a=Vector.normalise(e),o=50*(Math.random()-.5);t<2e4?Matter.Body.translate(this,Vector.mult(a,t+o)):Matter.Body.translate(this,Vector.mult(a,2e4+o))}if(ctx.lineTo(this.position.x,this.position.y),ctx.lineWidth=2*a,ctx.strokeStyle="rgba(0,0,0,0.08)",ctx.stroke(),!this.seePlayer.yes){if(ctx.beginPath(),ctx.moveTo(this.position.x,this.position.y),this.seePlayer.recall&&!(simulation.cycle%17)){const e=Vector.sub(this.seePlayer.position,this.position),t=Vector.magnitude(e),a=Vector.normalise(e),o=50*(Math.random()-.5);t<2e5?Matter.Body.translate(this,Vector.mult(a,t+o)):Matter.Body.translate(this,Vector.mult(a,2e5+o))}ctx.lineTo(this.position.x,this.position.y),ctx.lineWidth=2*a,ctx.strokeStyle="rgba(0,0,0,0.08)",ctx.stroke()}},o.timeAttack=function(){(this.seePlayer.recall&&!(simulation.cycle%30)||this.distanceToPlayer2()<300)&&requestAnimationFrame(()=>{simulation.timePlayerSkip(45),simulation.loop()})},o.harmonic3Phase=function(){if(2===tech.harmonics){const e=(.75+.3*Math.cos(m.cycle/23))*m.fieldRange*m.harmonicRadius,t=(.68+.37*Math.cos(m.cycle/37))*m.fieldRange*m.harmonicRadius,a=(.7+.35*Math.cos(m.cycle/47))*m.fieldRange*m.harmonicRadius,s=Math.max(e,t,a);ctx.fillStyle="rgba(0,0,0,"+Math.min(.6,.04+m.energy*(.1+.11*Math.random()))+")",ctx.beginPath(),ctx.arc(this.position.x,this.position.y,e,0,2*Math.PI),ctx.fill(),ctx.beginPath(),ctx.arc(this.position.x,this.position.y,t,0,2*Math.PI),ctx.fill(),ctx.beginPath(),ctx.arc(this.position.x,this.position.y,a,0,2*Math.PI),ctx.fill(),Vector.magnitude(Vector.sub(player.position,this.position))-this.radius<s&&o.pushM();for(let e=0;e<bullet.length;e++)if(Vector.magnitude(Vector.sub(bullet[e].position,this.position))-this.radius<s){const t=bullet[e].position.x-this.position.x,a=bullet[e].position.y-this.position.y,o=Math.sqrt(t*t+a*a);if(o<m.fieldRange){const s=Math.atan2(a,t),n=1500*bullet[e].mass*simulation.g/o;bullet[e].force.x+=n*Math.cos(s),bullet[e].force.y+=n*Math.sin(s)}this.energy-=.0012}}else{const e=.0031*simulation.cycle,t=.023*simulation.cycle,a=m.fieldRange*m.harmonicRadius;ctx.lineWidth=1,ctx.strokeStyle="rgba(0,0,0,0.5)",ctx.fillStyle=`rgba(0,0,0,${Math.min(.6,m.energy*(.11+.1*Math.random())*(3/tech.harmonics))})`;for(let o=0;o<tech.harmonics;o++)ctx.beginPath(),ctx.ellipse(this.position.x,this.position.y,a*Math.abs(Math.sin(t+o/tech.harmonics*Math.PI)),a,e+o/tech.harmonics*Math.PI,0,2*Math.PI),ctx.fill(),ctx.stroke();Vector.magnitude(Vector.sub(player.position,this.position))-this.radius<a&&o.pushM();for(let e=0;e<bullet.length;e++)if(Vector.magnitude(Vector.sub(bullet[e].position,this.position))-this.radius<a){const t=bullet[e].position.x-this.position.x,a=bullet[e].position.y-this.position.y,o=Math.sqrt(t*t+a*a);if(o<m.fieldRange){const s=Math.atan2(a,t),n=1500*bullet[e].mass*simulation.g/o;bullet[e].force.x+=n*Math.cos(s),bullet[e].force.y+=n*Math.sin(s)}this.energy-=.0012}}},o.railGun=function(){const e=Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x),t=this.position.x,a=this.position.y,o={x:Math.cos(e),y:Math.sin(e)},s=Vector.perp(o);function n(e,n){ctx.moveTo(t,a),ctx.bezierCurveTo(t+o.x*e,a+o.y*e,t+o.x*e+s.x*n,a+o.y*e+s.y*n,t+s.x*n,a+s.y*n),ctx.bezierCurveTo(t-o.x*e+s.x*n,a-o.y*e+s.y*n,t-o.x*e,a-o.y*e,t,a)}ctx.fillStyle="rgba(50,20,100,0.05)";const i=8*l*tech.railChargeRate**3,c=6*l*tech.railChargeRate**3;for(let e=3;e<7;e++){const t=i*e*e*(.93+.07*Math.random()),a=c*e*e*(.93+.07*Math.random());ctx.beginPath(),n(t,a),n(t,-a),ctx.fill()}},o.waves=[],o.doLongitudinal=function(){if(!m.isTimeDilated){ctx.strokeStyle="rgba(0,0,0,0.6)",ctx.lineWidth=2*tech.wavePacketDamage,ctx.beginPath();const e=1100*tech.bulletsLastLonger*Math.pow(.93,tech.waveReflections),t=5e-4*spawn.dmgToPlayerByLevelsCleared();for(let a=this.waves.length-1;a>-1;a--){const o=Vector.add(this.waves[a].position,Vector.mult(this.waves[a].unit1,this.waves[a].radius)),s=Vector.add(this.waves[a].position,Vector.mult(this.waves[a].unit2,this.waves[a].radius));ctx.moveTo(o.x,o.y),ctx.arc(this.waves[a].position.x,this.waves[a].position.y,this.waves[a].radius,this.waves[a].angle,this.waves[a].angle+this.waves[a].arc);let n=Matter.Query.ray([player],o,s,50);for(let e=0,a=Math.min(30,n.length);e<a;e++)player.force.x+=.01*(Math.random()-.5)*player.mass,player.force.y+=(.01*(Math.random()-.5)-.25*simulation.g)*player.mass,Matter.Body.setVelocity(player,{x:.95*player.velocity.x,y:.95*player.velocity.y}),m.takeDamage(t);n=Matter.Query.ray(body,o,s,50);for(let e=0,t=Math.min(30,n.length);e<t;e++){const t=n[e].body;t.force.x+=.01*(Math.random()-.5)*t.mass,t.force.y+=(.01*(Math.random()-.5)-.25*simulation.g)*t.mass;let a=t.vertices;const o=25;ctx.moveTo(a[0].x+o*(Math.random()-.5),a[0].y+o*(Math.random()-.5));for(let e=1;e<a.length;e++)ctx.lineTo(a[e].x+o*(Math.random()-.5),a[e].y+o*(Math.random()-.5));ctx.lineTo(a[0].x+o*(Math.random()-.5),a[0].y+o*(Math.random()-.5)),tech.isPhononBlock&&!t.isNotHoldable&&t.speed<5&&t.angularSpeed<.1&&(Math.random()<.5&&b.targetedBlock(t,50-Math.min(25,3*t.mass)),t.torque+=.001*t.inertia*(Math.random()-.5))}this.waves[a].radius+=1.8*tech.waveBeamSpeed*this.waves[a].expanding,this.waves[a].radius>e-30?(this.waves[a].expanding=-1,this.waves[a].reflection<1&&this.waves.splice(a,1)):this.waves[a].radius<25&&(this.waves[a].expanding=1,this.waves[a].reflection<1&&this.waves.splice(a,1))}ctx.stroke()}},o.lasers=function(e,t){const a=function(e,t,a){for(let o=0;o<a.length;++o){let s=a[o].vertices;const n=s.length-1;for(let l=0;l<n;l++)if(results=simulation.checkLineIntersection(e,t,s[l],s[l+1]),results.onLine1&&results.onLine2){const t=e.x-results.x,n=e.y-results.y,i=t*t+n*n;i<best.dist2&&(!a[o].mob||a[o].alive)&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[l],v2:s[l+1]})}if(results=simulation.checkLineIntersection(e,t,s[0],s[n]),results.onLine1&&results.onLine2){const t=e.x-results.x,l=e.y-results.y,i=t*t+l*l;i<best.dist2&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[0],v2:s[n]})}}};best={x:null,y:null,dist2:1/0,who:null,v1:null,v2:null};const o={x:e.x+7e3*Math.cos(t),y:e.y+7e3*Math.sin(t)};if(a(e,o,map),a(e,o,body),m.isCloak||a(e,o,[player]),best.who&&best.who===player&&m.immuneCycle<m.cycle){const e=.0011*spawn.dmgToPlayerByLevelsCleared();m.takeDamage(e),simulation.drawList.push({x:best.x,y:best.y,radius:1500*e,color:"rgba(80,0,255,0.5)",time:20})}best.dist2===1/0&&(best=o),ctx.moveTo(e.x,e.y),ctx.lineTo(best.x,best.y),ctx.lineWidth=10,ctx.stroke()},o.pulse=function(e,t,a=this.position){let o;t=Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x);let s=5.5*e;const n=[{x:a.x+20*Math.cos(t),y:a.y+20*Math.sin(t)},{x:a.x+5e3*Math.cos(t),y:a.y+5e3*Math.sin(t)}],l=function(e,t,a){for(let s=0;s<a.length;++s){let n=a[s].vertices;const l=n.length-1;for(let i=0;i<l;i++)if(results=simulation.checkLineIntersection(e,t,n[i],n[i+1]),results.onLine1&&results.onLine2){const t=e.x-results.x,l=e.y-results.y,c=t*t+l*l;c<o.dist2&&(!a[s].mob||a[s].alive)&&(o={x:results.x,y:results.y,dist2:c,who:a[s],v1:n[i],v2:n[i+1]})}if(results=simulation.checkLineIntersection(e,t,n[0],n[l]),results.onLine1&&results.onLine2){const t=e.x-results.x,i=e.y-results.y,c=t*t+i*i;c<o.dist2&&(o={x:results.x,y:results.y,dist2:c,who:a[s],v1:n[0],v2:n[l]})}}};if(o={x:null,y:null,dist2:1/0,who:null,v1:null,v2:null},o.who||(l(n[0],n[1],body),l(n[0],n[1],[player]),l(n[0],n[1],map),o.dist2!=1/0&&(n[n.length-1]={x:o.x,y:o.y})),o.who){b.explosion(n[1],s,"rgba(0,0,0,0)");const e=1.2*s;b.explosion({x:n[1].x+e*(Math.random()-.5),y:n[1].y+e*(Math.random()-.5)},s,"rgba(0,0,0,0.7)"),b.explosion({x:n[1].x+e*(Math.random()-.5),y:n[1].y+e*(Math.random()-.5)},s,"rgba(0,0,0,0.7)")}ctx.beginPath(),ctx.moveTo(n[0].x,n[0].y),ctx.lineTo(n[1].x,n[1].y),e>50&&(ctx.strokeStyle="rgba(0,0,0,0.10)",ctx.lineWidth=70,ctx.stroke()),ctx.strokeStyle="rgba(0,0,0,0.25)",ctx.lineWidth=20,ctx.stroke(),ctx.strokeStyle="#f00",ctx.lineWidth=4,ctx.stroke();const i=Vector.sub(n[1],n[0]),c=Vector.magnitude(i);for(let t=0,a=Math.floor(5e-4*c*e);t<a;t++){const e=Math.random();simulation.drawList.push({x:n[0].x+i.x*e+10*(Math.random()-.5),y:n[0].y+i.y*e+10*(Math.random()-.5),radius:1.5+5*Math.random(),color:"rgba(0,0,0,0.5)",time:Math.floor(9+25*Math.random()*Math.random())})}};let l=0;o.gun=function(){if(0==b.activeGun&&this.seePlayer.recall&&!(simulation.cycle%20)){this.fireDir=Vector.normalise(Vector.sub(this.seePlayer.position,this.position));const e=Vector.magnitudeSquared(Vector.sub(this.position,player.position)),t=Vector.normalise(Vector.sub(Vector.add(player.position,Vector.mult(player.velocity,Math.sqrt(e)/60)),this.position));d(this.position.x,this.position.y);simulation.accelScale;Matter.Body.setVelocity(mob[mob.length-1],Vector.mult(t,.009*this.mass))}if(1==b.activeGun){if(this.seePlayer.recall&&!(simulation.cycle%90)){for(let e=0;e<12;e++){const e=Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x),t=e+1*(Math.random()-.5),a=52+8*Math.random();d(this.position.x+35*Math.cos(e)+15*(Math.random()-.5),this.position.y+35*Math.sin(e)+15*(Math.random()-.5)),Matter.Body.setVelocity(mob[mob.length-1],{x:a*Math.cos(t),y:a*Math.sin(t)})}}}else if(2==b.activeGun){if(this.seePlayer.recall&&!(simulation.cycle%20)){const e=3,t=.13,a=Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x);let o=a-t*(e-1)/2;const s=33;for(let n=0;n<e;n++)h(this.position.x+30*Math.cos(a),this.position.y+30*Math.sin(a)),Matter.Body.setVelocity(mob[mob.length-1],{x:s*Math.cos(o),y:s*Math.sin(o)}),o+=t}}else if(3==b.activeGun){this.doLongitudinal();const e=.275,t=Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x),a=t+.3*(Math.random()-.5);this.waves.push({position:{x:this.position.x+25*Math.cos(t),y:this.position.y+25*Math.sin(t)},angle:a-e,unit1:{x:Math.cos(a-e),y:Math.sin(a-e)},unit2:{x:Math.cos(a+e),y:Math.sin(a+e)},arc:2*e,radius:25,reflection:0,expanding:1,resonanceCount:0})}else if(4==b.activeGun){if(this.seePlayer.recall&&!(simulation.cycle%30)){this.fireDir=Vector.normalise(Vector.sub(this.seePlayer.position,this.position)),function(e,t=.007){mobs.spawn(e.x,e.y,3,20,"#000000");let a=mob[mob.length-1];a.accelMag=t,Matter.Body.setDensity(a,1e-13),a.stroke="transparent",a.showHealthBar=!1,a.collisionFilter.category=cat.mobBullet,a.collisionFilter.mask=cat.bullet|cat.player|cat.map|cat.body,a.leaveBody=!1,a.isDropPowerUp=!1,a.onHit=function(){b.explosion(this.position,(tech.isMissileBig?210:180)+60*Math.random()),this.death()},a.do=function(){this.seePlayerByHistory(),this.alwaysSeePlayer(),this.attraction();const e=Math.atan2(this.seePlayer.position.y-this.position.y,this.seePlayer.position.x-this.position.x);Matter.Body.setAngle(this,e),simulation.drawList.push({x:this.position.x,y:this.position.y,radius:10,color:`rgba(255,155,0,${Math.random()})`,time:simulation.drawTime})}}(this.position);const e=10+8*simulation.accelScale+(20*Math.random()-20*Math.random());Matter.Body.setVelocity(mob[mob.length-1],{x:this.velocity.x+this.fireDir.x*e,y:this.velocity.y+this.fireDir.y*e})}}else if(5==b.activeGun){if(this.seePlayer.recall&&!(simulation.cycle%30)){this.fireDir=Vector.normalise(Vector.sub(this.seePlayer.position,this.position)),function(e,t,a=90+Math.ceil(60/simulation.accelScale),o=Math.min(550,250+3*simulation.difficulty),s=3){mobs.spawn(e,t,4,s,"rgb(0,0,0)");let n=mob[mob.length-1];n.stroke="transparent",n.onHit=function(){this.explode(this.mass)},Matter.Body.setDensity(n,4e-5),n.lifeSpan=a,n.timeLeft=n.lifeSpan,n.frictionAir=0,n.restitution=.8,n.leaveBody=!1,n.isDropPowerUp=!1,n.isBadTarget=!0,n.isMobBullet=!0,n.onDeath=function(){Vector.magnitude(Vector.sub(player.position,this.position))<o&&m.immuneCycle<m.cycle&&(m.immuneCycle=m.cycle+m.collisionImmuneCycles,m.takeDamage(.015*spawn.dmgToPlayerByLevelsCleared())),simulation.drawList.push({x:this.position.x,y:this.position.y,radius:o,color:"rgba(0,0,0,0.3)",time:simulation.drawTime})},n.showHealthBar=!1,n.collisionFilter.category=cat.mobBullet,n.collisionFilter.mask=cat.map|cat.body|cat.player,n.do=function(){this.timeLimit(),ctx.save(),ctx.beginPath(),ctx.arc(this.position.x,this.position.y,o*(1.01-this.timeLeft/this.lifeSpan),0,2*Math.PI),ctx.fillStyle="rgba(0,0,0,0.05)",ctx.fill(),ctx.restore()}}(this.position.x,this.position.y);const e=10+8*simulation.accelScale+(20*Math.random()-20*Math.random());Matter.Body.setVelocity(mob[mob.length-1],{x:this.velocity.x+this.fireDir.x*e,y:this.velocity.y+this.fireDir.y*e})}}else if(6==b.activeGun){if(this.seePlayer.recall&&!(simulation.cycle%30)){this.fireDir=Vector.normalise(Vector.sub(this.seePlayer.position,this.position)),o.drop(this.position.x,this.position.y);const e=10+8*simulation.accelScale+(20*Math.random()-20*Math.random());Matter.Body.setVelocity(mob[mob.length-1],{x:this.velocity.x+this.fireDir.x*e,y:this.velocity.y+this.fireDir.y*e})}}else if(7==b.activeGun){ctx.save(),ctx.lineWidth="8",ctx.strokeStyle="rgba(100, 0, 150, 0.1)",ctx.beginPath();for(let e=0,t=bullet.length;e<t;++e){const t=bullet[e].position.x-this.position.x,a=bullet[e].position.y-this.position.y,o=Math.sqrt(t*t+a*a);if(o<500){ctx.moveTo(this.position.x+o,this.position.y),ctx.arc(this.position.x,this.position.y,o,0,2*Math.PI);const s=Math.atan2(a,t),n=1500*bullet[e].mass*simulation.g/(.05*o);bullet[e].force.x+=n*Math.cos(s),bullet[e].force.y+=n*Math.sin(s)}}ctx.stroke(),ctx.restore()}else if(8==b.activeGun){if(this.seePlayer.recall&&!(simulation.cycle%1)){this.fireDir=Vector.normalise(Vector.sub(this.seePlayer.position,this.position)),function(e,t,a=9,o=70){mobs.spawn(e,t,o,a,"rgb(0,0,0)");let s=mob[mob.length-1];s.stroke="transparent",Matter.Body.setDensity(s,5e-5),s.timeLeft=120,s.accelMag=6e-5,s.isVerticesChange=!0,s.delay=360*simulation.CDScale,s.spikeVertex=0,s.spikeLength=0,s.isSpikeGrowing=!1,s.spikeGrowth=0,s.isSpikeReset=!1,s.frictionAir=0,s.restitution=0,s.leaveBody=!1,s.isDropPowerUp=!1,s.isBadTarget=!0,s.isMobBullet=!0,s.showHealthBar=!1,s.isUnblockable=!0,s.collisionFilter.category=cat.mobBullet,s.collisionFilter.mask=cat.body,s.do=function(){if(this.distanceToPlayer2()<4e4){this.force=Vector.mult(Vector.normalise(Vector.sub(player.position,this.position)),.004*this.mass);const e=1;Matter.Body.setVelocity(this,{x:this.velocity.x*e,y:this.velocity.y*e})}if(this.timeLimit(),this.radius<50){const e=1.05;Matter.Body.scale(this,e,e),this.radius*=e}if(Matter.Query.collides(this,map).length>0||Matter.Query.collides(this,body).length>0&&this.speed<10){const e=.97;Matter.Body.setVelocity(this,{x:this.velocity.x*e,y:this.velocity.y*e});const t=.9;Matter.Body.scale(this,t,t),this.radius*=t,this.radius<1&&this.death()}else this.attach()},s.attach=function(){Matter.Query.collides(this,[player]).length>0&&(Matter.Body.setPosition(this,player.position),player.speed>2.5&&Matter.Body.setVelocity(player,Vector.mult(player.velocity,.94)),Matter.Body.setAngularVelocity(player,.9*player.angularVelocity),m.takeDamage(3e-5))}}(this.position.x,this.position.y,7+Math.ceil(this.radius/15),69);const e=10+8*simulation.accelScale+(20*Math.random()-20*Math.random());Matter.Body.setVelocity(mob[mob.length-1],{x:this.velocity.x+this.fireDir.x*e,y:this.velocity.y+this.fireDir.y*e})}}else if(9==b.activeGun)if(l>1){this.fireDir=Vector.normalise(Vector.sub(this.seePlayer.position,this.position)),function(e,t){mobs.spawn(e,t,5,20,"black");let a=mob[mob.length-1];a.stroke="black",a.vertices=Matter.Vertices.rotate(a.vertices,Math.PI,a.position),a.onHit=function(){simulation.drawList.push({x:this.position.x,y:this.position.y,radius:20,color:simulation.mobDmgColor,time:simulation.drawTime})},Matter.Body.setDensity(a,4e-5),a.timeLeft=220,a.frictionAir=-.01,a.restitution=-1,a.leaveBody=!1,a.isDropPowerUp=!1,a.isBadTarget=!0,a.isMobBullet=!0,a.showHealthBar=!1,a.collisionFilter.category=cat.mobBullet,a.collisionFilter.mask=cat.player;let o=0;a.do=function(){this.timeLimit(),this.alwaysSeePlayer();const e=()=>{const e=a.radius+10*a.radius,t=Math.atan2(a.seePlayer.position.y-this.position.y,a.seePlayer.position.x-this.position.x);a.vertices[2].x=this.position.x+Math.cos(this.angle)*e,a.vertices[2].y=this.position.y+Math.sin(this.angle)*e,a.vertices[4].x=this.position.x+Math.cos(this.angle)*e,a.vertices[4].y=this.position.y+Math.sin(this.angle)*e,a.vertices[0].x=this.position.x+Math.cos(this.angle)*e,a.vertices[0].y=this.position.y+Math.sin(this.angle)*e,Matter.Body.setAngle(this,t)},t=Vector.mult(Vector.normalise(Vector.sub(this.vertices[2],a.position)),3e4),s=Vector.mult(Vector.normalise(Vector.sub(this.vertices[4],a.position)),3e4),n=Vector.mult(Vector.normalise(Vector.sub(this.vertices[0],a.position)),3e4);if(a.vertices[2].x=this.position.x+t.x/100,a.vertices[2].y=this.position.y+t.y/100,a.vertices[4].x=this.position.x+s.x/75,a.vertices[4].y=this.position.y+s.y/75,a.vertices[0].x=this.position.x+n.x/75,a.vertices[0].y=this.position.y+n.y/75,0==o&&(e(),o++),Matter.Query.collides(this,map).length>0||Matter.Query.collides(this,body).length>0){const e=.69;Matter.Body.setVelocity(this,{x:this.velocity.x*e,y:this.velocity.y*e}),0==this.velocity.x&&0==this.velocity.y&&this.death(),this.frictionAir+=1e-4,Matter.Body.setAngularVelocity(this,0)}if(Matter.Query.collides(this,[player]).length>0&&(!m.isCloak||!tech.isIntangible)&&m.immuneCycle<m.cycle){m.immuneCycle=m.cycle+m.collisionImmuneCycles;const e=.013*spawn.dmgToPlayerByLevelsCleared();m.takeDamage(e)}}}(this.position.x,this.position.y);const e=10+80*simulation.accelScale;Matter.Body.setVelocity(mob[mob.length-1],{x:this.velocity.x+this.fireDir.x*e,y:this.velocity.y+this.fireDir.y*e}),l=0}else l+=.02,this.railGun();else if(10==b.activeGun){if(this.seePlayer.recall&&!(simulation.cycle%100)){this.fireDir=Vector.normalise(Vector.sub(this.seePlayer.position,this.position)),o.laserMine(this.position.x,this.position.y);const e=10+8*simulation.accelScale+(20*Math.random()-20*Math.random());Matter.Body.setVelocity(mob[mob.length-1],{x:this.velocity.x+this.fireDir.x*e,y:this.velocity.y+this.fireDir.y*e})}}else if(11==b.activeGun)if(l>1)this.pulse(100*l),l=0;else if(this.energy<1||this.energy>.5){l+=.01,ctx.beginPath();Math.sqrt(l);ctx.arc(this.position.x,this.position.y,30*l,0,2*Math.PI),ctx.fillStyle="#000000",ctx.strokeStyle="transparent",ctx.fill(),ctx.stroke(),this.energy-=.01,ctx.strokeStyle="#000000",ctx.lineWidth=1.5}else l=0,this.energy+=.1},o.laserMine=function(e,t){mobs.spawn(e,t,3,20,"#000000");let a=mob[mob.length-1];a.stroke="#00000000",Matter.Body.setDensity(a,5e-6),a.isUnstable=!0,a.timeLeft=40+Math.floor(180*Math.random()),a.leaveBody=!1,a.isDropPowerUp=!1,a.collisionFilter.mask=cat.bullet|cat.player|cat.map,a.showHealthBar=!1,o.onHit=function(){this.death()},a.do=function(){this.timeLimit(),Matter.Body.setAngularVelocity(this,.01),ctx.beginPath(),ctx.lineWidth=1,ctx.strokeStyle="#00000000";for(let e=0;e<this.vertices.length;e++){const t=this.vertices[e];Vector.add(t,Vector.mult(Vector.normalise(Vector.sub(t,this.position)),2500));o.lasers(this.vertices[0],this.angle+Math.PI/3),o.lasers(this.vertices[1],this.angle+Math.PI),o.lasers(this.vertices[2],this.angle-Math.PI/3)}ctx.strokeStyle="black",ctx.stroke(),ctx.save(),ctx.beginPath(),ctx.moveTo(this.vertices[0].x,this.vertices[0].y),ctx.lineTo(this.vertices[1].x,this.vertices[1].y),ctx.lineTo(this.vertices[2].x,this.vertices[2].y),ctx.fillStyle="#000000",ctx.strokeStyle="transparent",ctx.fill(),ctx.closePath(),ctx.stroke(),ctx.restore()}},o.seeker=function(e,t){mobs.spawn(e,t,sides=5,a=5,"rgb(0,0,0)");let o=mob[mob.length-1];o.stroke="transparent",o.onHit=function(){this.explode(20*this.mass)},Matter.Body.setDensity(o,15e-6),o.timeLeft=420,o.accelMag=17e-5*simulation.accelScale,o.frictionAir=.01,o.restitution=.5,o.leaveBody=!1,o.isDropPowerUp=!1,o.isBadTarget=!0,o.isMobBullet=!0,o.showHealthBar=!1,o.collisionFilter.category=cat.mobBullet,o.collisionFilter.mask=cat.player|cat.map|cat.body|cat.bullet;o.do=function(){this.alwaysSeePlayer(),this.timeLimit(),this.attraction()}},o.drop=function(e,t){mobs.spawn(e,t,sides=90,a=30,"rgb(0,255,100,0.7)");let s=mob[mob.length-1];s.stroke="transparent",s.onDeath=function(){for(let e=0,t=5;e<t;e++)o.seeker(this.position.x,this.position.y),Matter.Body.setVelocity(mob[mob.length-1],{x:30*Math.random()-30*Math.random(),y:30*Math.random()-30*Math.random()})},Matter.Body.setDensity(s,15e-6),s.timeLeft=60,s.frictionAir=.01,s.restitution=.5,s.leaveBody=!1,s.isDropPowerUp=!1,s.isBadTarget=!0,s.isMobBullet=!0,s.showHealthBar=!1,s.collisionFilter.category=cat.mobBullet,s.collisionFilter.mask=null,s.maxRadius=30;s.do=function(){Matter.Query.collides(this,[player]).length>0&&(!m.isCloak||!tech.isIntangible)&&m.immuneCycle<m.cycle&&(Matter.Body.setPosition(this,player.position),player.speed>2.5&&Matter.Body.setVelocity(player,Vector.mult(player.velocity,.94))),Matter.Query.collides(this,map).length>0&&Matter.Body.setVelocity(this,Vector.mult(this.velocity,.1)),this.alwaysSeePlayer(),this.timeLimit(),ctx.save(),ctx.beginPath(),ctx.moveTo(this.position.x,this.position.y),ctx.fillStyle="black",ctx.arc(this.position.x,this.position.y,this.maxRadius,0,2*Math.PI),ctx.stroke(),ctx.fill(),ctx.restore(),this.maxRadius>0&&(this.maxRadius-=.5)}}};u(-13350,-1800),x(-6500+Math.floor(200*Math.random())-Math.floor(200*Math.random()),-3400+Math.floor(200*Math.random())-Math.floor(200*Math.random())),y(-9275+Math.floor(200*Math.random())-Math.floor(200*Math.random()),-3325+Math.floor(200*Math.random())-Math.floor(200*Math.random())),x(-5750+Math.floor(200*Math.random())-Math.floor(200*Math.random()),-850+Math.floor(200*Math.random())-Math.floor(200*Math.random())),y(-3600+Math.floor(200*Math.random())-Math.floor(200*Math.random()),-1325+Math.floor(200*Math.random())-Math.floor(200*Math.random())),x(1425+Math.floor(200*Math.random())-Math.floor(200*Math.random()),-800+Math.floor(200*Math.random())-Math.floor(200*Math.random())),r(),r(),r(),r(),r(),color.map="#00000000",level.customTopLayer=()=>{dong.position.x>-3825?dong.force.y-=dong.mass*simulation.g:dong.force.y+=dong.mass*simulation.g,Matter.Body.setAngularVelocity(dong,-.5),t.isClosing=1!=e,t.openClose(),t.draw();for(let e=0,t=map.length;e<t;e++){ctx.beginPath(),ctx.moveTo(map[e].vertices[0].x,map[e].vertices[0].y);for(let t=0,a=map[e].vertices.length;t<a;t++)ctx.lineTo(map[e].vertices[t].x,map[e].vertices[t].y);ctx.lineTo(map[e].vertices[0].x,map[e].vertices[0].y),ctx.fillStyle="rgba(68,68,68)",ctx.strokeStyle="transparent",ctx.fill(),ctx.stroke()}for(let e=0,t=mob.length;e<t;e++)mob[e].restoreBoss&&(ctx.save(),ctx.setTransform(1,0,.5,1,0,0),ctx.fillStyle="rgba(100, 100, 100, 0.3)",ctx.fillRect(canvas.width2/2,canvas.height2/10,canvas.width2,30),ctx.fillStyle="rgba(0,0,0,0.7)",ctx.fillRect(canvas.width2/2,canvas.height2/10,canvas.width2*mob[e].health,30),ctx.restore())};const R={restoreBoss:u};Object.assign(spawn,R)},map(){const e=level.elevator(-80.4,-931.6,180,50,-1550);player.position.x<16300&&player.position.y;const t=level.hazard(15900,-960,400,6e3),a=level.hazard(15147.2,-1782.4,2e3,822),o=level.boost(5950,-20,700),s=level.boost(21088,-1672,700),n=level.boost(19390,-31,1700),l=level.boost(19390,-31,1700),i=level.boost(17274,-1242,1e3),c=level.portal({x:443,y:-1636},Math.PI,{x:21391.9,y:-1806.3},-Math.PI),p=level.portal({x:16838.3,y:-626.7},Math.PI,{x:16882.8,y:-2566.5},-Math.PI),r=level.button(21889,-10),m=level.door(19119,-2133,110,510,480),h=level.button(18711,-2210),d=level.door(17041,-412,110,510,480),w=level.button(20456.6,-1636.2),y=level.door(20238,-781.4,88,452,412);level.setPosToSpawn(0,-50),level.exit.x=15316,level.exit.y=-84,spawn.mapRect(level.enter.x,level.enter.y+20,100,20),spawn.mapRect(level.exit.x,level.exit.y+20,100,20),level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#001738",color.map="#444",level.custom=()=>{ctx.fillStyle="rgba(63,247,251,0.8)",ctx.fillRect(22330,-2713.75,550,700),ctx.fillRect(22330,-1743.5,550,700),ctx.fillRect(22330,-754.25,550,700),ctx.fillRect(15845,-1262.2,550,300),ctx.fillStyle="rgba(235,235,235,0.9)",ctx.fillRect(-192,-1973,6484,2071),ctx.fillRect(15109.5,-2867.5,7284,2971),ctx.fillStyle="rgba(35,35,35,0.8)",ctx.fillRect(15145.9,-960,200,25),ctx.fillStyle="rgba(255,255,255,0.9)",ctx.fillRect(-677.3,-610.9,15,15),ctx.fillRect(-910.4,458.3,15,15),ctx.fillRect(-1029,713.7,15,15),ctx.fillRect(42.6,1332.2,15,15),ctx.fillRect(277.3,751.8,15,15),ctx.fillRect(797.1,553.2,15,15),ctx.fillRect(-1458.9,340.9,15,15),ctx.fillRect(-1780,-54.6,15,15),ctx.fillRect(-1260.3,-686.4,15,15),ctx.fillRect(-2064.3,-394.6,15,15),ctx.fillRect(-1815.7,1156.2,15,15),ctx.fillRect(-1998.1,1118.4,15,15),r.query(),r.draw(),h.query(),h.draw(),w.query(),w.draw(),t.query(),a.query(),ctx.fillStyle=`hsla(160, 100%, 43%,${.3+.07*Math.random()})`,ctx.fillRect(15900+400*Math.random(),-1360,2,6e3),r.isUp?m.isClosing=!0:m.isClosing=!1,h.isUp?d.isClosing=!0:d.isClosing=!1,w.isUp?y.isClosing=!0:y.isClosing=!1,m.openClose(),d.openClose(),y.openClose(),c[2].query(),c[3].query(),p[2].query(),p[3].query(),o.query(),s.query(),n.query(),l.query(),i.query(),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{m.draw(),d.draw(),y.draw(),c[0].draw(),c[1].draw(),c[2].draw(),c[3].draw(),p[0].draw(),p[1].draw(),p[2].draw(),p[3].draw(),e.move(),player.position.x>15900&&player.position.x<16300&&player.position.y>-1360.2?Matter.Body.setVelocity(player,{x:player.velocity.x,y:player.velocity.y+10}):Matter.Body.setVelocity(player,{x:player.velocity.x,y:player.velocity.y-.2})},spawn.mapRect(-300,0,6684,100),spawn.mapRect(-300,-2071,154,2071),spawn.mapRect(2511,-300,1309,308),spawn.mapRect(3820,-184,1309,184),spawn.mapRect(-300,-739,2549,100),spawn.mapRect(2056,-1309,2764,169),spawn.mapRect(2056,-1309,193,650),spawn.mapRect(4636,-1309,193,793),spawn.mapRect(4821,-654,955,138),spawn.mapRect(6237,-2071,147,2071),spawn.mapRect(-300,-2071,6684,154),spawn.mapRect(245,-360,70,400),spawn.mapRect(500,-1929,154,462),spawn.mapRect(185,-1517,469,77),spawn.mapRect(2773,-682,469,77),spawn.mapRect(3743,-566,77,469),spawn.mapRect(3947,-851,469,77),spawn.mapRect(5313,-1309,1e3,70),spawn.mapRect(4818,-1006,400,70),spawn.mapRect(4768,-1626,800,70),spawn.mapRect(4760,-1626,70,400),spawn.debris(3267.6,-797.1,700,5),spawn.debris(1626,-372.5,1700,8),spawn.debris(1880.1,-1508.9,3700,16),spawn.debris(5335.3,-1431.6,3700,16),spawn.debris(1563.8,-1087.9,700,5),spawn.bodyRect(1540,-1110,218,125,.9),spawn.randomMob(2903.9,-754.5,.7),spawn.randomMob(5577,-217,.6),spawn.randomMob(765.8,-1029.7,.5),spawn.randomMob(20079.4,-2219.7,.6),spawn.randomMob(20079.4,-2219.7,.7),spawn.randomMob(20890.9,-1306,.5),spawn.randomMob(21284.2,-983.1,.5),spawn.randomMob(20381,-254.2,.7),spawn.randomMob(21027.8,-473.8,.6),spawn.randomMob(19448.2,-1323.3,.6),spawn.randomMob(18397.7,-711.2,.6),spawn.randomMob(15547.2,-2249.6,.6),spawn.randomSmallMob(16114.6,-2524.2),spawn.randomSmallMob(15378.9,-2549.6),spawn.randomSmallMob(893.5,-120.8),spawn.randomSmallMob(3521.8,-419.6),spawn.randomSmallMob(4386.2,-439.6),spawn.randomSmallMob(5667,-847.8),spawn.randomSmallMob(3158.5,-1581.8),spawn.randomSmallMob(3866.7,-1483.2),spawn.randomSmallMob(4652.3,-1729.4),spawn.randomSmallMob(1068.7,-106.1),spawn.randomSmallMob(3545,-413),spawn.randomSmallMob(4231.7,-446.3),spawn.randomSmallMob(1456.4,-1014.8),spawn.randomSmallMob(20432.4,-1374.3),spawn.randomSmallMob(20381,-254.2),spawn.randomSmallMob(20353.4,-1845.8),spawn.randomSmallMob(20353.4,-1845.8),spawn.randomSmallMob(20648.1,-136.8),spawn.randomSmallMob(20024.4,-2213.1),spawn.randomSmallMob(17438.7,-876.7),spawn.debris(17732.3,-550,700,5),spawn.debris(18006.4,-2181.3,700,5),spawn.debris(16108.6,-2621.1,700,5),spawn.debris(20823.6,-1332.1,1300,5),spawn.debris(21095.5,-423.4,700,5),spawn.randomSmallMob(1300,-70),spawn.shieldingBoss(769.8,-1119),spawn.mapRect(15e3,0,515,185),spawn.mapRect(17015,0,5500,185),spawn.mapRect(15e3,-2972,185,2972),spawn.mapRect(15e3,-2972,7515,185),spawn.mapRect(22330,-2972,185,2972),spawn.mapRect(17002,-2972,169,2564),spawn.mapRect(19089,-2972,169,855),spawn.mapRect(19089,-1625,169,1800),spawn.mapRect(20760,-2972,169,1350),spawn.mapRect(19720,-1625,1725,162),spawn.mapRect(21440,-2325,169,863),spawn.mapRect(19720,-855,2725,162),spawn.mapRect(22330,-2763.75,400,800),spawn.mapRect(22330,-1793.5,400,800),spawn.mapRect(22330,-804.25,400,800),spawn.mapRect(19904,-1465,85,362),spawn.mapRect(19542,-1191,412,88),spawn.mapRect(18546,-2199,600,82),spawn.mapRect(18546,-2499,82,2300),spawn.mapRect(18108,-326,500,82),spawn.mapRect(17750,-682,300,82),spawn.mapRect(17156,-468,500,60),spawn.mapRect(18022,-1082,600,82),spawn.mapRect(17151,-1196,500,82),spawn.mapRect(17453,-2060,500,82),spawn.mapRect(18197,-2269,400,82),spawn.mapRect(18108,-326,500,82),spawn.mapRect(20542,-1191,612,88),spawn.mapRect(20238,-1191,88,412),spawn.mapRect(21520,-1468,88,412),spawn.mapRect(20238,-330.2,88,412),spawn.mapRect(20819,-328.3,412,88),spawn.mapRect(21532,-708,88,412),spawn.mapRect(15483.8,12.5,388,30),spawn.mapRect(15487.6,76.6,488,24),spawn.mapRect(15506.5,134.2,288,45),spawn.mapVertex(16758.6,135.3,"400 -30   -350 -40   -400 30   400 30"),spawn.mapVertex(16758.6,55.3,"423 -30   -408 -20   -400 20   400 20"),spawn.mapRect(15310,-960,600,135),spawn.mapRect(16290,-960,800,135),spawn.mapRect(16524.8,-2726.8,40,400),spawn.mapRect(16524.8,-2130.9,400,40),spawn.mapRect(16010.2,-2412.2,300,40),spawn.mapRect(15379.2,-2055.1,400,40),spawn.mapRect(21531.9,-707.8,488,8),spawn.mapVertex(22207.8,-103,"325 -200   100 -200   325 -300"),spawn.mapRect(22056.6,-70,225,212),spawn.mapVertex(20723.1,-1734,"325 -200   100 -200   325 -300"),spawn.mapRect(20571.9,-1701,225,212),spawn.mapVertex(22207.8,-103,"325 -200   100 -200   325 -300"),spawn.mapRect(22056.6,-70,225,212),spawn.bodyRect(21525,-113,50,50,9),spawn.bodyRect(18993,-2283,50,50,9),spawn.bodyRect(20303,-1736,50,50,9);let x=Math.floor(5*Math.random());spawn[["blinkBoss","shooterBoss","launcherBoss","pulsarBoss","beetleBoss","bladeBoss","revolutionBoss","dragonFlyBoss","spiderBoss"][x]](17902,-1689,100,!1),powerUps.addResearchToLevel()},cantilever(){simulation.inGameConsole("<strong>underpass</strong> by <span class='color-var'>Eclipse#7932</span>"),level.setPosToSpawn(0,-50),level.exit.x=5500,level.exit.y=950,spawn.mapRect(level.enter.x,level.enter.y+20,100,20),spawn.mapRect(level.exit.x,level.exit.y+20,100,20),spawn.mapRect(level.exit.x-50,level.exit.y+30,200,100),spawn.mapRect(level.exit.x-50,level.exit.y-300,200,100);const e=level.elevator(level.exit.x-150,level.exit.y-300,100,425,level.exit.y-300);spawn.randomMob(-200,350,1/0),spawn.mapRect(-100,0,600,100),spawn.bodyRect(0,300,50,50),spawn.bodyRect(100,200,50,50),spawn.bodyRect(50,250,50,50),spawn.mapRect(450,-20,50,20),spawn.mapRect(-200,500,2200,100),spawn.mapRect(1850,380,100,50),spawn.bodyRect(80,-1300,70,1300,1,{friction:.03,frictionAir:.001}),spawn.mapRect(3400,500,300,100),spawn.mapRect(3650,500,100,800),spawn.mapRect(3650,1300,2600,100),spawn.mapRect(6150,600,100,800),spawn.mapRect(5650,600,100,650),spawn.randomMob(4700,550,1/0),spawn.randomMob(4700,450,1/0),spawn.randomMob(4600,550,1/0);const t=level.toggle(3500,500,!1),a=level.button(5900,1300),o=level.elevator(3750,-1200,100,1800,-1200);level.defaultZoom=1500,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#d8badf",level.custom=()=>{level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{t.query(),a.query(),a.draw(),t.isOn&&(o.force.y-=400),a.isUp||(e.force.y-=100),o.move(),e.move()},powerUps.addResearchToLevel()},tlinat(){simulation.inGameConsole("<strong>tlinat</strong> by <span class='color-var'>Richard0820</span>"),simulation.fallHeight=1/0,level.setPosToSpawn(0,-1e3),level.exit.x=5100,level.exit.y=3770,spawn.mapRect(level.enter.x,level.enter.y+20,100,20),spawn.mapRect(level.exit.x,level.exit.y+20,100,20),level.defaultZoom=3e3,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#d8dadf";let e=0,t=0;function a(e,t,a=50+Math.ceil(90*Math.random())){mobs.spawn(e,t,7,a,"transparent");let o=mob[mob.length-1];o.seeAtDistance2=3e5,o.accelMag=4e-5+15e-5*simulation.accelScale,map.length&&(o.searchTarget=map[Math.floor(Math.random()*(map.length-1))].position),o.damageReduction=.5,o.stroke="transparent",o.alpha=1,o.isNotCloaked=!1,o.isBadTarget=!0,o.collisionFilter.mask=cat.bullet,o.showHealthBar=!1,o.memory=600,o.do=function(){if(function(e,t){let a={x:0,y:0},o={x:0,y:0},s=0;for(const n of t)n!==e&&Vector.magnitudeSquared(Vector.sub(e.position,n.position))<9e4&&(a=Vector.add(a,n.position),o=Vector.add(o,n.velocity),s++);if(s>0){a=Vector.div(a,s),o=Vector.div(o,s);const t=Vector.mult(Vector.sub(a,e.position),.01);e.force=Vector.add(e.force,t);const n=Vector.mult(Vector.sub(e.position,a),1e-4);e.force=Vector.add(e.force,n);const l=Vector.mult(Vector.sub(o,e.velocity),.04);e.force=Vector.add(e.force,l)}}(o,mob),this.speed>7&&Matter.Body.setVelocity(this,{x:.8*this.velocity.x,y:.8*this.velocity.y}),this.seePlayerCheckByDistance(),this.checkStatus(),this.attraction(),this.search(),this.distanceToPlayer2()<this.seeAtDistance2?this.alpha<1&&(this.alpha+=.011*simulation.CDScale):this.alpha>0&&(this.alpha-=.05),this.alpha>0){this.alpha>.7&&this.seePlayer.recall&&(this.seePlayer.recall&&this.healthBar1(),this.isNotCloaked||(this.isNotCloaked=!0,this.isBadTarget=!1,this.collisionFilter.mask=cat.player|cat.bullet)),ctx.beginPath();const e=this.vertices;ctx.moveTo(e[0].x,e[0].y);for(let t=1,a=e.length;t<a;++t)ctx.lineTo(e[t].x,e[t].y);ctx.lineTo(e[0].x,e[0].y),ctx.fillStyle=`rgba(255,255,255,${this.alpha*this.alpha})`,ctx.fill()}else this.isNotCloaked&&(this.isNotCloaked=!1,this.isBadTarget=!0,this.collisionFilter.mask=cat.bullet)}}function o(e,t,a){const o={g:["  #####  "," #     # "," #     # ","  #####  ","       # ","       # "," ######  "],Y:[" #     # ","  #   #  ","   # #   ","    #    ","    #    ","    #    ","    #    "],4:[" #       "," #    #  "," #    #  "," #    #  ","  ###### ","      #  ","      #  "],W:[" #     # "," #     # "," #     # "," #  #  # "," # # # # "," ##   ## "," #     # "],e:["  ######  "," #      # "," #      # "," #######  "," #        ","  #       ","  ######  "],c:[" ###### ","#       ","#       ","#       ","#       ","#       "," ###### ","        "],m:[" #       "," ### ### "," #  #  # "," #  #  # "," #  #  # "," #  #  # "," #  #  # "]},s=(e,t)=>{ctx.fillStyle="black",ctx.fillRect(e,t,50,50)},n=(e,t,a)=>{const n=o[e];if(n)for(let e=0;e<n.length;e++){const o=n[e];for(let n=0;n<o.length;n++)"#"===o[n]&&s(t+20*n,a+20*e)}};for(let o=0;o<a.length;o++)n(a[o],e+250*o-Math.abs(1.5*e),t)}simulation.inGameConsole('<img src="https://raw.githubusercontent.com/Whyisthisnotavalable/image-yy/main/Hotpot-removed.png" width="100" height="100" style="background-image: radial-gradient(circle, gray, black, transparent)"><br>Look up<br><em>Walk right to tp to maze</em><br><b>Exit is at the bottom left</b>'),Matter.Body.scale(player.parts[3],2,2),level.custom=()=>{if(level.exit.drawAndCheck(),level.enter.draw(),player.position.y>1e5&&Matter.Body.setPosition(player,{x:5100,y:-5925}),player.position.x>2500&&0==e){Matter.Body.setPosition(player,{x:5100,y:-5925}),e++;for(let e=0;e<map.length;e++)Math.random()<.75&&a(map[e].position.x,map[e].position.y);simulation.inGameConsole("Watch out for <b>ghosters</b><br>Peace ✌️")}player.position.x>level.exit.x&&player.position.x<level.exit.x+100&&player.position.y>level.exit.y-150&&player.position.y<level.exit.y-0&&player.velocity.y<.15&&0==t&&(t++,Matter.Body.scale(player.parts[3],.5,.5))},level.customTopLayer=()=>{player.position.x>-1200&&player.position.x<4500&&(o(2e3,-3e3,"JOIN OUR DISCORD SERVER"),o(1500,-2700,"DISCORD.GG/Q8gY4WeUcm"))},spawn.mapRect(-1e3,-950,5950,100),spawn.mapRect(-1325,-3450,100,2575),spawn.mapRect(-1325,-950,350,100),spawn.mapRect(4850,-3400,100,2550),spawn.mapRect(-1325,-3450,6275,100),function(e,t,a,o,s){const n=200,l=200,i=5e3,c=-6e3,p=[];for(let e=0;e<s;e++){p[e]=[];for(let t=0;t<s;t++)p[e][t]=1}const r=[];(function e(t,a){p[t][a]=0;const o=[{dx:0,dy:-1},{dx:1,dy:0},{dx:0,dy:1},{dx:-1,dy:0}];o.sort(()=>Math.random()-.5);for(const n of o){const o=t+2*n.dx,l=a+2*n.dy;o>=0&&o<s&&l>=0&&l<s&&1===p[o][l]&&(p[t+n.dx][a+n.dy]=0,p[o][l]=0,r.push({x:t+n.dx,y:a+n.dy}),e(o,l))}})(0,0),p[49][49]=1;for(let e=-1;e<51;e++){let t=-1,a=-1;for(let o=-1;o<51;o++)if(e>=0&&e<s&&o>=0&&o<s&&1===p[e][o])-1===t&&(t=o),a=o;else if(-1!==t){const o=i+e*n,s=c+t*l,p=n,r=(a-t+1)*l;r!==l&&spawn.mapRect(o,s,p,r),t=-1,a=-1}}for(let e=-1;e<51;e++){let t=-1,a=-1;for(let o=-1;o<51;o++)if(o>=0&&o<s&&e>=0&&e<s&&1===p[o][e])-1===t&&(t=o),a=o;else if(-1!==t){const o=i+t*n,s=c+e*l,p=(a-t+1)*n,r=l;p!==n&&spawn.mapRect(o,s,p,r),t=-1,a=-1}}spawn.mapRect(i-n,c-l,n*s,l),spawn.mapRect(i-n,c-l,n,l*s),spawn.mapRect(14800,c-l,n,51*l),spawn.mapRect(i-n,3800,51*n,l)}(0,0,0,0,50)},ruins(){simulation.inGameConsole("<strong>ruins</strong> by <span class='color-var'>SiddhUPe</span>"),level.setPosToSpawn(0,-50),level.exit.x=19531,level.exit.y=952,spawn.mapRect(level.enter.x,level.enter.y+20,100,20),spawn.mapRect(level.exit.x,level.exit.y+20,100,20),level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#d8dadf",level.customTopLayer=()=>{},spawn.mapRect(875,0,1e3,100),spawn.mapRect(1825,-400,50,225),spawn.mapRect(1825,-400,675,50),spawn.mapRect(1825,0,675,100),spawn.mapRect(2500,-575,50,225),spawn.mapRect(2500,-575,850,50),spawn.mapRect(2500,-100,875,175),spawn.mapRect(2500,75,875,25),spawn.mapRect(3350,-575,25,50),spawn.mapRect(2450,-50,75,75),spawn.mapRect(2425,-25,25,25),spawn.mapRect(2475,-75,25,25),spawn.mapRect(3375,-575,75,325),spawn.mapRect(3375,-100,75,300),spawn.mapRect(3450,-50,25,250),spawn.mapRect(3475,-25,25,225),spawn.mapRect(3500,0,25,200),spawn.mapRect(3525,25,25,175),spawn.mapRect(3550,75,25,125),spawn.mapRect(3550,50,25,150),spawn.mapRect(3575,75,25,125),spawn.mapRect(3600,100,25,100),spawn.mapRect(3625,150,25,50),spawn.mapRect(2875,-1375,350,75),spawn.mapRect(3150,-1375,75,350),spawn.mapRect(3100,-1300,50,50),spawn.mapRect(3075,-1300,25,25),spawn.mapRect(3125,-1250,25,25),spawn.mapRect(2825,-1375,50,125),spawn.mapRect(3100,-1025,125,50),spawn.mapRect(2800,-1350,25,75),spawn.mapRect(3125,-975,75,25),spawn.mapRect(3225,-1350,25,300),spawn.mapRect(2875,-1400,275,25),spawn.mapRect(2900,-1425,225,25),spawn.mapRect(3250,-1325,25,250),spawn.mapRect(2875,-1300,25,25),spawn.mapRect(3125,-1050,50,25),spawn.mapRect(5325,800,50,225),spawn.mapRect(5325,975,300,50),spawn.mapRect(5375,925,50,50),spawn.mapRect(5375,900,25,25),spawn.mapRect(5425,950,25,25),spawn.mapRect(5325,775,100,25),spawn.mapRect(5625,925,25,100),spawn.mapRect(5350,800,50,25),spawn.mapRect(5600,950,25,50),spawn.mapRect(5300,800,25,175),spawn.mapRect(5400,1025,225,25),spawn.mapRect(5450,1050,125,25),spawn.mapRect(5275,850,25,100),spawn.mapRect(5350,750,50,25),spawn.mapRect(5650,950,25,50),spawn.mapRect(16775,-975,275,50),spawn.mapRect(17e3,-975,50,200),spawn.mapRect(16775,-975,25,100),spawn.mapRect(17e3,-775,50,50),spawn.mapRect(16975,-725,75,25),spawn.mapRect(16950,-925,50,50),spawn.mapRect(16925,-925,75,25),spawn.mapRect(17e3,-925,25,75),spawn.mapRect(16975,-925,25,50),spawn.mapRect(16975,-925,25,75),spawn.mapRect(16800,-1e3,200,25),spawn.mapRect(16850,-1025,100,25),spawn.mapRect(17050,-925,25,200),spawn.mapRect(17075,-925,25,150),spawn.mapRect(16775,-925,50,25),spawn.mapRect(17e3,-750,25,25),spawn.mapRect(16975,-750,25,50),spawn.mapRect(16950,-725,75,25),spawn.mapRect(9475,-1150,50,200),spawn.mapRect(9475,-1150,25,25),spawn.mapRect(9475,-1150,300,50),spawn.mapRect(9725,-1150,25,25),spawn.mapRect(9725,-1150,50,200),spawn.mapRect(9500,-975,25,25),spawn.mapRect(9500,-975,75,25),spawn.mapRect(9700,-975,25,25),spawn.mapRect(9675,-975,75,25),spawn.mapRect(9525,-1175,200,25),spawn.mapRect(9550,-1200,150,100),spawn.mapRect(9450,-1125,50,150),spawn.mapRect(9750,-1125,50,150),spawn.mapRect(9525,-1100,50,50),spawn.mapRect(9675,-1100,50,50),spawn.mapRect(9575,-1100,25,25),spawn.mapRect(9650,-1100,25,25),spawn.mapRect(9500,-1050,50,25),spawn.mapRect(9700,-1100,25,75),spawn.mapRect(11925,-1175,75,275),spawn.mapRect(11925,-1175,475,75),spawn.mapRect(12325,-1175,75,275),spawn.mapRect(11925,-925,175,25),spawn.mapRect(12225,-925,175,25),spawn.mapRect(11950,-925,125,50),spawn.mapRect(12275,-925,100,50),spawn.mapRect(11925,-1200,475,25),spawn.mapRect(11975,-1225,375,25),spawn.mapRect(12e3,-1225,50,25),spawn.mapRect(12e3,-1275,325,75),spawn.mapRect(11900,-1175,50,250),spawn.mapRect(12375,-1175,50,250),spawn.mapRect(11900,-1150,50,150),spawn.mapRect(11875,-1150,50,200),spawn.mapRect(12375,-1150,75,200),spawn.mapRect(11975,-1100,50,25),spawn.mapRect(12300,-1100,75,25),spawn.mapRect(12300,-950,25,50),spawn.mapRect(12e3,-950,25,75),spawn.mapRect(3625,125,25,50),spawn.mapRect(3650,150,25,50),spawn.mapRect(3675,175,25,25),spawn.mapRect(3450,-75,25,50),spawn.mapRect(3475,-50,25,125),spawn.mapRect(3500,-25,25,125),spawn.mapRect(3500,0,50,125),spawn.mapRect(3550,25,25,125),spawn.mapRect(3575,50,25,125),spawn.mapRect(3600,75,25,75),spawn.mapRect(3600,100,50,75),spawn.mapRect(3650,125,25,75),spawn.mapRect(3675,150,25,50),spawn.mapRect(3675,150,75,450),spawn.mapRect(3675,525,700,75),spawn.mapRect(4300,150,75,450),mover=level.mover(3375,-100,75,100),pool=level.hazard(3750,200,550,325),spawn.mapRect(-150,-225,75,325),spawn.mapRect(-150,-325,425,100),spawn.mapRect(-100,-400,300,75),spawn.mapRect(-25,-475,150,75),spawn.mapRect(200,-350,25,50),spawn.mapRect(-50,-425,25,100),spawn.mapRect(-125,-350,25,100),spawn.mapRect(100,-425,50,125),spawn.mapRect(1875,-450,625,50),spawn.mapRect(1950,-500,550,50),spawn.mapRect(2025,-525,475,25),spawn.mapRect(2025,-550,525,25),spawn.mapRect(2125,-575,400,25),spawn.mapRect(2125,-600,1325,50),spawn.mapRect(2475,-550,950,200),spawn.mapRect(1825,-350,100,175),spawn.mapRect(3350,-375,25,125),spawn.mapRect(1850,-425,50,25),spawn.mapRect(1925,-475,125,25),spawn.mapRect(2e3,-525,125,25),spawn.mapRect(2100,-575,200,25),spawn.mapRect(2400,-650,725,75),spawn.mapRect(2500,-675,475,75),spawn.mapRect(2625,-725,225,100),spawn.mapRect(2675,-750,125,25),spawn.mapRect(2600,-700,25,50),spawn.mapRect(2850,-700,25,75),spawn.mapRect(3075,-625,75,50),spawn.mapRect(2375,-625,50,75),spawn.mapRect(1900,-350,100,75),spawn.mapRect(1925,-300,50,50),spawn.mapRect(1975,-350,75,50),spawn.mapRect(3325,-350,50,25),spawn.mapRect(150,-25,1425,50),spawn.mapRect(175,75,1200,50),spawn.mapRect(400,-25,575,25),spawn.mapRect(425,-50,750,75),spawn.mapRect(1250,-50,125,100),spawn.mapRect(1175,-50,100,25),spawn.mapRect(725,100,500,50),spawn.mapRect(625,-75,300,50),spawn.mapRect(250,-25,225,25),spawn.mapRect(1400,75,225,50),spawn.mapRect(950,-75,200,25),spawn.mapRect(1200,-75,125,25),spawn.mapRect(425,-50,100,25),spawn.mapRect(450,-75,100,50),spawn.mapRect(250,-50,125,50),spawn.mapRect(250,125,125,25),spawn.mapRect(475,100,100,50),spawn.mapRect(650,125,25,25),spawn.mapRect(675,100,75,50),spawn.mapRect(825,125,200,50),spawn.mapRect(-75,75,325,50),spawn.mapRect(0,100,175,50),spawn.mapRect(775,-100,275,50),spawn.mapRect(2475,0,925,125),spawn.mapRect(2500,50,875,100),spawn.mapRect(2550,100,775,75),spawn.mapRect(2625,150,600,50),spawn.mapRect(3225,125,275,75),spawn.mapRect(1750,-225,150,50),spawn.mapRect(1800,-275,50,75),spawn.mapRect(1775,-250,75,75),spawn.mapRect(3200,-625,250,50),spawn.mapRect(3275,-650,75,25),spawn.mapRect(3175,-625,25,25),spawn.mapRect(3250,-700,100,100),spawn.mapRect(3200,-650,75,50),spawn.mapRect(3225,-675,75,100),spawn.mapRect(3325,-675,50,100),spawn.mapRect(3375,-650,25,75),spawn.mapRect(1575,-25,100,25),spawn.mapRect(1450,100,125,50),spawn.mapRect(250,-300,50,50),spawn.mapRect(275,-275,50,25),spawn.mapRect(200,-275,125,50),spawn.mapRect(3725,200,50,375),spawn.mapRect(3750,275,50,300),spawn.mapRect(3800,350,25,200),spawn.mapRect(3825,425,25,150),spawn.mapRect(3850,500,25,75),spawn.mapRect(4275,250,50,325),spawn.mapRect(4250,300,50,300),spawn.mapRect(4225,375,75,200),spawn.mapRect(4200,450,75,150),spawn.mapRect(4175,500,75,75),spawn.mapRect(3950,500,150,50),spawn.mapRect(4e3,500,50,25),spawn.mapRect(3875,500,425,25),spawn.mapRect(3625,200,50,75),spawn.mapRect(3575,200,50,25),spawn.mapRect(3675,275,25,25),spawn.mapRect(3650,275,25,25),spawn.mapRect(3600,200,25,50),spawn.mapRect(2600,175,25,25),spawn.mapRect(2700,175,425,100),spawn.mapRect(2650,200,75,50),spawn.mapRect(3100,200,75,50),spawn.mapRect(2675,250,25,25),spawn.mapRect(2625,200,100,25),spawn.mapRect(3150,200,75,25),spawn.mapRect(3175,225,25,25),spawn.mapRect(3775,250,25,50),spawn.mapRect(3800,275,25,125),spawn.mapRect(3800,325,50,225),spawn.mapRect(3875,400,25,200),spawn.mapRect(3825,425,50,125),spawn.mapRect(3850,375,25,100),spawn.mapRect(3900,450,25,75),spawn.mapRect(3925,475,25,50),spawn.mapRect(3450,-600,25,325),spawn.mapRect(3475,-575,25,275),spawn.mapRect(3500,-525,25,200),spawn.mapRect(3525,-500,25,150),spawn.mapRect(3550,-475,25,100),spawn.mapRect(2725,250,350,50),spawn.mapRect(2750,275,300,50),spawn.mapRect(3150,250,25,25),spawn.mapRect(4325,150,975,75),spawn.mapRect(4375,225,900,25),spawn.mapRect(4375,175,875,100),spawn.mapRect(4375,225,850,75),spawn.mapRect(4375,225,825,100),spawn.mapRect(4375,275,800,75),spawn.mapRect(4350,325,800,50),spawn.mapRect(4375,350,750,50),spawn.mapRect(4375,350,725,75),spawn.mapRect(4350,375,725,75),spawn.mapRect(4350,400,700,75),spawn.mapRect(4350,425,675,75),spawn.mapRect(4350,475,650,50),spawn.mapRect(4375,500,600,50),spawn.mapRect(4375,500,575,75),spawn.mapRect(4375,550,550,50),spawn.mapRect(4425,125,775,75),spawn.mapRect(5300,175,75,50),spawn.mapRect(4475,100,150,25),spawn.mapRect(4825,125,300,25),spawn.mapRect(4800,100,250,25),spawn.mapRect(5100,100,50,25),spawn.mapRect(4650,100,75,25),spawn.mapRect(5475,225,125,300),spawn.mapRect(5450,275,25,125),spawn.mapRect(5450,450,25,75),spawn.mapRect(5425,325,25,75),spawn.mapRect(5425,475,25,50),spawn.mapRect(5575,250,50,150),spawn.mapRect(5575,450,50,50),spawn.mapRect(5475,525,125,25),spawn.mapRect(5500,550,75,25),spawn.mapRect(5525,575,25,25),spawn.mapRect(3675,575,1050,50),spawn.mapRect(4175,600,250,50),spawn.mapRect(3850,625,100,25),spawn.mapRect(3700,625,75,25),spawn.mapRect(4050,625,50,25),spawn.mapRect(4500,625,225,25),spawn.mapRect(5725,150,75,225),spawn.mapRect(5700,175,25,150),spawn.mapRect(5775,250,50,100),spawn.mapRect(5950,325,75,75),spawn.mapRect(5925,375,25,25),spawn.mapRect(6e3,350,50,50),spawn.mapRect(6125,425,1050,75),spawn.mapRect(6425,0,750,75),spawn.mapRect(6400,25,50,50),spawn.mapRect(6500,-25,675,75),spawn.mapRect(6550,-25,275,25),spawn.mapRect(6475,-25,125,75),spawn.mapRect(6450,-25,100,100),spawn.mapRect(6475,-75,700,75),spawn.mapRect(6500,-75,75,25),spawn.mapRect(6500,-125,675,125),spawn.mapRect(6525,-150,650,125),spawn.mapRect(6550,-175,625,50),spawn.mapRect(6900,-200,275,75),spawn.mapRect(6925,-250,250,175),spawn.mapRect(6950,-275,225,75),spawn.mapRect(6975,-300,200,50),spawn.mapRect(7025,-325,125,125),spawn.mapRect(6400,50,75,175),spawn.mapRect(6450,50,100,100),spawn.mapRect(6475,150,25,25),spawn.mapRect(6550,75,25,25),spawn.mapRect(6375,75,25,150),spawn.mapRect(6350,100,25,75),spawn.mapRect(6650,50,225,50),spawn.mapRect(6975,75,75,25),spawn.mapRect(6625,-175,225,25),spawn.mapRect(6675,-200,275,25),spawn.mapRect(6750,-225,250,25),spawn.mapRect(6200,475,575,50),spawn.mapRect(6925,500,125,25),spawn.mapRect(6325,400,475,25),spawn.mapRect(6950,400,200,25),spawn.mapRect(7100,75,75,100),spawn.mapRect(7075,75,25,25),spawn.mapRect(7175,-300,1650,350),spawn.mapRect(7325,-700,100,450),spawn.mapRect(7600,-700,100,450),spawn.mapRect(7900,-700,100,450),spawn.mapRect(8200,-700,100,425),spawn.mapRect(8500,-700,100,425),spawn.mapRect(7275,-825,1375,125),spawn.mapRect(7400,-700,50,25),spawn.mapRect(7575,-700,50,25),spawn.mapRect(7875,-700,150,25),spawn.mapRect(8175,-700,150,25),spawn.mapRect(8475,-700,150,25),spawn.mapRect(7300,-325,150,75),spawn.mapRect(7575,-325,150,75),spawn.mapRect(7875,-325,150,75),spawn.mapRect(8175,-325,150,75),spawn.mapRect(8475,-325,150,75),spawn.mapRect(7700,-700,25,25),spawn.mapRect(7300,-700,75,25),spawn.mapRect(7150,50,75,50),spawn.mapRect(7175,100,25,25),spawn.mapRect(7225,50,25,25),spawn.mapRect(7300,-850,1325,75),spawn.mapRect(7325,-875,1275,50),spawn.mapRect(7375,-900,1200,25),spawn.mapRect(7350,-900,25,25),spawn.mapRect(7375,-900,200,25),spawn.mapRect(7375,-925,1175,25),spawn.mapRect(7400,-950,1125,25),spawn.mapRect(7425,-975,1075,25),spawn.mapRect(7450,-1e3,1025,25),spawn.mapRect(7675,-1050,525,50),spawn.mapRect(7700,-1050,100,25),spawn.mapRect(7700,-1075,450,25),spawn.mapRect(7725,-1100,400,25),spawn.mapRect(7775,-1125,300,25),spawn.mapRect(7650,-1025,75,25),spawn.mapRect(8200,-1025,25,25),spawn.mapRect(8825,-275,25,300),spawn.mapRect(8825,-225,50,125),spawn.mapRect(8850,-50,25,75),spawn.mapRect(7150,425,100,425),spawn.mapRect(7150,775,1600,100),spawn.mapRect(8750,400,75,475),spawn.mapRect(8825,400,25,475),spawn.mapRect(7225,450,50,325),spawn.mapRect(7250,500,50,275),spawn.mapRect(7300,550,25,225),spawn.mapRect(7325,600,25,175),spawn.mapRect(7350,650,25,125),spawn.mapRect(7375,675,25,100),spawn.mapRect(7400,700,25,75),spawn.mapRect(7425,725,25,50),spawn.mapRect(7450,750,25,25),spawn.mapRect(8725,425,50,375),spawn.mapRect(8700,450,75,375),spawn.mapRect(8675,475,100,375),spawn.mapRect(8650,500,125,375),spawn.mapRect(8600,525,100,350),spawn.mapRect(8575,550,100,275),spawn.mapRect(8550,575,150,250),spawn.mapRect(8525,625,100,225),spawn.mapRect(8500,675,100,125),spawn.mapRect(8625,825,25,25),spawn.mapRect(8475,700,75,75),spawn.mapRect(8450,725,50,50),spawn.mapRect(8425,750,100,25),wastepool=level.hazard(7250,575,1450,200),spawn.mapRect(7375,0,250,75),spawn.mapRect(7700,0,725,75),spawn.mapRect(8575,50,150,25),spawn.mapRect(7750,50,475,50),spawn.mapRect(7425,50,175,50),spawn.mapRect(8600,50,50,50),spawn.mapRect(7200,850,875,50),spawn.mapRect(8225,850,125,50),spawn.mapRect(8475,850,275,50),spawn.mapRect(7300,875,375,50),spawn.mapRect(7925,875,100,50),spawn.mapRect(8525,875,125,50),spawn.mapRect(8250,875,75,50),spawn.mapRect(7800,900,50,25),spawn.mapRect(8125,875,50,50),spawn.mapRect(8075,875,50,50),spawn.mapRect(7125,500,25,325),spawn.mapRect(7100,475,25,300),spawn.mapRect(7075,600,50,125),spawn.mapRect(7075,500,50,25),spawn.mapRect(8850,425,75,450),spawn.mapRect(8925,475,75,400),spawn.mapRect(9e3,550,75,325),spawn.mapRect(9075,650,75,25),spawn.mapRect(9075,625,75,250),spawn.mapRect(9150,675,75,200),spawn.mapRect(9225,750,75,125),spawn.mapRect(8925,450,25,25),spawn.mapRect(9e3,500,25,75),spawn.mapRect(9e3,525,25,100),spawn.mapRect(9e3,525,50,100),spawn.mapRect(9050,575,50,100),spawn.mapRect(9075,600,50,75),spawn.mapRect(9150,650,25,100),spawn.mapRect(9225,725,50,100),spawn.mapRect(9225,700,25,100),spawn.mapRect(9300,800,1375,75),spawn.mapRect(9300,775,25,50),spawn.mapRect(9425,775,200,25),spawn.mapRect(9500,875,200,25),spawn.mapRect(9725,825,200,75),spawn.mapRect(1e4,850,125,50),spawn.mapRect(10225,850,400,50),spawn.mapRect(9775,775,125,25),spawn.mapRect(10100,775,75,75),spawn.mapRect(10275,750,225,75),spawn.mapRect(9975,775,25,50),spawn.mapRect(1e4,775,25,50),spawn.mapRect(10025,775,25,75),spawn.mapRect(10675,775,50,100),spawn.mapRect(10725,725,50,150),spawn.mapRect(10775,650,50,225),spawn.mapRect(10825,575,50,300),spawn.mapRect(10875,500,50,375),spawn.mapRect(10925,425,275,450),spawn.mapRect(11200,500,50,375),spawn.mapRect(11250,575,50,300),spawn.mapRect(11300,650,50,225),spawn.mapRect(11350,725,50,150),spawn.mapRect(11400,775,50,100),spawn.mapRect(10700,750,75,75),spawn.mapRect(10775,700,25,25),spawn.mapRect(10750,700,75,75),spawn.mapRect(10800,625,125,75),spawn.mapRect(10850,550,125,50),spawn.mapRect(10900,475,150,75),spawn.mapRect(11125,475,100,50),spawn.mapRect(11200,550,75,50),spawn.mapRect(11275,625,50,75),spawn.mapRect(11325,700,50,75),spawn.mapRect(11375,750,50,75),spawn.mapRect(11550,225,1525,75),spawn.mapRect(11450,825,1625,50),spawn.mapRect(11450,800,1625,75),spawn.mapRect(11525,-350,50,650),spawn.mapRect(11850,-350,50,650),spawn.mapRect(12225,-350,50,650),spawn.mapRect(12600,-350,50,650),spawn.mapRect(13e3,-350,75,650),spawn.mapRect(11525,-200,1525,50),spawn.mapRect(11525,50,1550,50),spawn.mapRect(11525,-400,1550,50),spawn.mapRect(11575,-425,1450,50),spawn.mapRect(11625,-450,1325,75),spawn.mapRect(11700,-475,1175,75),spawn.mapRect(11725,-500,1125,75),spawn.mapRect(11825,-400,100,75),spawn.mapRect(11825,200,100,75),spawn.mapRect(12200,-375,100,50),spawn.mapRect(12200,200,100,75),spawn.mapRect(12575,200,100,75),spawn.mapRect(12575,-375,100,50),spawn.mapRect(11500,825,50,25),spawn.mapRect(11550,775,175,25),spawn.mapRect(11525,875,250,25),spawn.mapRect(11875,750,225,50),spawn.mapRect(11950,850,375,50),spawn.mapRect(12500,775,250,75),spawn.mapRect(12750,850,175,50),spawn.bodyRect(11575,-300,25,100),spawn.bodyRect(11600,-300,25,100),spawn.bodyRect(11625,-300,25,100),spawn.bodyRect(11650,-300,25,100),spawn.bodyRect(11675,-300,25,100),spawn.bodyRect(11700,-300,25,100),spawn.bodyRect(11725,-300,25,100),spawn.bodyRect(11750,-300,25,100),spawn.bodyRect(11775,-300,25,100),spawn.bodyRect(11800,-300,25,100),spawn.bodyRect(11825,-300,25,100),spawn.bodyRect(11900,-50,25,100),spawn.bodyRect(11925,-50,25,100),spawn.bodyRect(11950,-50,25,100),spawn.bodyRect(11975,-50,50,100),spawn.bodyRect(12025,-50,50,100),spawn.bodyRect(12075,-50,25,100),spawn.bodyRect(12100,-50,50,100),spawn.bodyRect(12150,-50,25,100),spawn.bodyRect(12175,-50,25,100),spawn.bodyRect(12200,-50,25,100),spawn.bodyRect(11900,-300,25,100),spawn.bodyRect(11925,-300,25,100),spawn.bodyRect(11950,-225,75,25),spawn.bodyRect(12650,-50,25,100),spawn.bodyRect(12675,-50,25,100),spawn.bodyRect(12725,-50,25,100),spawn.bodyRect(12750,-50,50,100),spawn.bodyRect(12650,-275,25,75),spawn.bodyRect(12675,-275,25,75),spawn.bodyRect(12700,-275,50,75),spawn.bodyRect(12750,-275,25,75),spawn.bodyRect(12775,-275,25,75),spawn.bodyRect(12800,-275,25,75),spawn.bodyRect(12825,-275,25,75),spawn.bodyRect(12850,-275,50,75),spawn.bodyRect(12900,-275,50,75),spawn.bodyRect(12950,-275,50,75),spawn.mapRect(12200,775,175,50),spawn.mapRect(11550,250,1500,75),spawn.mapRect(11575,275,1450,75),spawn.mapRect(11600,325,1400,50),spawn.mapRect(11625,350,1350,50),spawn.mapRect(11725,375,1150,50),spawn.mapRect(11900,400,800,50),spawn.mapRect(12100,425,425,50),spawn.mapRect(12125,475,375,25),spawn.mapRect(12200,475,225,50),spawn.mapRect(11475,-400,50,700),spawn.mapRect(11450,-375,50,625),spawn.mapRect(11425,-350,100,600),spawn.mapRect(11400,-300,75,525),spawn.mapRect(11375,-250,100,400),spawn.mapRect(11350,-150,50,200),spawn.mapRect(13075,825,25,50),spawn.mapRect(13100,850,25,25),spawn.mapRect(13200,700,100,225),spawn.mapRect(13300,775,25,100),spawn.mapRect(13325,825,25,50),spawn.mapRect(13175,775,25,125),spawn.mapRect(13225,675,50,25),spawn.mapRect(13225,925,50,25),spawn.mapRect(9250,75,1400,150),spawn.mapRect(9250,-225,150,300),spawn.mapRect(9250,-275,575,50),spawn.mapRect(9675,-225,150,300),spawn.mapRect(9325,-325,400,50),spawn.mapRect(9400,-350,250,25),spawn.mapRect(9475,-375,125,25),spawn.mapRect(9825,-225,150,300),spawn.mapRect(10225,-225,150,300),spawn.mapRect(9825,-275,550,50),spawn.mapRect(9900,-325,375,50),spawn.mapRect(9950,-350,275,25),spawn.mapRect(1e4,-375,175,25),spawn.mapRect(10350,-275,50,375),spawn.mapRect(10400,-250,25,325),spawn.mapRect(10425,-225,25,375),spawn.mapRect(10450,-200,25,325),spawn.mapRect(10475,-175,25,350),spawn.mapRect(10500,-150,25,300),spawn.mapRect(10525,-125,25,300),spawn.mapRect(10550,-100,25,225),spawn.mapRect(10575,-75,25,200),spawn.mapRect(10600,-50,25,150),spawn.mapRect(10625,-25,25,175),spawn.mapRect(9225,-225,25,450),spawn.mapRect(9200,-175,25,400),spawn.mapRect(9175,-150,50,375),spawn.mapRect(9150,-125,50,350),spawn.mapRect(9400,-175,25,275),spawn.mapRect(9425,-125,25,200),spawn.mapRect(9650,-175,25,250),spawn.mapRect(9625,-125,25,275),spawn.mapRect(9975,-175,25,300),spawn.mapRect(1e4,-125,25,250),spawn.mapRect(10200,-175,25,300),spawn.mapRect(10175,-125,25,225),spawn.mapRect(9325,225,225,25),spawn.mapRect(9675,225,250,50),spawn.mapRect(10075,225,200,25),spawn.mapRect(10400,200,175,50),spawn.mapRect(13425,675,1425,100),spawn.mapRect(13450,725,375,75),spawn.mapRect(13850,775,225,50),spawn.mapRect(14150,750,300,50),spawn.mapRect(14575,750,200,75),spawn.mapRect(13550,800,150,25),spawn.mapRect(14250,800,225,25),spawn.mapRect(13425,275,1425,100),spawn.mapRect(13475,250,1325,75),spawn.mapRect(13550,225,1125,75),spawn.mapRect(13600,200,1025,25),spawn.mapRect(13650,150,925,50),spawn.mapRect(13725,100,775,100),spawn.mapRect(13825,50,525,100),spawn.mapRect(13900,0,350,75),spawn.mapRect(13975,-25,175,75),spawn.mapRect(13875,25,50,50),spawn.mapRect(13800,75,75,50),spawn.mapRect(13700,125,75,50),spawn.mapRect(13625,200,50,25),spawn.mapRect(13650,175,25,25),spawn.mapRect(13625,175,125,75),spawn.mapRect(14350,75,25,50),spawn.mapRect(14250,0,25,75),spawn.mapRect(14275,50,25,50),spawn.mapRect(14275,25,25,75),spawn.mapRect(14500,125,25,75),spawn.mapRect(14575,175,25,75),spawn.mapRect(13475,650,400,50),spawn.mapRect(13975,675,75,25),spawn.mapRect(14e3,650,50,50),spawn.mapRect(14150,625,675,100),spawn.mapRect(14325,625,100,25),spawn.mapRect(14300,600,325,25),spawn.mapRect(13525,325,375,100),spawn.mapRect(13975,375,400,25),spawn.mapRect(14500,325,100,75),spawn.mapRect(14850,675,50,200),spawn.mapRect(14875,700,50,175),spawn.mapRect(14925,725,50,150),spawn.mapRect(14975,750,50,125),spawn.mapRect(15025,775,50,100),spawn.mapRect(15075,750,1150,100),spawn.mapRect(15100,825,225,50),spawn.mapRect(15500,850,225,25),spawn.mapRect(15925,775,275,100),spawn.mapRect(15775,825,50,50),spawn.mapRect(15225,250,1050,125),spawn.mapRect(15250,200,1e3,50),spawn.mapRect(15275,175,950,50),spawn.mapRect(15300,150,900,50),spawn.mapRect(15325,125,850,25),spawn.mapRect(15350,100,800,25),spawn.mapRect(15375,75,750,25),spawn.mapRect(15400,50,700,100),spawn.mapRect(15425,25,650,75),spawn.mapRect(15450,0,600,50),spawn.mapRect(15475,-25,550,75),spawn.mapRect(15500,-50,500,75),spawn.mapRect(15525,-75,450,75),spawn.mapRect(15550,-100,400,75),spawn.mapRect(15575,-125,350,75),spawn.mapRect(15600,-150,300,50),spawn.mapRect(15625,-175,250,50),spawn.mapRect(15650,-200,200,25),spawn.mapRect(15675,-225,150,75),spawn.mapRect(15700,-250,100,75),spawn.mapRect(16275,250,25,125),spawn.mapRect(16250,225,25,25),spawn.mapRect(15200,250,25,125),spawn.mapRect(15225,225,25,25),spawn.mapRect(15275,350,175,50),spawn.mapRect(15550,350,425,75),spawn.mapRect(16100,375,175,25),spawn.mapRect(14700,-375,50,325),spawn.mapRect(14700,-425,375,50),spawn.mapRect(14750,-375,125,100),spawn.mapRect(14750,-275,75,75),spawn.mapRect(14850,-375,100,50),spawn.mapRect(14825,-275,25,25),spawn.mapRect(14950,-375,25,25),spawn.mapRect(14875,-325,25,25),spawn.mapRect(14725,-200,50,25),spawn.mapRect(14700,-75,100,25),spawn.mapRect(15050,-425,25,100),spawn.mapRect(14725,-450,325,25),spawn.mapRect(14775,-475,225,25),spawn.mapRect(14825,-500,125,25),spawn.mapRect(14675,-350,25,100),spawn.mapRect(14675,-175,25,75),spawn.mapRect(14850,325,25,50),spawn.mapRect(5700,-725,375,50),spawn.mapRect(6025,-725,50,325),spawn.mapRect(5775,-675,250,25),spawn.mapRect(6e3,-675,25,225),spawn.mapRect(5950,-650,50,75),spawn.mapRect(5900,-650,75,25),spawn.mapRect(6e3,-575,25,25),spawn.mapRect(6050,-700,50,275),spawn.mapRect(5925,-625,75,25),spawn.mapRect(5775,-750,100,25),spawn.mapRect(5950,-750,100,25),spawn.mapRect(5675,-725,25,150),spawn.mapRect(5975,-400,100,25),spawn.mapRect(5650,-700,25,75),spawn.mapRect(5700,-675,25,50),spawn.mapRect(5700,-600,25,25),spawn.mapRect(15275,750,225,25),spawn.mapRect(15225,725,250,25),spawn.mapRect(15675,725,275,100),spawn.mapRect(16075,725,125,50),spawn.pulsar(5775.349354333542,-594.9058498351887),spawn.pulsar(5852.915433009502,-545.5679375496002),spawn.pulsar(5921.99534574469,-480.69487503053097),spawn.mapRect(3725,-975,1525,100),spawn.mapRect(3750,-650,300,75),spawn.mapRect(4300,-650,300,75),spawn.mapRect(4950,-650,300,75),spawn.mapRect(5250,-975,75,400),spawn.mapRect(3725,-975,75,400),spawn.mapRect(4325,-600,250,50),spawn.mapRect(4350,-550,200,25),spawn.mapRect(3800,-575,225,25),spawn.mapRect(3825,-550,175,25),spawn.mapRect(4975,-600,275,50),spawn.mapRect(5025,-550,175,25),spawn.mapRect(3800,-1025,1450,50),spawn.mapRect(3875,-1075,1275,50),spawn.mapRect(3975,-1125,1e3,50),spawn.mapRect(3950,-1100,50,25),spawn.mapRect(3850,-1050,150,25),spawn.mapRect(3775,-1e3,200,25),spawn.mapRect(5225,-975,75,25),spawn.mapRect(4950,-1100,75,125),spawn.mapRect(5100,-1050,75,75),spawn.mapRect(5225,-1e3,50,100),spawn.mapRect(4350,-675,150,75),spawn.mapRect(4525,-650,50,25),spawn.mapRect(4550,-675,50,75),spawn.mapRect(3825,-650,50,25),spawn.mapRect(3825,-675,150,50),spawn.mapRect(4025,-675,25,100),spawn.mapRect(4950,-675,75,50),spawn.mapRect(5075,-675,75,75),spawn.mapRect(5200,-675,75,50),spawn.pulsar(4068.196906578167,-653.550201356403),spawn.pulsar(4147.672553167598,-651.0093457935446),spawn.pulsar(4228.863663369247,-653.4768859607283),spawn.pulsar(4619.092688319791,-657.3942377732394),spawn.pulsar(4724.821759138369,-653.4213864043036),spawn.pulsar(4873.583205330713,-657.4103118310311),spawn.pulsar(3871.920598597728,-804.0595760512573),spawn.pulsar(4053.019377134256,-778.0061810623848),spawn.pulsar(4211.732836201937,-780.4633597161928),spawn.pulsar(4380.7768131190005,-776.3400515412312),spawn.pulsar(4533.031170401828,-791.1397513503708),spawn.pulsar(4663.577749297493,-789.0488615794887),spawn.pulsar(4965.48351658387,-809.0025104385204),spawn.pulsar(5122.782442346123,-810.2526936643312),spawn.mapRect(3700,-875,25,250),spawn.mapRect(5325,-900,25,250),spawn.mapRect(5325,-850,50,150),spawn.mapRect(5375,-825,25,75),spawn.pulsar(14786.058375868968,-140.5759223979466),spawn.pulsar(14862.320083571307,-177.02507110101413),spawn.pulsar(14888.982047411475,-216.4856450590454),spawn.pulsar(14950.503812885598,-280.9333882582806),spawn.pulsar(15003.202057456116,-316.6767970823471),spawn.spinner(759.4093972764956,-356.0541595435453),spawn.spinner(1467.1412487475097,-617.4326431210314),spawn.mapRect(11850,775,50,50),spawn.mapRect(12075,775,50,50),spawn.mapRect(16225,750,75,325),spawn.mapRect(16300,775,50,325),spawn.mapRect(16350,800,50,275),spawn.mapRect(16375,825,50,200),spawn.mapRect(16450,875,25,150),spawn.mapRect(16450,875,25,225),spawn.mapRect(16400,875,50,150),spawn.mapRect(16225,1025,250,75),spawn.mapRect(16475,925,25,175),spawn.mapRect(16500,975,25,125),spawn.mapRect(16525,1025,25,50),spawn.mapRect(16425,1075,150,25),spawn.mapRect(16225,1100,1175,75),spawn.mapRect(17200,1050,25,50),spawn.mapRect(17225,950,25,200),spawn.mapRect(17250,800,25,300),spawn.mapRect(17275,725,25,400),spawn.mapRect(17300,750,75,400),spawn.mapRect(17300,725,100,450),spawn.mapRect(16300,250,1075,125),spawn.mapRect(16450,-75,100,400),spawn.mapRect(17100,-75,100,400),spawn.mapRect(16425,200,150,50);spawn.mapRect(17075,200,150,50),spawn.mapRect(16425,-75,150,25),spawn.mapRect(17075,-75,150,50),spawn.mapRect(16425,-50,150,50),spawn.mapRect(16575,-75,525,50),spawn.mapRect(17075,-50,150,50),spawn.mapRect(16550,-100,550,25),spawn.mapRect(16575,-125,500,75),spawn.mapRect(16600,-150,450,75),spawn.mapRect(16625,-175,400,75),spawn.mapRect(16675,-200,275,50),spawn.mapRect(16750,-225,125,100),spawn.mapRect(19700,675,50,325),spawn.mapRect(19725,700,50,250),spawn.mapRect(19750,750,25,175),spawn.mapRect(16775,-25,100,275),spawn.mapRect(16750,-25,150,25),spawn.mapRect(16750,225,150,50),spawn.pulsar(3037.797768861211,-1242.9871362505041),spawn.pulsar(3070.307596879197,-1219.5627538123044),spawn.pulsar(3111.2633762820287,-1107.7297980154415),spawn.pulsar(5417.516810698634,842.824851834252),spawn.pulsar(5484.672534515589,883.9519420960905),spawn.pulsar(5588.5457723826075,907.389646857348),spawn.pulsar(16845.139047921595,-885.6942536135854),spawn.pulsar(16892.187197333486,-849.5235136465661),spawn.pulsar(16912.323783455256,-764.5275187038021),powerUps.spawn(2571.591711269197,-145.6717604789277,"heal"),powerUps.spawn(4415.693974666946,-15.077304620299628,"heal"),powerUps.spawn(7505.795753124317,-360.0330849392626,"heal"),powerUps.spawn(7809.5145838152075,-388.5517653996709,"heal"),powerUps.spawn(8049.726318297545,534.4543327703304,"heal"),powerUps.spawn(8514.444440033667,551.0268033205841,"heal"),powerUps.spawn(8927.146055851512,407.25359241772685,"heal"),powerUps.spawn(9730.170170158563,463.5594890235955,"ammo"),powerUps.spawn(9998.34942087522,434.9511651200589,"ammo"),powerUps.spawn(10119.083720019844,437.4195779326937,"ammo"),powerUps.spawn(10346.197135080345,423.1868836972815,"ammo"),powerUps.spawn(1853.3194789931017,-36.87254038474242,"ammo"),powerUps.spawn(4491.396397908616,40.2862012621236,"ammo"),powerUps.spawn(4954.207518897743,50.27790416201856,"ammo"),spawn.mapRect(9125,-50,75,275),spawn.mapRect(9100,0,50,225),spawn.mapRect(9075,75,75,150),spawn.mapRect(9050,150,125,50),spawn.mapRect(9050,200,225,25),mover1=level.mover(4e3,-1125,975,25),mover2=level.mover(15675,725,275,25),spawn.mapRect(15025,-375,25,25),spawn.mapRect(12200,-150,100,25),spawn.mapRect(11825,-150,100,25),spawn.mapRect(11825,75,100,50),spawn.mapRect(12200,75,100,50),spawn.mapRect(12575,100,75,25),spawn.mapRect(12625,50,50,75),spawn.mapRect(12600,-175,75,50),spawn.mapRect(12575,-175,75,50),spawn.mapRect(14125,650,75,25),spawn.mapRect(13875,375,50,25),spawn.mapRect(13300,-525,325,50),spawn.mapRect(13575,-525,50,250),spawn.mapRect(13550,-300,75,25),spawn.mapRect(13300,-525,25,75),spawn.mapRect(13525,-475,50,50),spawn.mapRect(13500,-475,100,25),spawn.mapRect(13550,-475,25,100),spawn.mapRect(13325,-550,275,25),spawn.mapRect(13350,-575,200,25),spawn.mapRect(13625,-500,25,175),spawn.mapRect(13650,-450,25,75),spawn.mapRect(13500,375,75,25),spawn.mapRect(15550,-950,50,225),spawn.mapRect(15575,-750,75,25),spawn.mapRect(15550,-950,375,50),spawn.mapRect(15925,-950,50,225),spawn.mapRect(15875,-750,100,25),spawn.mapRect(15575,-1e3,375,75),spawn.mapRect(15625,-1050,250,100),spawn.mapRect(15600,-1025,75,50),spawn.mapRect(15875,-1e3,25,25),spawn.mapRect(15825,-1025,75,75),spawn.mapRect(15700,-1100,125,50),spawn.mapRect(15650,-1075,75,50),spawn.mapRect(15800,-1075,50,75),spawn.mapRect(15575,-725,50,25),spawn.mapRect(15900,-725,50,25),spawn.mapRect(15525,-925,25,175),spawn.mapRect(15950,-925,50,200),spawn.mapRect(15500,-875,25,75),spawn.mapRect(16e3,-875,25,75),spawn.mapRect(15600,-900,50,75),spawn.mapRect(15650,-900,25,25),spawn.mapRect(15600,-825,25,25),spawn.mapRect(15875,-900,50,50),spawn.mapRect(15850,-925,75,50),spawn.mapRect(15925,-875,25,25),spawn.mapRect(15925,-850,25,25),spawn.mapRect(15900,-875,50,50),bigpool=level.hazard(9075,575,1950,250),spawn.mapRect(16e3,-775,25,50),spawn.mapRect(16e3,-800,25,25),spawn.mapRect(15500,-825,25,75),spawn.mapRect(15475,-850,75,75),spawn.mapRect(16e3,-850,50,100),spawn.mapRect(10775,-450,50,200),spawn.mapRect(10775,-275,100,25),spawn.mapRect(11100,-450,50,200),spawn.mapRect(11050,-275,75,25),spawn.mapRect(10775,-450,375,25),spawn.mapRect(10825,-475,275,25),spawn.mapRect(10875,-500,150,25),spawn.mapRect(10900,-525,100,25),spawn.mapRect(10750,-425,25,150),spawn.mapRect(11150,-400,25,125),spawn.mapRect(10725,-400,50,100),spawn.mapRect(11150,-375,50,75),spawn.mapRect(10800,-250,50,25),spawn.mapRect(10825,-425,50,50),spawn.mapRect(10875,-425,25,25),spawn.mapRect(10825,-375,25,25),spawn.mapRect(11050,-425,50,50),spawn.mapRect(11025,-425,25,25),spawn.mapRect(11075,-375,25,25),spawn.mapRect(950,-1075,50,200),spawn.mapRect(950,-1125,300,50),spawn.mapRect(1e3,-1075,50,50),spawn.mapRect(1050,-1075,25,25),spawn.mapRect(975,-1025,50,25),spawn.mapRect(975,-1150,250,25),spawn.mapRect(1e3,-1175,200,25),spawn.mapRect(900,-1075,50,175),spawn.mapRect(875,-1050,25,125),spawn.mapRect(950,-875,125,25),spawn.mapRect(1250,-1125,25,125),spawn.mapRect(975,-850,75,25),spawn.mapRect(1250,-1100,50,75),spawn.mapRect(925,-900,50,25),spawn.mapRect(1050,-1200,100,25),spawn.mapRect(1225,-1e3,50,25),spawn.mapRect(16375,350,900,50),spawn.mapRect(16400,375,850,50),spawn.mapRect(16425,400,800,50),spawn.mapRect(16475,425,675,50),spawn.mapRect(16625,475,375,25),spawn.mapRect(16650,500,325,25),spawn.mapRect(16675,500,275,50),spawn.mapRect(17400,775,25,325),spawn.mapRect(17425,825,25,225),spawn.mapRect(16200,900,25,225),spawn.mapRect(16175,925,25,125),spawn.mapRect(16150,975,25,25),spawn.mapRect(16400,1150,850,50),spawn.mapRect(16475,1175,650,50),spawn.mapRect(16575,1225,450,25),spawn.sneaker(7895.471733263175,257.75477496554186),spawn.sneaker(8109.4934675858085,349.44686618726473),spawn.sneaker(7525.886813944122,391.9511482895349),spawn.sneaker(8076.43795816953,441.14947363958373),spawn.pulsar(1064.583377612331,-976.2077284446908),spawn.pulsar(1158.3436115513837,-1054.4975368803214),spawn.pulsar(10966.055009228428,-373.8481911663377),spawn.pulsar(10913.989668763379,-261.59108542627166),spawn.pulsar(13454.158594286884,-402.8270664336466),spawn.pulsar(13360.079608974078,-246.97797933698774),spawn.pulsar(13497.913481830354,-251.68317759640576),spawn.pulsar(15687.09056963911,-850.8426925141155),spawn.pulsar(15829.058084589731,-785.4134546702737),spawn.pulsar(15674.313958480483,-685.0594164868394),spawn.pulsar(15819.881465281747,-686.4370174238113),spawn.sneakBoss(18189.441342796745,537.6633241821036),thirdpool=level.hazard(16425,925,925,200),spawn.mapRect(17675,-525,75,725),spawn.mapRect(17625,-475,75,650),spawn.mapRect(17575,-425,75,575),spawn.mapRect(17700,-525,1125,75),spawn.mapRect(17675,175,1125,75),spawn.mapRect(18775,-525,75,775),spawn.mapRect(18825,-475,75,675),spawn.mapRect(18900,-450,50,625),spawn.mapRect(18950,-400,50,500),spawn.mapRect(17750,-575,1e3,50),spawn.mapRect(17775,-625,950,50),spawn.mapRect(17800,-675,900,75),spawn.mapRect(17825,-725,850,125),spawn.mapRect(17850,-750,800,25),spawn.mapRect(17750,125,50,50),spawn.mapRect(17750,100,25,25),spawn.mapRect(17800,150,25,25),spawn.mapRect(17750,-450,75,75),spawn.mapRect(17750,-400,25,50),spawn.mapRect(17800,-450,50,25),spawn.mapRect(18750,-450,25,25),spawn.mapRect(18725,-450,50,50),spawn.mapRect(18700,-475,25,25),spawn.mapRect(18725,-450,25,25),spawn.mapRect(18700,-450,75,25),spawn.mapRect(18750,-425,25,50),spawn.mapRect(18725,125,75,75),spawn.mapRect(18700,150,50,50),spawn.mapRect(18750,100,75,50),spawn.mapRect(17850,150,850,50),spawn.mapRect(17825,150,25,50),spawn.mapRect(17550,-350,25,450),spawn.mapRect(19e3,-325,25,400),spawn.mapRect(18e3,-775,475,25),spawn.mapRect(18025,-800,425,75),spawn.mapRect(18050,-825,375,75),spawn.mapRect(18075,-850,325,50),spawn.mapRect(18100,-875,275,100),spawn.mapRect(18125,-900,225,75),spawn.mapRect(18150,-925,175,75),spawn.mapRect(17275,750,1775,125),spawn.mapRect(17475,725,450,50),spawn.mapRect(18200,725,200,50),spawn.mapRect(18650,725,225,75),spawn.shieldingBoss(18253.51035871325,-131.1707821125636),spawn.mapRect(17725,250,1025,25),spawn.mapRect(17775,275,925,25),spawn.mapRect(17800,300,875,25),spawn.mapRect(17850,325,775,25),spawn.mapRect(17375,275,25,75),spawn.mapRect(19050,750,25,275),spawn.mapRect(19075,775,25,250),spawn.mapRect(19100,800,25,225),spawn.mapRect(19125,850,25,175),spawn.mapRect(19150,875,25,150),spawn.mapRect(19175,925,25,100),spawn.mapRect(19200,950,25,75),spawn.mapRect(19e3,850,100,175),spawn.mapRect(19050,975,650,50),spawn.mapRect(19425,650,275,50),spawn.mapRect(19675,650,50,375),spawn.mapRect(19050,1025,625,25),spawn.mapRect(19075,1050,575,25),spawn.mapRect(19250,1100,200,25),spawn.mapRect(19175,1075,375,25),spawn.mapRect(19450,625,225,25),spawn.mapRect(19500,600,150,50),spawn.mapRect(19625,700,50,50),spawn.mapRect(19600,700,25,25),spawn.mapRect(19650,750,25,25),spawn.mapRect(19400,650,25,100),spawn.mapRect(19375,675,25,50),spawn.mapRect(17600,875,250,25),spawn.mapRect(18100,850,375,50),spawn.mapRect(18650,875,325,25),pooldunker=level.mover(7175,425,50,25),level.custom=()=>{for(level.exit.drawAndCheck(),pooldunker.VxGoal=90,pooldunker.push(),mover.VxGoal=45,mover.push(),level.enter.draw(),pool.query(),wastepool.query(),thirdpool.query(),mover1.VxGoal=12,mover1.push(),mover2.VxGoal=24,mover2.push(),bigpool.query(),i=0;i<mob.length;i++)0==mob[i].isBoss&&(mob[i].damageReduction=.13)},spawn.mapRect(-100,0,1e3,100),powerUps.addResearchToLevel()},ace(){simulation.inGameConsole("<strong>ace</strong> by <span class='color-var'>Richard0820</span>");let e=!1;const t={spawnOrbitals(e,a,o=Math.min(.25+.005*simulation.difficulty)){if(Math.random()<o){const o=Math.floor(Math.min(15,3+Math.sqrt(simulation.difficulty))),s=(.003+.004*Math.random()+.002*Math.sqrt(simulation.difficulty))*(Math.random()<.5?1:-1),n=6.28*Math.random();for(let l=0;l<o;l++)t.orbital(e,a,l/o*2*Math.PI+n,s)}},orbital(e,t,a,o){mobs.spawn(e.position.x,e.position.y,8,12,"rgb(0,0,0)");let s=mob[mob.length-1];s.stroke="transparent",Matter.Body.setDensity(s,.01),s.leaveBody=!1,s.isDropPowerUp=!1,s.isBadTarget=!0,s.isUnstable=!0,s.showHealthBar=!1,s.isOrbital=!0,s.collisionFilter.category=cat.mobBullet,s.collisionFilter.mask=cat.bullet,s.do=function(){if(!e||!e.alive)return void this.death();const s=simulation.cycle*o+a,n={x:Math.cos(s),y:Math.sin(s)};if(Matter.Body.setPosition(this,Vector.add(Vector.add(e.position,e.velocity),Vector.mult(n,t))),Matter.Query.collides(this,[player]).length>0&&(!m.isCloak||!tech.isIntangible)&&m.immuneCycle<m.cycle){m.immuneCycle=m.cycle+m.collisionImmuneCycles;const e=.03*spawn.dmgToPlayerByLevelsCleared();m.takeDamage(e),simulation.drawList.push({x:this.position.x,y:this.position.y,radius:200*Math.sqrt(e),color:simulation.mobDmgColor,time:simulation.drawTime}),this.death()}}},shield(e,t,a,o=Math.min(.02+.005*simulation.difficulty,.2)+tech.duplicationChance()){if(this.allowShields&&Math.random()<o){mobs.spawn(t,a,9,e.radius+30,"rgba(255,255,255,0.9)");let o=mob[mob.length-1];o.stroke="rgb(0,0,0)",Matter.Body.setDensity(o,1e-5),o.shield=!0,o.damageReduction=.05,o.isUnblockable=!0,o.collisionFilter.category=cat.mobShield,o.collisionFilter.mask=cat.bullet,consBB[consBB.length]=Constraint.create({bodyA:o,bodyB:e,stiffness:.4,damping:.1}),Composite.add(engine.world,consBB[consBB.length-1]),o.onDamage=function(){this.alertNearByMobs(),this.fill=`rgba(255,255,255,${.3+.6*this.health})`},o.leaveBody=!1,o.isDropPowerUp=!1,o.showHealthBar=!1,o.shieldTargetID=e.id,e.isShielded=!0,e.shieldCount>0?e.shieldCount++:e.shieldCount=1,o.shieldCount=e.shieldCount,e.shieldID=o.id,o.onDeath=function(){for(let e=0,t=mob.length;e<t;e++)mob[e].id===this.shieldTargetID&&(mob[e].isShielded=!1)},o.do=function(){this.checkStatus()},mob.unshift(o)}},groupShield(e,t,a,o,s=.4){const n=e.length;mobs.spawn(t,a,9,o,"rgba(255,255,255,0.9)");let l=mob[mob.length-1];l.stroke="rgb(0,0,0)",Matter.Body.setDensity(l,1e-5),l.frictionAir=0,l.shield=!0,l.damageReduction=.075,l.collisionFilter.category=cat.mobShield,l.collisionFilter.mask=cat.bullet;for(let e=0;e<n;++e)mob[mob.length-e-2].isShielded=!0,consBB[consBB.length]=Constraint.create({bodyA:l,bodyB:mob[mob.length-e-2],stiffness:s,damping:.1}),Composite.add(engine.world,consBB[consBB.length-1]);l.onDamage=function(){this.alertNearByMobs(),this.fill=`rgba(255,255,255,${.3+.6*this.health})`},l.onDeath=function(){for(let t=0;t<e.length;t++)for(let a=0,o=mob.length;a<o;a++)mob[a].id===e[t]&&(mob[a].isShielded=!1)},l.leaveBody=!1,l.isDropPowerUp=!1,l.showHealthBar=!1,mob[mob.length-1]=mob[mob.length-1-n],mob[mob.length-1-n]=l,l.do=function(){this.checkStatus()}},slasher2(e,a,o=33+Math.ceil(30*Math.random())){mobs.spawn(e,a,6,o,"rgb(0,0,0)");let s=mob[mob.length-1];Matter.Body.rotate(s,2*Math.PI*Math.random()),s.accelMag=9e-4*simulation.accelScale,s.torqueMagnitude=12e-6*s.inertia,s.frictionStatic=0,s.friction=0,s.frictionAir=.035,s.delay=140*simulation.CDScale,s.cd=0,s.swordRadius=0,s.swordVertex=1,s.swordRadiusMax=275+3.5*simulation.difficulty,s.swordRadiusGrowRate=s.swordRadiusMax*(.011+2e-4*simulation.difficulty),s.isSlashing=!1,s.swordDamage=.03*spawn.dmgToPlayerByLevelsCleared(),s.laserAngle=3*Math.PI/5;t.shield(s,e,a),s.onDamage=function(){},s.do=function(){this.checkStatus(),this.seePlayerByHistory(15),this.attraction(),this.sword()},s.swordWaiting=function(){this.seePlayer.recall&&this.cd<simulation.cycle&&this.distanceToPlayer2()<2e5&&0===Matter.Query.ray(map,this.position,this.playerPosRandomY()).length&&0===Matter.Query.ray(body,this.position,this.playerPosRandomY()).length&&(this.laserAngle=-Math.PI/6,this.sword=this.swordGrow,this.accelMag=0)},s.sword=s.swordWaiting,s.swordGrow=function(){this.laserSword(this.vertices[0],this.angle+this.laserAngle),this.laserSword(this.vertices[1],this.angle+this.laserAngle+Math.PI/3),this.laserSword(this.vertices[2],this.angle+this.laserAngle+2*Math.PI/3),this.laserSword(this.vertices[3],this.angle+this.laserAngle+Math.PI),this.laserSword(this.vertices[4],this.angle+this.laserAngle+4*Math.PI/3),this.laserSword(this.vertices[5],this.angle+this.laserAngle+5*Math.PI/3),this.swordRadius+=this.swordRadiusGrowRate,(this.swordRadius>this.swordRadiusMax||this.isStunned)&&(this.sword=this.swordSlash,this.spinCount=0)},s.swordSlash=function(){this.laserSword(this.vertices[0],this.angle+this.laserAngle),this.laserSword(this.vertices[1],this.angle+this.laserAngle+Math.PI/3),this.laserSword(this.vertices[2],this.angle+this.laserAngle+2*Math.PI/3),this.laserSword(this.vertices[3],this.angle+this.laserAngle+Math.PI),this.laserSword(this.vertices[4],this.angle+this.laserAngle+4*Math.PI/3),this.laserSword(this.vertices[5],this.angle+this.laserAngle+5*Math.PI/3),this.torque+=this.torqueMagnitude,this.spinCount++,(this.spinCount>100||this.isStunned)&&(this.sword=this.swordWaiting,this.swordRadius=0,this.accelMag=.001*simulation.accelScale,this.cd=simulation.cycle+this.delay)},s.laserSword=function(e,t){const a=function(e,t,a){for(let o=0;o<a.length;++o){let s=a[o].vertices;const n=s.length-1;for(let l=0;l<n;l++)if(results=simulation.checkLineIntersection(e,t,s[l],s[l+1]),results.onLine1&&results.onLine2){const t=e.x-results.x,n=e.y-results.y,i=t*t+n*n;i<best.dist2&&(!a[o].mob||a[o].alive)&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[l],v2:s[l+1]})}if(results=simulation.checkLineIntersection(e,t,s[0],s[n]),results.onLine1&&results.onLine2){const t=e.x-results.x,l=e.y-results.y,i=t*t+l*l;i<best.dist2&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[0],v2:s[n]})}}};best={x:null,y:null,dist2:1/0,who:null,v1:null,v2:null};const o={x:e.x+this.swordRadius*Math.cos(t),y:e.y+this.swordRadius*Math.sin(t)};a(e,o,body),a(e,o,map),m.isCloak||a(e,o,[playerBody,playerHead]),best.who&&(best.who===playerBody||best.who===playerHead)&&m.immuneCycle<m.cycle&&(m.immuneCycle=m.cycle+m.collisionImmuneCycles+60,m.takeDamage(this.swordDamage),simulation.drawList.push({x:best.x,y:best.y,radius:1500*this.swordDamage,color:"rgba(80,0,255,0.5)",time:20})),best.dist2===1/0&&(best=o),ctx.beginPath(),ctx.moveTo(e.x,e.y),ctx.lineTo(best.x,best.y),ctx.strokeStyle="rgba(0,0,0,0.1)",ctx.lineWidth=15,ctx.stroke(),ctx.strokeStyle="rgba(0,0,0,0.5)",ctx.lineWidth=4,ctx.setLineDash([70+300*Math.random(),55*Math.random()]),ctx.stroke(),ctx.setLineDash([])}},slasher3(e,a,o=33+Math.ceil(30*Math.random())){mobs.spawn(e,a,6,o,"rgb(0,0,0)");let s=mob[mob.length-1];Matter.Body.rotate(s,2*Math.PI*Math.random()),s.accelMag=5e-4*simulation.accelScale,s.frictionStatic=0,s.friction=0,s.frictionAir=.02,s.delay=150*simulation.CDScale,s.cd=0,s.cycle=0,s.swordVertex=1,s.swordRadiusInitial=o/2,s.swordRadius=s.swordRadiusInitial,s.swordRadiusMax=750+6*simulation.difficulty,s.swordRadiusGrowRateInitial=1.08,s.swordRadiusGrowRate=s.swordRadiusGrowRateInitial,s.isSlashing=!1,s.swordDamage=.04*spawn.dmgToPlayerByLevelsCleared(),s.laserAngle=3*Math.PI/5;const n=s.swordRadiusMax*s.swordRadiusMax;t.shield(s,e,a),s.onDamage=function(){},s.do=function(){this.checkStatus(),this.seePlayerByHistory(15),this.sword()},s.swordWaiting=function(){if(this.attraction(),this.seePlayer.recall&&this.cd<simulation.cycle&&this.distanceToPlayer2()<n&&0===Matter.Query.ray(map,this.position,this.playerPosRandomY()).length&&0===Matter.Query.ray(body,this.position,this.playerPosRandomY()).length){let e=1/0;for(let t=0,a=this.vertices.length;t<a;t++){const a=Vector.magnitudeSquared(Vector.sub({x:this.vertices[t].x,y:this.vertices[t].y},m.pos));a<e&&(e=a,this.swordVertex=t)}this.laserAngle=this.swordVertex/6*2*Math.PI+Math.PI/6,this.sword=this.swordGrow,this.cycle=0,this.swordRadius=this.swordRadiusInitial,Matter.Body.setVelocity(this,Vector.mult(this.velocity,.5));const t=Vector.sub(this.position,this.vertices[this.swordVertex]),a=Vector.sub(this.position,m.pos),o=Matter.Vector.cross(t,a);this.torque=2e-5*this.inertia*(o>0?1:-1)}},s.sword=s.swordWaiting,s.swordGrow=function(){const e=this.angle+this.laserAngle,t=this.vertices[this.swordVertex].x+this.swordRadiusMax*Math.cos(e),a=this.vertices[this.swordVertex].y+this.swordRadiusMax*Math.sin(e),o=t-this.vertices[this.swordVertex+1>5?0:this.swordVertex+1].x,s=a-this.vertices[this.swordVertex+1>5?0:this.swordVertex+1].y,n=Math.atan2(s,o)*(180/Math.PI),l=t-this.vertices[this.swordVertex-1<0?5:this.swordVertex-1].x,i=a-this.vertices[this.swordVertex-1<0?5:this.swordVertex-1].y,c=Math.atan2(i,l)*(180/Math.PI);this.laserSpear(this.vertices[this.swordVertex],this.angle+this.laserAngle),this.laserSpear(this.vertices[this.swordVertex+1>5?0:this.swordVertex+1],n*(Math.PI/180)),this.laserSpear(this.vertices[this.swordVertex-1<0?5:this.swordVertex-1],c*(Math.PI/180)),Matter.Body.setVelocity(this,Vector.mult(this.velocity,.9)),this.cycle++,this.swordRadius*=this.swordRadiusGrowRate,this.swordRadius>this.swordRadiusMax&&(this.swordRadiusGrowRate=1/this.swordRadiusGrowRateInitial),(this.swordRadius<this.swordRadiusInitial||this.isStunned)&&(this.swordRadiusGrowRate=this.swordRadiusGrowRateInitial,this.sword=this.swordWaiting,this.swordRadius=0,this.cd=simulation.cycle+this.delay)},s.laserSpear=function(e,t){const a=function(e,t,a){for(let o=0;o<a.length;++o){let s=a[o].vertices;const n=s.length-1;for(let l=0;l<n;l++)if(results=simulation.checkLineIntersection(e,t,s[l],s[l+1]),results.onLine1&&results.onLine2){const t=e.x-results.x,n=e.y-results.y,i=t*t+n*n;i<best.dist2&&(!a[o].mob||a[o].alive)&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[l],v2:s[l+1]})}if(results=simulation.checkLineIntersection(e,t,s[0],s[n]),results.onLine1&&results.onLine2){const t=e.x-results.x,l=e.y-results.y,i=t*t+l*l;i<best.dist2&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[0],v2:s[n]})}}};best={x:null,y:null,dist2:1/0,who:null,v1:null,v2:null};const o={x:e.x+this.swordRadius*Math.cos(t),y:e.y+this.swordRadius*Math.sin(t)};a(e,o,body),a(e,o,map),m.isCloak||a(e,o,[playerBody,playerHead]),!best.who||best.who!==playerBody&&best.who!==playerHead||(this.swordRadiusGrowRate=1/this.swordRadiusGrowRateInitial,//!!!! this retracts the sword if it hits the player
m.immuneCycle<m.cycle&&(m.immuneCycle=m.cycle+m.collisionImmuneCycles+60,m.takeDamage(this.swordDamage),simulation.drawList.push({x:best.x,y:best.y,radius:1500*this.swordDamage,color:"rgba(80,0,255,0.5)",time:20}))),best.dist2===1/0&&(best=o),ctx.beginPath(),ctx.moveTo(e.x,e.y),ctx.lineTo(best.x,best.y),ctx.strokeStyle="rgba(0,0,0,0.1)",ctx.lineWidth=15,ctx.stroke(),ctx.strokeStyle="rgba(0,0,0,0.5)",ctx.lineWidth=4,ctx.setLineDash([70+300*Math.random(),55*Math.random()]),ctx.stroke(),ctx.setLineDash([])}},stabber(e,a,o=25+Math.ceil(12*Math.random()),s=7){o>80&&(o=65),mobs.spawn(e,a,6,o,"rgb(0,0,0)");let n=mob[mob.length-1];n.isVerticesChange=!0,n.accelMag=6e-4*simulation.accelScale,n.isInvulnerable=!1,n.delay=360*simulation.CDScale,n.spikeVertex=0,n.spikeLength=0,n.isSpikeGrowing=!1,n.spikeGrowth=0,n.isSpikeReset=!0,n.collisionFilter.mask=cat.map|cat.body|cat.bullet|cat.player,Matter.Body.rotate(n,.1*Math.PI),t.shield(n,e,a),n.onDeath=function(){if(this.spikeLength>4){this.spikeLength=4;const e=Vector.mult(Vector.normalise(Vector.sub(this.vertices[this.spikeVertex],this.position)),this.radius*this.spikeLength);this.vertices[this.spikeVertex].x=this.position.x+e.x,this.vertices[this.spikeVertex].y=this.position.y+e.y}},n.do=function(){if(this.seePlayerByLookingAt(),this.checkStatus(),this.attraction(),this.isSpikeReset){if(this.seePlayer.recall){const e=Vector.sub(this.seePlayer.position,this.position);if(Vector.magnitude(e)<o*s){let e=1/0;for(let t=0,a=this.vertices.length;t<a;t++){const a=Vector.sub(this.seePlayer.position,this.vertices[t]),o=Vector.magnitude(a);o<e&&(this.spikeVertex=t,e=o)}this.spikeLength=1,this.isSpikeGrowing=!0,this.isSpikeReset=!1,Matter.Body.setAngularVelocity(this,0)}n.isInvulnerable=!1}}else{this.isSpikeGrowing?(this.spikeLength+=Math.pow(this.spikeGrowth+=.02,8),this.spikeLength>s&&(this.isSpikeGrowing=!1,this.spikeGrowth=0)):(Matter.Body.setAngularVelocity(this,.8*this.angularVelocity),this.spikeLength-=.3,this.spikeLength<1&&(this.spikeLength=1,this.isSpikeReset=!0,this.radius=o));const e=Vector.mult(Vector.normalise(Vector.sub(this.vertices[this.spikeVertex],this.position)),o*this.spikeLength);this.vertices[this.spikeVertex].x=this.position.x+e.x,this.vertices[this.spikeVertex].y=this.position.y+e.y,n.isInvulnerable=!0}if(this.isInvulnerable){ctx.beginPath();let e=this.vertices;ctx.moveTo(e[0].x,e[0].y);for(let t=1;t<e.length;t++)ctx.lineTo(e[t].x,e[t].y);ctx.lineTo(e[0].x,e[0].y),ctx.lineWidth=13+5*Math.random(),ctx.strokeStyle=`rgba(255,255,255,${.5+.2*Math.random()})`,ctx.stroke(),n.damageReduction=0}else n.damageReduction=1}},slash(a,o,s=80){let n=[];mobs.spawn(a,o,6,s,"#000000");let l=mob[mob.length-1];Matter.Body.rotate(l,2*Math.PI*Math.random()),n.push(l.id);const i=Math.random(),c=Math.min(15,Math.floor(2+4*i+.75*Math.sqrt(simulation.difficulty)));l.isBoss=!0,l.isSlashBoss=!0,l.showHealthBar=!1,l.damageReduction=.1,l.startingDamageReduction=l.damageReduction,l.isInvulnerable=!1,l.frictionAir=.02,l.seeAtDistance2=1e6,l.accelMag=4e-4+15e-5*simulation.accelScale,Matter.Body.setDensity(l,5e-4),l.collisionFilter.mask=cat.bullet|cat.player|cat.body|cat.map,l.memory=1/0,l.seePlayerFreq=20,l.lockedOn=null,l.laserRange=500,l.torqueMagnitude=24e-5*l.inertia*(Math.random()>.5?-1:1),l.delay=70+70*simulation.CDScale,l.cd=0,l.swordRadius=0,l.swordVertex=1,l.swordRadiusMax=1100+20*simulation.difficulty,l.swordRadiusGrowRate=l.swordRadiusMax*(.005+3e-4*simulation.difficulty),l.isSlashing=!1,l.swordDamage=.07*spawn.dmgToPlayerByLevelsCleared(),l.laserAngle=3*Math.PI/5,l.eventHorizon=550;t.shield(l,a,o);const p=Math.random();let r=(.006+.001*Math.sqrt(simulation.difficulty))*(Math.random()<.5?1:-1),h=s+350+200*p+7*c;for(let e=0;e<c;e++)t.orbital(l,h,e/c*2*Math.PI,r);const d=[];for(let e=0;e<c;e++)d.push(mob.length-1-e);h=Math.max(60,100+100*Math.random()-3*c-80*p),r*=1.25+2*Math.random();const w=Math.max(2,Math.floor(6-5*i+.5*Math.sqrt(simulation.difficulty)));for(let e=0;e<c;e++)for(let a=0,o=w;a<o;a++)t.orbital(mob[d[e]],h,a/o*2*Math.PI,r);for(let e=0,a=3+.5*Math.sqrt(simulation.difficulty);e<a;e++)t.spawnOrbitals(l,s+40+10*e,1);const y=14e-5,x=5e-4;l.springTarget={x:l.position.x,y:l.position.y};const u=cons.length;cons[u]=Constraint.create({pointA:l.springTarget,bodyB:l,stiffness:y,damping:x}),Composite.add(engine.world,cons[cons.length-1]),cons[u].length=100+1.5*s,l.cons=cons[u],l.springTarget2={x:l.position.x,y:l.position.y};const R=cons.length;cons[R]=Constraint.create({pointA:l.springTarget2,bodyB:l,stiffness:y,damping:x,length:0}),Composite.add(engine.world,cons[cons.length-1]),cons[R].length=100+1.5*s,l.cons2=cons[R],l.onDamage=function(){},l.onDeath=function(){e=!0,this.removeCons(),powerUps.spawnBossPowerUp(this.position.x,this.position.y)},l.do=function(){for(let e=0;e<this.vertices.length;e++)this.harmField(this.vertices[e].x,this.vertices[e].y);this.seePlayerByHistory(40),this.springAttack(),this.checkStatus(),this.sword();const e=this.eventHorizon*(1+.2*Math.sin(.008*simulation.cycle));l.laserRange=e},l.swordWaiting=function(){if(this.seePlayer.recall&&this.cd<simulation.cycle&&this.distanceToPlayer2()<2e5&&!m.isCloak&&0===Matter.Query.ray(map,this.position,this.playerPosRandomY()).length&&0===Matter.Query.ray(body,this.position,this.playerPosRandomY()).length){let e=0;for(let t=0,a=this.vertices.length;t<a;t++){const a=Vector.magnitudeSquared(Vector.sub({x:this.vertices[t].x,y:this.vertices[t].y},m.pos));a>e&&(e=a,this.swordVertex=t)}this.laserAngle=this.swordVertex/6*2*Math.PI+.6283,this.sword=this.swordGrow,Matter.Body.setAngularVelocity(this,0),this.accelMag=4e-4+15e-5*simulation.accelScale,this.damageReduction=0,this.isInvulnerable=!0,this.frictionAir=1}},l.sword=l.swordWaiting,l.swordGrow=function(){const e=this.angle+this.laserAngle,t=this.vertices[this.swordVertex].x+this.swordRadiusMax*Math.cos(e),a=this.vertices[this.swordVertex].y+this.swordRadiusMax*Math.sin(e),o=t-this.vertices[this.swordVertex+1>5?0:this.swordVertex+1].x,s=a-this.vertices[this.swordVertex+1>5?0:this.swordVertex+1].y,n=Math.atan2(s,o)*(180/Math.PI),l=t-this.vertices[this.swordVertex-1<0?5:this.swordVertex-1].x,i=a-this.vertices[this.swordVertex-1<0?5:this.swordVertex-1].y,c=Math.atan2(i,l)*(180/Math.PI);this.laserSword(this.vertices[this.swordVertex],this.angle+this.laserAngle),this.laserSword(this.vertices[this.swordVertex+1>5?0:this.swordVertex+1],n*(Math.PI/180)),this.laserSword(this.vertices[this.swordVertex-1<0?5:this.swordVertex-1],c*(Math.PI/180)),this.swordRadius+=this.swordRadiusGrowRate,this.swordRadius>this.swordRadiusMax&&(this.sword=this.swordSlash,this.spinCount=0),ctx.beginPath();let p=this.vertices;ctx.moveTo(p[0].x,p[0].y);for(let e=1;e<p.length;e++)ctx.lineTo(p[e].x,p[e].y);ctx.lineTo(p[0].x,p[0].y),ctx.lineWidth=13+5*Math.random(),ctx.strokeStyle=`rgba(255,255,255,${.5+.2*Math.random()})`,ctx.stroke()},l.swordSlash=function(){const e=this.angle+this.laserAngle,t=this.vertices[this.swordVertex].x+this.swordRadiusMax*Math.cos(e),a=this.vertices[this.swordVertex].y+this.swordRadiusMax*Math.sin(e),o=t-this.vertices[this.swordVertex+1>5?0:this.swordVertex+1].x,s=a-this.vertices[this.swordVertex+1>5?0:this.swordVertex+1].y,n=Math.atan2(s,o)*(180/Math.PI),l=t-this.vertices[this.swordVertex-1<0?5:this.swordVertex-1].x,i=a-this.vertices[this.swordVertex-1<0?5:this.swordVertex-1].y,c=Math.atan2(i,l)*(180/Math.PI);this.laserSword(this.vertices[this.swordVertex],this.angle+this.laserAngle),this.laserSword(this.vertices[this.swordVertex+1>5?0:this.swordVertex+1],n*(Math.PI/180)),this.laserSword(this.vertices[this.swordVertex-1<0?5:this.swordVertex-1],c*(Math.PI/180)),this.torque+=this.torqueMagnitude,this.spinCount++,this.spinCount>80&&(this.sword=this.swordWaiting,this.swordRadius=0,this.accelMag=4e-4+15e-5*simulation.accelScale,this.cd=simulation.cycle+this.delay,this.damageReduction=this.startingDamageReduction,this.isInvulnerable=!1,this.frictionAir=.01),ctx.beginPath();let p=this.vertices;ctx.moveTo(p[0].x,p[0].y);for(let e=1;e<p.length;e++)ctx.lineTo(p[e].x,p[e].y);ctx.lineTo(p[0].x,p[0].y),ctx.lineWidth=13+5*Math.random(),ctx.strokeStyle=`rgba(255,255,255,${.5+.2*Math.random()})`,ctx.stroke()},l.laserSword=function(e,t){const a=function(e,t,a){for(let o=0;o<a.length;++o){let s=a[o].vertices;const n=s.length-1;for(let l=0;l<n;l++)if(results=simulation.checkLineIntersection(e,t,s[l],s[l+1]),results.onLine1&&results.onLine2){const t=e.x-results.x,n=e.y-results.y,i=t*t+n*n;i<best.dist2&&(!a[o].mob||a[o].alive)&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[l],v2:s[l+1]})}if(results=simulation.checkLineIntersection(e,t,s[0],s[n]),results.onLine1&&results.onLine2){const t=e.x-results.x,l=e.y-results.y,i=t*t+l*l;i<best.dist2&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[0],v2:s[n]})}}};best={x:null,y:null,dist2:1/0,who:null,v1:null,v2:null};const o={x:e.x+this.swordRadius*Math.cos(t),y:e.y+this.swordRadius*Math.sin(t)};a(e,o,body),a(e,o,map),m.isCloak||a(e,o,[playerBody,playerHead]),best.who&&(best.who===playerBody||best.who===playerHead)&&m.immuneCycle<m.cycle&&(m.immuneCycle=m.cycle+m.collisionImmuneCycles+60,m.takeDamage(this.swordDamage),simulation.drawList.push({x:best.x,y:best.y,radius:1500*this.swordDamage,color:"rgba(0,0,0,0.5)",time:20})),best.dist2===1/0&&(best=o),ctx.beginPath(),ctx.moveTo(e.x,e.y),ctx.lineTo(best.x,best.y),ctx.strokeStyle="rgba(0,0,0,0.1)",ctx.lineWidth=25,ctx.stroke(),ctx.strokeStyle="rgba(0,0,0,0.5)",ctx.lineWidth=5,ctx.setLineDash([70+300*Math.random(),55*Math.random()]),ctx.stroke(),ctx.setLineDash([])},l.harmField=function(e,t){ctx.setLineDash([125*Math.random(),125*Math.random()]),this.distanceToPlayer3(e,t)<this.laserRange&&(m.immuneCycle<m.cycle&&(m.takeDamage(3e-4*spawn.dmgToPlayerByLevelsCleared()),m.energy>.1&&(m.energy-=.003)),ctx.beginPath(),ctx.moveTo(e,t),ctx.lineTo(m.pos.x,m.pos.y),ctx.lineTo(m.pos.x+3e3*(Math.random()-.5),m.pos.y+3e3*(Math.random()-.5)),ctx.lineWidth=2,ctx.strokeStyle="rgb(0,0,0)",ctx.stroke(),ctx.beginPath(),ctx.arc(m.pos.x,m.pos.y,40,0,2*Math.PI),ctx.fillStyle="rgba(0,0,0,0.15)",ctx.fill()),ctx.beginPath(),ctx.arc(e,t,.9*this.laserRange,0,2*Math.PI),ctx.strokeStyle="rgba(0,0,0,0.5)",ctx.lineWidth=1,ctx.stroke(),ctx.setLineDash([]),ctx.fillStyle="rgba(0,0,0,0.03)",ctx.fill()},l.distanceToPlayer3=function(e,t){const a=e-player.position.x,o=t-player.position.y;return Math.sqrt(a*a+o*o)},s=22;const b=2*Math.PI/6;spawn.allowShields=!1;for(let e=0;e<6;++e)t.stabber(a+100*Math.sin(e*b),o+100*Math.cos(e*b),s,12),Matter.Body.setDensity(mob[mob.length-1],.003),mob[mob.length-1].damageReduction=.12,mob[mob.length-1].showHealthBar=!1,mob[mob.length-1].isBoss=!0,n.push(mob[mob.length-1].id);spawn.constrain2AdjacentMobs(6,.02,!0);for(let e=0;e<6;++e)consBB[consBB.length]=Constraint.create({bodyA:l,bodyB:mob[mob.length-e-1],stiffness:.02,damping:.03}),Composite.add(engine.world,consBB[consBB.length-1]);t.groupShield(n,a,o,100+1*s+30-25),spawn.allowShields=!0}};level.setPosToSpawn(-625,-100),level.exit.x=-23650,level.exit.y=11100,simulation.fallHeight=2e4;const a=level.door(350,-200,25,225,225,10),o=level.door(6325,-200,25,225,225,10);spawn.mapRect(level.exit.x,level.exit.y+20,100,20),level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#d8dadf",t.stabber(425,-100),t.stabber(725,-100),t.stabber(1e3,-100),t.stabber(1300,-100),t.stabber(1550,-100),t.stabber(1850,-100),t.stabber(2125,-100),t.stabber(2400,-100),t.stabber(2675,-100),t.stabber(2975,-100),t.stabber(3225,-100),t.stabber(3525,-100),t.stabber(3800,-100),t.stabber(4100,-100),t.stabber(4375,-100),t.stabber(4650,-100),t.stabber(4925,-100),t.stabber(5200,-100),t.stabber(5500,-100),t.stabber(5775,-100),spawn.mapRect(-200,-450,2825,75),spawn.mapRect(-200,0,2825,75),spawn.mapRect(-300,-400,150,50),spawn.mapRect(-575,-375,325,50),spawn.mapRect(-1175,0,700,75),spawn.mapRect(-1100,50,675,75),spawn.mapRect(-1100,-50,225,75),spawn.mapRect(-1025,-75,200,50),spawn.mapRect(-875,-50,150,75),spawn.mapRect(-700,-350,325,50),spawn.mapRect(-950,-100,150,50),spawn.mapRect(-675,-50,125,25),spawn.mapRect(-575,-150,25,125),spawn.mapRect(-650,-50,25,75),spawn.mapRect(-600,-50,25,75),spawn.mapRect(-800,-325,250,50),spawn.mapRect(-1450,50,500,75),spawn.mapRect(-1550,100,475,100),spawn.mapRect(-1650,175,525,375),spawn.mapRect(-1700,275,200,175),spawn.mapRect(-1550,525,475,100),spawn.mapRect(-1475,600,4125,100),spawn.mapRect(-50,50,75,75),level.chain(-450,75,0,!1,13),level.chain(7475,600,-.5498531827,!1,200),spawn.mapRect(325,-425,75,275),spawn.mapRect(-850,-300,100,50),spawn.mapRect(-900,-125,75,50),spawn.mapRect(-875,-275,50,50),spawn.mapRect(425,-400,125,100),spawn.mapRect(600,-400,125,100),spawn.mapRect(775,-400,125,100),spawn.mapRect(950,-400,125,100),spawn.mapRect(375,-350,2250,25),spawn.mapRect(1125,-400,125,100),spawn.mapRect(1300,-400,125,100),spawn.mapRect(1475,-400,125,100),spawn.mapRect(1650,-400,125,100),spawn.mapRect(1825,-400,125,100),spawn.mapRect(2e3,-400,125,100),spawn.mapRect(2175,-400,125,100),spawn.mapRect(2350,-400,125,100),spawn.mapRect(2525,-400,125,100),spawn.mapRect(-1350,650,4e3,150),spawn.mapRect(-1400,675,125,75),spawn.mapRect(-1325,25,200,50),spawn.mapRect(2600,600,4350,200),spawn.mapRect(2550,0,4400,75),spawn.mapRect(6875,0,875,75),spawn.mapRect(2500,-450,5300,50),spawn.mapRect(7575,-425,575,475),spawn.mapRect(6825,600,650,125),spawn.mapRect(6875,675,475,100),spawn.mapRect(7050,-525,1175,175),spawn.mapRect(7650,-25,575,150),spawn.mapRect(6075,-500,1125,75),spawn.mapRect(2550,-350,3450,25),spawn.mapRect(2700,-400,125,100),spawn.mapRect(2875,-400,125,100),spawn.mapRect(3050,-400,125,100),spawn.mapRect(3225,-400,125,100),spawn.mapRect(3400,-400,125,100),spawn.mapRect(3575,-400,125,100),spawn.mapRect(3750,-400,125,100),spawn.mapRect(3925,-400,125,100),spawn.mapRect(4100,-400,125,100),spawn.mapRect(4275,-400,125,100),spawn.mapRect(4450,-400,125,100),spawn.mapRect(4625,-400,125,100),spawn.mapRect(4800,-400,125,100),spawn.mapRect(4975,-400,125,100),spawn.mapRect(5150,-400,125,100),spawn.mapRect(5325,-400,125,100),spawn.mapRect(5500,-400,125,100),spawn.mapRect(5675,-400,125,100),spawn.mapRect(5850,-400,125,100),spawn.mapRect(6e3,-400,125,100),spawn.mapRect(6100,-425,125,100),spawn.mapRect(6150,-450,200,75),spawn.mapRect(2575,-400,3575,25),spawn.mapRect(6300,-425,75,250),spawn.mapRect(-200,-175,50,50),spawn.bodyRect(-950,475,150,125),spawn.bodyRect(-650,475,150,125),spawn.bodyRect(-1e3,350,550,125),spawn.bodyRect(-650,150,225,200),spawn.bodyRect(-1050,150,400,200),spawn.bodyRect(-1125,225,25,275),spawn.bodyRect(-1100,350,125,200),spawn.bodyRect(-800,475,150,125),spawn.bodyRect(-500,475,125,125),spawn.mapRect(-3325,-50,600,75),spawn.mapRect(-3250,0,450,75),spawn.mapRect(-2950,-100,350,75),spawn.mapRect(-2975,-150,325,75),spawn.mapRect(-3150,-250,125,25),spawn.mapRect(-3050,-225,100,25),spawn.mapRect(-3e3,-200,125,25),spawn.mapRect(-3425,-75,325,50),spawn.mapRect(-3250,-225,125,25),spawn.mapRect(-3325,-200,100,25),spawn.mapRect(-3100,-300,25,50),spawn.mapRect(-3725,-325,1300,25),spawn.mapRect(-2925,-175,125,25),spawn.mapRect(-3375,-175,100,25),spawn.mapRect(-3550,-150,250,75),spawn.mapRect(-3725,-150,250,50),spawn.mapRect(-3725,-200,125,75),spawn.mapRect(-3625,-175,50,25),spawn.mapRect(-3750,-125,50,25),spawn.mapRect(-3750,-50,125,50),spawn.mapRect(-3650,-125,75,100),spawn.mapRect(-2750,0,100,75),spawn.mapRect(-2675,25,175,25),spawn.mapRect(-2850,0,150,50),spawn.mapRect(-3150,50,25,75),spawn.mapRect(-2900,50,25,75),spawn.mapRect(-3300,100,575,25),spawn.mapRect(-24300,11125,51525,6250),spawn.mapVertex(7900,-675,"0 0 500 -200 500 300 -450 300"),spawn.mapRect(-24300,9575,475,1750),spawn.mapRect(26800,9575,425,1750),spawn.hopper(-3100,-150),spawn.mapRect(11625,8375,11200,225),spawn.mapRect(22600,8375,225,3225),spawn.mapRect(11625,8375,225,1800),spawn.mapRect(12425,9825,225,875),spawn.mapRect(13150,10725,225,575),spawn.mapRect(14125,10450,5025,200),spawn.mapRect(21775,10625,1050,225),spawn.mapRect(20325,10925,1300,200),spawn.mapRect(20825,10250,750,225),spawn.mapRect(19500,1e4,1e3,225),t.slasher2(-22725,10325),t.slasher3(-23425,10250),t.slasher2(-23350,10700),t.slasher3(-21725,11075),t.slasher2(-21525,10025),t.slasher3(-20950,9750),t.slasher2(-19975,9700),t.slasher3(-18850,9650),t.slasher2(-18675,9700),t.slasher3(-18250,9125),t.slasher2(-17775,8925),t.slasher3(-16975,8875),t.slasher2(-16475,9125),t.slasher3(-16125,9275),t.slasher2(-15650,9225),t.slasher3(-15200,9175),t.slasher2(-16800,9325),t.slasher3(-17450,9525),t.slasher2(-18375,9625),t.slasher3(-19650,9375),t.slasher2(-20600,9225),t.slasher3(-21625,9400),t.slasher2(-22450,9775),t.slasher3(-22900,1e4),t.slasher2(-23275,9300),t.slasher3(-23125,9150),t.slasher2(2800,9350),t.slasher3(4925,9825),t.slasher2(3725,10525),t.slasher3(1850,10450),t.slash(16850,10075),spawn.mapVertex(-14325,11e3,"0 0 4000 -2000 10000 -3000 16000 -2000 20000 0");let s=Matter.Bodies.rectangle(8075,10750,1100,150,{density:.05,isNotHoldable:!1,restitution:1.05,isStatic:!1},!0,[!0],0),n=Matter.Bodies.rectangle(7450,10650,150,200,{density:.05,isNotHoldable:!0,restitution:1.05,isStatic:!1},!0,[!0],0),l=Matter.Bodies.rectangle(8075,10550,1250,100,{density:.05,isNotHoldable:!0,restitution:1.05,isStatic:!1},!0,[!0],0),i=Matter.Bodies.rectangle(8700,10650,150,200,{density:.05,isNotHoldable:!0,restitution:1.05,isStatic:!1},!0,[!0],0),c=Matter.Bodies.rectangle(7650,10450,100,200,{density:.05,isNotHoldable:!0,restitution:1.05,isStatic:!1},!0,[!0],0),p=Matter.Bodies.rectangle(8525,10450,100,200,{density:.05,isNotHoldable:!0,restitution:1.05,isStatic:!1},!0,[!0],0),r=Matter.Bodies.rectangle(8012.5,10362.5,725,75,{density:.05,isNotHoldable:!0,restitution:1.05,isStatic:!1},!0,[!0],0),h=Matter.Bodies.rectangle(8100,10275,200,150,{density:.05,isNotHoldable:!0,restitution:1.05,isStatic:!1},!0,[!0],0),d=Matter.Bodies.rectangle(7537.5,10275,1125,50,{density:.05,isNotHoldable:!0,restitution:1.05,isStatic:!1},!0,[!0],0),w=Matter.Bodies.rectangle(7650,10637.5,100,125,{density:.05,isNotHoldable:!0,restitution:1.05,isStatic:!1},!0,[!0],0),y=Matter.Bodies.rectangle(8525,10637.5,100,125,{density:.05,isNotHoldable:!0,restitution:1.05,isStatic:!1},!0,[!0],0),x=Matter.Bodies.rectangle(8075,10637.5,100,125,{density:.05,isNotHoldable:!0,restitution:1.05,isStatic:!1},!0,[!0],0);wasd=Matter.Body.create({parts:[s,n,l,i,c,p,r,h,d,w,y,x]}),body[body.length]=s,body[body.length]=n,body[body.length]=l,body[body.length]=i,body[body.length]=c,body[body.length]=p,body[body.length]=r,body[body.length]=h,body[body.length]=d,body[body.length]=w,body[body.length]=y,body[body.length]=x,Matter.Composite.add(engine.world,wasd),composite[composite.length]=wasd,setTimeout(function(){wasd.collisionFilter.category=cat.map,wasd.collisionFilter.mask=cat.body|cat.player|cat.bullet|cat.mobBullet|cat.mob|cat.map},100);let u=0;var R=ctx.createLinearGradient(0,0,5487.5,0);function f(e,t,a,o,s=20,n="gray"){const l=a/s;for(let a=0;a<s;a++){const o=e+a*l,s=t;ctx.fillStyle=n,ctx.fillRect(o-100,s,125,25),ctx.fillRect(o,s-125,25,150),ctx.fillRect(o-75,s,25,75),ctx.fillRect(o-25,s,25,75)}}function g(e,t,a){ctx.save(),ctx.translate(e,t-30),ctx.rotate(a),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.arc(15,0,4,0,2*Math.PI),ctx.strokeStyle="#333",ctx.lineWidth=2,ctx.stroke(),ctx.restore()}R.addColorStop(0,"#00000000"),R.addColorStop(1,"#686868"),level.custom=()=>{wasd.force.y+=simulation.g*wasd.mass,Matter.Query.collides(wasd,[player]).length>0&&(!m.isCloak||!tech.isIntangible)&&input.down&&e&&(wasd.force.x+=75*Math.cos(m.angle),Matter.Body.setVelocity(player,wasd.velocity),m.Vx=player.velocity.x-wasd.velocity.x);for(let t=0;t<mob.length;t++)if(Matter.Query.collides(wasd,[mob[t]]).length>0&&!mob[t].isBoss&&e){const e=1;mob[t].damage(e,!0),simulation.drawList.push({x:mob[t].position.x,y:mob[t].position.y,radius:50*Math.sqrt(e),color:simulation.mobDmgColor,time:simulation.drawTime});break}u=wasd.velocity.x/5,level.exit.drawAndCheck(),f(475,-50,5600,125,20,"darkgray"),a.openClose(),o.openClose(),player.position.y<25?(a.isClosing=!1,o.isClosing=!1):(a.isClosing=!0,o.isClosing=!0),ctx.fillStyle="red",ctx.fillRect(-825,-75,50,50),b.pulse(30,0,{x:-2500,y:37.5}),ctx.save(),ctx.translate(11750,8475),ctx.fillStyle=R,ctx.fillRect(0,0,10975,2800),ctx.restore(),g(7400,0,.1*Math.PI),g(7460,0,.5*Math.PI),g(7520,0,.3*Math.PI),g(22400,11125,.3*Math.PI),g(21925,10625,.5*Math.PI),g(21175,10250,.1*Math.PI),g(22525,10625,.7*Math.PI),g(22525,11125,.9*Math.PI),g(22225,11125,1.5*Math.PI)},level.customTopLayer=()=>{f(500,-50,5600,125),ctx.strokeStyle="red",ctx.lineWidth=20,ctx.beginPath(),ctx.setLineDash([40,40]),ctx.lineDashOffset=-simulation.cycle*u%80,ctx.moveTo(s.vertices[0].x,s.vertices[0].y);for(let e=1;e<s.vertices.length;e++)ctx.lineTo(s.vertices[e].x,s.vertices[e].y);ctx.lineTo(s.vertices[0].x,s.vertices[0].y),ctx.closePath(),ctx.stroke(),ctx.setLineDash([0,0])};for(let t=0,a=mob.length;t<a;t++)mob[t].isSlashBoss&&simulation.ephemera.push({do(){"ace"!=level.levels[level.onLevel]||e||(ctx.save(),ctx.setTransform(1,0,-.5,1,0,0),ctx.fillStyle="rgba(100, 100, 100, 0.3)",ctx.fillRect(canvas.width2/2,canvas.height2/10,canvas.width2,30),ctx.fillStyle="rgba(0,0,0,0.7)",ctx.fillRect(canvas.width2/2,canvas.height2/10,canvas.width2*mob[t].health,30),ctx.restore())}})},crimsonTowers(){simulation.inGameConsole('crimsonTowers by Richard0820. Thank you desboot for the video: <a href="https://www.youtube.com/watch?v=hkdY0mDF2SY&feature=youtu.be&ab_channel=DesBoot">Source</a>');const e={spawnOrbitals(t,a,o=Math.min(.25+.005*simulation.difficulty)){if(Math.random()<o){const o=Math.floor(Math.min(15,3+Math.sqrt(simulation.difficulty))),s=(.003+.004*Math.random()+.002*Math.sqrt(simulation.difficulty))*(Math.random()<.5?1:-1),n=6.28*Math.random();for(let l=0;l<o;l++)e.orbital(t,a,l/o*2*Math.PI+n,s)}},orbital(e,t,a,o){mobs.spawn(e.position.x,e.position.y,8,12,"rgb(0,0,0)");let s=mob[mob.length-1];s.stroke="transparent",Matter.Body.setDensity(s,.01),s.leaveBody=!1,s.isDropPowerUp=!1,s.isBadTarget=!0,s.isUnstable=!0,s.showHealthBar=!1,s.isOrbital=!0,s.collisionFilter.category=cat.mobBullet,s.collisionFilter.mask=cat.bullet,s.do=function(){if(!e||!e.alive)return void this.death();const s=simulation.cycle*o+a,n={x:Math.cos(s),y:Math.sin(s)};if(Matter.Body.setPosition(this,Vector.add(Vector.add(e.position,e.velocity),Vector.mult(n,t))),Matter.Query.collides(this,[player]).length>0&&(!m.isCloak||!tech.isIntangible)&&m.immuneCycle<m.cycle){m.immuneCycle=m.cycle+m.collisionImmuneCycles;const e=.03*spawn.dmgToPlayerByLevelsCleared();m.takeDamage(e),simulation.drawList.push({x:this.position.x,y:this.position.y,radius:200*Math.sqrt(e),color:simulation.mobDmgColor,time:simulation.drawTime}),this.death()}}},shield(e,t,a,o=Math.min(.02+.005*simulation.difficulty,.2)+tech.duplicationChance()){if(this.allowShields&&Math.random()<o){mobs.spawn(t,a,9,e.radius+30,"rgba(255,255,255,0.9)");let o=mob[mob.length-1];o.stroke="rgb(0,0,0)",Matter.Body.setDensity(o,1e-5),o.shield=!0,o.damageReduction=.05,o.isUnblockable=!0,o.collisionFilter.category=cat.mobShield,o.collisionFilter.mask=cat.bullet,consBB[consBB.length]=Constraint.create({bodyA:o,bodyB:e,stiffness:.4,damping:.1}),Composite.add(engine.world,consBB[consBB.length-1]),o.onDamage=function(){this.alertNearByMobs(),this.fill=`rgba(255,255,255,${.3+.6*this.health})`},o.leaveBody=!1,o.isDropPowerUp=!1,o.showHealthBar=!1,o.shieldTargetID=e.id,e.isShielded=!0,e.shieldCount>0?e.shieldCount++:e.shieldCount=1,o.shieldCount=e.shieldCount,e.shieldID=o.id,o.onDeath=function(){for(let e=0,t=mob.length;e<t;e++)mob[e].id===this.shieldTargetID&&(mob[e].isShielded=!1)},o.do=function(){this.checkStatus()},mob.unshift(o)}},groupShield(e,t,a,o,s=.4){const n=e.length;mobs.spawn(t,a,9,o,"rgba(255,255,255,0.9)");let l=mob[mob.length-1];l.stroke="rgb(0,0,0)",Matter.Body.setDensity(l,1e-5),l.frictionAir=0,l.shield=!0,l.damageReduction=.075,l.collisionFilter.category=cat.mobShield,l.collisionFilter.mask=cat.bullet;for(let e=0;e<n;++e)mob[mob.length-e-2].isShielded=!0,consBB[consBB.length]=Constraint.create({bodyA:l,bodyB:mob[mob.length-e-2],stiffness:s,damping:.1}),Composite.add(engine.world,consBB[consBB.length-1]);l.onDamage=function(){this.alertNearByMobs(),this.fill=`rgba(255,255,255,${.3+.6*this.health})`},l.onDeath=function(){for(let t=0;t<e.length;t++)for(let a=0,o=mob.length;a<o;a++)mob[a].id===e[t]&&(mob[a].isShielded=!1)},l.leaveBody=!1,l.isDropPowerUp=!1,l.showHealthBar=!1,mob[mob.length-1]=mob[mob.length-1-n],mob[mob.length-1-n]=l,l.do=function(){this.checkStatus()}},slasher2(t,a,o=33+Math.ceil(30*Math.random())){mobs.spawn(t,a,6,o,"rgb(0,0,0)");let s=mob[mob.length-1];Matter.Body.rotate(s,2*Math.PI*Math.random()),s.accelMag=9e-4*simulation.accelScale,s.torqueMagnitude=12e-6*s.inertia,s.frictionStatic=0,s.friction=0,s.frictionAir=.035,s.delay=140*simulation.CDScale,s.cd=0,s.swordRadius=0,s.swordVertex=1,s.swordRadiusMax=275+3.5*simulation.difficulty,s.swordRadiusGrowRate=s.swordRadiusMax*(.011+2e-4*simulation.difficulty),s.isSlashing=!1,s.swordDamage=.03*spawn.dmgToPlayerByLevelsCleared(),s.laserAngle=3*Math.PI/5;e.shield(s,t,a),s.onDamage=function(){},s.do=function(){this.checkStatus(),this.seePlayerByHistory(15),this.attraction(),this.sword()},s.swordWaiting=function(){this.seePlayer.recall&&this.cd<simulation.cycle&&this.distanceToPlayer2()<2e5&&0===Matter.Query.ray(map,this.position,this.playerPosRandomY()).length&&0===Matter.Query.ray(body,this.position,this.playerPosRandomY()).length&&(this.laserAngle=-Math.PI/6,this.sword=this.swordGrow,this.accelMag=0)},s.sword=s.swordWaiting,s.swordGrow=function(){this.laserSword(this.vertices[0],this.angle+this.laserAngle),this.laserSword(this.vertices[1],this.angle+this.laserAngle+Math.PI/3),this.laserSword(this.vertices[2],this.angle+this.laserAngle+2*Math.PI/3),this.laserSword(this.vertices[3],this.angle+this.laserAngle+Math.PI),this.laserSword(this.vertices[4],this.angle+this.laserAngle+4*Math.PI/3),this.laserSword(this.vertices[5],this.angle+this.laserAngle+5*Math.PI/3),this.swordRadius+=this.swordRadiusGrowRate,(this.swordRadius>this.swordRadiusMax||this.isStunned)&&(this.sword=this.swordSlash,this.spinCount=0)},s.swordSlash=function(){this.laserSword(this.vertices[0],this.angle+this.laserAngle),this.laserSword(this.vertices[1],this.angle+this.laserAngle+Math.PI/3),this.laserSword(this.vertices[2],this.angle+this.laserAngle+2*Math.PI/3),this.laserSword(this.vertices[3],this.angle+this.laserAngle+Math.PI),this.laserSword(this.vertices[4],this.angle+this.laserAngle+4*Math.PI/3),this.laserSword(this.vertices[5],this.angle+this.laserAngle+5*Math.PI/3),this.torque+=this.torqueMagnitude,this.spinCount++,(this.spinCount>100||this.isStunned)&&(this.sword=this.swordWaiting,this.swordRadius=0,this.accelMag=.001*simulation.accelScale,this.cd=simulation.cycle+this.delay)},s.laserSword=function(e,t){const a=function(e,t,a){for(let o=0;o<a.length;++o){let s=a[o].vertices;const n=s.length-1;for(let l=0;l<n;l++)if(results=simulation.checkLineIntersection(e,t,s[l],s[l+1]),results.onLine1&&results.onLine2){const t=e.x-results.x,n=e.y-results.y,i=t*t+n*n;i<best.dist2&&(!a[o].mob||a[o].alive)&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[l],v2:s[l+1]})}if(results=simulation.checkLineIntersection(e,t,s[0],s[n]),results.onLine1&&results.onLine2){const t=e.x-results.x,l=e.y-results.y,i=t*t+l*l;i<best.dist2&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[0],v2:s[n]})}}};best={x:null,y:null,dist2:1/0,who:null,v1:null,v2:null};const o={x:e.x+this.swordRadius*Math.cos(t),y:e.y+this.swordRadius*Math.sin(t)};a(e,o,body),a(e,o,map),m.isCloak||a(e,o,[playerBody,playerHead]),best.who&&(best.who===playerBody||best.who===playerHead)&&m.immuneCycle<m.cycle&&(m.immuneCycle=m.cycle+m.collisionImmuneCycles+60,m.takeDamage(this.swordDamage),simulation.drawList.push({x:best.x,y:best.y,radius:1500*this.swordDamage,color:"rgba(80,0,255,0.5)",time:20})),best.dist2===1/0&&(best=o),ctx.beginPath(),ctx.moveTo(e.x,e.y),ctx.lineTo(best.x,best.y),ctx.strokeStyle="rgba(0,0,0,0.1)",ctx.lineWidth=15,ctx.stroke(),ctx.strokeStyle="rgba(0,0,0,0.5)",ctx.lineWidth=4,ctx.setLineDash([70+300*Math.random(),55*Math.random()]),ctx.stroke(),ctx.setLineDash([])}},slasher3(t,a,o=33+Math.ceil(30*Math.random())){mobs.spawn(t,a,6,o,"rgb(0,0,0)");let s=mob[mob.length-1];Matter.Body.rotate(s,2*Math.PI*Math.random()),s.accelMag=5e-4*simulation.accelScale,s.frictionStatic=0,s.friction=0,s.frictionAir=.02,s.delay=150*simulation.CDScale,s.cd=0,s.cycle=0,s.swordVertex=1,s.swordRadiusInitial=o/2,s.swordRadius=s.swordRadiusInitial,s.swordRadiusMax=750+6*simulation.difficulty,s.swordRadiusGrowRateInitial=1.08,s.swordRadiusGrowRate=s.swordRadiusGrowRateInitial,s.isSlashing=!1,s.swordDamage=.04*spawn.dmgToPlayerByLevelsCleared(),s.laserAngle=3*Math.PI/5;const n=s.swordRadiusMax*s.swordRadiusMax;e.shield(s,t,a),s.onDamage=function(){},s.do=function(){this.checkStatus(),this.seePlayerByHistory(15),this.sword()},s.swordWaiting=function(){if(this.attraction(),this.seePlayer.recall&&this.cd<simulation.cycle&&this.distanceToPlayer2()<n&&0===Matter.Query.ray(map,this.position,this.playerPosRandomY()).length&&0===Matter.Query.ray(body,this.position,this.playerPosRandomY()).length){let e=1/0;for(let t=0,a=this.vertices.length;t<a;t++){const a=Vector.magnitudeSquared(Vector.sub({x:this.vertices[t].x,y:this.vertices[t].y},m.pos));a<e&&(e=a,this.swordVertex=t)}this.laserAngle=this.swordVertex/6*2*Math.PI+Math.PI/6,this.sword=this.swordGrow,this.cycle=0,this.swordRadius=this.swordRadiusInitial,Matter.Body.setVelocity(this,Vector.mult(this.velocity,.5));const t=Vector.sub(this.position,this.vertices[this.swordVertex]),a=Vector.sub(this.position,m.pos),o=Matter.Vector.cross(t,a);this.torque=2e-5*this.inertia*(o>0?1:-1)}},s.sword=s.swordWaiting,s.swordGrow=function(){const e=this.angle+this.laserAngle,t=this.vertices[this.swordVertex].x+this.swordRadiusMax*Math.cos(e),a=this.vertices[this.swordVertex].y+this.swordRadiusMax*Math.sin(e),o=t-this.vertices[this.swordVertex+1>5?0:this.swordVertex+1].x,s=a-this.vertices[this.swordVertex+1>5?0:this.swordVertex+1].y,n=Math.atan2(s,o)*(180/Math.PI),l=t-this.vertices[this.swordVertex-1<0?5:this.swordVertex-1].x,i=a-this.vertices[this.swordVertex-1<0?5:this.swordVertex-1].y,c=Math.atan2(i,l)*(180/Math.PI);this.laserSpear(this.vertices[this.swordVertex],this.angle+this.laserAngle),this.laserSpear(this.vertices[this.swordVertex+1>5?0:this.swordVertex+1],n*(Math.PI/180)),this.laserSpear(this.vertices[this.swordVertex-1<0?5:this.swordVertex-1],c*(Math.PI/180)),Matter.Body.setVelocity(this,Vector.mult(this.velocity,.9)),this.cycle++,this.swordRadius*=this.swordRadiusGrowRate,this.swordRadius>this.swordRadiusMax&&(this.swordRadiusGrowRate=1/this.swordRadiusGrowRateInitial),(this.swordRadius<this.swordRadiusInitial||this.isStunned)&&(this.swordRadiusGrowRate=this.swordRadiusGrowRateInitial,this.sword=this.swordWaiting,this.swordRadius=0,this.cd=simulation.cycle+this.delay)},s.laserSpear=function(e,t){const a=function(e,t,a){for(let o=0;o<a.length;++o){let s=a[o].vertices;const n=s.length-1;for(let l=0;l<n;l++)if(results=simulation.checkLineIntersection(e,t,s[l],s[l+1]),results.onLine1&&results.onLine2){const t=e.x-results.x,n=e.y-results.y,i=t*t+n*n;i<best.dist2&&(!a[o].mob||a[o].alive)&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[l],v2:s[l+1]})}if(results=simulation.checkLineIntersection(e,t,s[0],s[n]),results.onLine1&&results.onLine2){const t=e.x-results.x,l=e.y-results.y,i=t*t+l*l;i<best.dist2&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[0],v2:s[n]})}}};best={x:null,y:null,dist2:1/0,who:null,v1:null,v2:null};const o={x:e.x+this.swordRadius*Math.cos(t),y:e.y+this.swordRadius*Math.sin(t)};a(e,o,body),a(e,o,map),m.isCloak||a(e,o,[playerBody,playerHead]),!best.who||best.who!==playerBody&&best.who!==playerHead||(this.swordRadiusGrowRate=1/this.swordRadiusGrowRateInitial,//!!!! this retracts the sword if it hits the player
m.immuneCycle<m.cycle&&(m.immuneCycle=m.cycle+m.collisionImmuneCycles+60,m.takeDamage(this.swordDamage),simulation.drawList.push({x:best.x,y:best.y,radius:1500*this.swordDamage,color:"rgba(80,0,255,0.5)",time:20}))),best.dist2===1/0&&(best=o),ctx.beginPath(),ctx.moveTo(e.x,e.y),ctx.lineTo(best.x,best.y),ctx.strokeStyle="rgba(0,0,0,0.1)",ctx.lineWidth=15,ctx.stroke(),ctx.strokeStyle="rgba(0,0,0,0.5)",ctx.lineWidth=4,ctx.setLineDash([70+300*Math.random(),55*Math.random()]),ctx.stroke(),ctx.setLineDash([])}},stabber(t,a,o=25+Math.ceil(12*Math.random()),s=7){o>80&&(o=65),mobs.spawn(t,a,6,o,"rgb(0,0,0)");let n=mob[mob.length-1];n.isVerticesChange=!0,n.accelMag=6e-4*simulation.accelScale,n.isInvulnerable=!1,n.delay=360*simulation.CDScale,n.spikeVertex=0,n.spikeLength=0,n.isSpikeGrowing=!1,n.spikeGrowth=0,n.isSpikeReset=!0,n.collisionFilter.mask=cat.map|cat.body|cat.bullet|cat.player,Matter.Body.rotate(n,.1*Math.PI),e.shield(n,t,a),n.onDeath=function(){if(this.spikeLength>4){this.spikeLength=4;const e=Vector.mult(Vector.normalise(Vector.sub(this.vertices[this.spikeVertex],this.position)),this.radius*this.spikeLength);this.vertices[this.spikeVertex].x=this.position.x+e.x,this.vertices[this.spikeVertex].y=this.position.y+e.y}},n.do=function(){if(this.seePlayerByLookingAt(),this.checkStatus(),this.attraction(),this.isSpikeReset){if(this.seePlayer.recall){const e=Vector.sub(this.seePlayer.position,this.position);if(Vector.magnitude(e)<o*s){let e=1/0;for(let t=0,a=this.vertices.length;t<a;t++){const a=Vector.sub(this.seePlayer.position,this.vertices[t]),o=Vector.magnitude(a);o<e&&(this.spikeVertex=t,e=o)}this.spikeLength=1,this.isSpikeGrowing=!0,this.isSpikeReset=!1,Matter.Body.setAngularVelocity(this,0)}n.isInvulnerable=!1}}else{this.isSpikeGrowing?(this.spikeLength+=Math.pow(this.spikeGrowth+=.02,8),this.spikeLength>s&&(this.isSpikeGrowing=!1,this.spikeGrowth=0)):(Matter.Body.setAngularVelocity(this,.8*this.angularVelocity),this.spikeLength-=.3,this.spikeLength<1&&(this.spikeLength=1,this.isSpikeReset=!0,this.radius=o));const e=Vector.mult(Vector.normalise(Vector.sub(this.vertices[this.spikeVertex],this.position)),o*this.spikeLength);this.vertices[this.spikeVertex].x=this.position.x+e.x,this.vertices[this.spikeVertex].y=this.position.y+e.y,n.isInvulnerable=!0}if(this.isInvulnerable){ctx.beginPath();let e=this.vertices;ctx.moveTo(e[0].x,e[0].y);for(let t=1;t<e.length;t++)ctx.lineTo(e[t].x,e[t].y);ctx.lineTo(e[0].x,e[0].y),ctx.lineWidth=13+5*Math.random(),ctx.strokeStyle=`rgba(255,255,255,${.5+.2*Math.random()})`,ctx.stroke(),n.damageReduction=0}else n.damageReduction=1}},slash(t,a,o=80){let s=[];mobs.spawn(t,a,6,o,"#000000");let n=mob[mob.length-1];Matter.Body.rotate(n,2*Math.PI*Math.random()),s.push(n.id);const l=Math.random(),i=Math.min(15,Math.floor(2+4*l+.75*Math.sqrt(simulation.difficulty)));n.isBoss=!0,n.isSlashBoss=!0,n.showHealthBar=!1,n.damageReduction=.1,n.startingDamageReduction=n.damageReduction,n.isInvulnerable=!1,n.frictionAir=.02,n.seeAtDistance2=1e6,n.accelMag=4e-4+15e-5*simulation.accelScale,Matter.Body.setDensity(n,5e-4),n.collisionFilter.mask=cat.bullet|cat.player|cat.body|cat.map,n.memory=1/0,n.seePlayerFreq=20,n.lockedOn=null,n.laserRange=500,n.torqueMagnitude=24e-5*n.inertia*(Math.random()>.5?-1:1),n.delay=70+70*simulation.CDScale,n.cd=0,n.swordRadius=0,n.swordVertex=1,n.swordRadiusMax=1100+20*simulation.difficulty,n.swordRadiusGrowRate=n.swordRadiusMax*(.005+3e-4*simulation.difficulty),n.isSlashing=!1,n.swordDamage=.07*spawn.dmgToPlayerByLevelsCleared(),n.laserAngle=3*Math.PI/5,n.eventHorizon=550;e.shield(n,t,a);const c=Math.random();let p=(.006+.001*Math.sqrt(simulation.difficulty))*(Math.random()<.5?1:-1),r=o+350+200*c+7*i;for(let t=0;t<i;t++)e.orbital(n,r,t/i*2*Math.PI,p);const h=[];for(let e=0;e<i;e++)h.push(mob.length-1-e);r=Math.max(60,100+100*Math.random()-3*i-80*c),p*=1.25+2*Math.random();const d=Math.max(2,Math.floor(6-5*l+.5*Math.sqrt(simulation.difficulty)));for(let t=0;t<i;t++)for(let a=0,o=d;a<o;a++)e.orbital(mob[h[t]],r,a/o*2*Math.PI,p);for(let t=0,a=3+.5*Math.sqrt(simulation.difficulty);t<a;t++)e.spawnOrbitals(n,o+40+10*t,1);const w=14e-5,y=5e-4;n.springTarget={x:n.position.x,y:n.position.y};const x=cons.length;cons[x]=Constraint.create({pointA:n.springTarget,bodyB:n,stiffness:w,damping:y}),Composite.add(engine.world,cons[cons.length-1]),cons[x].length=100+1.5*o,n.cons=cons[x],n.springTarget2={x:n.position.x,y:n.position.y};const u=cons.length;cons[u]=Constraint.create({pointA:n.springTarget2,bodyB:n,stiffness:w,damping:y,length:0}),Composite.add(engine.world,cons[cons.length-1]),cons[u].length=100+1.5*o,n.cons2=cons[u],n.onDamage=function(){},n.onDeath=function(){isDestroyed=!0,this.removeCons(),powerUps.spawnBossPowerUp(this.position.x,this.position.y)},n.do=function(){for(let e=0;e<this.vertices.length;e++)this.harmField(this.vertices[e].x,this.vertices[e].y);this.seePlayerByHistory(40),this.springAttack(),this.checkStatus(),this.sword();const e=this.eventHorizon*(1+.2*Math.sin(.008*simulation.cycle));n.laserRange=e},n.swordWaiting=function(){if(this.seePlayer.recall&&this.cd<simulation.cycle&&this.distanceToPlayer2()<2e5&&!m.isCloak&&0===Matter.Query.ray(map,this.position,this.playerPosRandomY()).length&&0===Matter.Query.ray(body,this.position,this.playerPosRandomY()).length){let e=0;for(let t=0,a=this.vertices.length;t<a;t++){const a=Vector.magnitudeSquared(Vector.sub({x:this.vertices[t].x,y:this.vertices[t].y},m.pos));a>e&&(e=a,this.swordVertex=t)}this.laserAngle=this.swordVertex/6*2*Math.PI+.6283,this.sword=this.swordGrow,Matter.Body.setAngularVelocity(this,0),this.accelMag=4e-4+15e-5*simulation.accelScale,this.damageReduction=0,this.isInvulnerable=!0,this.frictionAir=1}},n.sword=n.swordWaiting,n.swordGrow=function(){const e=this.angle+this.laserAngle,t=this.vertices[this.swordVertex].x+this.swordRadiusMax*Math.cos(e),a=this.vertices[this.swordVertex].y+this.swordRadiusMax*Math.sin(e),o=t-this.vertices[this.swordVertex+1>5?0:this.swordVertex+1].x,s=a-this.vertices[this.swordVertex+1>5?0:this.swordVertex+1].y,n=Math.atan2(s,o)*(180/Math.PI),l=t-this.vertices[this.swordVertex-1<0?5:this.swordVertex-1].x,i=a-this.vertices[this.swordVertex-1<0?5:this.swordVertex-1].y,c=Math.atan2(i,l)*(180/Math.PI);this.laserSword(this.vertices[this.swordVertex],this.angle+this.laserAngle),this.laserSword(this.vertices[this.swordVertex+1>5?0:this.swordVertex+1],n*(Math.PI/180)),this.laserSword(this.vertices[this.swordVertex-1<0?5:this.swordVertex-1],c*(Math.PI/180)),this.swordRadius+=this.swordRadiusGrowRate,this.swordRadius>this.swordRadiusMax&&(this.sword=this.swordSlash,this.spinCount=0),ctx.beginPath();let p=this.vertices;ctx.moveTo(p[0].x,p[0].y);for(let e=1;e<p.length;e++)ctx.lineTo(p[e].x,p[e].y);ctx.lineTo(p[0].x,p[0].y),ctx.lineWidth=13+5*Math.random(),ctx.strokeStyle=`rgba(255,255,255,${.5+.2*Math.random()})`,ctx.stroke()},n.swordSlash=function(){const e=this.angle+this.laserAngle,t=this.vertices[this.swordVertex].x+this.swordRadiusMax*Math.cos(e),a=this.vertices[this.swordVertex].y+this.swordRadiusMax*Math.sin(e),o=t-this.vertices[this.swordVertex+1>5?0:this.swordVertex+1].x,s=a-this.vertices[this.swordVertex+1>5?0:this.swordVertex+1].y,n=Math.atan2(s,o)*(180/Math.PI),l=t-this.vertices[this.swordVertex-1<0?5:this.swordVertex-1].x,i=a-this.vertices[this.swordVertex-1<0?5:this.swordVertex-1].y,c=Math.atan2(i,l)*(180/Math.PI);this.laserSword(this.vertices[this.swordVertex],this.angle+this.laserAngle),this.laserSword(this.vertices[this.swordVertex+1>5?0:this.swordVertex+1],n*(Math.PI/180)),this.laserSword(this.vertices[this.swordVertex-1<0?5:this.swordVertex-1],c*(Math.PI/180)),this.torque+=this.torqueMagnitude,this.spinCount++,this.spinCount>80&&(this.sword=this.swordWaiting,this.swordRadius=0,this.accelMag=4e-4+15e-5*simulation.accelScale,this.cd=simulation.cycle+this.delay,this.damageReduction=this.startingDamageReduction,this.isInvulnerable=!1,this.frictionAir=.01),ctx.beginPath();let p=this.vertices;ctx.moveTo(p[0].x,p[0].y);for(let e=1;e<p.length;e++)ctx.lineTo(p[e].x,p[e].y);ctx.lineTo(p[0].x,p[0].y),ctx.lineWidth=13+5*Math.random(),ctx.strokeStyle=`rgba(255,255,255,${.5+.2*Math.random()})`,ctx.stroke()},n.laserSword=function(e,t){const a=function(e,t,a){for(let o=0;o<a.length;++o){let s=a[o].vertices;const n=s.length-1;for(let l=0;l<n;l++)if(results=simulation.checkLineIntersection(e,t,s[l],s[l+1]),results.onLine1&&results.onLine2){const t=e.x-results.x,n=e.y-results.y,i=t*t+n*n;i<best.dist2&&(!a[o].mob||a[o].alive)&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[l],v2:s[l+1]})}if(results=simulation.checkLineIntersection(e,t,s[0],s[n]),results.onLine1&&results.onLine2){const t=e.x-results.x,l=e.y-results.y,i=t*t+l*l;i<best.dist2&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[0],v2:s[n]})}}};best={x:null,y:null,dist2:1/0,who:null,v1:null,v2:null};const o={x:e.x+this.swordRadius*Math.cos(t),y:e.y+this.swordRadius*Math.sin(t)};a(e,o,body),a(e,o,map),m.isCloak||a(e,o,[playerBody,playerHead]),best.who&&(best.who===playerBody||best.who===playerHead)&&m.immuneCycle<m.cycle&&(m.immuneCycle=m.cycle+m.collisionImmuneCycles+60,m.takeDamage(this.swordDamage),simulation.drawList.push({x:best.x,y:best.y,radius:1500*this.swordDamage,color:"rgba(0,0,0,0.5)",time:20})),best.dist2===1/0&&(best=o),ctx.beginPath(),ctx.moveTo(e.x,e.y),ctx.lineTo(best.x,best.y),ctx.strokeStyle="rgba(0,0,0,0.1)",ctx.lineWidth=25,ctx.stroke(),ctx.strokeStyle="rgba(0,0,0,0.5)",ctx.lineWidth=5,ctx.setLineDash([70+300*Math.random(),55*Math.random()]),ctx.stroke(),ctx.setLineDash([])},n.harmField=function(e,t){ctx.setLineDash([125*Math.random(),125*Math.random()]),this.distanceToPlayer3(e,t)<this.laserRange&&(m.immuneCycle<m.cycle&&(m.takeDamage(3e-4*spawn.dmgToPlayerByLevelsCleared()),m.energy>.1&&(m.energy-=.003)),ctx.beginPath(),ctx.moveTo(e,t),ctx.lineTo(m.pos.x,m.pos.y),ctx.lineTo(m.pos.x+3e3*(Math.random()-.5),m.pos.y+3e3*(Math.random()-.5)),ctx.lineWidth=2,ctx.strokeStyle="rgb(0,0,0)",ctx.stroke(),ctx.beginPath(),ctx.arc(m.pos.x,m.pos.y,40,0,2*Math.PI),ctx.fillStyle="rgba(0,0,0,0.15)",ctx.fill()),ctx.beginPath(),ctx.arc(e,t,.9*this.laserRange,0,2*Math.PI),ctx.strokeStyle="rgba(0,0,0,0.5)",ctx.lineWidth=1,ctx.stroke(),ctx.setLineDash([]),ctx.fillStyle="rgba(0,0,0,0.03)",ctx.fill()},n.distanceToPlayer3=function(e,t){const a=e-player.position.x,o=t-player.position.y;return Math.sqrt(a*a+o*o)},o=22;const R=2*Math.PI/6;spawn.allowShields=!1;for(let n=0;n<6;++n)e.stabber(t+100*Math.sin(n*R),a+100*Math.cos(n*R),o,12),Matter.Body.setDensity(mob[mob.length-1],.003),mob[mob.length-1].damageReduction=.12,mob[mob.length-1].showHealthBar=!1,mob[mob.length-1].isBoss=!0,s.push(mob[mob.length-1].id);spawn.constrain2AdjacentMobs(6,.02,!0);for(let e=0;e<6;++e)consBB[consBB.length]=Constraint.create({bodyA:n,bodyB:mob[mob.length-e-1],stiffness:.02,damping:.03}),Composite.add(engine.world,consBB[consBB.length-1]);e.groupShield(s,t,a,100+1*o+30-25),spawn.allowShields=!0}};level.setPosToSpawn(0,-50),color.map="crimson",spawn.mapRect(level.enter.x,level.enter.y+20,100,20),spawn.mapRect(0,0,1,1),level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#d8dadf";const t=Math.random()<.001,a=t?"https://ia801509.us.archive.org/10/items/Rick_Astley_Never_Gonna_Give_You_Up/Rick_Astley_Never_Gonna_Give_You_Up.ogv":"https://cdn.glitch.me/b559a783-c0cb-4369-92e3-0c0a5556ba01/n-gon%20evangelion%20-%20Made%20with%20Clipchamp%20(8).mp4?v=1692134040246";let o,s=document.createElement("video");s.src=a,s.autoPlay=!0,s.loop=!0,s.muted=!0,o={video:s,ready:!0},s.play();const n=level.boost(8835,-3675,7500),l=level.boost(-8935,-3675,7500);e.slash(0,-13200);const i={min:{x:c=-750,y:p=-3e4},max:{x:c+(r=1500),y:p+(h=2e4)},width:r,height:h,maxHeight:h,raindrops:[],drawRaindrop(e){Math.sqrt(Math.pow(player.position.x-e.x,2)+Math.pow(player.position.y-e.y,2))+Math.PI<5e3&&(ctx.beginPath(),ctx.moveTo(e.x,e.y),ctx.lineTo(e.x,e.y+e.length),ctx.strokeStyle="#00FFFF",ctx.lineWidth=10,ctx.lineCap="butt",ctx.stroke())},updateRaindrop(e){if(e.y+=e.speed,0===Matter.Query.ray(map,{x:e.x,y:e.y},{x:e.x,y:e.y-e.length}).length==0){simulation.drawList.push({x:e.x,y:e.y-e.length,radius:10,color:"rgb(0,100,250,0.3)",time:8});do{e.y=this.min.y+this.height*Math.random(),e.x=this.min.x+this.width*Math.random()}while(e.x>this.min.x&&e.x<this.max.x&&e.y>this.min.y&&e.y<this.max.y)}},isOn:!0,query(){this.isOn&&(ctx.fillStyle="rgba(200, 20, 10, 0.55)",ctx.fillRect(this.min.x,this.min.y,this.width,this.height),this.height>0&&Matter.Query.region([player],this).length&&(player.force.y-=.015,m.energy=m.maxEnergy))}};var c,p,r,h;level.custom=()=>{player.position.y<-2e4&&level.nextLevel(),i.query(),n.query(),l.query(),level.exit.drawAndCheck(),level.enter.draw(),ctx.beginPath(),ctx.strokeStyle="rgba(220, 20, 10, 0.55)",ctx.lineWidth=1500,ctx.lineJoin="miter",ctx.miterLimit=100,ctx.moveTo(map[272].vertices[0].x,map[272].vertices[0].y);for(let e=0;e<map[272].vertices.length;e++)ctx.lineTo(map[272].vertices[e].x,map[272].vertices[e].y);ctx.closePath(),ctx.stroke()};let d=()=>{simulation.paused&&!o.paused?(o.paused=!0,s.pause()):!simulation.paused&&o.paused&&(o.paused=!1,s.play()),requestAnimationFrame(d)};function w(t,a=0){const o=t-1325;spawn.mapRect(o+1025,a+-950,125,750),spawn.mapRect(o+1125,a+-225,50,50),spawn.mapRect(o+1500,a+-950,125,750),spawn.mapRect(o+1475,a+-225,50,50),spawn.mapRect(o+1600,a+-225,50,50),spawn.mapRect(o+1e3,a+-225,50,50),spawn.mapRect(o+1475,a+-475,50,50),spawn.mapRect(o+1125,a+-750,50,50),spawn.mapRect(o+1050,a+-2025,100,1125),spawn.mapRect(o+1500,a+-2025,100,1125),spawn.mapRect(o+1475,a+-1050,50,50),spawn.mapRect(o+1125,a+-1325,50,50),spawn.mapRect(o+1475,a+-1550,50,50),spawn.mapRect(o+1125,a+-1875,50,50),spawn.mapRect(o+1075,a+-2900,75,925),spawn.mapRect(o+1500,a+-2900,75,925),spawn.mapRect(o+1475,a+-2150,50,50),spawn.mapRect(o+1125,a+-2475,50,50),spawn.mapRect(o+1475,a+-2800,50,50),spawn.mapRect(o+1e3,a+-975,50,50),spawn.mapRect(o+1025,a+-2050,50,50),spawn.mapRect(o+1050,a+-2925,50,50),spawn.mapRect(o+1550,a+-2925,50,50),spawn.mapRect(o+1600,a+-975,50,50),spawn.mapRect(o+1575,a+-2050,50,50);for(let o=0;o<5;o++)Math.random()>.5?e.slasher2(t,a-500*o-500):e.slasher3(t,a-500*o-500)}function y(e,t,a,o,s=39){!function(e,t,a=0,o=!0,s=15,n=20,l=1,i=1){const c=2*n,p={x:Math.cos(a),y:Math.sin(a)};for(let a=0;a<s;a++){bullet[bullet.length]=Bodies.polygon(e+c*p.x*a,t+c*p.y*a,12,n,{inertia:1/0,isNotHoldable:!0});const o=bullet[bullet.length-1];o.do=()=>{},o.collisionFilter.category=cat.body,o.collisionFilter.mask=cat.player|cat.bullet|cat.body|cat.bullet|cat.bullet|cat.bulletBullet,Composite.add(engine.world,o),o.classType="bullet"}for(let e=1;e<s;e++)consBB[consBB.length]=Constraint.create({bodyA:bullet[bullet.length-e],bodyB:bullet[bullet.length-e-1],stiffness:l,damping:i}),Composite.add(engine.world,consBB[consBB.length-1]);cons[cons.length]=Constraint.create({pointA:{x:e,y:t},bodyB:bullet[bullet.length-s],stiffness:1,damping:i}),Composite.add(engine.world,cons[cons.length-1]),o&&(cons[cons.length]=Constraint.create({pointA:{x:e+c*p.x*(s-1),y:t+c*p.y*(s-1)},bodyB:bullet[bullet.length-1],stiffness:1,damping:i}),Composite.add(engine.world,cons[cons.length-1]))}(e,t,Math.atan2(o-t,a-e),!0,s)}d(),simulation.ephemera.push({do(){"crimsonTowers"!==level.levels[level.onLevel]&&simulation.removeEphemera(this),a&&!t?ctx.drawImage(o.video,-1600,-15e3,3200,1800):a&&ctx.drawImage(o.video,-960,-15e3,1920,1080)}}),level.customTopLayer=()=>{ctx.fillStyle="rgba(220, 20, 10, 0.1)",ctx.fillRect(-6725,-3500,475,2925),ctx.fillRect(-8725,-3700,450,2925),ctx.fillRect(-4725,-3300,450,2925),ctx.fillRect(-2725,-3100,450,2925),ctx.fillRect(-725,-2900,450,2925),ctx.fillRect(275,-2900,450,2925),ctx.fillRect(2275,-3100,450,2925),ctx.fillRect(4275,-3300,450,2925),ctx.fillRect(6275,-3500,450,2925),ctx.fillRect(8275,-3700,450,2925)},spawn.mapRect(-1e4,0,2e4,2e3),spawn.mapRect(-9050,-3650,350,50),spawn.mapRect(8700,-3650,350,50),spawn.mapRect(-275,-2825,550,50),spawn.mapRect(-225,-500,450,50),spawn.mapRect(-250,-1575,500,50),y(-2250,-3100,-750,-2900),y(-4250,-3300,-2750,-3100),y(-6250,-3500,-4750,-3300),y(-8250,-3700,-6750,-3500),y(750,-2900,2250,-3100),y(2750,-3100,4250,-3300),y(4750,-3300,6250,-3500),y(6750,-3500,8250,-3700),w(500),w(2500,-200),spawn.mapRect(2e3,-200,7e3,300),w(4500,-400),spawn.mapRect(4e3,-400,5e3,300),w(6500,-600),spawn.mapRect(6e3,-600,5e3,300),w(8500,-800),spawn.mapRect(8e3,-800,3e3,300),w(-500),w(-2500,-200),spawn.mapRect(-1e4,-200,8e3,300),w(-4500,-400),spawn.mapRect(-1e4,-400,6e3,300),w(-6500,-600),spawn.mapRect(-1e4,-600,4e3,300),w(-8500,-800),spawn.mapRect(-1e4,-800,2e3,300),spawn.mapVertex(1e4,-9450,"-1000 0 1000 0 1000 -10000 500 -20000 -500 -20000 -1000 -10000"),spawn.mapVertex(-1e4,-9450,"-1000 0 1000 0 1000 -10000 500 -20000 -500 -20000 -1000 -10000"),spawn.mapRect(-11e3,-675,2e3,2675),spawn.mapRect(9e3,-675,2e3,2675),spawn.mapVertex(0,-3e4,"0 0 3000 -10000 6000 0 3000 10000"),spawn.mapRect(-8750,-1e4,8e3,100),spawn.mapRect(750,-1e4,8e3,100),spawn.mapVertex(0,-10020,"-1000 0 -5000 300 5000 300 1000 0"),spawn.mapRect(-800,-10250,100,350),spawn.mapRect(700,-10250,100,350);const x=10*Math.PI,u=e=>200*e*Math.cos(e),R=e=>200*e*Math.sin(e);for(let e=1;e<=x;e+=.2){const t=u(e),a=R(e)+-14100;spawn.mapRect(t,a,100,100)}level.exit.y=map[272].position.y,level.exit.x=map[272].position.x},LaunchSite(){simulation.inGameConsole("<strong>Launch Site</strong> by <span class='color-var'>Des Boot</span>"),simulation.inGameConsole("The rain stopped..."),level.setPosToSpawn(0,-50);const e=level.toggle(13650,3e3);let t=!1,a=0;level.exit.x=11900,level.exit.y=-800;const o=level.boost(12050,200,1e3),s=level.boost(13575,780,700);spawn.mapRect(level.enter.x,level.enter.y+20,100,20),spawn.mapRect(level.exit.x,level.exit.y+20,100,20),level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#d8dadf";const n=level.mover(5700,2680,3800,25,10);spawn.debris(2700,2200,3e3,10),spawn.debris(10055,483,1300,10),spawn.debris(10500,-240,1e3,10),spawn.debris(9500,1773.3,3700,10),powerUps.spawn(5400,850,"heal"),powerUps.spawn(5400,850,"heal"),powerUps.spawn(8650,2e3,"ammo"),powerUps.spawn(8650,2e3,"ammo"),powerUps.spawn(8650,2e3,"ammo"),powerUps.spawn(8650,2e3,"ammo"),level.custom=()=>{ctx.fillStyle="rgba(68, 68, 68)",ctx.fillRect(11450,700,50,125),ctx.fillRect(11425,750,75,75),t&&(ctx.fillStyle=`rgba(0, 255, 255, ${a/5})`,ctx.fillRect(11500,700,450,2475),ctx.fill(),ctx.fillStyle="#00f2ff",ctx.fillRect(11500+Math.floor(450*Math.random()),700,5,2475),ctx.fillRect(11500+Math.floor(450*Math.random()),700,5,2475),ctx.fill(),m.pos.x>11500&&m.pos.x<11950&&m.pos.y>800&&m.pos.y<2700&&(player.force.y-=m.mass*simulation.g+(input.down?0:.048))),ctx.beginPath(),ctx.fillStyle="rgba(30,150,117,255)",ctx.rect(1600*Math.random()-1500,-5e3,3*Math.random()+1.5,5e3),ctx.rect(2400*Math.random()-1500,-5e3,3*Math.random()+1.5,5e3),ctx.rect(3200*Math.random()-1500,-5e3,3*Math.random()+1.5,5e3),ctx.rect(3e3*Math.random()-4500,-5e3,3*Math.random()+1.5,8e3),ctx.rect(3e3*Math.random()-4500,-5e3,3*Math.random()+1.5,8e3),ctx.rect(3e3*Math.random()-4500,-5e3,3*Math.random()+1.5,8e3),ctx.fill(),n.push(),o.query(),s.query(),e.query(),e.isOn&&0==t&&(a+=.0125,spawn.randomSmallMob(11723.3,-127.5),spawn.randomSmallMob(10525.2,727.5),spawn.randomSmallMob(11290.5,556),spawn.randomMob(11182.6,1788,.8),spawn.randomGroup(10606.7,-248,.4),spawn.randomGroup(11066.3,560.4,.4),t=!0),a>0&&a<1&&(a+=.0125),ctx.fillStyle="rgba(0,0,0,0.3)",ctx.beginPath(),ctx.moveTo(5150,1050),ctx.lineTo(5580,1480),ctx.lineTo(5818,1203),ctx.lineTo(5873.4,1012.4),ctx.fill(),ctx.beginPath(),ctx.moveTo(5150,1050),ctx.lineTo(5580,1480),ctx.lineTo(5818,1203),ctx.lineTo(5873.4,1012.4),ctx.fill(),ctx.beginPath(),ctx.moveTo(5700,2300),ctx.lineTo(6100,2700),ctx.lineTo(9600,2700),ctx.lineTo(1e4,2300),ctx.fill(),ctx.fillRect(4400,2050,550,800),ctx.fillStyle="rgba(0,0,0,0.2)",ctx.fillRect(4730,1347,253,700),ctx.fillRect(4950,2047,33,700),ctx.fillRect(11500,100,550,150),ctx.moveTo(11800,-700),ctx.lineTo(12050,-700),ctx.lineTo(12050,-280),ctx.lineTo(11950,-280),ctx.fill(),ctx.fillRect(12065,-770,20,870),ctx.fillRect(12115,-770,20,870),ctx.fillRect(12055,-770,90,15),ctx.fillRect(12055,-710,90,15),ctx.fillRect(12055,-660,90,15),ctx.fillRect(12055,-600,90,15),ctx.fillRect(12055,-540,90,15),ctx.fillRect(12055,-480,90,15),ctx.fillRect(12055,-420,90,15),ctx.fillRect(12055,-360,90,15),ctx.fillRect(12055,-300,90,15),ctx.fillRect(12055,-240,90,15),ctx.fillRect(12055,-180,90,15),ctx.fillRect(12055,-120,90,15),ctx.fillRect(12055,-60,90,15),ctx.fillRect(12055,0,90,15),ctx.fillRect(12055,60,90,15),ctx.fillStyle="rgba(0,0,0,0.3)",ctx.fillRect(1e4,510,50,700),ctx.fillStyle="rgba(0,0,0,0.1)",ctx.fillRect(9500,-800,5e3,3100),ctx.fillRect(1e4,2300,5e3,700),ctx.moveTo(1e4,2300),ctx.lineTo(1e4,2700),ctx.lineTo(9600,2700),ctx.fill(),ctx.moveTo(2500,500),ctx.lineTo(3660,1660),ctx.lineTo(4291.1,2978.1),ctx.lineTo(6100,2700),ctx.lineTo(5700,2300),ctx.lineTo(5884.8,380.1),ctx.fill(),ctx.fillRect(11950,2e3,5e3,1100),ctx.fillRect(12150,-25,3e3,250),ctx.fillRect(12e3,225,3e3,750),ctx.fillRect(11700,-1200,600,400),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{12150<m.pos.x&&m.pos.y<1e3?ctx.fillStyle=`rgba(68, 68, 68, ${Math.max(.3,Math.min((12350-m.pos.x)/100,.99))})`:ctx.fillStyle="rgba(68, 68, 68, 68)",ctx.fillRect(12150,-30,1600,1e3),n.draw(),l.query(),ctx.fillStyle="rgba(202,88,0,1)",ctx.fillRect(6800,-1e3,600,2800),ctx.beginPath(),ctx.moveTo(7400,-998),ctx.lineTo(7350,-1400),ctx.lineTo(7250,-1700),ctx.lineTo(7100,-1900),ctx.lineTo(6950,-1700),ctx.lineTo(6850,-1400),ctx.lineTo(6800,-998),ctx.fill(),ctx.fillStyle="rgba(255,255,255,1)",ctx.fillRect(6900,0,400,2e3),ctx.fillRect(6800,1700,600,300),ctx.fillRect(6450,-400,250,2100),ctx.fillRect(7500,-400,250,2100),ctx.beginPath(),ctx.moveTo(6450,-398),ctx.lineTo(6575,-900),ctx.lineTo(6700,-398),ctx.fill(),ctx.beginPath(),ctx.moveTo(7500,-398),ctx.lineTo(7625,-900),ctx.lineTo(7750,-398),ctx.fill(),ctx.beginPath(),ctx.moveTo(6910,450),ctx.lineTo(6910,1710),ctx.lineTo(6250,1700),ctx.lineTo(6250,1600),ctx.lineTo(6780,1030),ctx.fill(),ctx.beginPath(),ctx.moveTo(7290,450),ctx.lineTo(7290,1710),ctx.lineTo(7950,1700),ctx.lineTo(7950,1600),ctx.lineTo(7420,1030),ctx.fill(),ctx.beginPath(),ctx.moveTo(7300,2),ctx.lineTo(7250,-300),ctx.lineTo(7175,-500),ctx.lineTo(7100,-600),ctx.lineTo(7025,-500),ctx.lineTo(6950,-300),ctx.lineTo(6900,2),ctx.fill(),ctx.fillStyle="rgba(0,0,0,1)",ctx.beginPath(),ctx.moveTo(7950,1700),ctx.lineTo(7950,1600),ctx.lineTo(7420,1030),ctx.lineTo(7400,918),ctx.lineTo(7400,1030),ctx.lineTo(7910,1600),ctx.fill(),ctx.beginPath(),ctx.moveTo(6250,1700),ctx.lineTo(6250,1600),ctx.lineTo(6780,1030),ctx.lineTo(6800,918),ctx.lineTo(6800,1030),ctx.lineTo(6290,1600),ctx.fill(),ctx.fillRect(6800,2e3,600,50),ctx.fillRect(6850,2050,500,150),e.isOn&&(ctx.fillStyle=`rgba(242, 255, 0, ${3*Math.sqrt(a)/10})`,ctx.beginPath(),ctx.moveTo(13070,2012),ctx.lineTo(12930,2012),ctx.lineTo(12230,2700),ctx.lineTo(13770,2700),ctx.fill()),ctx.fillStyle="rgba(0,0,0,0.3)",ctx.beginPath(),ctx.moveTo(1800,-400),ctx.lineTo(2500,300),ctx.lineTo(2854,21),ctx.lineTo(1974.5,-453.5),ctx.fill(),ctx.beginPath(),ctx.moveTo(1800,0),ctx.lineTo(3460,1660),ctx.lineTo(1522.9,2431.8),ctx.lineTo(983.5,887.3),ctx.fill()};var l=level.vanish(10250,201,500,20);spawn.bodyRect(3700,1210,200,300,.9),spawn.bodyRect(3900,1210,220,150,.9),spawn.mapRect(-1500,0,3300,3700),spawn.mapRect(-1500,2700,15e3,700),spawn.mapRect(9500,-1500,2e3,800),spawn.mapRect(9500,-1500,500,2300),spawn.mapRect(2500,0,3200,500),spawn.mapRect(5700,0,500,2300),spawn.mapRect(1800,1100,800,2600),spawn.mapRect(2600,1660,1800,2040),spawn.mapRect(1800,-495,200,100),spawn.mapVertex(2400,-230,"0 10  900 510  800 510  750 510  0 110"),spawn.mapRect(2600,1150,50,550),spawn.mapRect(2650,1200,50,500),spawn.mapRect(2700,1250,50,450),spawn.mapRect(2750,1300,50,400),spawn.mapRect(2800,1350,50,350),spawn.mapRect(2850,1400,50,300),spawn.mapRect(2900,1450,50,250),spawn.mapRect(2950,1500,50,200),spawn.mapRect(3e3,1550,50,150),spawn.mapRect(3050,1600,50,100),spawn.mapRect(12100,1650,50,50),spawn.mapRect(4435,1300,550,50),spawn.mapRect(4685,1300,50,550),spawn.mapRect(4400,2e3,550,50),spawn.mapRect(5150,1e3,550,50),spawn.mapVertex(5500,1550,"0 0  -500 600  100 0  -400 600"),spawn.mapRect(8e3,0,1500,2300),spawn.mapRect(6200,2200,1800,100),spawn.mapRect(10300,2650,1e3,50),spawn.mapRect(10350,2600,950,50),spawn.mapRect(10400,2550,900,50),spawn.mapRect(10450,2500,850,50),spawn.mapRect(10500,2450,800,50),spawn.mapRect(10550,2400,750,50),spawn.mapRect(10600,2350,700,50),spawn.mapRect(10650,2300,650,50),spawn.mapRect(10700,2250,600,50),spawn.mapRect(10750,2200,550,50),spawn.mapRect(10800,2150,500,50),spawn.mapRect(10850,2100,450,50),spawn.mapRect(10900,2050,400,50),spawn.mapRect(10950,2e3,550,700),spawn.mapRect(12925,2e3,150,12),spawn.mapRect(9500,1200,1e3,500),spawn.mapRect(9500,2200,500,100),spawn.mapRect(9500,800,2e3,400),spawn.mapRect(11950,800,2e3,1200),spawn.mapRect(13900,800,2e3,2600),spawn.mapRect(11950,2e3,150,400),spawn.mapRect(10500,200,3e3,80),spawn.mapRect(11950,200,100,1e3),spawn.mapRect(1e4,435,50,75),spawn.mapRect(11e3,-50,60,250),spawn.mapRect(11500,-1500,60,1100),spawn.mapRect(11500,50,500,50),spawn.mapRect(12e3,260,155,1e3),spawn.mapRect(11500,-1500,300,800),spawn.mapRect(11950,-280,100,380),spawn.mapRect(12150,-1500,100,1600),spawn.mapRect(11800,-770,250,70),spawn.mapRect(11800,-1500,350,400),spawn.mapRect(12150,-1500,3e3,1500),spawn.mapRect(13700,0,2e3,800),spawn.mapRect(13200,550,50,300),spawn.randomSmallMob(4700,2500),spawn.randomMob(4100,1e3,.8),spawn.randomGroup(5e3,700,.4),spawn.randomSmallMob(9800,2e3),spawn.randomMob(10910.6,1559.8,.8),spawn.randomMob(12441.5,2340.6,.8),spawn.randomMob(11182.6,1788,.8),spawn.randomMob(13381.7,2437.2,.8),spawn.randomGroup(10472.4,2079,.4),spawn.randomLevelBoss(12786,2461,["launcherBoss","laserTargetingBoss","blinkBoss","streamBoss","historyBoss","grenadierBoss","blockBoss","revolutionBoss","slashBoss"]),spawn.mapRect(13500,3e3,500,400),spawn.mapRect(13500,2700,325,60),spawn.randomLevelBoss(12808.8,527,["blinkBoss"]),powerUps.addResearchToLevel()},shipwreck(){simulation.inGameConsole("<strong>shipwreck</strong> by <span class='color-var'>3xionDev</span>"),level.setPosToSpawn(0,-50),level.exit.x=1500,level.exit.y=-1875,spawn.mapRect(level.enter.x,level.enter.y+20,100,20),spawn.mapRect(level.exit.x,level.exit.y+20,100,20),level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#05001C",spawn.mapRect(-325,0,650,300),spawn.mapRect(-275,-675,50,700),spawn.mapRect(-325,-1025,650,300),spawn.mapRect(-275,-750,50,75),spawn.mapRect(300,50,675,200),spawn.mapRect(925,50,450,150),spawn.mapRect(275,-750,50,275),spawn.mapRect(275,-325,50,325),spawn.bodyRect(150,-175,100,100),spawn.bodyRect(-200,-450,100,400),spawn.bodyRect(-150,-650,25,50),spawn.bodyRect(-200,-700,25,25),spawn.bodyRect(175,-250,75,100),spawn.mapRect(875,-50,100,100),spawn.mapRect(350,-175,25,25),spawn.mapRect(325,-175,175,225),spawn.bodyRect(375,-225,50,50),spawn.bodyRect(700,-450,125,125),spawn.mapRect(1375,25,400,100),spawn.mapRect(1675,-175,100,200),spawn.mapRect(1775,-175,225,100),spawn.mapRect(1575,-75,100,100),spawn.mapRect(1775,-75,175,100),spawn.mapRect(1300,125,250,25),spawn.mapRect(850,200,225,25),spawn.mapRect(1100,200,50,100),spawn.mapRect(1250,175,50,125),spawn.mapRect(1950,-150,275,50),spawn.mapRect(2125,-150,25,25),spawn.mapRect(2125,-175,1025,100),spawn.mapRect(2625,-350,25,25),spawn.mapRect(2650,-325,25,150),spawn.mapRect(2625,-400,50,250),spawn.bodyRect(1900,-200,325,25),spawn.bodyRect(2525,-275,100,100),spawn.bodyRect(2575,-325,50,50),spawn.mapRect(425,-75,150,125),spawn.bodyRect(350,-250,75,75),spawn.bodyRect(1250,-200,25,25),spawn.bodyRect(1150,-350,100,175),spawn.bodyRect(1375,-375,25,25),spawn.bodyRect(1375,-400,50,100),spawn.mapRect(2650,-400,500,50),spawn.mapRect(3100,-175,300,50),spawn.bodyRect(2700,-250,75,25),spawn.bodyRect(2725,-275,25,25),spawn.bodyRect(2750,-250,25,25),spawn.bodyRect(2825,-275,75,100),spawn.randomMob(3650,-250,0),spawn.bodyRect(2925,-225,50,50),spawn.mapRect(325,-950,25,25),spawn.mapRect(325,-975,650,200),spawn.mapRect(975,-900,200,100),spawn.mapRect(1175,-850,100,100),spawn.mapRect(1275,-800,75,125),spawn.mapRect(1350,-725,25,125),spawn.mapRect(1225,-800,25,25),spawn.mapRect(950,-925,100,25),spawn.mapRect(1150,-875,100,25),spawn.mapRect(1250,-825,75,50),spawn.mapRect(1125,-825,75,50),spawn.mapRect(1250,-775,50,50),spawn.mapRect(1400,-225,100,200),spawn.mapRect(1550,-150,125,75),spawn.mapRect(1500,-100,75,75),spawn.mapRect(1175,-225,225,100),spawn.mapRect(1475,-200,100,100),spawn.mapRect(1300,-175,125,100),spawn.mapRect(1250,-150,50,200),spawn.mapRect(1600,-275,50,150),spawn.mapRect(1300,-275,75,75),spawn.mapRect(1475,-375,50,225),spawn.mapRect(1575,-225,25,100),spawn.mapRect(1500,-325,50,125),spawn.bodyRect(1400,-350,25,50),spawn.bodyRect(1650,-425,50,50),spawn.bodyRect(1750,-475,25,125),spawn.bodyRect(1725,-575,150,50),spawn.bodyRect(1625,-425,25,50),spawn.bodyRect(1175,-425,75,75),spawn.mapRect(325,-625,175,50),spawn.mapRect(425,-800,25,175),spawn.mapRect(375,-800,25,200),spawn.mapRect(500,-800,25,225),spawn.mapRect(475,-800,50,225),spawn.mapRect(675,-875,50,575),spawn.mapRect(675,-150,25,175),spawn.mapRect(700,-150,25,75),spawn.mapRect(675,-125,25,200),spawn.bodyRect(675,-300,50,150),spawn.mapRect(2125,-1025,1025,100),spawn.mapRect(3050,-975,325,50),spawn.mapRect(3300,-925,75,600),spawn.bodyRect(3300,-325,75,125),spawn.bodyRect(3325,-325,25,25),spawn.mapRect(3300,-325,75,25),spawn.mapRect(3325,-175,1100,25),spawn.mapRect(3325,-950,1100,25),spawn.mapRect(3350,-725,225,25),spawn.mapRect(3500,-925,75,200),spawn.mapRect(3350,-850,175,25),spawn.bodyRect(4075,-625,125,125),spawn.bodyRect(3850,-825,75,50),spawn.bodyRect(4050,-800,25,50),spawn.bodyRect(4150,-825,75,100),spawn.bodyRect(3900,-800,50,75),spawn.bodyRect(3575,-375,100,75),spawn.bodyRect(3800,-675,75,100),spawn.bodyRect(3950,-875,250,150),spawn.bodyRect(3975,-700,50,100),spawn.bodyRect(4150,-775,200,125),spawn.bodyRect(3825,-700,50,125),spawn.bodyRect(3575,-550,125,50),spawn.bodyRect(3750,-550,25,25),spawn.bodyRect(3600,-625,75,50),spawn.bodyRect(3550,-500,75,50),spawn.bodyRect(4200,-675,75,75),spawn.bodyRect(4400,-600,50,125),spawn.mapRect(4375,-175,350,25),spawn.mapRect(4475,-200,475,50),spawn.mapRect(4450,-925,25,25),spawn.mapRect(4475,-950,475,50),spawn.mapRect(4350,-950,225,25),spawn.mapRect(4450,-925,100,750),spawn.mapRect(4650,-900,825,700),spawn.mapRect(5250,-825,475,550),spawn.mapRect(5550,-725,700,350),spawn.mapRect(6100,-625,550,150),spawn.mapRect(6600,-575,225,50),spawn.mapRect(1325,-875,50,200),spawn.mapRect(1275,-825,50,25),spawn.mapRect(1275,-875,25,50),spawn.mapRect(1225,-900,75,25),spawn.mapRect(1325,-900,50,75),spawn.mapRect(1075,-925,200,75),spawn.mapRect(1275,-975,75,150),spawn.mapRect(1300,-800,100,150),spawn.mapRect(1375,-725,50,150),spawn.mapRect(-325,-1525,650,300),spawn.mapRect(150,-1275,50,375),spawn.mapRect(-100,-1350,50,450),spawn.mapRect(-325,-2600,650,300),spawn.mapRect(-275,-2400,25,50),spawn.mapRect(-275,-2325,50,825),spawn.mapRect(300,-1475,675,200),spawn.bodyRect(375,-1250,75,75),spawn.bodyRect(800,-1275,25,300),spawn.mapRect(1950,-1e3,175,100),spawn.mapRect(1850,-950,125,125),spawn.mapRect(1825,-875,75,125),spawn.mapRect(1825,-800,25,125),spawn.mapRect(1800,-750,25,150),spawn.mapRect(1775,-625,50,150),spawn.mapRect(2e3,-900,25,225),spawn.mapRect(2075,-925,50,400),spawn.mapRect(1e3,-825,25,300),spawn.mapRect(1050,-900,50,25),spawn.mapRect(1050,-925,50,25),spawn.mapRect(2475,-100,50,350),spawn.mapRect(2650,-100,25,725),spawn.mapRect(2350,-950,50,350),spawn.mapRect(775,-825,25,375),spawn.mapRect(3750,-950,25,175),spawn.mapRect(3625,-925,25,275),spawn.mapRect(4225,-925,50,200),spawn.mapRect(950,-1425,200,100),spawn.mapRect(1150,-1400,150,75),spawn.mapRect(1300,-1350,25,100),spawn.mapRect(1275,-1350,25,50),spawn.bodyRect(1300,-1250,25,275),spawn.bodyRect(2600,-1575,375,550),spawn.bodyRect(2625,-1300,75,150),spawn.bodyRect(2700,-1475,100,275),spawn.bodyRect(2525,-1200,75,150),spawn.mapRect(1675,-1400,200,75),spawn.mapRect(1825,-1425,225,100),spawn.mapRect(1650,-1350,75,100),spawn.mapRect(1700,-1275,25,125),spawn.bodyRect(1225,-1425,550,25),spawn.bodyRect(1300,-1650,100,150),spawn.bodyRect(1600,-1675,100,200),spawn.bodyRect(1575,-1525,25,25),spawn.bodyRect(1450,-1575,25,125),spawn.bodyRect(1500,-1650,75,50),spawn.mapRect(2325,-1225,50,200),spawn.mapRect(2375,-1300,100,275),spawn.mapRect(2225,-1125,125,100),spawn.mapRect(2300,-1150,50,50),spawn.bodyRect(2250,-850,75,100),spawn.mapRect(150,-2550,800,200),spawn.mapRect(875,-2500,275,100),spawn.mapRect(325,-2400,75,375),spawn.mapRect(325,-1800,75,350),spawn.bodyRect(325,-2025,75,225),spawn.mapRect(-150,-2375,25,375),spawn.mapRect(25,-2400,50,500),spawn.mapRect(-100,-2375,25,225),spawn.mapRect(200,-2350,50,250),spawn.bodyRect(250,-1875,25,75),spawn.bodyRect(-50,-2050,50,50),spawn.mapRect(1050,-1350,50,150),spawn.mapRect(575,-1325,25,100),spawn.mapRect(400,-1300,25,75),spawn.mapRect(525,-1300,50,125),spawn.mapRect(575,-2400,75,275),spawn.mapRect(650,-2325,25,325),spawn.mapRect(625,-2150,50,75),spawn.mapRect(625,-2375,50,100),spawn.mapRect(600,-2125,25,25),spawn.mapRect(650,-2075,25,150),spawn.mapRect(675,-2375,50,200),spawn.mapRect(650,-2200,50,75),spawn.mapRect(625,-2100,50,75),spawn.mapRect(1100,-2475,950,50),spawn.mapRect(1325,-1825,450,25),spawn.mapRect(1475,-1850,150,50),spawn.mapRect(1725,-2425,50,600),spawn.mapRect(1325,-2450,50,450),spawn.mapRect(1475,-2425,25,150),spawn.mapRect(1675,-2425,25,600),spawn.bodyRect(1450,-2175,50,75),spawn.bodyRect(1650,-2200,50,50),spawn.mapRect(950,-1550,75,125),spawn.mapRect(900,-1500,50,50),spawn.mapRect(2e3,-2475,125,50),spawn.mapRect(2100,-2475,1050,100),spawn.mapRect(3050,-2425,300,50),spawn.mapRect(3225,-2400,1350,25),spawn.mapRect(4475,-2400,475,50),spawn.mapRect(4900,-2375,1125,50),spawn.mapRect(3950,-1350,2075,50),spawn.mapRect(4075,-1325,75,400),spawn.mapRect(4775,-1325,75,425),spawn.mapRect(6e3,-2350,1075,1025),spawn.mapRect(6675,-2250,950,825),spawn.mapRect(7375,-2050,700,425),spawn.mapRect(7850,-1900,425,125),spawn.mapRect(8200,-1850,275,25),spawn.mapRect(5e3,-2350,75,400),spawn.mapRect(5200,-2350,25,600),spawn.mapRect(5600,-2325,25,475),spawn.mapRect(5750,-2350,50,300),spawn.mapRect(5800,-2325,25,400),spawn.mapRect(5775,-2075,25,50),spawn.bodyRect(5325,-2250,75,125),spawn.bodyRect(5925,-1800,75,125),spawn.bodyRect(5475,-1800,75,225),spawn.bodyRect(5350,-2050,175,100),spawn.bodyRect(5475,-2125,75,125),spawn.bodyRect(5750,-1750,100,100),spawn.bodyRect(5900,-1950,175,150),spawn.bodyRect(4600,-1950,150,275),spawn.bodyRect(4875,-1875,150,100),spawn.mapRect(5675,-1600,350,50),spawn.mapRect(4325,-1300,25,200),spawn.mapRect(3975,-2375,75,350),spawn.mapRect(4250,-2375,25,550),spawn.mapRect(2875,-2400,75,400),spawn.mapRect(3050,-2425,25,700),spawn.mapRect(2450,-2425,75,550),spawn.mapRect(3375,-2375,25,525),spawn.mapRect(3325,-1125,75,225),spawn.mapRect(3125,-1200,25,200),spawn.mapRect(2975,-1225,75,225),spawn.mapRect(1875,-2425,50,550),spawn.mapRect(1900,-1925,475,50),spawn.mapRect(2300,-2400,75,475),spawn.bodyRect(2025,-2325,50,50),spawn.bodyRect(2150,-2300,100,100),spawn.bodyRect(2025,-2325,25,100),spawn.bodyRect(2125,-2275,75,75),spawn.bodyRect(2250,-2250,25,50),spawn.bodyRect(2e3,-2325,75,100),spawn.bodyRect(2150,-2300,75,100),spawn.bodyRect(1975,-2300,75,75),spawn.bodyRect(2150,-2300,75,75),spawn.bodyRect(2025,-2350,50,125),spawn.bodyRect(2250,-2325,50,75),spawn.randomMob(2625,-750,0),spawn.randomMob(3200,-725,0),spawn.randomMob(2900,-575,0),spawn.randomMob(700,-1100,0),spawn.randomMob(3275,-1575,0),spawn.randomMob(3950,-1500,0),spawn.randomMob(3725,-1300,0),spawn.randomMob(3625,-1700,0),spawn.randomMob(2250,-1675,0),spawn.randomMob(550,-1875,0),spawn.randomMob(1600,-700,0),spawn.randomMob(1050,-400,0),spawn.randomSmallMob(1085,-1591),spawn.randomSmallMob(1516,-532),spawn.randomGroup(1551,-466,.4),simulation.difficulty>1&&spawn.randomLevelBoss(3928,-655),spawn.secondaryBossChance(4088,-1744),level.custom=()=>{level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{}},unchartedCave(){simulation.inGameConsole("<strong>unchartedCave</strong> by <span class='color-var'>3xionDev</span>"),level.setPosToSpawn(0,-50),level.exit.x=20985,level.exit.y=2816,spawn.mapRect(level.enter.x,level.enter.y+20,100,20),spawn.mapRect(level.exit.x,level.exit.y+20,100,20),level.defaultZoom=1900,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#979797",spawn.randomMob(1e3,-975,0),spawn.randomMob(2550,-575,0),spawn.randomMob(2050,-325,0),spawn.randomMob(2475,-1350,0),spawn.randomMob(2800,-1100,0),spawn.randomMob(3400,-1250,0),spawn.randomMob(3375,-425,0),spawn.randomMob(4575,-775,0),spawn.randomMob(5750,-750,0),spawn.randomMob(5475,-325,0),spawn.randomMob(7625,-250,0),spawn.randomMob(9675,525,0),spawn.randomMob(12150,1200,0),spawn.randomMob(12825,1275,0),spawn.randomMob(13175,1725,0),spawn.randomMob(13725,1375,0),spawn.randomMob(15550,2375,0),spawn.randomMob(17625,3550,0),spawn.randomMob(18850,3500,0),spawn.mapRect(-150,0,300,75),spawn.mapRect(-375,25,2550,75),spawn.mapRect(-400,-950,75,1025),spawn.mapRect(-400,75,50,25),spawn.mapRect(-400,-1750,100,800),spawn.mapRect(-350,-1050,50,1125),spawn.mapRect(-400,-1950,100,275),spawn.mapRect(1875,25,2075,75),spawn.mapRect(-400,50,4350,1175),spawn.mapRect(-400,650,4350,1175),spawn.mapRect(2975,25,3575,1800),spawn.mapRect(-375,-1925,1725,800),spawn.mapRect(-400,-2275,5625,725),spawn.mapRect(1075,-1725,500,425),spawn.mapRect(1275,-1325,200,125),spawn.mapRect(1525,-1325,25,75),spawn.mapRect(1400,-1425,125,200),spawn.mapRect(1400,-1725,325,275),spawn.mapRect(1675,-1600,125,100),spawn.mapRect(-350,-1200,250,250),spawn.mapRect(-175,-1225,250,175),spawn.mapRect(-50,-1150,275,50),spawn.bodyRect(-275,-475,75,175),spawn.bodyRect(325,-750,50,50),spawn.mapRect(2075,-1575,75,725),spawn.mapRect(1900,-1600,50,325),spawn.mapRect(2600,-1675,25,850),spawn.mapRect(2125,-1625,125,425),spawn.mapRect(2125,-1200,50,75),spawn.mapRect(2075,-875,25,150),spawn.mapRect(2025,-1625,50,250),spawn.mapRect(4700,-2275,2175,1275),spawn.mapRect(3975,-1725,1125,400),spawn.mapRect(4300,-1400,650,200),spawn.mapRect(4600,-1225,175,125),spawn.mapRect(3925,-1600,175,150),spawn.mapRect(3950,-1450,50,75),spawn.mapRect(4225,-1350,150,100),spawn.mapRect(3875,-1600,175,175),spawn.mapRect(4450,-1275,200,125),spawn.mapRect(4850,-1125,50,550),spawn.mapRect(5225,-1175,25,400),spawn.mapRect(3250,-1725,25,1200),spawn.mapRect(3600,-1750,75,550),spawn.mapRect(2850,-1700,325,325),spawn.mapRect(2900,-1525,175,750),spawn.mapRect(2975,-900,75,450),spawn.mapRect(550,-175,150,500),spawn.mapRect(625,-300,125,450),spawn.mapRect(725,-175,50,475),spawn.mapRect(675,-400,25,200),spawn.mapRect(450,-25,150,150),spawn.mapRect(275,-1200,75,625),spawn.mapRect(300,-1300,150,600),spawn.mapRect(425,-1250,25,800),spawn.mapRect(425,-1225,125,425),spawn.mapRect(525,-1175,100,250),spawn.mapRect(175,-1200,175,375),spawn.mapRect(1600,-375,50,650),spawn.mapRect(1650,-525,75,725),spawn.mapRect(1450,-225,150,475),spawn.mapRect(1400,-125,100,275),spawn.mapRect(1500,-325,125,150),spawn.mapRect(1750,-225,100,350),spawn.mapRect(1700,-300,75,275),spawn.mapRect(1850,-150,25,325),spawn.mapRect(1750,-50,75,225),spawn.mapRect(1600,-50,200,250),spawn.mapRect(1700,-600,25,125),spawn.bodyRect(1275,-250,50,125),spawn.mapRect(6450,50,675,2e3),spawn.mapRect(6925,175,675,300),spawn.mapRect(7450,300,675,775),spawn.mapRect(6925,325,1275,1850),spawn.mapRect(7025,125,375,100),spawn.mapRect(7500,275,425,100),spawn.mapRect(6700,-2275,1975,1575),spawn.mapRect(6475,-1175,400,300),spawn.mapRect(6550,-925,250,150),spawn.mapRect(6600,-825,175,75),spawn.mapRect(6300,-1050,325,100),spawn.mapRect(8050,400,450,1675),spawn.mapRect(8275,475,800,1550),spawn.mapRect(8600,575,925,1475),spawn.mapRect(8400,425,300,100),spawn.mapRect(8975,550,300,100),spawn.mapRect(6900,-775,2375,200),spawn.mapRect(7350,-725,2125,275),spawn.mapRect(7725,-550,1800,225),spawn.mapRect(8300,-400,1750,125),spawn.mapRect(8725,-350,1350,225),spawn.mapRect(8525,-375,400,150),spawn.mapRect(8650,-250,150,50),spawn.mapRect(8200,-350,175,50),spawn.mapRect(7600,-475,275,100),spawn.mapRect(7475,-500,175,75),spawn.mapRect(7200,-600,300,75),spawn.mapRect(7075,-600,150,25),spawn.mapRect(7125,-575,100,25),spawn.mapRect(7275,-525,100,25),spawn.mapRect(7500,225,275,125),spawn.mapRect(5800,-1175,675,100),spawn.mapRect(9400,625,500,1725),spawn.mapRect(9750,775,575,1500),spawn.mapRect(10050,1075,675,1300),spawn.mapRect(9725,-250,975,350),spawn.mapRect(10275,-100,1e3,625),spawn.mapRect(10125,25,375,350),spawn.mapRect(9900,25,375,225),spawn.mapRect(10075,250,200,50),spawn.mapRect(10275,425,75,75),spawn.mapRect(10150,325,200,75),spawn.mapRect(10200,375,125,100),spawn.mapRect(9600,-175,225,200),spawn.mapRect(9650,-25,125,100),spawn.mapRect(9450,-200,225,175),spawn.mapRect(1e4,200,50,25),spawn.mapRect(9800,50,200,125),spawn.mapRect(9875,725,150,75),spawn.mapRect(10300,900,100,325),spawn.mapRect(10375,950,75,225),spawn.mapRect(10425,1e3,75,175),spawn.mapRect(9100,-150,375,75),spawn.mapRect(3525,0,1850,100),spawn.mapRect(3650,-25,1475,175),spawn.mapRect(4e3,-100,950,225),spawn.mapRect(4450,-175,300,175),spawn.mapRect(1825,-25,775,100),spawn.mapRect(4150,-1375,175,75),spawn.mapRect(3800,-1600,125,100),spawn.mapRect(2700,0,175,100),spawn.mapRect(2750,-50,75,150),spawn.mapRect(2775,-25,75,75),spawn.bodyRect(3775,-575,50,75),spawn.mapRect(8050,-2300,4650,1750),spawn.mapRect(9300,-975,2450,575),spawn.mapRect(9925,-775,2350,700),spawn.mapRect(10675,-600,2025,1175),spawn.mapRect(10300,825,50,125),spawn.mapRect(1e4,750,100,25),spawn.mapRect(9875,700,75,75),spawn.mapRect(9850,675,75,50),spawn.mapRect(8975,525,225,50),spawn.mapRect(8625,450,225,50),spawn.mapRect(8925,-150,175,50),spawn.mapRect(-500,1775,10800,1800),spawn.mapRect(10075,2200,625,1850),spawn.mapRect(10525,475,250,75),spawn.mapRect(10450,1025,25,25),spawn.mapRect(10450,1050,150,25),spawn.mapRect(10675,1125,175,1700),spawn.mapRect(10725,1225,400,725),spawn.mapRect(10975,1425,300,1300),spawn.mapRect(11225,1550,700,1275),spawn.mapRect(11725,1625,1150,1150),spawn.mapRect(11050,1275,125,350),spawn.mapRect(11150,1350,75,175),spawn.mapRect(10825,1200,125,75),spawn.mapRect(10325,1750,1275,1150),spawn.mapRect(11250,1500,325,100),spawn.mapRect(11225,1475,200,75),spawn.mapRect(11525,1525,350,75),spawn.mapRect(11875,1575,425,100),spawn.mapRect(12200,1625,25,25),spawn.mapRect(12200,1600,250,75),spawn.randomMob(11250,675,0),spawn.bodyRect(10900,575,50,625),spawn.mapRect(11050,575,1725,200),spawn.mapRect(11275,750,1650,125),spawn.mapRect(11575,875,1525,150),spawn.mapRect(11450,850,250,125),spawn.mapRect(11325,850,225,50),spawn.mapRect(11400,875,100,75),spawn.mapRect(11175,750,200,75),spawn.mapRect(11125,775,100,25),spawn.mapRect(11250,825,50,25),spawn.mapRect(11675,1025,400,50),spawn.mapRect(12175,1025,50,150),spawn.mapRect(11625,1e3,75,50),spawn.mapRect(12200,1175,25,25),spawn.mapRect(12400,950,100,275),spawn.mapRect(12450,1200,50,100),spawn.mapRect(12425,1225,50,125),spawn.mapRect(12425,1325,25,75),spawn.mapRect(12325,1025,25,100),spawn.mapRect(12625,1e3,625,150),spawn.mapRect(12775,1150,600,50),spawn.bodyRect(12075,1325,100,50),spawn.mapRect(12825,2e3,800,975),spawn.mapRect(13475,1625,150,475),spawn.mapRect(12850,1750,50,275),spawn.mapRect(12875,1850,75,225),spawn.mapRect(12950,1925,75,125),spawn.mapRect(13450,1700,50,350),spawn.mapRect(13400,1750,75,350),spawn.mapRect(13325,1875,100,200),spawn.mapRect(13350,1800,75,100),spawn.mapRect(13300,1950,25,75),spawn.mapRect(12925,1900,75,25),spawn.mapRect(12900,1800,25,75),spawn.mapRect(13e3,1975,150,25),spawn.mapRect(12475,100,1150,925),spawn.mapRect(13200,100,925,1100),spawn.mapRect(13525,1150,400,75),spawn.mapRect(13875,1200,175,125),spawn.mapRect(13975,1300,75,225),spawn.mapRect(14025,1425,25,225),spawn.mapRect(13600,1700,100,1250),spawn.mapRect(13675,1775,150,1200),spawn.mapRect(13775,1825,75,1150),spawn.mapRect(13825,1900,50,1075),spawn.mapRect(13850,1950,75,1025),spawn.mapRect(13875,2025,75,950),spawn.mapRect(13925,2100,50,1025),spawn.mapRect(13900,2125,100,1e3),spawn.mapRect(13975,2225,75,900),spawn.mapRect(14e3,2375,100,750),spawn.mapRect(14050,1200,75,525),spawn.mapRect(14075,1625,100,150),spawn.mapRect(14175,1750,50,175),spawn.mapRect(14150,1750,50,75),spawn.mapRect(14225,1875,50,150),spawn.mapRect(14250,2e3,50,150),spawn.mapRect(14100,300,300,1450),spawn.mapRect(14225,1675,150,250),spawn.mapRect(14300,1700,100,675),spawn.mapRect(14275,1925,50,175),spawn.mapRect(14025,2300,50,200),spawn.mapRect(14075,2600,275,700),spawn.mapRect(14050,2425,75,475),spawn.mapRect(14100,2525,50,150),spawn.mapRect(14150,2575,50,100),spawn.mapRect(14325,2650,800,1300),spawn.mapRect(15e3,2600,1075,1275),spawn.mapRect(15100,2550,1200,1400),spawn.mapRect(14375,1075,1400,1175),spawn.mapRect(14375,2225,200,50),spawn.mapRect(14375,2275,75,75),spawn.mapRect(14425,2275,75,25),spawn.mapRect(14775,2200,50,125),spawn.mapRect(14725,2250,25,125),spawn.bodyRect(14300,2375,50,225),spawn.mapRect(15075,2600,50,25),spawn.mapRect(15075,2575,50,50),spawn.mapRect(14950,2625,50,25),spawn.mapRect(15525,2525,300,50),spawn.mapRect(15550,2500,175,100),spawn.mapRect(14975,2250,200,25),spawn.mapRect(14400,1e3,1900,1250),spawn.mapRect(15925,2250,275,25),spawn.mapRect(15975,2275,150,25),spawn.mapRect(16075,2300,25,75),spawn.mapRect(16250,2575,275,1275),spawn.mapRect(16400,2600,250,1300),spawn.mapRect(16525,2675,300,1150),spawn.mapRect(16650,2725,300,1175),spawn.mapRect(16200,1050,600,1225),spawn.mapRect(16525,1025,500,1300),spawn.mapRect(16725,1150,525,1225),spawn.mapRect(16900,1425,550,1e3),spawn.mapRect(16375,2250,250,50),spawn.mapRect(16675,2325,75,25),spawn.mapRect(16850,2400,25,25),spawn.mapRect(16850,2375,100,50),spawn.mapRect(16800,2375,50,25),spawn.mapRect(16575,2650,150,75),spawn.mapRect(16625,2625,50,50),spawn.mapRect(16800,2700,50,50),spawn.mapRect(16950,2900,450,1175),spawn.mapRect(16900,2825,100,275),spawn.mapRect(16900,2775,75,150),spawn.mapRect(16950,2850,100,125),spawn.mapRect(17600,3e3,350,25),spawn.mapRect(17650,3025,200,50),spawn.mapRect(17750,3050,100,1200),spawn.mapRect(17850,3025,25,425),spawn.mapRect(18200,3100,450,25),spawn.mapRect(18250,3125,150,100),spawn.mapRect(18400,3125,200,50),spawn.mapRect(18400,3150,75,900),spawn.mapRect(18400,3950,75,375),spawn.mapRect(17750,4e3,100,325),spawn.mapRect(18200,3075,525,50),spawn.mapRect(18450,3175,50,275),spawn.mapRect(18575,3125,50,50),spawn.mapRect(18600,3100,50,50),spawn.mapRect(18325,3200,100,175),spawn.mapRect(18350,3350,75,100),spawn.mapRect(18375,3450,25,75),spawn.mapRect(18500,3175,25,150),spawn.mapRect(17725,3075,50,175),spawn.mapRect(17700,3075,25,50),spawn.mapRect(18550,3150,50,1275),spawn.mapRect(18975,2975,525,25),spawn.mapRect(19025,2975,400,75),spawn.mapRect(19150,3025,150,1400),spawn.mapRect(19250,3025,100,325),spawn.mapRect(19100,3050,75,225),spawn.mapRect(19125,3275,50,75),spawn.mapRect(19275,3325,50,200),spawn.mapRect(19700,3e3,525,50),spawn.mapRect(19750,3050,175,1275),spawn.mapRect(19925,3025,100,225),spawn.mapRect(19900,3200,75,250),spawn.mapRect(20025,3050,50,100),spawn.mapRect(2e4,3150,50,75),spawn.mapRect(19900,3450,50,125),spawn.mapRect(19725,3050,75,150),spawn.mapRect(19650,3025,25,25),spawn.mapRect(19650,3e3,625,25),spawn.mapRect(17375,1450,3525,250),spawn.mapRect(17400,1675,100,400),spawn.mapRect(17475,1675,75,150),spawn.mapRect(17525,1650,125,75),spawn.mapRect(17475,1775,50,175),spawn.mapRect(17425,2025,50,200),spawn.mapRect(17825,1650,375,75),spawn.mapRect(17975,1700,100,125),spawn.mapRect(18050,1800,50,150),spawn.mapRect(18025,1675,100,150),spawn.mapRect(18075,1900,25,175),spawn.mapRect(20550,2825,825,1525),spawn.mapRect(20825,1450,550,250),spawn.mapRect(21350,1450,300,2700),spawn.mapRect(21100,1650,275,425),spawn.mapRect(21225,2025,175,275),spawn.mapRect(21175,2025,75,150),spawn.mapRect(21300,2275,75,150),spawn.mapRect(21e3,1675,100,300),spawn.mapRect(21050,1950,50,100),spawn.mapRect(20700,1700,200,50),spawn.mapRect(20750,1725,50,225),spawn.mapRect(20800,1725,50,175),spawn.mapRect(20750,1925,25,150),spawn.mapRect(20975,1675,50,225),spawn.mapRect(21275,2300,50,50),spawn.mapRect(20550,1700,150,50),spawn.mapRect(20550,1725,50,825),spawn.mapRect(20575,1725,50,300),spawn.mapRect(20600,1725,50,75),spawn.mapRect(20600,1875,25,350),spawn.mapRect(20675,1750,25,400),spawn.bodyRect(20550,2550,50,275),spawn.mapRect(20500,2850,75,1500),spawn.mapRect(20475,2900,50,1425),spawn.bodyRect(21200,2550,50,75),spawn.bodyRect(20775,2225,75,75),spawn.mapRect(19525,1700,550,25),spawn.mapRect(19650,1725,100,275),spawn.mapRect(19725,1700,50,525),spawn.mapRect(19750,1725,250,150),spawn.mapRect(19775,1850,100,225),spawn.mapRect(19850,1875,100,75),spawn.mapRect(19600,1675,125,175),spawn.mapRect(18425,1700,1050,50),spawn.mapRect(18475,1750,800,25),spawn.randomMob(12e3,2850,0),spawn.mapRect(10550,2725,5275,1775),spawn.mapRect(15700,3850,5950,1050),spawn.mapRect(8225,2975,4050,1500),spawn.mapRect(12100,-2300,9350,2925),spawn.mapRect(14175,350,8725,1075),spawn.mapRect(20825,-2325,3700,2650),spawn.mapRect(21450,50,4450,5925),spawn.mapRect(16325,1125,7175,400),spawn.mapRect(-875,-3775,27375,1625),spawn.mapRect(-3250,-4e3,2925,8075),spawn.mapRect(8125,4475,18250,7300),spawn.mapRect(7125,3975,8775,2800),spawn.mapRect(-4300,-4475,2300,11350),spawn.randomGroup(5835,-532,.4),simulation.difficulty>1&&spawn.randomLevelBoss(18823,2191),spawn.secondaryBossChance(20217,1913),level.custom=()=>{level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{}},dojo(){simulation.inGameConsole("<strong>dojo</strong> by <span class='color-var'>werid_pusheen</span>, fixed by <span class='color-var'>Cornbread 2100</span>");const e=[],t=[],a=level.rotor(-550,900,950,25);a.frictionAir=.01;var o=level.boost(-20,-60,-2e3),s=level.button(2550,-50),n=!1,l=!0;spawn.mapRect(2513,-39,200,100);var i=[[0,0],[250,-750],[250,-2500],[350,-1500],[1150,-1500],[1150,-2750],[1950,-1500],[2050,-750],[2050,-2500],[-150,-250]];function c(e,t){return 0!=Matter.Query.ray(map,{x:e[0],y:e[1]},{x:t[0],y:t[1]}).length}var p=void 0;function r(e,t,a=[]){var o=t;a.length&&(o=a[a.length-1]),p&&a.length>=p.length||(c(o,e)?i.forEach(s=>{if(function(e,t){for(var a=0;a<t.length;a++)if(e[0]==t[a][0]&&e[1]==t[a][1])return!1;return!0}(s,a)&&!c(o,s)){var n=[...a];n.push(s),r(e,t,n)}}):(p=[...a]).push(e))}level.setPosToSpawn(1200,500),level.exit.x=51500,level.exit.y=-1875,spawn.mapRect(level.enter.x,level.enter.y+20,100,20),level.defaultZoom=1500,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#d8dadf",spawn.mapRect(-500,0,3300,300),spawn.mapRect(-100,-3e3,2500,100),spawn.mapRect(-200,-3e3,100,2600),spawn.mapRect(2400,-3e3,100,3e3),spawn.mapRect(500,-1e3,100,500),t.push(map[map.length-1]),spawn.mapRect(500,-2500,100,500),t.push(map[map.length-1]),spawn.mapRect(1700,-1e3,100,500),t.push(map[map.length-1]),spawn.mapRect(1700,-2500,100,500),t.push(map[map.length-1]),spawn.mapRect(-1e3,550,200,50),spawn.mapRect(-800,300,200,50),spawn.mapVertex(-1e3,1200,"0 0  100 0  700 500  700 700  0 700"),spawn.mapRect(3100,550,200,50),spawn.mapRect(2900,300,200,50),spawn.mapVertex(3300,1200,"0 0  -100 0  -700 500  -700 700  0 700");const h=level.elevator(-1700,1450,300,100,500),d=level.elevator(3700,1450,300,100,500);spawn.mapRect(-150,-1700,200,50),spawn.mapRect(400,-2050,200,50),spawn.mapRect(1600,-1e3,200,50),spawn.randomMob(1200,700),spawn.randomMob(600,1e3),spawn.randomMob(1800,1e3),spawn.randomMob(3200,400),spawn.randomMob(3e3,200),spawn.randomMob(-900,400),spawn.randomMob(-700,200),spawn.randomMob(1200,1e3);for(var w=0;w<4;w++)spawn.randomSmallMob(600*Math.random()-600,3e3*Math.random()-400);spawn.grenadier(-300,-1e3),spawn.grenadier(2600,-1e3),spawn.mapRect(-1400,1450,5100,100);const y=level.hazard(-1250,1400,4800,50);y.maxHeight=600,simulation.draw.body=function(){ctx.beginPath();for(let e=0,t=body.length;e<t;++e)if(!body[e].hidden){let t=body[e].vertices;ctx.moveTo(t[0].x,t[0].y);for(let e=1;e<t.length;e++)ctx.lineTo(t[e].x,t[e].y);ctx.lineTo(t[0].x,t[0].y)}ctx.lineWidth=2,ctx.fillStyle=color.block,ctx.fill(),ctx.strokeStyle=color.blockS,ctx.stroke()};const x=function(e,t,a,o){e+=a/2,t+=o/2;const s=function(e,t,a,o){return[{x:e,y:t,index:0,isInternal:!1},{x:e+a,y:t,index:1,isInternal:!1},{x:e+a,y:t+o,index:4,isInternal:!1},{x:e,y:t+o,index:3,isInternal:!1}]},n=cat.player|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet,l=s(e,t,a,o);return body[body.length]=Bodies.fromVertices(e,t,l,{collisionFilter:{category:cat.map,mask:n},isNoSetCollision:!0,inertia:1/0,isNotHoldable:!0,isNonStick:!0,isTouched:!1,cWidth:a,hiddenCycle:0,isStatic:!0,query(){this.cWidth<=0?(this.cWidth>-100&&(this.cWidth=-100,Matter.Body.setVertices(this,l)),this.isTouched=!1,this.collisionFilter.mask=void 0,this.hidden=!0,this.hiddenCycle++,this.hiddenCycle>100&&(Matter.Query.collides(this,[player]).length?this.hiddenCycle=50:(this.hiddenCycle=0,this.cWidth=a,this.collisionFilter.mask=n,this.hidden=!1))):this.isTouched?(Matter.Body.setVertices(this,s(e,t,this.cWidth,o*(this.cWidth/a))),this.cWidth-=3):Matter.Query.collides(this,[player]).length&&(this.isTouched=!0)}})};e.push(x(800,800,800,50)),e.push(x(400,1100,400,50)),e.push(x(1600,1100,400,50));for(const t of e)Composite.add(engine.world,t);spawn.bodyRect(1700,812,300,25,1,{collisionFilter:{category:cat.body,mask:cat.player|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet|cat.map},isNoSetCollision:!0,isNotHoldable:!0,isNonStick:!0,restitution:1,friction:0,frictionAir:0,frictionStatic:0,query(){Matter.Body.setAngularVelocity(this,0),Matter.Body.applyForce(this,this.position,{x:0,y:.002*-(this.position.y-812)})}});const u=body[body.length-1];Matter.Body.applyForce(u,u.position,{x:.1,y:0});var R=!1;level.customTopLayer=()=>{},level.custom=()=>{s.isUp=!1,level.exit.drawAndCheck(),o.query(),level.enter.draw(),i[0][0]=m.pos.x,i[0][1]=m.pos.y,h.move(),d.move(),y.query(),u.query(),y.levelRise(.2);for(var c=0;c<e.length;c++)e[c].query();if(!n){var p=m.pos.y<a.position.y;Matter.Body.setAngularVelocity(a,(p?1:-1)*Math.PI/45)}l&&(s.query(),s.draw(),ctx.fillStyle=n?"lightgreen":"red",ctx.beginPath(),ctx.arc(2615,-220,40,0,2*Math.PI),ctx.fill()),s.isUp?R=!0:R&&(R=!1,n=!n),Matter.Query.collides(player,t).length&&Matter.Body.applyForce(player,player.position,{x:0,y:-.015})},mobs.spawn(500,-500,10,100,"yellow");var b=mob[mob.length-1];b.isBoss=!0,b.damageReduction=.2,b.onDeath=function(){powerUps.spawnBossPowerUp(this.position.x,this.position.y),level.exit.x=2560,level.exit.y=-90,l=!1};var f={};["hopper","stabber","springer","striker","sneaker","grower"].forEach(e=>{spawn[e]&&(f[e]={fun:spawn[e],name:e,weight:1})}),b.stabCycle=0,b.spawnCycle=0,b.spawnDelay=40,b.mode="hide",b.modeSwitch=-1,b.damageReduction=.1;var g=b.onHit;b.onHit=()=>{b.modeSwitch=-1,g.call(b)},b.do=()=>{p=void 0;var e=[0,0];if(b.modeSwitch--,b.modeSwitch<0&&(b.isShielded||spawn.shield(b,b.position.x,b.position.y,.75),"hide"==b.mode||"recharge"==b.mode?(Math.random()>.5?b.mode="spawn":b.mode="strike",b.modeSwitch=600):("strike"==b.mode||Math.random()>.5?b.mode="hide":(b.mode="recharge",spawn.shield(b,b.position.x,b.position.y,1)),b.modeSwitch=200)),"hide"==b.mode){var t=0;i.forEach(a=>{if(1150!=a[0]){var o,s,n,l,i=(o=a,s=[m.pos.x,m.pos.y],n=o[0]-s[0],l=o[1]-s[1],Math.sqrt(n*n+l*l));i>t&&(t=i,e=a)}})}else"strike"==b.mode?e=i[0]:"spawn"==b.mode&&(e=i[4]);if("recharge"!=b.mode){if((m.pos.x>2350||m.pos.x<-150||m.pos.y>50)&&(b.mode="hide"),r(e,[b.position.x,b.position.y]),!p)return;var a=p[0][0],o=p[0][1],s=a-b.position.x,n=o-b.position.y,l=Math.sqrt(s*s+n*n);Matter.Body.applyForce(b,{x:a,y:o},{x:s/l*.04*("strike"==b.mode?2:1),y:n/l*.04*("strike"==b.mode?2:1)})}"spawn"==b.mode&&(b.stabCycle++,b.stabCycle>25&&(Math.abs(s)<200&&n>0&&Matter.Body.applyForce(b,{x:player.position.x,y:player.position.y},{x:0,y:5}),b.stabCycle=0),b.spawnCycle++,b.spawnCycle>b.spawnDelay&&(!function(){var e=0;Object.keys(f).forEach(t=>{e+=f[t].weight});var t=0,a=Math.random(),o=void 0;Object.values(f).forEach(s=>{var n=t/e;t+=s.weight,(a>n&&a<=t/e||!o)&&(o=s)}),o.fun(b.position.x,b.position.y);var s=mob[mob.length-1];s.typeName=o.name,s.onHit=()=>{f[s.typeName].weight+=1};var n=s.onDeath;s.onDeath=()=>{n.call(s),f[s.typeName].weight-=.3}}(),b.spawnDelay+=4,b.spawnCycle=0))},b.showHealthBar=!0,powerUps.addResearchToLevel()},arena(){let e,t,a,o,s,n;simulation.inGameConsole("<strong>arena</strong> by <span class='color-var'>Whyisthisnotavalable</span>");let l={left:!1,right:!1,up:!1,down:!1};const i={spawn(){let l=Vertices.fromPath("0,40, 50,40, 50,115, 30,130, 20,130, 0,115, 0,40");a=Bodies.fromVertices(0,0,l),t=Bodies.rectangle(0,46,36,6,{sleepThreshold:99999999999,isSensor:!0}),l=Vertices.fromPath("16 -82  2 -66  2 -37  43 -37  43 -66  30 -82"),o=Bodies.fromVertices(0,-55,l),s=Bodies.rectangle(0,-57,48,45,{sleepThreshold:99999999999,isSensor:!0}),n=Bodies.rectangle(0,0,70,45,{sleepThreshold:99999999999,isSensor:!0}),e=Body.create({parts:[a,o,t,s,n],inertia:1/0,friction:.002,frictionAir:.001,restitution:0,sleepThreshold:1/0,collisionFilter:{group:0,category:cat.mob,mask:cat.body|cat.map|cat.mob|cat.mobBullet|cat.mobShield|cat.player|cat.bullet}}),Matter.Body.setMass(e,i.mass),Composite.add(engine.world,[e])},health:1e3,maxHealth:1e3,cycle:600,lastKillCycle:0,lastHarmCycle:0,width:50,radius:30,eyeFillColor:null,fillColor:null,fillColorDark:null,bodyGradient:null,color:{hue:0,sat:0,light:50},setFillColors(){i.fillColor=`hsl(${i.color.hue},${i.color.sat}%,${i.color.light}%)`,i.fillColorDark=`hsl(${i.color.hue},${i.color.sat}%,${i.color.light-25}%)`;let e=ctx.createLinearGradient(-30,0,30,0);e.addColorStop(0,i.fillColorDark),e.addColorStop(1,i.fillColor),i.bodyGradient=e},setFillColorsAlpha(e=.5){i.fillColor=`hsla(${i.color.hue},${i.color.sat}%,${i.color.light}%,${e})`,i.fillColorDark=`hsla(${i.color.hue},${i.color.sat}%,${i.color.light-25}%,${e})`;let t=ctx.createLinearGradient(-30,0,30,0);t.addColorStop(0,i.fillColorDark),t.addColorStop(1,i.fillColor),i.bodyGradient=t},height:42,yOffWhen:{crouch:22,stand:49,jump:70},defaultMass:5,mass:5,FxNotHolding:.015,Fx:.016,jumpForce:.64,setMovement(){i.Fx=tech.baseFx*i.fieldFx*tech.squirrelFx*(tech.isFastTime?1.5:1)/e.mass,i.jumpForce=tech.baseJumpForce*i.fieldJump*tech.squirrelJump*(tech.isFastTime?1.13:1)/e.mass/e.mass},FxAir:.032,yOff:70,yOffGoal:70,onGround:!1,lastOnGroundCycle:0,standingOn:void 0,numTouching:0,crouch:!1,spawnPos:{x:0,y:0},spawnVel:{x:0,y:0},pos:{x:0,y:0},yPosDifference:24.2859,Sy:0,Vx:0,Vy:0,friction:{ground:.01,air:.0025},airSpeedLimit:125,angle:0,walk_cycle:0,stepSize:0,flipLegs:-1,hip:{x:12,y:24},knee:{x:0,y:0,x2:0,y2:0},foot:{x:0,y:0},legLength1:55,legLength2:45,transX:0,transY:0,history:new Array(600),rewindCount:0,resetHistory(){const t={position:{x:e.position.x,y:e.position.y},velocity:{x:e.velocity.x,y:e.velocity.y},yOff:i.yOff,angle:i.angle,health:i.health,energy:i.energy,activeGun:b.activeGun};for(let e=0;e<600;e++)i.history[e]=t},move(){i.pos.x=e.position.x,i.pos.y=a.position.y-i.yOff,i.Vx=e.velocity.x,i.Vy=e.velocity.y,i.history.splice(i.cycle%600,1,{position:{x:e.position.x,y:e.position.y},velocity:{x:e.velocity.x,y:e.velocity.y},yOff:i.yOff,angle:i.angle,health:i.health,energy:i.energy,activeGun:b.activeGun})},targetX:0,targetY:0,transSmoothX:0,transSmoothY:0,lastGroundedPositionY:0,lookSmoothing:.07,look(){},lookDefault(){i.angle=Math.atan2(i.targetY-i.pos.y,i.targetX-i.pos.x);i.transSmoothX=canvas.width2-i.pos.x-.8*(simulation.mouse.x-canvas.width2),i.transSmoothY=canvas.height2-i.pos.y-.8*(simulation.mouse.y-canvas.height2),i.transX+=(i.transSmoothX-i.transX)*i.lookSmoothing,i.transY+=(i.transSmoothY-i.transY)*i.lookSmoothing},doCrouch(){i.crouch||(i.crouch=!0,i.yOffGoal=i.yOffWhen.crouch,o.position.y-e.position.y<0&&Matter.Body.setPosition(o,{x:e.position.x,y:e.position.y+9.1740767}))},undoCrouch(){i.crouch&&(i.crouch=!1,i.yOffGoal=i.yOffWhen.stand,o.position.y-e.position.y>0&&Matter.Body.setPosition(o,{x:e.position.x,y:e.position.y-30.28592321}))},hardLandCD:0,checkHeadClear:()=>!(Matter.Query.collides(headSensor,map).length>0),buttonCD_jump:0,jump(){i.buttonCD_jump=i.cycle+20,Matter.Body.applyForce(i.standingOn,i.pos,{x:0,y:.12*i.jumpForce*Math.min(i.standingOn.mass,5)}),e.force.y=-i.jumpForce,Matter.Body.setVelocity(e,{x:e.velocity.x,y:Math.max(-10,Math.min(i.standingOn.velocity.y,10))})},groundControl(){if(i.crouch?!l.down&&i.checkHeadClear()&&i.hardLandCD<i.cycle&&i.undoCrouch():l.down||i.hardLandCD>i.cycle?i.doCrouch():l.up&&i.buttonCD_jump+20<i.cycle&&i.yOffWhen.stand>23&&i.jump(),l.left)e.velocity.x>-2?e.force.x-=1.5*i.Fx:e.force.x-=i.Fx;else if(l.right)e.velocity.x<2?e.force.x+=1.5*i.Fx:e.force.x+=i.Fx;else{const t=.92;Matter.Body.setVelocity(e,{x:e.velocity.x*t,y:e.velocity.y*t})}if(e.speed>4){const t=i.crouch?.65:.89;Matter.Body.setVelocity(e,{x:e.velocity.x*t,y:e.velocity.y*t})}},airControl(){l.up&&i.buttonCD_jump+20<i.cycle&&i.yOffWhen.stand>23&&i.lastOnGroundCycle+5>i.cycle&&i.jump(),i.buttonCD_jump+60>i.cycle&&!l.up&&i.Vy<0&&Matter.Body.setVelocity(e,{x:e.velocity.x,y:.94*e.velocity.y}),l.left?e.velocity.x>-i.airSpeedLimit/e.mass/e.mass&&(e.force.x-=i.FxAir):l.right&&e.velocity.x<i.airSpeedLimit/e.mass/e.mass&&(e.force.x+=i.FxAir)},alive:!0,defaultFPSCycle:0,immuneCycle:0,collisionImmuneCycles:30,buttonCD:0,drawLeg(e){i.angle>-Math.PI/2&&i.angle<Math.PI/2?i.flipLegs=1:i.flipLegs=-1,ctx.save(),ctx.scale(i.flipLegs,1),ctx.beginPath(),ctx.moveTo(i.hip.x,i.hip.y),ctx.lineTo(i.knee.x,i.knee.y),ctx.lineTo(i.foot.x,i.foot.y),ctx.strokeStyle=e,ctx.lineWidth=7,ctx.stroke(),ctx.beginPath(),ctx.moveTo(i.foot.x,i.foot.y),ctx.lineTo(i.foot.x-15,i.foot.y+5),ctx.moveTo(i.foot.x,i.foot.y),ctx.lineTo(i.foot.x+15,i.foot.y+5),ctx.lineWidth=4,ctx.stroke(),ctx.beginPath(),ctx.arc(i.hip.x,i.hip.y,11,0,2*Math.PI),ctx.moveTo(i.knee.x+7,i.knee.y),ctx.arc(i.knee.x,i.knee.y,7,0,2*Math.PI),ctx.moveTo(i.foot.x+6,i.foot.y),ctx.arc(i.foot.x,i.foot.y,6,0,2*Math.PI),ctx.fillStyle=i.fillColor,ctx.fill(),ctx.lineWidth=2,ctx.stroke(),ctx.restore()},calcLeg(e,t){i.hip.x=12+t,i.hip.y=24+t,i.stepSize=.8*i.stepSize+7*Math.sqrt(Math.min(9,Math.abs(i.Vx)))*i.onGround*.2;const a=.034*i.walk_cycle+e;i.foot.x=2.2*i.stepSize*Math.cos(a)+t,i.foot.y=t+1.2*i.stepSize*Math.sin(a)+i.yOff+i.height;const o=i.yOff+i.height;i.foot.y>o&&(i.foot.y=o);const s=Math.sqrt((i.hip.x-i.foot.x)*(i.hip.x-i.foot.x)+(i.hip.y-i.foot.y)*(i.hip.y-i.foot.y)),n=(i.legLength1*i.legLength1-i.legLength2*i.legLength2+s*s)/(2*s),l=Math.sqrt(i.legLength1*i.legLength1-n*n);i.knee.x=n/s*(i.foot.x-i.hip.x)-l/s*(i.foot.y-i.hip.y)+i.hip.x+t,i.knee.y=n/s*(i.foot.y-i.hip.y)+l/s*(i.foot.x-i.hip.x)+i.hip.y},draw(){},drawDefault(){ctx.fillStyle=i.fillColor,i.walk_cycle+=i.flipLegs*i.Vx,ctx.save(),ctx.globalAlpha=i.immuneCycle<i.cycle?1:.5,ctx.translate(i.pos.x,i.pos.y),i.calcLeg(Math.PI,-3),i.drawLeg("#FFFFFF"),i.calcLeg(0,0),i.drawLeg("#FFFFFF"),ctx.rotate(i.angle),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=i.bodyGradient,ctx.fill(),ctx.arc(15,0,4,0,2*Math.PI),ctx.strokeStyle="#FFFFFF",ctx.lineWidth=2,ctx.stroke(),ctx.restore(),i.yOff=.85*i.yOff+.15*i.yOffGoal},drawDamage(){ctx.fillStyle="red",i.walk_cycle+=i.flipLegs*i.Vx,ctx.save(),ctx.globalAlpha=.7,ctx.translate(i.pos.x,i.pos.y),i.calcLeg(Math.PI,-3),i.drawLeg("#FF0000"),i.calcLeg(0,0),i.drawLeg("#FF0000"),ctx.rotate(i.angle),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=i.bodyGradient,ctx.fill(),ctx.arc(15,0,4,0,2*Math.PI),ctx.strokeStyle="#FF0000",ctx.lineWidth=2,ctx.stroke(),ctx.restore(),i.yOff=.85*i.yOff+.15*i.yOffGoal},damage(e){i.health-=e},rebirth(){i.health=i.maxHealth,e.collisionFilter.mask=cat.body|cat.map|cat.mob|cat.mobBullet|cat.mobShield|cat.player|cat.bullet},lastHealth:1e3,drawHealth(){let e=this.lastHealth+.1*(i.health-this.lastHealth);ctx.save(),ctx.setTransform(1,0,.2,1,0,0),ctx.fillStyle="rgba(250, 100, 100, 0.3)",ctx.fillRect(canvas.width2/2,canvas.height2/10,canvas.width2,30);const t=ctx.createLinearGradient(0,0,canvas.width2,0);t.addColorStop(0,"lightblue"),t.addColorStop(1,"crimson"),ctx.fillStyle=t,ctx.fillRect(canvas.width2/2,canvas.height2/10,canvas.width2*e/1e3,30),ctx.restore(),this.lastHealth=e},genisisOnGroundCheck(a){function o(){if(i.numTouching++,!i.onGround)if(i.onGround=!0,i.crouch)i.checkHeadClear()?i.undoCrouch():i.yOffGoal=i.yOffWhen.crouch;else{const t=e.velocity.y*e.mass;t>130?(i.doCrouch(),i.yOff=i.yOffWhen.jump,i.hardLandCD=i.cycle+Math.min(t/6.5-6,40),tech.isFallingDamage&&m.immuneCycle<m.cycle&&t>150&&(m.takeDamage(Math.min(.02*Math.sqrt(t-100),.4)*spawn.dmgToPlayerByLevelsCleared()),m.immuneCycle<m.cycle+m.collisionImmuneCycles&&(m.immuneCycle=m.cycle+m.collisionImmuneCycles))):i.yOffGoal=i.yOffWhen.stand}}const s=a.pairs;for(let e=0,a=s.length;e!=a;++e){let a=s[e];a.bodyA===t?(i.standingOn=a.bodyB,!0!==i.standingOn.alive&&o()):a.bodyB===t&&(i.standingOn=a.bodyA,!0!==i.standingOn.alive&&o())}i.numTouching=0},genisisOffGroundCheck(e){const a=e.pairs;for(let e=0,o=a.length;e!=o;++e)a[e].bodyA!==t&&a[e].bodyB!==t||i.onGround&&0===i.numTouching&&(i.onGround=!1,i.lastOnGroundCycle=i.cycle,i.hardLandCD=0,i.checkHeadClear()&&(i.crouch&&i.undoCrouch(),i.yOffGoal=i.yOffWhen.jump))}};i.spawn(),Matter.Body.setPosition(e,{x:7875,y:-2530});let c=!1;for(let e=0;e<tech.tech.length;e++)"size-weight illusion"===tech.tech[e].name&&(c=!0);if(c)simulation.inGameConsole('Thank you for using my sword mod<br>I\'ll save you the trouble of killing genisis<br><div style="font-family: monospace;">g.<span style="color: crimson;">damage</span>(Infinity)</div>'),i.damage(1/0);else{const t={name:"sword",descriptionFunction:()=>"swing a <b>sword</b> that <b style=\"color: indigo;\">lifesteals</b> <strong class='color-h'>health</strong><br>drains <strong class='color-h'>health</strong> instead of ammunition<br>doesn't use <b>ammo</b>",ammo:1/0,ammoPack:1/0,defaultAmmoPack:1/0,have:!1,cycle:0,sword:void 0,swordArray:[],bladeSegments:void 0,bladeTrails:[],angle:0,constraint:void 0,charge:0,angle2:0,fire(){},do(){this.sword&&this.cycle<1&&(this.angle2=Math.atan2(this.sword.position.y-m.pos.y,this.sword.position.x-m.pos.x)),this.sword&&this.cycle++,this.normalFire(),this.renderDefault(),this.collision()},normalFire(){if(this.constraint&&(this.constraint.pointA=player.position),tech.isStabSword&&!m.crouch&&this.cycle>0&&this.stabStatus&&this.sword&&(this.stabStatus=!1,tech.isEnergyHealth&&(m.energy=.01,m.immuneCycle=m.cycle+30),this.cycle=0,Matter.Body.setAngularVelocity(this.sword,0),Composite.remove(engine.world,this.sword),this.sword.parts.forEach(e=>{Composite.remove(engine.world,e);const t=bullet.indexOf(e);-1!==t&&bullet.splice(t,1)}),this.sword=void 0,this.constraint&&(Composite.remove(engine.world,this.constraint),this.constraint=void 0),this.bladeTrails=[],m.fireCDcycle=0),input.fire&&(tech.isEnergyHealth?m.energy>=.11:m.health>=.11)&&(tech.isEnergyHealth?m.energy-=.004:(m.health-=.001,m.displayHealth())),input.fire&&(tech.isEnergyHealth?m.energy>=.11:m.health>=.11)&&(this.sword||"sword"!==b.guns[b.activeGun].name||(({sword:this.sword,bladeSegments:this.bladeSegments}=this.createAndSwingSword()),this.angle=m.angle)),this.sword&&!input.fire)this.cycle=0,Matter.Body.setAngularVelocity(this.sword,0),player.force.x*=.01,player.force.y*=.01,Composite.remove(engine.world,this.sword),this.sword.parts.forEach(e=>{Composite.remove(engine.world,e);const t=bullet.indexOf(e);-1!==t&&bullet.splice(t,1)}),this.sword=void 0,this.constraint&&(Composite.remove(engine.world,this.constraint),this.constraint=void 0),this.bladeTrails=[],m.fireCDcycle=m.cycle+10;else if(this.sword&&(tech.isEnergyHealth?m.energy>=.11:m.health>=.11)){let e;for(let t=0;t<bullet.length;t++)"handle"==bullet[t].customName&&(e=bullet[t]);if(tech.infinityEdge){const t=Math.max(0,Math.sqrt(.5*m.health)+1);Matter.Body.scale(this.sword,t*(1/(null==this.sword.scale?1:this.sword.scale)),t*(1/(null==this.sword.scale?1:this.sword.scale)),e.position),this.sword.scale=t}this.angle>-Math.PI/2&&this.angle<Math.PI/2?Matter.Body.setAngularVelocity(this.sword,.1*Math.PI):Matter.Body.setAngularVelocity(this.sword,.1*-Math.PI),tech.sizeIllusion&&(player.force.x+=Math.cos(m.angle)*player.mass/500,player.force.y+=Math.sin(m.angle)*player.mass/500),!this.constraint&&m.angle>-Math.PI/2&&m.angle<Math.PI/2?(this.constraint=Constraint.create({pointA:player.position,bodyB:this.sword,pointB:{x:-9,y:e.position.y-this.sword.position.y},stiffness:tech.infinityEdge?.05:.1,damping:.001815,length:0}),Composite.add(engine.world,this.constraint)):this.constraint||(this.constraint=Constraint.create({pointA:player.position,bodyB:this.sword,pointB:{x:9,y:e.position.y-this.sword.position.y},stiffness:tech.infinityEdge?.05:.1,damping:.001815,length:0}),Composite.add(engine.world,this.constraint))}else this.sword&&(tech.isEnergyHealth&&(m.energy=.01,m.immuneCycle=m.cycle+30),this.cycle=0,Matter.Body.setAngularVelocity(this.sword,0),player.force.x*=.01,player.force.y*=.01,Composite.remove(engine.world,this.sword),this.sword.parts.forEach(e=>{Composite.remove(engine.world,e);const t=bullet.indexOf(e);-1!==t&&bullet.splice(t,1)}),this.sword=void 0,this.constraint&&(Composite.remove(engine.world,this.constraint),this.constraint=void 0),this.bladeTrails=[],m.fireCDcycle=0)},createAndSwingSword(e=player.position.x,t=player.position.y,a=m.angle){const o=150,s=Bodies.rectangle(e,t,20,o,spawn.propsIsNotHoldable);bullet[bullet.length]=s,s.customName="handle",bullet[bullet.length-1].do=()=>{};const n=[{x:e,y:t+75+20},{x:e+15,y:t+75},{x:e,y:t+75-20},{x:e-15,y:t+75}],l=Bodies.fromVertices(e,t+75,n,spawn.propsIsNotHoldable);bullet[bullet.length]=l,bullet[bullet.length-1].do=()=>{},tech.soundSword&&(bullet[bullet.length-1].draw=()=>{});const i=100*(tech.soundSword?3:1),c=20*(tech.soundSword?3:1),p=[];if(a>-Math.PI/2&&a<Math.PI/2)for(let a=0;a<15;a++){const o=e+a*(i/20),s=t-75-a*(c/4.5)*5,n=[{x:o,y:s-c/2},{x:o+i/2,y:s+c/2},{x:o-i/2,y:s+c/2},{x:o,y:s-c/2+10}],l=Bodies.fromVertices(o,s,n,spawn.propsIsNotHoldable);bullet[bullet.length]=l,bullet[bullet.length-1].do=()=>{},tech.soundSword&&(bullet[bullet.length-1].draw=()=>{}),Matter.Body.rotate(l,-Math.sin(a*(Math.PI/270)*15)),p.push(l)}else for(let a=0;a<15;a++){const o=e-a*(i/20),s=t-75-a*(c/4.5)*5,n=[{x:o,y:s-c/2},{x:o+i/2,y:s+c/2},{x:o-i/2,y:s+c/2},{x:o,y:s-c/2+10}],l=Bodies.fromVertices(o,s,n,spawn.propsIsNotHoldable);bullet[bullet.length]=l,bullet[bullet.length-1].do=()=>{},tech.soundSword&&(bullet[bullet.length-1].draw=()=>{}),Matter.Body.rotate(l,Math.sin(a*(Math.PI/270)*15)),p.push(l)}p.push(l);const r=Body.create({parts:[s,...p]});return Composite.add(engine.world,r),Matter.Body.setPosition(r,{x:e,y:t}),r.collisionFilter.category=cat.bullet,r.collisionFilter.mask=cat.mobBullet|cat.powerup|cat.mob,Body.scale(r,-1,1,{x:e,y:t}),{sword:r,bladeSegments:p}},renderDefault(){if(this.sword){for(let e=0;e<this.bladeSegments.length;e++){const t=this.bladeSegments[e],a=this.bladeTrails[e]||[],o=t.vertices.map(e=>({x:e.x,y:e.y}));a.push(o),a.length>10&&a.shift(),this.bladeTrails[e]=a}for(let e=0;e<this.bladeTrails.length;e++){const t=this.bladeTrails[e],a=1/t.length;let o=0;for(let e=0;e<t.length;e++){const s=t[e];ctx.beginPath(),ctx.moveTo(s[0].x,s[0].y);for(let e=1;e<s.length;e++)ctx.lineTo(s[e].x,s[e].y);if(o+=a,ctx.closePath(),tech.isEnergyHealth){const e=m.fieldMeterColor,t=e[1],a=e[2],s=e[3],n=`#${t}${t}${a}${a}${s}${s}${Math.round(255*o).toString(16).padStart(2,"0")}`;ctx.fillStyle=n}else ctx.fillStyle=`rgba(220, 20, 60, ${o})`;ctx.fill()}}for(let e=0;e<this.bladeSegments.length;e++){ctx.beginPath(),ctx.lineJoin="miter",ctx.miterLimit=100,ctx.strokeStyle=tech.isEnergyHealth?m.fieldMeterColor:tech.isAmmoSword?"#c0c0c0":"crimson",ctx.lineWidth=5,ctx.fillStyle="black",ctx.moveTo(this.bladeSegments[e].vertices[0].x,this.bladeSegments[e].vertices[0].y);for(let t=0;t<this.bladeSegments[e].vertices.length;t++)ctx.lineTo(this.bladeSegments[e].vertices[t].x,this.bladeSegments[e].vertices[t].y);ctx.closePath(),ctx.stroke(),ctx.fill(),ctx.lineJoin="round",ctx.miterLimit=10}}},collision(){if(this.sword){for(let e=0;e<mob.length;e++)if(Matter.Query.collides(this.sword,[mob[e]]).length>0){const t=Math.sqrt(this.sword.speed)*(tech.sizeIllusion?1.1:1)*(tech.isStabSword?1.5:1)*(tech.infinityEdge?1.1:1);tech.soundSword||(m.health<m.maxHealth?tech.isEnergyHealth?m.energy+=.04:(m.health+=.01*(t-mob[e].health),m.displayHealth()):tech.isEnergyHealth?m.energy+=.04:(m.health=m.maxHealth,m.displayHealth())),mob[e].damage(t,!0),simulation.drawList.push({x:mob[e].position.x,y:mob[e].position.y,radius:Math.abs(40*Math.log(t*this.sword.speed)*mob[e].damageReduction+3),color:tech.soundSword?"rgba(0, 0, 0, 0.3)":simulation.mobDmgColor,time:simulation.drawTime});break}Matter.Query.collides(this.sword,[e]).length>0&&m.takeDamage(-.0142)}}};b.guns.push(t);const a=b.guns.filter((e,t,a)=>t===a.findIndex(t=>t.name===e.name));b.guns=a}simulation.inGameConsole("<strong>arena</strong> by <span class='color-var'>Richard0820</span>");let p=0,{sword:r,bladeSegments:h}=function(e=0,t=0){const a=150,o=Bodies.rectangle(e,t,20,a,spawn.propsIsNotHoldable);bullet[bullet.length]=o,o.customName="handle",bullet[bullet.length-1].do=()=>{};const s=[{x:e,y:t+75+20},{x:e+15,y:t+75},{x:e,y:t+75-20},{x:e-15,y:t+75}],n=Bodies.fromVertices(e,t+75,s,spawn.propsIsNotHoldable);bullet[bullet.length]=n,bullet[bullet.length-1].do=()=>{},tech.soundSword&&(bullet[bullet.length-1].draw=()=>{});const l=100*(tech.soundSword?3:1),i=20*(tech.soundSword?3:1),c=[];for(let a=0;a<15;a++){const o=e-a*(l/20),s=t-75-a*(i/4.5)*5,n=[{x:o,y:s-i/2},{x:o+l/2,y:s+i/2},{x:o-l/2,y:s+i/2},{x:o,y:s-i/2+10}],p=Bodies.fromVertices(o,s,n,spawn.propsIsNotHoldable);bullet[bullet.length]=p,bullet[bullet.length-1].do=()=>{},tech.soundSword&&(bullet[bullet.length-1].draw=()=>{}),Matter.Body.rotate(p,Math.sin(a*(Math.PI/270)*15)),c.push(p)}c.push(n);const p=Body.create({parts:[o,...c]});return Composite.add(engine.world,p),Matter.Body.setPosition(p,{x:e,y:t}),p.collisionFilter.category=cat.bullet,p.collisionFilter.mask=cat.mobBullet|cat.powerup|cat.mob,Body.scale(p,-1,1,{x:e,y:t}),Body.rotate(p,Math.PI+Math.PI/15),{sword:p,bladeSegments:c}}();const d=level.door(-950,-3e3,400,4e3,2e3,10),w=level.door(550,-3e3,400,4e3,2e3,10);level.setPosToSpawn(-7900,-2550),level.exit.x=7875,level.exit.y=-2530,spawn.mapRect(level.enter.x,level.enter.y+20,100,20),spawn.mapRect(level.exit.x,level.exit.y+20,100,20),level.defaultZoom=2e3,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#987654",color.map="#765432",color.block="#876543",d.isClosing=!0,w.isClosing=!0;for(let e=0;e<5;e++)powerUps.spawn(-6075,-2e3,"heal");let y=[],x=!1;class u{constructor(){this.x=player.position.x+1e4*Math.random()-5e3,this.y=player.position.y+1e4*Math.random()-5e3,this.vx=0,this.vy=0,this.accelX=0,this.accelY=0,this.life=2e3,this.alpha=1,this.size=8}update(){this.vx+=this.accelX,this.vy+=this.accelY,this.x+=this.vx,this.y+=this.vy,(this.x<player.position.x-5e3||this.x>player.position.x+5e3||this.y<player.position.y-5e3||this.y>player.position.y+5e3)&&this.reset()}reset(){this.x=player.position.x+1e4*Math.random()-5e3,this.y=player.position.y+1e4*Math.random()-5e3,this.vx=0,this.vy=0,this.life=1e3*Math.random()+1e3,this.maxLife=this.life}draw(){ctx.beginPath(),ctx.fillStyle=`rgba(255, 255, 255, ${this.alpha})`,ctx.arc(this.x,this.y,this.size,0,2*Math.PI),ctx.fill(),ctx.closePath()}isAlive(){return this.life>=0}}let R=new class{constructor(){this.particles=[],this.updateHandler=void 0}addParticle(e){this.particles.push(e)}update(e=0){this.particles.forEach(t=>{t.update(e),this.updateHandler&&this.updateHandler(t)})}onUpdate(e){this.updateHandler=e}};for(let e=0;e<200;e++){let e=new u;R.addParticle(e)}R.onUpdate(e=>{e.isAlive()||e.reset(),e.life-=10,e.accelX=.02*(Math.random()-.5),e.accelY=.02*(Math.random()-.5),e.life>=e.maxLife/2?e.alpha=1-e.life/e.maxLife:e.alpha=e.life/e.maxLife,e.update()});for(let e=0;e<R.particles.length;e++)R.particles[e].life=0;level.custom=()=>{R.update(),R.particles.forEach(e=>e.draw());for(let e=0,t=b.guns.length;e<t;e++)"sword"===b.guns[e].name&&b.guns[e].have&&(x=!0);Matter.Body.setPosition(r,{x:-3950,y:-275-50*Math.sin(simulation.cycle/100)}),Matter.Body.setAngularVelocity(r,0),d.openClose(),w.openClose(),(Matter.Collision.collides(r,player)&&p<=0||x)&&(y=[],h=[],Composite.remove(engine.world,r),r.parts.forEach(e=>{Composite.remove(engine.world,e);const t=bullet.indexOf(e);-1!==t&&bullet.splice(t,1)}),b.giveGuns("sword"),d.isClosing=!1,w.isClosing=!1,p++);const e=level.onLevel;if(level.exit.drawAndCheck(),level.enter.draw(),tech.isEnergyHealth){ctx.beginPath();const e=ctx.createRadialGradient(-3950,0,5,-3950,0,350+.1*Math.sin(.15*simulation.cycle));e.addColorStop(0,m.fieldMeterColor),e.addColorStop(.9,"transparent"),ctx.fillStyle=e,ctx.strokeStyle="transparent",ctx.fillRect(-4e3,-350,100,350),ctx.fill(),ctx.stroke()}else{ctx.beginPath();const e=ctx.createLinearGradient(-3500,0,-3500,.1*Math.sin(.15*simulation.cycle)-350);e.addColorStop(0,"crimson"),e.addColorStop(.9,"transparent"),ctx.fillStyle=e,ctx.strokeStyle="transparent",ctx.fillRect(-4e3,-350,100,350),ctx.fill(),ctx.stroke()}if(player.position.x>-4e3&&player.position.x<-3900&&player.position.y>-350&&player.position.y<0&&(player.force.y-=.03),level.onLevel!==e&&simulation.clearNow&&!c){b.removeGun("sword");for(let e=0,t=b.guns.length;e<t;e++)if("sword"===b.guns[e].name){b.guns.splice(e,1);break}setTimeout(()=>{simulation.inGameConsole('If you want to keep this sword, visit <a href="https://github.com/Whyisthisnotavalable/n-scythe">https://github.com/Whyisthisnotavalable/n-scythe</a>. The sword is there.')},1e3)}for(let e=0;e<h.length;e++){const t=h[e],a=y[e]||[],o=t.vertices.map(e=>({x:e.x,y:e.y}));a.push(o),a.length>10&&a.shift(),y[e]=a}for(let e=0;e<y.length;e++){const t=y[e],a=1/t.length;let o=0;for(let e=0;e<t.length;e++){const s=t[e];ctx.beginPath(),ctx.moveTo(s[0].x,s[0].y);for(let e=1;e<s.length;e++)ctx.lineTo(s[e].x,s[e].y);if(o+=a,ctx.closePath(),tech.isEnergyHealth){const e=m.fieldMeterColor,t=e[1],a=e[2],s=e[3],n=`#${t}${t}${a}${a}${s}${s}${Math.round(255*o).toString(16).padStart(2,"0")}`;ctx.fillStyle=n}else ctx.fillStyle=`rgba(220, 20, 60, ${o})`;ctx.fill()}}for(let e=0;e<h.length;e++){ctx.beginPath(),ctx.lineJoin="miter",ctx.miterLimit=100,ctx.strokeStyle=tech.isEnergyHealth?m.fieldMeterColor:tech.isAmmoSword?"#c0c0c0":"crimson",ctx.lineWidth=5,ctx.fillStyle="black",ctx.moveTo(h[e].vertices[0].x,h[e].vertices[0].y);for(let t=0;t<h[e].vertices.length;t++)ctx.lineTo(h[e].vertices[t].x,h[e].vertices[t].y);ctx.closePath(),ctx.stroke(),ctx.fill(),ctx.lineJoin="round",ctx.miterLimit=10}if(h.length){ctx.beginPath(),ctx.lineJoin="miter",ctx.miterLimit=100,ctx.strokeStyle=tech.isEnergyHealth?m.fieldMeterColor:tech.isAmmoSword?"#c0c0c0":"crimson",ctx.lineWidth=5,ctx.fillStyle="black",ctx.moveTo(r.parts[1].vertices[0].x,r.parts[1].vertices[0].y);for(let e=0;e<r.parts[1].vertices.length;e++)ctx.lineTo(r.parts[1].vertices[e].x,r.parts[1].vertices[e].y);ctx.closePath(),ctx.fill(),ctx.lineJoin="round",ctx.miterLimit=10}},level.customTopLayer=()=>{},simulation.ephemera.push({death:!1,pwuspawn:0,do(){if(!0===this.death&&(b.explosion(i.pos,200*Math.random(),"#000000"),setTimeout(()=>{0===this.pwuspawn&&(powerUps.spawnBossPowerUp(i.pos.x,i.pos.y),this.pwuspawn++),simulation.removeEphemera(this),simulation.removeEphemera("genisisScythe",!0)},1e3)),i.health>=0){i.health<i.maxHealth&&i.health++;const t=Matter.Vector.magnitudeSquared(Matter.Vector.sub(e.position,player.position)),a=Math.sqrt(t)/60;i.alive=!0,i.targetX=m.pos.x+player.velocity.x*a,i.targetY=m.pos.y+player.velocity.y*a}else this.death=!0,i.alive=!1;if(i.alive?(i.cycle++,i.move(),i.lookDefault(),i.drawDefault(),i.drawHealth(),e.force.y+=i.mass*simulation.g,i.setFillColors(),l.right=i.angle>2*-Math.PI/5&&i.angle<2*Math.PI/5,l.left=i.angle>3*Math.PI/5||i.angle<3*-Math.PI/5,l.down=i.angle>3*Math.PI/10&&i.angle<7*Math.PI/10,(Matter.Query.collides(e,body).length||Matter.Query.collides(o,map).length||Matter.Query.collides(n,map).length&&!l.down)&&i.buttonCD_jump<i.cycle&&i.jump(),l.up=i.angle>6*-Math.PI/10&&i.angle<4*-Math.PI/10,i.onGround?i.groundControl():i.airControl(),i.pos.y>simulation.fallHeight&&Matter.Body.setPosition(e,{x:level.exit.x,y:level.exit.y})):(e.collisionFilter.mask=cat.map|cat.body,Matter.Body.setPosition(e,{x:0,y:0})),simulation.testing){ctx.beginPath();let e=t.vertices;ctx.moveTo(e[0].x,e[0].y);for(let t=1;t<e.length;++t)ctx.lineTo(e[t].x,e[t].y);ctx.lineTo(e[0].x,e[0].y),ctx.fillStyle="rgba(255, 0, 0, 0.5)",ctx.fill(),ctx.beginPath(),e=a.vertices,ctx.moveTo(e[0].x,e[0].y);for(let t=1;t<e.length;++t)ctx.lineTo(e[t].x,e[t].y);ctx.lineTo(e[0].x,e[0].y),ctx.fillStyle="rgba(0, 255, 255, 0.25)",ctx.fill(),ctx.beginPath(),e=o.vertices,ctx.moveTo(e[0].x,e[0].y);for(let t=1;t<e.length;++t)ctx.lineTo(e[t].x,e[t].y);ctx.lineTo(e[0].x,e[0].y),ctx.fillStyle="rgba(255, 255, 0, 0.4)",ctx.fill(),ctx.beginPath(),e=s.vertices,ctx.moveTo(e[0].x,e[0].y);for(let t=1;t<e.length;++t)ctx.lineTo(e[t].x,e[t].y);ctx.lineTo(e[0].x,e[0].y),ctx.fillStyle="rgba(0, 0, 255, 0.25)",ctx.fill(),ctx.beginPath(),e=n.vertices,ctx.moveTo(e[0].x,e[0].y);for(let t=1;t<e.length;++t)ctx.lineTo(e[t].x,e[t].y);ctx.lineTo(e[0].x,e[0].y),ctx.fillStyle="rgba(255, 0, 255, 0.25)",ctx.fill()}Events.on(engine,"collisionStart",function(t){i.genisisOnGroundCheck(t),function(t){const s=t.pairs;for(let c=0,p=s.length;c!=p;c++){for(let r=0;r<bullet.length;r++){if(s[c].bodyA===bullet[r]){n(s[c].bodyB);break}if(s[c].bodyB===bullet[r]){n(s[c].bodyA);break}function n(e){if(i.immuneCycle<i.cycle&&(e===a||e===o)){let e=Math.sqrt(Math.abs(25e-6*Math.sqrt(bullet[r].mass+125e-7*Math.sqrt(Vector.magnitude(bullet[r].velocity)))));return void i.damage(e)}}}for(let m=0;m<mob.length;m++)if(mob[m].alive){if(s[c].bodyA===mob[m]){l(s[c].bodyB);break}if(s[c].bodyB===mob[m]){l(s[c].bodyA);break}function l(t){if(i.immuneCycle<i.cycle&&(t===a||t===o)&&!mob[m].isSlowed&&!mob[m].isStunned){let t=Math.max(.025*Math.sqrt(mob[m].mass),.05);if(tech.isRewindAvoidDeath&&i.energy>.85*Math.min(1,i.maxEnergy)&&t>.01)return void i.damage(t);if(i.damage(t),tech.isCollisionRealitySwitch&&i.alive&&(i.switchWorlds(),simulation.trails(),simulation.inGameConsole(`simulation.amplitude <span class='color-symbol'>=</span> ${Math.random()}`)),tech.isPiezo&&(i.energy+=20.48),tech.isCouplingNoHit&&i.coupling>0){i.couplingChange(-3);const e=Vector.rotate({x:1,y:0},6.28*Math.random());let t=Vector.add(i.pos,Vector.mult(e,17));simulation.drawList.push({x:t.x,y:t.y,radius:22,color:"rgba(0, 171, 238, 0.33)",time:8}),t=Vector.add(i.pos,Vector.mult(e,60)),simulation.drawList.push({x:t.x,y:t.y,radius:18,color:"rgba(0, 171, 238, 0.5)",time:16}),t=Vector.add(i.pos,Vector.mult(e,100)),simulation.drawList.push({x:t.x,y:t.y,radius:14,color:"rgba(0, 171, 238, 0.6)",time:24}),t=Vector.add(i.pos,Vector.mult(e,135)),simulation.drawList.push({x:t.x,y:t.y,radius:10,color:"rgba(0, 171, 238, 0.7)",time:32})}mob[m].onHit&&mob[m].onHit(),i.immuneCycle<i.cycle+i.collisionImmuneCycles&&(i.immuneCycle=i.cycle+i.collisionImmuneCycles);let a=Math.atan2(e.position.y-mob[m].position.y,e.position.x-mob[m].position.x);Matter.Body.setVelocity(e,{x:e.velocity.x+8*Math.cos(a),y:e.velocity.y+8*Math.sin(a)}),Matter.Body.setVelocity(mob[m],{x:mob[m].velocity.x-8*Math.cos(a),y:mob[m].velocity.y-8*Math.sin(a)}),tech.isAnnihilation&&!mob[m].shield&&!mob[m].isShielded&&!mob[m].isBoss&&mob[m].isDropPowerUp&&i.energy>.08&&mob[m].damageReduction>0?(i.energy-=.08,i.immuneCycle===i.cycle+i.collisionImmuneCycles&&(i.immuneCycle=0),mob[m].death(),simulation.drawList.push({x:s[c].activeContacts[0].vertex.x,y:s[c].activeContacts[0].vertex.y,radius:500*Math.sqrt(t),color:"rgba(255,0,255,0.2)",time:simulation.drawTime})):simulation.drawList.push({x:s[c].activeContacts[0].vertex.x,y:s[c].activeContacts[0].vertex.y,radius:200*Math.sqrt(t),color:simulation.mobDmgColor,time:simulation.drawTime})}}}}}(t)}),Events.on(engine,"collisionActive",function(e){i.genisisOnGroundCheck(e)}),Events.on(engine,"collisionEnd",function(e){i.genisisOffGroundCheck(e)})}});let f={isLongBlade:!0,isScytheRange:!0,scytheRange:3,isScytheRad:!1,scytheRad:0,isDoubleScythe:!1,isPhaseScythe:!1,isMeleeScythe:!1,isStunScythe:!1};simulation.ephemera.push({name:"genisisScythe",cycle:0,scythe:void 0,bladeSegments:void 0,bladeTrails:[],angle:0,constraint:void 0,fireCD:0,do(){if(x){if(i.health<500&&i.health>200?f={isLongBlade:!0,isScytheRange:!0,scytheRange:3,isScytheRad:!1,scytheRad:1,isDoubleScythe:!0,isPhaseScythe:!1,isMeleeScythe:!1,isStunScythe:!1}:i.health<200&&i.health>50?f={isLongBlade:!0,isScytheRange:!0,scytheRange:3,isScytheRad:!0,scytheRad:1,isDoubleScythe:!0,isPhaseScythe:!0,isMeleeScythe:!0,isStunScythe:!0}:i.health<50&&(f={isLongBlade:!0,isScytheRange:!0,scytheRange:9,isScytheRad:!0,scytheRad:6,isDoubleScythe:!0,isPhaseScythe:!0,isMeleeScythe:!0,isStunScythe:!0}),i.cycle>this.fireCD&&!this.scythe&&(this.fireCD=i.cycle+30,this.scythe||(({scythe:this.scythe,bladeSegments:this.bladeSegments}=this.createAndSwingScythe()),this.angle=i.angle)),this.scythe&&i.cycle>this.cycle+30||!i.alive&&this.scythe?(Composite.remove(engine.world,this.scythe),this.scythe.parts.forEach(e=>{Composite.remove(engine.world,e);const t=bullet.indexOf(e);-1!==t&&bullet.splice(t,1)}),this.scythe=void 0,this.bladeTrails=[]):this.scythe&&!f.isMeleeScythe?(this.angle>-Math.PI/2&&this.angle<Math.PI/2?Matter.Body.setAngularVelocity(this.scythe,.15*Math.PI+(f.scytheRad?.1*f.scytheRad:0)):Matter.Body.setAngularVelocity(this.scythe,.15*-Math.PI-(f.scytheRad?.1*f.scytheRad:0)),Matter.Body.setVelocity(this.scythe,{x:30*Math.cos(this.angle),y:30*Math.sin(this.angle)})):this.scythe&&f.isMeleeScythe&&(this.angle>-Math.PI/2&&this.angle<Math.PI/2?Matter.Body.setAngularVelocity(this.scythe,.1*Math.PI-(f.isStunScythe?.1:0)):Matter.Body.setAngularVelocity(this.scythe,.1*-Math.PI+(f.isStunScythe?.1:0)),Matter.Body.setPosition(this.scythe,e.position)),this.scythe){for(let e=0;e<this.bladeSegments.length;e++){const t=this.bladeSegments[e],a=this.bladeTrails[e]||[],o=t.vertices.map(e=>({x:e.x,y:e.y}));a.push(o),a.length>10&&a.shift(),this.bladeTrails[e]=a}for(let e=0;e<this.bladeTrails.length;e++){const t=this.bladeTrails[e],a=1/t.length;let o=0;for(let e=0;e<t.length;e++){const s=t[e];ctx.beginPath(),ctx.moveTo(s[0].x,s[0].y);for(let e=1;e<s.length;e++)ctx.lineTo(s[e].x,s[e].y);o+=a,ctx.closePath(),ctx.fillStyle=`rgba(100, 20, 255, ${o})`,ctx.fill()}}for(let e=0;e<this.bladeSegments.length;e++){ctx.beginPath(),ctx.lineJoin="miter",ctx.miterLimit=100,ctx.strokeStyle="rgb(100, 20, 255)",ctx.lineWidth=5,ctx.fillStyle="black",ctx.moveTo(this.bladeSegments[e].vertices[0].x,this.bladeSegments[e].vertices[0].y);for(let t=0;t<this.bladeSegments[e].vertices.length;t++)ctx.lineTo(this.bladeSegments[e].vertices[t].x,this.bladeSegments[e].vertices[t].y);ctx.closePath(),ctx.stroke(),ctx.fill(),ctx.lineJoin="round",ctx.miterLimit=10}}if(this.scythe){for(let e=0;e<mob.length;e++)if(Matter.Query.collides(this.scythe,[mob[e]]).length>0){const t=.3276*(f.isLongBlade?1.3:1)*(f.scytheRange?1.15*f.scytheRange:1)*(f.isDoubleScythe?.9:1)*(f.scytheRad?1.5*f.scytheRad:1);if(mob[e].damage(t,!0),simulation.drawList.push({x:mob[e].position.x,y:mob[e].position.y,radius:50*Math.sqrt(t),color:simulation.mobDmgColor,time:simulation.drawTime}),!f.isMeleeScythe){const t=Math.atan2(mob[e].position.y-this.scythe.position.y,mob[e].position.x-this.scythe.position.x);this.scythe.force.x+=2*Math.cos(t),this.scythe.force.y+=2*Math.sin(t)}f.isStunScythe&&mobs.statusStun(mob[e],90);break}if(Matter.Query.collides(this.scythe,[player]).length>0&&m.immuneCycle<m.cycle){const e=.02*(f.isLongBlade?1.3:1)*(f.scytheRange?1.15*f.scytheRange:1)*(f.isDoubleScythe?.9:1)*(f.scytheRad?1.5*f.scytheRad:1);if(m.takeDamage(e),m.immuneCycle=m.cycle+10,simulation.drawList.push({x:player.position.x,y:player.position.y,radius:50*Math.sqrt(e),color:simulation.mobDmgColor,time:simulation.drawTime}),!f.isMeleeScythe){const e=Math.atan2(player.position.y-this.scythe.position.y,player.position.x-this.scythe.position.x);this.scythe.force.x+=2*Math.cos(e),this.scythe.force.y+=2*Math.sin(e)}}}}},createAndSwingScythe(t=e.position.x,a=e.position.y,o=i.angle){this.cycle=i.cycle+60+6*f.scytheRange;const s=200+(f.isLongBlade?30:0)+(f.isMeleeScythe?200:0),n=Bodies.rectangle(t,a,20,s,spawn.propsIsNotHoldable);bullet[bullet.length]=n,bullet[bullet.length-1].do=()=>{};const l=20,c=10+(f.isLongBlade?1:0)+(f.isMeleeScythe?3:0),p=[];if(f.isDoubleScythe){for(let e=0;e<c;e++){const o=t-10+50*e-50*(e/(c-1)*5.5),n=a+s/2-e*(l/3**e),i=[{x:o,y:n-10},{x:o+50,y:n+10},{x:o-50,y:n+10},{x:o,y:n-10+10}],r=Bodies.fromVertices(o,n,i,spawn.propsIsNotHoldable);bullet[bullet.length]=r,bullet[bullet.length-1].do=()=>{},Matter.Body.rotate(r,-Math.sin(e*(Math.PI/180)*5)),p.push(r)}for(let e=0;e<c;e++){const o=t+10-50*e+50*(e/(c-1)*5.5),n=a-s/2-e*(l/3**e),i=[{x:o,y:n-10},{x:o+50,y:n+10},{x:o-50,y:n+10},{x:o,y:n-10+10}],r=Bodies.fromVertices(o,n,i,spawn.propsIsNotHoldable);bullet[bullet.length]=r,bullet[bullet.length-1].do=()=>{},Matter.Body.rotate(r,-Math.sin(e*(Math.PI/180)*5)+Math.PI),p.push(r)}}else for(let e=0;e<c;e++){const o=t-10+50*e-50*(e/(c-1)*5.5),n=a+s/2-e*(l/3**e),i=[{x:o,y:n-10},{x:o+50,y:n+10},{x:o-50,y:n+10},{x:o,y:n-10+10}],r=Bodies.fromVertices(o,n,i,spawn.propsIsNotHoldable);bullet[bullet.length]=r,bullet[bullet.length-1].do=()=>{},Matter.Body.rotate(r,-Math.sin(e*(Math.PI/180)*5)),p.push(r)}const r=Body.create({parts:[n,...p]});return Composite.add(engine.world,r),Matter.Body.setPosition(r,{x:t,y:a}),r.collisionFilter.category=cat.body,r.collisionFilter.mask=cat.mobBullet|cat.player,f.isMeleeScythe||setTimeout(()=>{r.collisionFilter.mask=cat.mobBullet|cat.mob|cat.player},1e3),o>-Math.PI/2&&o<Math.PI/2&&Body.scale(r,-1,1,{x:t,y:a}),r.frictionAir-=.01,{scythe:r,bladeSegments:p}}}),spawn.mapRect(-1e4,0,2e4,2e3),spawn.mapRect(-1e4,-1e4,2e3,1e4),spawn.mapRect(8e3,-1e4,2e3,1e4),spawn.mapRect(-1e4,-1e4,2e4,2e3),spawn.spawnStairs(8e3,0,15,2500,2500,!0),spawn.spawnStairs(-8e3,0,15,2500,2500,!1),spawn.mapRect(-4e3,-10,100,20),spawn.mapRect(4e3,-10,100,20),spawn.mapRect(-1e3,-1e4,2e3,8e3)},soft(){simulation.inGameConsole('<img src="https://raw.githubusercontent.com/Whyisthisnotavalable/image-yy/main/Hotpot-removed.png" width="100" height="100" style="background-image: radial-gradient(circle, gray, black, transparent)">'),simulation.inGameConsole("<strong>soft</strong> by <span class='color-var'>Richard0820</span>"),simulation.inGameConsole("<em>The lasers deal less damage the higher level you are</em>");const e=[];e.push(level.portal({x:-1525,y:-250},Math.PI/2,{x:1100,y:-1025},Math.PI/2));const t={createCloth(e,t,a,o,s,n=!1,l=!1,i,c=!0,p=.001){const r=[],m=[],h=[],d=a,w=a,y=Math.ceil(s/w),x=Math.ceil(o/d);for(let a=0;a<y;a++)for(let o=0;o<x;o++){const s=e+o*d+d/2,n=t+a*w+w/2,l=Matter.Bodies.circle(s,n,(d+w)/4,i);l.collisionFilter.category=cat.body,l.collisionFilter.mask=c?cat.player|cat.body|cat.bullet|cat.mob|cat.mobBullet:cat.body|cat.bullet|cat.mob|cat.mobBullet,l.classType="body",Composite.add(engine.world,l),r.push(l)}for(let e=0;e<y;e++)for(let t=0;t<x;t++){const a=e*x+t;if(t<x-1){const o=e*x+(t+1),s=Constraint.create({bodyA:r[a],bodyB:r[o],stiffness:.06,damping:.001});Composite.add(engine.world,s),m.push(s)}if(e<y-1){const o=(e+1)*x+t,s=Constraint.create({bodyA:r[a],bodyB:r[o],stiffness:.06,damping:.001});Composite.add(engine.world,s),m.push(s)}}for(let e=0;e<y-1;e++)for(let t=0;t<x-1;t++){const a=r[e*x+t],o=r[(e+1)*x+t+1],s=Constraint.create({bodyA:a,bodyB:o,stiffness:.02});m.push(s)}for(let e=0;e<y-1;e++)for(let t=1;t<x;t++){const a=r[e*x+t],o=r[(e+1)*x+t-1],s=Constraint.create({bodyA:a,bodyB:o,stiffness:.02});m.push(s)}if(l)for(let e=0;e<r.length;e++){const t=r[e],a=t.position.x+d/2,o=t.position.y+w/2,s=p*((e+1)%x===0||e%x===0?100:1),n=Constraint.create({bodyA:t,pointB:{x:a,y:o},stiffness:s,length:0});Composite.add(engine.world,n),h.push(n)}if(n)for(let e=0;e<r.length;e++){const t=Constraint.create({bodyA:r[e],pointB:player.position,stiffness:5e-4,length:0});Composite.add(engine.world,t)}return{bodies:r,constraints:m,otherCons:h}},clothOptions:{frictionAir:.005},isOuterBoundary(e,t){const a=[{x:e.position.x+1,y:e.position.y},{x:e.position.x-1,y:e.position.y},{x:e.position.x,y:e.position.y+1},{x:e.position.x,y:e.position.y-1}];for(let e=0;e<a.length;e++){const o=a[e];if(!t.some(e=>e.position.x===o.x&&e.position.y===o.y))return!0}return!1},draw(e){ctx.beginPath(),ctx.lineWidth=2,ctx.strokeStyle="rgba(0,0,0,0.3)",ctx.fillStyle="black";for(let t=0,a=e.constraints.length;t<a;++t){const a=e.constraints[t];ctx.moveTo(a.bodyA.position.x,a.bodyA.position.y),ctx.lineTo(a.bodyB.position.x,a.bodyB.position.y)}ctx.closePath(),ctx.fill(),ctx.stroke()},addGravity(e,t){for(var a=0;a<e.length;a++)e[a].force.y+=e[a].mass*t},gravity(e){this.addGravity(e.bodies,simulation.g)},breaker(e,t=.5){const a=e.constraints.length,o=Math.ceil(a*t);for(let t=0;t<o;t++){const t=Math.floor(Math.random()*e.constraints.length);let a=e.constraints.splice(t,1)[0];Composite.remove(engine.world,a)}},destroyer(e,t=.99999){const a=e.otherCons.length,o=Math.ceil(a*t);for(let t=0;t<o;t++){const t=Math.floor(Math.random()*e.otherCons.length);let a=e.otherCons.splice(t,1)[0];Composite.remove(engine.world,a)}},annihilate(e){const t=e.bodies.length;for(let a=0;a<t;a++){const t=e.bodies[a];Composite.remove(engine.world,t)}e.bodies.length=0}},a=[];a.push(t.createCloth(-100,0,50,1e3,300,!1,!0,t.clothOptions,!0)),a.push(t.createCloth(-2e3,2375,50,1525,200,!1,!0,t.clothOptions,!0)),a.push(t.createCloth(-3950,125,50,1800,125,!1,!0,t.clothOptions,!0));const o={lasers(e,t){const a=function(e,t,a){for(let o=0;o<a.length;++o){let s=a[o].vertices;const n=s.length-1;for(let l=0;l<n;l++)if(results=simulation.checkLineIntersection(e,t,s[l],s[l+1]),results.onLine1&&results.onLine2){const t=e.x-results.x,n=e.y-results.y,i=t*t+n*n;i<best.dist2&&(!a[o].mob||a[o].alive)&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[l],v2:s[l+1]})}if(results=simulation.checkLineIntersection(e,t,s[0],s[n]),results.onLine1&&results.onLine2){const t=e.x-results.x,l=e.y-results.y,i=t*t+l*l;i<best.dist2&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[0],v2:s[n]})}}};best={x:null,y:null,dist2:1/0,who:null,v1:null,v2:null};const o={x:e.x+7e3*Math.cos(t),y:e.y+7e3*Math.sin(t)};if(a(e,o,map),a(e,o,body),m.isCloak||a(e,o,[playerBody,playerHead]),best.who&&(best.who===playerBody||best.who===playerHead)&&m.immuneCycle<m.cycle){m.immuneCycle=m.cycle+m.collisionImmuneCycles+60;const e=.5/spawn.dmgToPlayerByLevelsCleared();m.takeDamage(e),simulation.drawList.push({x:best.x,y:best.y,radius:1500*e,color:"rgba(80,0,255,0.5)",time:20})}best.dist2===1/0&&(best=o),ctx.moveTo(e.x,e.y),ctx.lineTo(best.x,best.y)},laserBoss(e,t,a=30){mobs.spawn(e,t,6,a,"#f00");let o=mob[mob.length-1];setTimeout(()=>{o.constraint=Constraint.create({pointA:{x:o.position.x,y:o.position.y},bodyB:o,stiffness:1,damping:1}),Composite.add(engine.world,o.constraint)},2e3),o.count=0,o.frictionAir=.03,spawn.spawnOrbitals(o,a+50+200*Math.random()),Matter.Body.setDensity(o,.03),o.damageReduction=.25,o.isBoss=!0,o.onDeath=function(){powerUps.spawnBossPowerUp(this.position.x,this.position.y)},o.rotateVelocity=-Math.min(.0045,.0015*simulation.accelScale*simulation.accelScale)*(level.levelsCleared>8?1:-1),o.do=function(){if(this.fill="#"+Math.random().toString(16).substr(-6),this.checkStatus(),!this.isStunned){let e=!1;for(let t=0;t<this.status.length;t++)if("slow"===this.status[t].type){e=!0;break}e||(this.count++,Matter.Body.setAngle(this,this.count*this.rotateVelocity),Matter.Body.setAngularVelocity(this,0)),ctx.beginPath();for(let e=0;e<this.vertices.length;e++)Math.sin(2*Math.PI*simulation.cycle/(50+e))>0&&this.lasers(this.vertices[e],Math.atan2(this.vertices[e].y-this.position.y,this.vertices[e].x-this.position.x));ctx.strokeStyle="#50f",ctx.lineWidth=1.5,ctx.setLineDash([70+300*Math.random(),55*Math.random()]),ctx.stroke(),ctx.setLineDash([]),ctx.lineWidth=20,ctx.strokeStyle="rgba(80,0,255,0.07)",ctx.stroke()}},o.lasers=function(e,t){const a=function(e,t,a){for(let o=0;o<a.length;++o){let s=a[o].vertices;const n=s.length-1;for(let l=0;l<n;l++)if(results=simulation.checkLineIntersection(e,t,s[l],s[l+1]),results.onLine1&&results.onLine2){const t=e.x-results.x,n=e.y-results.y,i=t*t+n*n;i<best.dist2&&(!a[o].mob||a[o].alive)&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[l],v2:s[l+1]})}if(results=simulation.checkLineIntersection(e,t,s[0],s[n]),results.onLine1&&results.onLine2){const t=e.x-results.x,l=e.y-results.y,i=t*t+l*l;i<best.dist2&&(best={x:results.x,y:results.y,dist2:i,who:a[o],v1:s[0],v2:s[n]})}}};best={x:null,y:null,dist2:1/0,who:null,v1:null,v2:null};const o={x:e.x+7e3*Math.cos(t),y:e.y+7e3*Math.sin(t)};if(a(e,o,map),a(e,o,body),m.isCloak||a(e,o,[playerBody,playerHead]),best.who&&(best.who===playerBody||best.who===playerHead)&&m.immuneCycle<m.cycle){m.immuneCycle=m.cycle+m.collisionImmuneCycles+60;const e=.5/spawn.dmgToPlayerByLevelsCleared();m.takeDamage(e),simulation.drawList.push({x:best.x,y:best.y,radius:1500*e,color:"rgba(80,0,255,0.5)",time:20})}best.dist2===1/0&&(best=o),ctx.moveTo(e.x,e.y),ctx.lineTo(best.x,best.y)}}};level.setPosToSpawn(-350,0),level.exit.x=1075,level.exit.y=20,spawn.mapRect(level.enter.x,level.enter.y+20,100,20),spawn.mapRect(level.exit.x,level.exit.y+20,100,20),level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#aaFFFF55",spawn.mapRect(900,50,425,250),spawn.mapRect(-475,2375,1800,250),spawn.mapRect(-4400,2375,2475,250),spawn.mapRect(-4400,-450,250,3075),spawn.mapRect(-4400,-450,2225,250),spawn.mapRect(-2425,-1300,250,1100),spawn.mapRect(-2425,-1300,3825,250),spawn.mapRect(1325,-1300,250,3925),spawn.mapRect(-875,-1300,250,1375),spawn.mapRect(-725,50,675,250),spawn.mapRect(-875,175,175,125);for(let e=0;e<6;e++)spawn.mapRect(-4175,2e3-375*e,50,125);spawn.mapRect(-3925,162.5,50,125),spawn.mapRect(-2175,162.5,50,125),spawn.mapRect(300,2025,250,600),spawn.mapRect(-2150,175,50,25),spawn.mapRect(-2150,250,50,25),spawn.mapRect(-900,175,50,25),spawn.mapRect(-900,250,50,25),spawn.mapRect(-1600,175,50,25),spawn.mapRect(-1500,175,50,25),spawn.mapRect(-1600,250,50,25),spawn.mapRect(-1500,250,50,25),spawn.mapRect(-1925,175,50,25),spawn.mapRect(-1925,250,50,25),spawn.mapRect(-1200,175,50,25),spawn.mapRect(-1200,250,50,25),spawn.bodyRect(-2125,200,1250,50),spawn.debris(425,200,50),spawn.debris(-650,2100,50),spawn.debris(-3e3,1925,50),spawn.debris(-3825,1550,50),spawn.debris(-2475,-50,50);body[body.length-1].restitution=.9,spawn.mapVertex(-1525,-437.5,"0 -400 -100 -300 -100 0 100 0 100 -300"),spawn.mapVertex(-3162.5,1087.5,"0 -800 -200 -600 -200 0 0 200 200 0 200 -600 0 200");const s=map[map.length-1];let n=0;level.custom=()=>{level.exit.drawAndCheck(),level.enter.draw(),player.position.x>425&&0===n&&(t.breaker(a[0],.7),t.destroyer(a[0]),n++),player.position.y>1300&&1===n&&(setTimeout(()=>{t.breaker(a[0],1),t.annihilate(a[0]),a.splice(0,1)},1e3),simulation.inGameConsole("Couldn't be so simple, could it?",2e3*Math.random()),n++)},level.customTopLayer=()=>{for(let t=0;t<e.length;t++)e[t][2].query(),e[t][3].query(),e[t][0].draw(),e[t][1].draw(),e[t][2].draw(),e[t][3].draw();ctx.beginPath(),Math.sin(2*Math.PI*simulation.cycle/50)>0&&(o.lasers(s.vertices[0],Math.atan2(s.vertices[0].y-s.position.y,s.vertices[0].x-s.position.x)),o.lasers(s.vertices[3],Math.atan2(s.vertices[3].y-s.position.y,s.vertices[3].x-s.position.x))),Math.sin(2*Math.PI*simulation.cycle/51)>0&&(o.lasers(s.vertices[1],Math.atan2(s.vertices[1].y-s.position.y,s.vertices[1].x-s.position.x)),o.lasers(s.vertices[4],Math.atan2(s.vertices[4].y-s.position.y,s.vertices[4].x-s.position.x))),Math.sin(2*Math.PI*simulation.cycle/52)>0&&(o.lasers(s.vertices[2],Math.atan2(s.vertices[2].y-s.position.y,s.vertices[2].x-s.position.x)),o.lasers(s.vertices[5],Math.atan2(s.vertices[5].y-s.position.y,s.vertices[5].x-s.position.x))),ctx.strokeStyle="#000",ctx.lineWidth=1.5,ctx.setLineDash([70+300*Math.random(),55*Math.random()]),ctx.stroke(),ctx.setLineDash([]),ctx.lineWidth=20,ctx.strokeStyle="rgba(0,0,0,0.07)",ctx.stroke();for(let e=0;e<a.length;e++)t.draw(a[e]),t.gravity(a[e]);ctx.beginPath(),ctx.fillStyle="rgba(69, 69, 69, 0.1)",ctx.rect(-475,175,425,2300),ctx.rect(900,175,425,2300),ctx.rect(-875,175,400,1e4),ctx.rect(-4200,-250,2025,2775),ctx.fill(),ctx.beginPath(),ctx.fillStyle=m.pos.x<-725&&m.pos.y<175?`rgba(68, 68, 68, ${Math.max(.3,Math.min((-775-m.pos.x)/100,.99))})`:color.map,ctx.rect(-875,50,175,150),ctx.fill()},o.laserBoss(-1525,1025),spawn.pulsar(-1525,-850),spawn.pulsar(1125,1600),spawn.pulsar(-250,1600),spawn.pulsar(-1450,1600),spawn.pulsar(-2950,1750),spawn.pulsar(-3375,1750),spawn.pulsar(-3825,1300),spawn.pulsar(-3825,850),spawn.pulsar(-3450,50),spawn.pulsar(-2925,50),spawn.pulsar(-1900,-400),spawn.pulsar(-1200,-400),powerUps.addResearchToLevel(),powerUps.directSpawn(-775,125,"tech"),!level.isNextLevelPowerUps&&powerUp[powerUp.length-1]&&(powerUp[powerUp.length-1].collisionFilter.mask=cat.map|cat.body|cat.powerUp),spawn.bodyRect(-875,75,25,100),body[body.length-1].collisionFilter.mask=cat.player|cat.map|cat.body|cat.bullet|cat.mob|cat.mobBullet|cat.powerUp},flappyGon(){level.announceMobTypes(),simulation.inGameConsole('<strong>flappy n-gon</strong> by <span style="font-weight: bold;color: purple;">Digin</span>'),setTimeout(()=>{simulation.inGameConsole("<b>gravity</b> is a <b>choice</b>")},1e3),setTimeout(()=>{simulation.inGameConsole("everyone will fly")},2e3),setTimeout(()=>{simulation.inGameConsole("<b>jump from the post and find out</b>")},3e3),level.setPosToSpawn(0,-50),level.exit.x=8600,level.exit.y=-1100,level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#55FF55";var e=level.hazard(-200,-10,9e3,10);const t=playerOffGroundCheck;playerOffGroundCheck=e=>{t(e),player.position.y<-300&&(m.onGround=!0)};const a=level.nextLevel;level.nextLevel=()=>{playerOffGroundCheck=t,level.nextLevel=a,a()},spawn.mapRect(level.enter.x,level.enter.y+20,100,20),spawn.mapRect(level.exit.x,level.exit.y+20,100,20),spawn.mapRect(level.exit.x-100,level.exit.y+40,200,100),spawn.mapRect(-200,0,9e3,100),spawn.mapRect(-200,-1500,9e3,100),spawn.mapRect(-200,-1500,100,1500),spawn.mapRect(8700,-1500,100,1500);const o=1500;for(var s=0;s<10;s++){var n=700+750*s,l=300+50*(10-s),i=o-l-400+400*(Math.random()-.5)-50*s;0==s&&(i=o-l-300),spawn.mapRect(n,-1500,100,i),spawn.mapRect(n,i+l-o,100,o-i-l),s<9?spawn.randomMob(n+300,-1400*Math.random()):spawn.randomLevelBoss(n+300,-1400*Math.random()),5==s&&spawn.secondaryBossChance(n+300,-1400*Math.random())}level.custom=()=>{level.exit.drawAndCheck(),player.onGround=!0,level.enter.draw()};level.customTopLayer=()=>{e.height+=.15,e.min.y-=.15,e.query()},powerUps.addResearchToLevel()},rings(){function e(e,t,a,o){let s=body[body.length]=Bodies.rectangle(e,t,a,o,{collisionFilter:{category:cat.map,mask:cat.body|cat.player|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet},inertia:1/0,isNotHoldable:!0,friction:1,frictionStatic:1,restitution:0,frictionAir:1,isStatic:!0});return Composite.add(engine.world,s),s.classType="body",body[body.length-1]}function t(t,a,o,s=200){var n=[void 0,void 0,void 0,void 0];n[0]=e(t-o/2-s,a-o/2-s,o,s),n[1]=e(t-o/2-s,a-o/2,s,o),n[2]=e(t-o/2,a+o/2-s,o,s),n[3]=e(t+o/2-s,a-o/2-s,s,o-2*s);let l={shape:n,x:t,y:a,r:0,rot(e){this.r=e;let t=0;for(let a of this.shape)t+=Math.PI/2,Matter.Body.setAngle(a,e),a==this.shape[3]?Matter.Body.setPosition(a,{x:this.x+Math.cos(e+t)*(o/2-s/2)-Math.cos(e+t+Math.PI/2)*s,y:this.y+Math.sin(e+t)*(o/2-s/2)-Math.sin(e+t+Math.PI/2)*s}):Matter.Body.setPosition(a,{x:this.x+Math.cos(e+t)*(o/2-s/2),y:this.y+Math.sin(e+t)*(o/2-s/2)})},rotBy(e){this.rot(this.r+e)}};return l.rot(0),l}level.announceMobTypes(),simulation.inGameConsole('<strong>rings</strong> by <span style="font-weight: bold;color: purple;">ThatLittleFrog</span>'),setTimeout(()=>{simulation.inGameConsole("<b>go up</b>")},2e3),level.setPosToSpawn(0,-2e3),level.exit.x=0,level.exit.y=-6400,spawn.mapRect(level.enter.x,level.enter.y+20,100,20),spawn.mapRect(level.exit.x,level.exit.y+20,100,20),level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#d8dadf";var a=t(level.enter.x,level.enter.y,1e3),o=t(level.enter.x,level.enter.y,2500),s=t(level.enter.x,level.enter.y,4e3),n=t(level.enter.x,level.enter.y,6e3);spawn.randomMob(level.enter.x+250,level.enter.y),spawn.randomMob(level.enter.x+1250,level.enter.y),spawn.randomMob(level.enter.x-1250,level.enter.y),spawn.randomMob(level.enter.x,level.enter.y+1250),spawn.randomMob(level.enter.x,level.enter.y-1250),spawn.randomMob(level.enter.x+1250,level.enter.y+500),spawn.randomMob(level.enter.x-1250,level.enter.y+500),spawn.randomMob(level.enter.x+500,level.enter.y+1250),spawn.randomMob(level.enter.x+500,level.enter.y-1250),spawn.randomMob(level.enter.x+2750,level.enter.y),spawn.randomMob(level.enter.x-2750,level.enter.y),spawn.randomMob(level.enter.x,level.enter.y+2750),spawn.randomMob(level.enter.x,level.enter.y-2750),spawn.randomMob(level.enter.x+2750,level.enter.y+500),spawn.randomMob(level.enter.x-2750,level.enter.y+500),spawn.randomMob(level.enter.x+500,level.enter.y+2750),spawn.randomMob(level.enter.x+500,level.enter.y-2750),spawn.randomLevelBoss(level.enter.x,level.enter.y-4250),spawn.secondaryBossChance(level.enter.x,level.enter.y+4250),level.custom=()=>{level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{a.rotBy(.01),o.rotBy(-.005),s.rotBy(.003),n.rotBy(-.002)},powerUps.addResearchToLevel()},trial(){simulation.inGameConsole("<strong>trial</strong> by <span class='color-var'>Cirryn and Tarantula Hawk</span>"),level.setPosToSpawn(0,-50),level.exit.x=4150,level.exit.y=-30,spawn.mapRect(level.enter.x,level.enter.y+20,100,20),spawn.mapRect(level.exit.x,level.exit.y+20,100,20),level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#d8dadf";const e=level.button(2e3,0),t=level.door(3930,-300,40,300,300,10);t.isClosing=!1;var a=!1;const o={assassin(e,t){mobs.spawn(e,t,3,30,"black");let a=mob[mob.length-1];Matter.Body.rotate(a,2*Math.PI*Math.random()),a.accelMag=8e-4*simulation.accelScale,a.torqueMagnitude=2e-5*a.inertia*(Math.random()>.5?-1:1),a.frictionStatic=0,a.frictionAir=.08,a.delay=120*simulation.CDScale,a.cd=0,spawn.shield(a,e,t),a.damageReduction=0;const o=window.performance.now(),s=15e3+700*(Math.random()-.5);a.onDamage=function(){Matter.Body.setAngularVelocity(a,a.angularVelocity+1)},a.do=function(){this.checkStatus(),this.alwaysSeePlayer(),this.attraction(),this.health=1-(window.performance.now()-o)/s,this.health<0&&this.death(),Matter.Body.setAngularVelocity(a,a.angularVelocity+.05)}},mercenary(e,t){mobs.spawn(e,t,3,60,"white");let a=mob[mob.length-1];Matter.Body.rotate(a,2*Math.PI*Math.random()),a.accelMag=.001*simulation.accelScale,a.torqueMagnitude=1e-5*a.inertia*(Math.random()>.5?-1:1),a.frictionStatic=0,a.frictionAir=.03,a.delay=120*simulation.CDScale,a.cd=0,spawn.shield(a,e,t),a.damageReduction=0;const o=window.performance.now(),s=25e3+700*(Math.random()-.5);a.onDamage=function(){Matter.Body.setAngularVelocity(a,a.angularVelocity+1)},a.do=function(){this.checkStatus(),this.attraction(),this.health=1-(window.performance.now()-o)/s,this.health<0&&this.death(),this.alwaysSeePlayer()}}};function s(e,t){for(var a=[],s=0;s<e;s++){var n=t[Math.floor(Math.random()*t.length)];spawn[n]?a.push(spawn[n]):o[n]&&a.push(o[n])}return a}function n(e){for(var t=0;t<e.length;t++){var a=1e3+2400*t/e.length+200*(Math.random()-.5),o=-950-100*Math.random();e[t](a,o)}const s=Math.random()*(10-simulation.difficulty/4);for(t=0;t<s;t++)powerUps.spawn(3300,-1e3,"ammo")}level.custom=()=>{t.openClose(),level.exit.drawAndCheck(),level.enter.draw()},level.customTopLayer=()=>{e.query(),e.draw(),t.draw(),e.isUp||a||(a=!0,simulation.inGameConsole("<strong>The Trial has begun.</strong>"),setTimeout(()=>{simulation.inGameConsole('<span style="color: purple;">first wave (domitable)</span>'),n(s(2+.1*simulation.difficulty,spawn.fullPickList))},3e3),setTimeout(()=>{simulation.inGameConsole('<span style="color: purple;">second wave (domitable)</span>'),n(s(2+.1*simulation.difficulty,spawn.fullPickList))},13e3),setTimeout(()=>{simulation.inGameConsole('<span style="color: purple;">third wave <strong>(indomitable)</strong></span>'),n(s(4,["assassin"]))},23e3),setTimeout(()=>{simulation.inGameConsole('<span style="color: purple;">fourth wave (domitable)</span>'),n(s(4+simulation.difficulty/2,spawn.fullPickList))},39e3),setTimeout(()=>{simulation.inGameConsole('<span style="color: purple;">fifth wave (domitable)</span>'),n(s(4+simulation.difficulty/2,spawn.fullPickList))},49e3),setTimeout(()=>{simulation.inGameConsole('<span style="color: purple;">sixth wave <strong>(indomitable)</strong></span>'),n(s(7,["mercenary"]))},59e3),setTimeout(()=>{simulation.inGameConsole('<span style="color: red;">seventh wave <strong>(boss)</strong></span>'),spawn.randomLevelBoss(700,-1e3);var e=mob[mob.length-1];e.oldOnDeath=e.onDeath,e.onDeath=()=>{t.isClosing=!1,powerUps.spawn(4150,-30,"tech"),powerUps.spawn(4150,-30,"tech"),e.oldOnDeath()},spawn.secondaryBossChance(3500,-1e3)},86e3),t.isClosing=!0)},spawn.mapRect(-100,0,1e4,1e4),spawn.mapRect(-1e4,-300,9900,1e4),spawn.mapRect(-100,-300,400,100),spawn.mapRect(200,-800,100,500),spawn.mapRect(200,-800,500,100),spawn.mapRect(600,-1e3,100,200),spawn.mapRect(600,-1100,3e3,100),spawn.mapRect(3500,-1e3,100,200),spawn.mapRect(3500,-800,500,100),spawn.mapRect(3900,-800,100,500),spawn.mapRect(3900,-300,400,100),spawn.mapRect(4300,-300,1e4,1e4);for(var l=0;l<4;l++)spawn.bodyRect(200,50*l-200,20,50);for(l=0;l<5;l++)spawn.bodyRect(400+1e3*Math.random(),-200,40+40*Math.random(),40+40*Math.random());powerUps.addResearchToLevel()},walk(){localSettings.isHideHUD&&(localSettings.isHideHUD=!1),m.addHealth(1/0),document.getElementById("health").style.display="none",document.getElementById("health-bg").style.display="none",document.getElementById("defense-bar").style.display="none",document.getElementById("damage-bar").style.display="none",level.setPosToSpawn(60,-50),spawn.mapRect(10,-10,100,20),level.exit.x=1775,level.exit.y=-35,spawn.mapRect(level.exit.x,level.exit.y+25,100,100),simulation.zoomScale=1400,level.defaultZoom=1400,simulation.zoomTransition(level.defaultZoom,1),document.body.style.backgroundColor=level.trainingBackgroundColor,simulation.lastLogTime=0;let e=0;level.trainingText(`move <strong>↔</strong> with <strong class="key-input-train">${input.key.left.replace("Key","").replace("Digit","")}</strong> and <strong class="key-input-train">${input.key.right.replace("Key","").replace("Digit","")}</strong>`),level.announceTextTraining(1050,50,`move with ${input.key.left.replace("Key","").replace("Digit","")} and ${input.key.right.replace("Key","").replace("Digit","")}`),level.custom=()=>{0===e&&input.right&&(e++,level.trainingText(`<s>move <strong>↔</strong> with <strong class="key-input-train">${input.key.left.replace("Key","").replace("Digit","")}</strong> and <strong class="key-input-train">${input.key.right.replace("Key","").replace("Digit","")}</strong></s>\n                <br>exit through the blue door`),level.announceTextTraining(1050,50,"exit through the blue door")),ctx.fillStyle="#f2f2f2",ctx.fillRect(1600,-400,400,400),level.enter.draw(),level.exit.drawAndCheck()},level.customTopLayer=()=>{ctx.fillStyle="rgba(0,255,255,0.05)",ctx.fillRect(1600,-400,400,400)},spawn.mapRect(-2750,-2800,2600,4600),spawn.mapRect(2e3,-2800,2600,4600),spawn.mapRect(-250,0,3500,1800),spawn.mapRect(1575,0,500,100),spawn.mapRect(-250,-2800,3500,2200),spawn.mapRect(700,-8,50,25),spawn.mapRect(725,-16,75,25),spawn.mapRect(1375,-16,50,50),spawn.mapRect(1400,-8,50,25),spawn.mapRect(750,-24,650,100),spawn.mapRect(1600,-1200,500,850),spawn.mapRect(1600,-400,50,225)},crouch(){localSettings.isTrainingNotAttempted&&(localSettings.isTrainingNotAttempted=!1,localSettings.isAllowed&&localStorage.setItem("localSettings",JSON.stringify(localSettings))),m.addHealth(1/0),level.setPosToSpawn(75,-100),spawn.mapRect(25,-60,100,20),spawn.mapRect(0,-50,150,25),spawn.mapRect(-25,-40,200,25),spawn.mapRect(-50,-30,250,25),spawn.mapRect(-75,-20,300,25),spawn.mapRect(-100,-10,350,25),spawn.mapRect(-150,-50,175,75),level.exit.x=1775,level.exit.y=-35,spawn.mapRect(level.exit.x,level.exit.y+25,100,100),simulation.zoomScale=1400,level.defaultZoom=1400,simulation.zoomTransition(level.defaultZoom,1),document.body.style.backgroundColor=level.trainingBackgroundColor;let e=0;level.trainingText(`press <strong class="key-input-train">${input.key.down.replace("Key","").replace("Digit","")}</strong> to crouch`),level.announceTextTraining(1150,75,`press ${input.key.down.replace("Key","").replace("Digit","")} to crouch`),level.custom=()=>{0===e&&input.down&&(e++,level.trainingText(`<s> press <strong class= "key-input-train"> ${input.key.down.replace("Key","").replace("Digit","")}</strong > to crouch</s>`),level.announceTextTraining(750,100,"")),ctx.fillStyle="#f2f2f2",ctx.fillRect(1625,-350,375,350),level.enter.draw(),level.exit.drawAndCheck()},level.customTopLayer=()=>{ctx.fillStyle="rgba(0,255,255,0.05)",ctx.fillRect(1625,-350,375,350),ctx.fillStyle="rgba(0,0,0,0.2)",ctx.fillRect(500,-100,1125,175)},spawn.mapRect(500,-650,1125,550),spawn.mapRect(-200,-650,875,300),spawn.mapRect(-2750,-2800,2600,4600),spawn.mapRect(2e3,-2800,2600,4600),spawn.mapRect(-250,50,3500,1750),spawn.mapRect(-200,0,950,100),spawn.mapRect(1575,0,500,100),spawn.mapRect(-250,-2800,3500,2200),spawn.mapRect(725,12,50,25),spawn.mapRect(725,25,75,25),spawn.mapRect(750,38,75,25),spawn.mapRect(1525,25,75,50),spawn.mapRect(1500,38,50,25),spawn.mapRect(1550,12,50,25),spawn.mapRect(1600,-1200,500,850)},jump(){m.addHealth(1/0),level.setPosToSpawn(60,-50),spawn.mapRect(10,-10,100,20),level.exit.x=1775,level.exit.y=-35,spawn.mapRect(level.exit.x,level.exit.y+25,100,100),simulation.zoomScale=1400,level.defaultZoom=1400,simulation.zoomTransition(level.defaultZoom,1),document.body.style.backgroundColor=level.trainingBackgroundColor;let e=0;level.trainingText(`hold down <strong class= "key-input-train"> ${input.key.up.replace("Key","").replace("Digit","")}</strong> longer to jump higher`),level.announceTextTraining(400,50,`hold down ${input.key.up.replace("Key","").replace("Digit","")} longer to jump higher`),level.custom=()=>{0===e&&m.pos.x>300&&(e++,level.trainingText(`<s> hold down <strong class= "key-input-train"> ${input.key.up.replace("Key","").replace("Digit","")}</strong> longer to jump higher</s>`),level.announceTextTraining(750,100,"")),m.health=1,ctx.fillStyle="#f2f2f2",ctx.fillRect(1600,-400,400,400),level.enter.draw(),level.exit.drawAndCheck()},level.customTopLayer=()=>{ctx.fillStyle="rgba(0,0,0,0.2)",ctx.fillRect(1e3,0,450,1800),ctx.fillStyle="rgba(0,255,255,0.05)",ctx.fillRect(1600,-400,400,400)},spawn.mapRect(-2750,-2800,2600,4600),spawn.mapRect(2e3,-2800,2600,4600),spawn.mapRect(275,-350,200,375),spawn.mapRect(-250,0,1250,1800),spawn.mapRect(1450,0,1075,1800),spawn.mapRect(-250,-2800,1250,2200),spawn.mapRect(1450,-2800,1075,2200),spawn.mapVertex(375,0,"150 0  -150 0  -100 -50  100 -50"),spawn.mapRect(1600,-1200,500,850),spawn.mapRect(1600,-400,50,225),spawn.mapRect(1e3,-650,25,25),spawn.mapRect(1e3,-675,50,25),spawn.mapRect(1e3,-700,75,25),spawn.mapRect(1e3,-725,100,25),spawn.mapRect(1425,-650,25,25),spawn.mapRect(1400,-675,50,25),spawn.mapRect(1375,-700,75,25),spawn.mapRect(1350,-725,100,25),spawn.mapRect(1325,-750,150,25),spawn.mapRect(1300,-775,150,25),spawn.mapRect(1e3,-750,125,25),spawn.mapRect(1275,-2800,200,2025),spawn.mapRect(975,-2800,200,2025),spawn.mapRect(1e3,-775,150,25)},hold(){m.addHealth(1/0),level.setPosToSpawn(60,-50),spawn.mapRect(10,-10,100,20),level.exit.x=1775,level.exit.y=-35,spawn.mapRect(level.exit.x,level.exit.y+25,100,100),simulation.zoomScale=1400,level.defaultZoom=1400,simulation.zoomTransition(level.defaultZoom,1),document.body.style.backgroundColor=level.trainingBackgroundColor,spawn.bodyRect(1025,-75,50,50);const e=level.button(500,0),t=level.door(1612.5,-175,25,190,185,3);let a=0;level.trainingText(`activate your <strong class= 'color-f'> field</strong> with <strong class="key-input-train">${input.key.field.replace("Key","").replace("Digit","")}</strong> or <strong> right mouse</strong>`),level.announceTextTraining(750,100,`activate your field with ${input.key.field.replace("Key","").replace("Digit","")} or right mouse`),level.custom=()=>{0===a&&input.field?(a++,level.trainingText(`<s> activate your <strong class='color-f'> field</strong> with <strong class="key-input-train">${input.key.field.replace("Key","").replace("Digit","")}</strong> or <strong>right mouse</strong></s><br>release your <strong class='color-f'>field</strong> on a <strong class='color-block'>block</strong> to pick it up`),level.announceTextTraining(750,100,"release your field on a block to pick it up")):1===a&&m.isHolding?(a++,level.trainingText(`<s>activate your <strong class='color-f'>field</strong> with <strong class="key-input-train">${input.key.field.replace("Key","").replace("Digit","")}</strong> or <strong>right mouse</strong><br>release your <strong class='color-f'>field</strong> on a <strong class='color-block'>block</strong> to pick it up</s><br>drop the <strong class='color-block'>block</strong> on the red button to open the door`),level.announceTextTraining(750,100,"drop the block on the red button to open the door")):2===a&&!e.isUp&&Vector.magnitudeSquared(Vector.sub(body[0].position,e.min))<1e4&&(a++,level.trainingText(`<s>activate your <strong class='color-f'>field</strong> with <strong class="key-input-train">${input.key.field.replace("Key","").replace("Digit","")}</strong> or <strong>right mouse</strong><br>release your <strong class='color-f'>field</strong> on a <strong class='color-block'>block</strong> to pick it up<br>drop the <strong class='color-block'>block</strong> on the red button to open the door</s>`),level.announceTextTraining(750,100,"")),ctx.fillStyle="#f2f2f2",ctx.fillRect(1600,-400,400,400),level.enter.draw(),level.exit.drawAndCheck();for(let e=0;e<body.length;e++)if(body[e].position.x>1675){Matter.Composite.remove(engine.world,body[e]),body.splice(e,1);break}body.length<2&&spawn.bodyRect(1025,-550,50,50)},level.customTopLayer=()=>{e.query(),e.draw(),e.isUp?t.isClosing=!0:t.isClosing=!1,t.openClose(),t.draw(),ctx.fillStyle="rgba(0,255,255,0.05)",ctx.fillRect(1600,-400,400,400)},spawn.mapRect(-2750,-2800,2600,4600),spawn.mapRect(2e3,-2800,2600,4600),spawn.mapRect(-250,50,3500,1750),spawn.mapRect(-200,0,950,100),spawn.mapRect(1575,0,500,100),spawn.mapRect(-250,-2800,3500,2200),spawn.mapRect(725,12,50,25),spawn.mapRect(725,25,75,25),spawn.mapRect(750,38,75,25),spawn.mapRect(1525,25,75,50),spawn.mapRect(1500,38,50,25),spawn.mapRect(1550,12,50,25),spawn.mapRect(1600,-1200,500,850),spawn.mapRect(1600,-400,50,225)},throw(){m.addHealth(1/0),level.setPosToSpawn(60,-50),spawn.mapRect(10,-10,100,20),level.exit.x=1775,level.exit.y=-35,spawn.mapRect(level.exit.x,level.exit.y+25,100,100),simulation.zoomScale=1400,level.defaultZoom=1400,simulation.zoomTransition(level.defaultZoom,1),document.body.style.backgroundColor=level.trainingBackgroundColor,spawn.bodyRect(1025,-75,50,50);const e=level.button(1635,-400),t=level.door(1612.5,-175,25,190,185,3);let a=0;level.trainingText("pick up the <strong class='color-block'>block</strong> with your <strong class='color-f'>field</strong>"),level.announceTextTraining(750,100,"pick up the block with your field"),level.custom=()=>{0===a&&m.isHolding?(a++,level.trainingText("<s>pick up the <strong class='color-block'>block</strong> with your <strong class='color-f'>field</strong></s>\n                    <br>hold your <strong class='color-f'>field</strong> down to charge up then release to throw a <strong class='color-block'>block</strong>"),level.announceTextTraining(750,100,"hold your field down to charge then release to throw a block")):1===a&&m.throwCharge>2?(a++,level.trainingText("<s>pick up the <strong class='color-block'>block</strong> with your <strong class='color-f'>field</strong>\n                            <br>hold your <strong class='color-f'>field</strong> down to charge up then release to throw a <strong class='color-block'>block</strong></s>\n                        <br>throw the <strong class='color-block'>block</strong> onto the button"),level.announceTextTraining(750,100,"throw the block onto the button")):2===a&&!e.isUp&&Vector.magnitudeSquared(Vector.sub(body[0].position,e.min))<1e4&&(a++,level.trainingText("<s>pick up the <strong class='color-block'>block</strong> with your <strong class='color-f'>field</strong>\n                                <br>hold your <strong class='color-f'>field</strong> down to charge up then release to throw a <strong class='color-block'>block</strong>\n                                    <br>throw the <strong class='color-block'>block</strong> onto the button</s>"),level.announceTextTraining(750,100,"")),ctx.fillStyle="#f2f2f2",ctx.fillRect(1600,-400,400,400),level.enter.draw(),level.exit.drawAndCheck()},level.customTopLayer=()=>{e.query(),e.draw(),e.isUp?t.isClosing=!0:t.isClosing=!1,t.openClose(),t.draw(),ctx.fillStyle="rgba(0,255,255,0.05)",ctx.fillRect(1600,-400,400,400);for(let e=0;e<body.length;e++)if(body[e].position.x>1675&&body[e].position.y>-350){Matter.Composite.remove(engine.world,body[e]),body.splice(e,1);break}body.length<2&&spawn.bodyRect(1025,-550,50,50)},spawn.mapRect(-2750,-2800,2600,4600),spawn.mapRect(2e3,-2800,2600,4600),spawn.mapRect(-250,50,3500,1750),spawn.mapRect(-200,0,950,100),spawn.mapRect(1575,0,500,100),spawn.mapRect(-250,-2800,3500,2200),spawn.mapRect(725,12,50,25),spawn.mapRect(725,25,75,25),spawn.mapRect(750,38,75,25),spawn.mapRect(1525,25,75,50),spawn.mapRect(1500,38,50,25),spawn.mapRect(1550,12,50,25),spawn.mapRect(1790,-600,250,225),spawn.mapRect(1625,-400,400,50),spawn.mapRect(1600,-400,50,225)},throwAt(){m.addHealth(1/0),level.setPosToSpawn(60,-50),spawn.mapRect(10,-10,100,20),level.exit.x=1775,level.exit.y=-35,spawn.mapRect(level.exit.x,level.exit.y+25,100,100),simulation.zoomScale=1400,level.defaultZoom=1400,simulation.zoomTransition(level.defaultZoom,1),document.body.style.backgroundColor=level.trainingBackgroundColor;const e=level.door(1612.5,-175,25,190,185,3);let t=0;level.trainingText("throw the <strong class='color-block'>block</strong> at the <strong>mobs</strong> to open the door"),level.announceTextTraining(750,100,"throw the block at the mobs to open the door"),level.custom=()=>{0!==t||mob.length||(t++,level.trainingText("<s>throw the <strong class='color-block'>block</strong> at the <strong>mobs</strong> to open the door</s>"),level.announceTextTraining(750,100,"")),ctx.fillStyle="#f2f2f2",ctx.fillRect(1600,-400,400,400),level.enter.draw(),level.exit.drawAndCheck()},level.customTopLayer=()=>{mob.length>0?e.isClosing=!0:e.isClosing=!1,e.openClose(),e.draw(),ctx.fillStyle="rgba(0,255,255,0.05)",ctx.fillRect(1600,-400,400,400);for(let e=0;e<body.length;e++)if(body[e].position.x>1675&&body[e].position.y>-350){Matter.Composite.remove(engine.world,body[e]),body.splice(e,1);break}body.length<2&&spawn.bodyRect(1025,-550,60,60)},spawn.mapRect(-2750,-2800,2600,4600),spawn.mapRect(2e3,-2800,2600,4600),spawn.mapRect(-250,50,3500,1750),spawn.mapRect(-200,0,950,100),spawn.mapRect(1575,0,500,100),spawn.mapRect(-250,-2800,3500,2200),spawn.mapRect(725,12,50,25),spawn.mapRect(725,25,75,25),spawn.mapRect(750,38,75,25),spawn.mapRect(1525,25,75,50),spawn.mapRect(1500,38,50,25),spawn.mapRect(1550,12,50,25),spawn.mapRect(1600,-400,50,225),spawn.mapRect(1600,-600,425,250),spawn.bodyRect(1025,-75,60,60),spawn.starter(425,-350,35),spawn.starter(800,-350,44)},fire(){level.setPosToSpawn(60,-50),spawn.mapRect(10,-10,100,20),level.exit.x=1775,level.exit.y=15,spawn.mapRect(level.exit.x,level.exit.y+25,100,100),simulation.zoomScale=1400,level.defaultZoom=1400,simulation.zoomTransition(level.defaultZoom,1),document.body.style.backgroundColor=level.trainingBackgroundColor;const e=level.door(1612.5,-125,25,190,185,3),t=level.button(400,0);let a=0;level.trainingText(`use your <strong class='color-f'>field</strong> to pick up ${powerUps.orb.gun()}`),level.announceTextTraining(750,100,"use your field to pick up the orb"),level.custom=()=>{0===a&&simulation.isChoosing?(a++,level.trainingText(`<s>use your <strong class='color-f'>field</strong> to pick up ${powerUps.orb.gun()}</s>\n                                    <br>choose a <strong class='color-g'>gun</strong>`),level.announceTextTraining(750,100,"choose a gun")):1!==a||simulation.isChoosing?2===a&&mob.length<2?(a++,level.trainingText(`<s>use your <strong class='color-f'>field</strong> to pick up ${powerUps.orb.gun()}\n                                                <br>choose a <strong class='color-g'>gun</strong>\n                                                    <br>use the <strong>left mouse</strong> button to shoot the <strong>mobs</strong></s>\n                                                    <br>drop a <strong class='color-block'>block</strong> on the red button to open the door`),level.announceTextTraining(750,100,"drop a block on the red button to open the door")):3!==a||e.isClosing||(a++,level.trainingText(`<s>use your <strong class='color-f'>field</strong> to pick up ${powerUps.orb.gun()}\n                                                            <br>choose a <strong class='color-g'>gun</strong>\n                                                                <br>use the <strong>left mouse</strong> button to shoot the <strong>mobs</strong>\n                                                                    <br>put a <strong class='color-block'>block</strong> on the red button to open the door</s>`),level.announceTextTraining(750,100,"")):(a++,level.trainingText(`<s>use your <strong class='color-f'>field</strong> to pick up ${powerUps.orb.gun()}\n                                            <br>choose a <strong class='color-g'>gun</strong></s>\n                                        <br>use the <strong>left mouse</strong> button to shoot the <strong>mobs</strong>`),level.announceTextTraining(750,100,"use the left mouse button to shoot the mobs")),powerUp.length||(b.inventory.length&&0===b.guns[b.activeGun].ammo&&powerUps.directSpawn(1300,-2e3,"ammo",!1),b.inventory.length||simulation.isChoosing||powerUps.directSpawn(1300,-2e3,"gun",!1)),ctx.fillStyle="#f2f2f2",ctx.fillRect(1600,-350,400,400),level.enter.draw(),level.exit.drawAndCheck()},level.customTopLayer=()=>{t.query(),t.draw(),t.isUp?e.isClosing=!0:e.isClosing=!1,e.openClose(),e.draw(),ctx.fillStyle="rgba(0,255,255,0.05)",ctx.fillRect(1600,-350,400,400),ctx.fillStyle="rgba(0,0,0,0.4)",ctx.fillRect(1250,-2800,100,2200)},spawn.mapRect(-2750,-2800,2600,4600),spawn.mapRect(2e3,-2800,2600,4600),spawn.mapRect(-250,50,3500,1750),spawn.mapRect(-200,0,950,100),spawn.mapRect(-150,-2800,1400,2200),spawn.mapRect(1350,-2800,675,2200),spawn.mapRect(725,-588,50,25),spawn.mapRect(725,-600,75,25),spawn.mapRect(750,-612,75,25),spawn.mapRect(-275,-650,1025,87),spawn.mapRect(725,12,50,25),spawn.mapRect(725,25,75,25),spawn.mapRect(750,38,75,25),spawn.mapRect(1600,-600,425,300),spawn.mapRect(1600,-400,50,275),powerUps.directSpawn(1300,-1500,"gun",!1),spawn.starter(900,-300,35),spawn.starter(1400,-400,44)},deflect(){m.addHealth(1/0),level.setPosToSpawn(60,-50),spawn.mapRect(10,-10,100,20),level.exit.x=1775,level.exit.y=-35,spawn.mapRect(level.exit.x,level.exit.y+25,100,100),simulation.zoomScale=1400,level.defaultZoom=1400,simulation.zoomTransition(level.defaultZoom,1),document.body.style.backgroundColor=level.trainingBackgroundColor;let e=0;level.trainingText("use your <strong class='color-f'>field</strong> to <strong>deflect</strong> the <strong style=\"color:rgb(215,0,145);\">mobs</strong>"),level.announceTextTraining(950,100,"use your field to deflect the mobs"),level.custom=()=>{if(0===e&&m.pos.x>1350&&(e++,level.trainingText("<s>use your <strong class='color-f'>field</strong> to <strong>deflect</strong> the <strong style=\"color:rgb(215,0,145);\">mobs</strong></s>"),level.announceTextTraining(950,100,"")),m.immuneCycle>m.cycle&&(m.energy=m.maxEnergy,Matter.Body.setPosition(player,{x:60,y:-50}),m.addHealth(1/0)),!(simulation.cycle%5)){spawn.sniperBullet(660+580*Math.random(),-2e3,10,4,!1);const e=mob[mob.length-1];Matter.Body.setVelocity(e,{x:0,y:8}),e.timeLeft=300}ctx.fillStyle="#f2f2f2",ctx.fillRect(1600,-400,400,400),level.enter.draw(),level.exit.drawAndCheck()},level.customTopLayer=()=>{ctx.fillStyle="rgba(0,0,0,0.05)",ctx.fillStyle="rgba(0,255,255,0.05)",ctx.fillRect(1600,-400,400,400),ctx.fillStyle="rgba(255,0,255,0.013)",ctx.fillRect(650,-2800,600,2800)},spawn.mapRect(-2750,-2800,2600,4600),spawn.mapRect(2e3,-2800,2600,4600),spawn.mapRect(-250,0,3e3,1800),spawn.mapRect(-250,-2800,900,2200),spawn.mapRect(1250,-2800,1275,2200),spawn.mapVertex(950,0,"400 0  -400 0  -300 -50  300 -50"),spawn.mapRect(1600,-1200,500,850),spawn.mapRect(1600,-400,50,225);for(let e=0;e<32;e++){spawn.sniperBullet(660+580*Math.random(),40*e-2e3,10,4,!1);const t=mob[mob.length-1];Matter.Body.setVelocity(t,{x:0,y:8}),t.timeLeft=300}},heal(){m.addHealth(1/0),m.health=0,m.addHealth(.25),document.getElementById("health").style.display="inline",document.getElementById("health-bg").style.display="inline",localSettings.isHideHUD||(document.getElementById("defense-bar").style.display="inline",document.getElementById("damage-bar").style.display="inline"),level.setPosToSpawn(60,-50),spawn.mapRect(10,-10,100,20),level.exit.x=1775,level.exit.y=-35,spawn.mapRect(level.exit.x,level.exit.y+25,100,100),simulation.zoomScale=1400,level.defaultZoom=1400,simulation.zoomTransition(level.defaultZoom,1),document.body.style.backgroundColor=level.trainingBackgroundColor;let e=0;level.trainingText('your <strong>health</strong> is displayed in the top left corner\n                                                                    <br>use your <strong class=\'color-f\'>field</strong> to pick up <div class="heal-circle" style="border: none;"></div> until your <strong>health</strong> is full'),level.announceTextTraining(750,100,"pick up heal orbs until your health is full"),level.custom=()=>{0===e&&1===m.health&&(e++,level.trainingText('<s>use your <strong class=\'color-f\'>field</strong> to pick up <div class="heal-circle" style="border: none;"></div> until your <strong>health</strong> is full</s>'),level.announceTextTraining(750,100,"")),ctx.fillStyle="#f2f2f2",ctx.fillRect(1600,-400,400,400),level.enter.draw(),level.exit.drawAndCheck()},level.customTopLayer=()=>{1!==m.health?t.isClosing=!0:t.isClosing=!1,t.openClose(),t.draw(),ctx.fillStyle="rgba(0,255,255,0.05)",ctx.fillRect(1600,-400,400,400)},spawn.mapRect(-2750,-2800,2600,4600),spawn.mapRect(2e3,-2800,2600,4600),spawn.mapRect(-250,0,3500,1800),spawn.mapRect(1575,0,500,100),spawn.mapRect(-250,-2800,3500,2200),spawn.mapRect(700,-8,50,25),spawn.mapRect(725,-16,75,25),spawn.mapRect(1375,-16,50,50),spawn.mapRect(1400,-8,50,25),spawn.mapRect(750,-24,650,100),powerUps.directSpawn(875,-40,"heal",!1,15),powerUps.directSpawn(1075,-50,"heal",!1,25),powerUps.directSpawn(1275,-65,"heal",!1,35);const t=level.door(1612.5,-175,25,190,185,3);spawn.mapRect(1600,-1200,500,850),spawn.mapRect(1600,-400,50,225)},nailGun(){level.setPosToSpawn(60,-50),spawn.mapRect(10,-10,100,20),level.exit.x=1775,level.exit.y=-35,spawn.mapRect(level.exit.x,level.exit.y+25,100,100),simulation.zoomScale=1400,level.defaultZoom=1400,simulation.zoomTransition(level.defaultZoom,1),document.body.style.backgroundColor=level.trainingBackgroundColor,b.resetAllGuns(),b.giveGuns("nail gun"),b.guns[b.activeGun].ammo=0,simulation.updateGunHUD();const e=level.door(1612.5,-175,25,190,185,3);let t=0;level.trainingText("use your <strong class='color-f'>field</strong> to pick up <div class=\"ammo-circle\" style=\"border: none;\"></div> for your <strong class='color-g'>nail gun</strong>"),level.announceTextTraining(750,100,"use your field to pick up the ammo orbs"),level.custom=()=>{0===t&&b.inventory.length&&b.guns[b.activeGun].ammo>0?(t++,level.trainingText("<s>use your <strong class='color-f'>field</strong> to pick up <div class=\"ammo-circle\" style=\"border: none;\"></div> for your <strong class='color-g'>nail gun</strong></s>\n                                                                        <br>use the <strong>left mouse</strong> button to shoot the <strong>mobs</strong>"),level.announceTextTraining(750,100,"use the left mouse button to shoot at the mobs")):1===t&&0===mob.length&&(t++,level.trainingText("<s>use your <strong class='color-f'>field</strong> to pick up <div class=\"ammo-circle\" style=\"border: none;\"></div> for your <strong class='color-g'>nail gun</strong>\n                                                                                <br>use the <strong>left mouse</strong> button to shoot the <strong>mobs</strong></s>"),level.announceTextTraining(750,100,""));let e=!1;for(let t=0;t<powerUp.length;t++)"ammo"===powerUp[t].name&&(e=!0);!e&&b.inventory.length&&0===b.guns[b.activeGun].ammo&&(powerUps.directSpawn(1300,-2e3,"ammo",!1),powerUps.directSpawn(1305,-2200,"ammo",!1),powerUps.directSpawn(1302,-2300,"ammo",!1),powerUps.directSpawn(1303,-2400,"ammo",!1),powerUps.directSpawn(1301,-2500,"ammo",!1),powerUps.directSpawn(1306,-2600,"ammo",!1),powerUps.directSpawn(1304,-2700,"ammo",!1)),ctx.fillStyle="#f2f2f2",ctx.fillRect(1600,-400,400,400),level.enter.draw(),level.exit.drawAndCheck()},level.customTopLayer=()=>{mob.length>0?e.isClosing=!0:e.isClosing=!1,e.openClose(),e.draw(),ctx.fillStyle="rgba(0,255,255,0.05)",ctx.fillRect(1600,-400,400,400),ctx.fillStyle="rgba(0,0,0,0.4)",ctx.fillRect(1250,-2800,100,2200)},m.health<1&&(powerUps.directSpawn(1298,-3500,"heal",!1,23),powerUps.directSpawn(1305,-3e3,"heal",!1,35));for(let e=0;e<2;e++){spawn.spinner(1300+e,-3e3-200*e,25+5*e);const t=mob[mob.length-1];Matter.Body.setVelocity(t,{x:0,y:62}),t.isDropPowerUp=!1}spawn.mapRect(-2750,-2800,2600,4600),spawn.mapRect(2e3,-2800,2600,4600),spawn.mapRect(-250,50,3500,1750),spawn.mapRect(-200,0,950,100),spawn.mapRect(1575,0,500,100),spawn.mapRect(-150,-2800,1400,2200),spawn.mapRect(1350,-2800,675,2200),spawn.mapRect(725,12,50,25),spawn.mapRect(725,25,75,25),spawn.mapRect(750,38,75,25),spawn.mapRect(1525,25,75,50),spawn.mapRect(1500,38,50,25),spawn.mapRect(1550,12,50,25),spawn.mapRect(1600,-400,50,225),spawn.mapRect(1600,-600,425,250)},shotGun(){level.setPosToSpawn(60,-50),spawn.mapRect(10,-10,100,20),level.exit.x=1775,level.exit.y=-35,spawn.mapRect(level.exit.x,level.exit.y+25,100,100),simulation.zoomScale=1400,level.defaultZoom=1400,simulation.zoomTransition(level.defaultZoom,1),document.body.style.backgroundColor=level.trainingBackgroundColor,b.resetAllGuns(),b.giveGuns("shotgun");const e=level.door(1612.5,-175,25,190,185,3);let t=0;level.trainingText("use your <strong class='color-g'>shotgun</strong> to clear the room of mobs"),level.announceTextTraining(750,100,"use your shotgun to clear the room of mobs"),level.custom=()=>{0===t&&0===mob.length&&(t++,level.trainingText("<s>use your <strong class='color-g'>shotgun</strong> to clear the room of mobs</s>"),level.announceTextTraining(750,100,""));let e=!1;for(let t=0;t<powerUp.length;t++)"ammo"===powerUp[t].name&&(e=!0);!e&&b.inventory.length&&0===b.guns[b.activeGun].ammo&&(powerUps.directSpawn(1300,-2e3,"ammo",!1),powerUps.directSpawn(1301,-2200,"ammo",!1)),ctx.fillStyle="#f2f2f2",ctx.fillRect(1600,-400,400,400),level.enter.draw(),level.exit.drawAndCheck()},level.customTopLayer=()=>{mob.length>0?e.isClosing=!0:e.isClosing=!1,e.openClose(),e.draw(),ctx.fillStyle="rgba(0,255,255,0.05)",ctx.fillRect(1600,-400,400,400),ctx.fillStyle="rgba(0,0,0,0.4)",ctx.fillRect(1250,-2800,100,2200)},m.health<1&&(powerUps.directSpawn(1298,-3500,"heal",!1,23),powerUps.directSpawn(1305,-3e3,"heal",!1,35));for(let e=0;e<3;e++)spawn.hopper(1300+e,-3e3-2e3*e,25+5*e),mob[mob.length-1].isDropPowerUp=!1;spawn.mapRect(-2750,-2800,2600,4600),spawn.mapRect(2e3,-2800,2600,4600),spawn.mapRect(-250,50,3500,1750),spawn.mapRect(-200,0,950,100),spawn.mapRect(1575,0,500,100),spawn.mapRect(-150,-2800,1400,2200),spawn.mapRect(1350,-2800,675,2200),spawn.mapRect(725,12,50,25),spawn.mapRect(725,25,75,25),spawn.mapRect(750,38,75,25),spawn.mapRect(1525,25,75,50),spawn.mapRect(1500,38,50,25),spawn.mapRect(1550,12,50,25),spawn.mapRect(1600,-400,50,225),spawn.mapRect(1600,-600,425,250)},superBall(){level.setPosToSpawn(60,-50),spawn.mapRect(10,-10,100,20),level.exit.x=1775,level.exit.y=-35,spawn.mapRect(level.exit.x,level.exit.y+25,100,100),simulation.zoomScale=1400,level.defaultZoom=1400,simulation.zoomTransition(level.defaultZoom,1),document.body.style.backgroundColor=level.trainingBackgroundColor,b.resetAllGuns(),b.giveGuns("super balls");const e=level.door(1612.5,-175,25,190,185,3);let t=0;level.trainingText("use <strong class='color-g'>super balls</strong> to clear the room of mobs"),level.announceTextTraining(750,100,"use super balls to clear the room of mobs"),level.custom=()=>{0===t&&0===mob.length&&(t++,level.trainingText("<s>use <strong class='color-g'>super balls</strong> to clear the room of mobs</s>"),level.announceTextTraining(750,100,""));let e=!1;for(let t=0;t<powerUp.length;t++)"ammo"===powerUp[t].name&&(e=!0);!e&&b.inventory.length&&0===b.guns[b.activeGun].ammo&&(powerUps.directSpawn(1300,-2e3,"ammo",!1),powerUps.directSpawn(1301,-2200,"ammo",!1)),ctx.fillStyle="#f2f2f2",ctx.fillRect(1600,-400,400,400),level.enter.draw(),level.exit.drawAndCheck()},level.customTopLayer=()=>{mob.length>0?e.isClosing=!0:e.isClosing=!1,e.openClose(),e.draw(),ctx.fillStyle="rgba(0,255,255,0.05)",ctx.fillRect(1600,-400,400,400),ctx.fillStyle="rgba(0,0,0,0.2)",ctx.fillRect(-150,-2800,1500,2450)},m.health<1&&(powerUps.directSpawn(1298,-3500,"heal",!1,23),powerUps.directSpawn(1305,-3e3,"heal",!1,35));for(let e=0;e<6;e++)spawn.spawner(230*e,-800),mob[mob.length-1].isDropPowerUp=!1;spawn.mapVertex(510,-430,"725 0  725  80  -650 80 -650 -80  650 -80"),spawn.mapRect(-225,-2800,1450,2e3),spawn.mapRect(1350,-2800,675,2450),spawn.mapRect(-2750,-2800,2600,4600),spawn.mapRect(2e3,-2800,2600,4600),spawn.mapRect(-250,50,3500,1750),spawn.mapRect(-200,0,950,100),spawn.mapRect(1575,0,500,100),spawn.mapRect(725,12,50,25),spawn.mapRect(725,25,75,25),spawn.mapRect(750,38,75,25),spawn.mapRect(1525,25,75,50),spawn.mapRect(1500,38,50,25),spawn.mapRect(1550,12,50,25),spawn.mapRect(1600,-400,50,225)},matterWave(){level.setPosToSpawn(60,-50),spawn.mapRect(10,-10,100,20),level.exit.x=1775,level.exit.y=-35,spawn.mapRect(level.exit.x,level.exit.y+25,100,100),simulation.zoomScale=1400,level.defaultZoom=1400,simulation.zoomTransition(level.defaultZoom,1),document.body.style.backgroundColor=level.trainingBackgroundColor,b.resetAllGuns(),b.giveGuns("wave");const e=level.door(1612.5,-175,25,190,185,3);let t=0;level.trainingText("use <strong class='color-g'>wave</strong> to clear the room of mobs"),level.announceTextTraining(750,100,"use wave to clear the room of mobs"),level.custom=()=>{0===t&&0===mob.length&&(t++,level.trainingText("<s>use <strong class='color-g'>wave</strong> to clear the room of mobs</s>"),level.announceTextTraining(750,100,""));let e=!1;for(let t=0;t<powerUp.length;t++)"ammo"===powerUp[t].name&&(e=!0);!e&&b.inventory.length&&0===b.guns[b.activeGun].ammo&&(powerUps.directSpawn(1300,-2e3,"ammo",!1),powerUps.directSpawn(1301,-2200,"ammo",!1)),ctx.fillStyle="#f2f2f2",ctx.fillRect(1600,-400,400,400),level.enter.draw(),level.exit.drawAndCheck()},level.customTopLayer=()=>{mob.length>0?e.isClosing=!0:e.isClosing=!1,e.openClose(),e.draw(),ctx.fillStyle="rgba(0,255,255,0.05)",ctx.fillRect(1600,-400,400,400),ctx.fillStyle="rgba(0,0,0,0.2)",ctx.fillRect(-150,-2800,1500,2450)},m.health<1&&(powerUps.directSpawn(1298,-3500,"heal",!1,23),powerUps.directSpawn(1305,-3e3,"heal",!1,35));for(let e=0;e<6;e++)spawn.springer(200*e,-800),mob[mob.length-1].isDropPowerUp=!1;spawn.springer(1825,-330,20),spawn.mapRect(1175,-850,50,500),spawn.mapRect(-225,-400,1450,50),spawn.mapRect(-225,-2800,1450,2e3),spawn.mapRect(1350,-2800,675,2450),spawn.mapRect(-2750,-2800,2600,4600),spawn.mapRect(2e3,-2800,2600,4600),spawn.mapRect(-250,50,3500,1750),spawn.mapRect(-200,0,950,100),spawn.mapRect(1575,0,500,100),spawn.mapRect(725,12,50,25),spawn.mapRect(725,25,75,25),spawn.mapRect(750,38,75,25),spawn.mapRect(1525,25,75,50),spawn.mapRect(1500,38,50,25),spawn.mapRect(1550,12,50,25),spawn.mapRect(1600,-400,50,225)},missile(){level.setPosToSpawn(60,-50),spawn.mapRect(10,-10,100,20),level.exit.x=1775,level.exit.y=-35,spawn.mapRect(level.exit.x,level.exit.y+25,100,30),simulation.zoomScale=1400,level.defaultZoom=1400,simulation.zoomTransition(level.defaultZoom,1),document.body.style.backgroundColor=level.trainingBackgroundColor,b.resetAllGuns(),b.giveGuns("missiles");const e=level.button(2500,50);e.isUp=!0;const t=level.door(1612.5,-175,25,190,185,3);t.isClosing=!0;let a=0;level.trainingText("use <strong class='color-g'>missiles</strong> to drop a <strong class='color-block'>block</strong> on the button"),level.announceTextTraining(750,100,"use missiles to drop a block on the button"),level.custom=()=>{0!==a||t.isClosing||(a++,level.trainingText("<s>use <strong class='color-g'>missiles</strong> to drop a <strong class='color-block'>block</strong> on the button</s>"),level.announceTextTraining(750,100,""));let e=!1;for(let t=0;t<powerUp.length;t++)"ammo"===powerUp[t].name&&(e=!0);!e&&b.inventory.length&&0===b.guns[b.activeGun].ammo&&(powerUps.directSpawn(1300,-2e3,"ammo",!1),powerUps.directSpawn(1301,-2200,"ammo",!1)),ctx.fillStyle="#f2f2f2",ctx.fillRect(1600,-400,400,400),level.enter.draw(),level.exit.drawAndCheck()},level.customTopLayer=()=>{e.query(),e.draw(),e.isUp?t.isClosing=!0:t.isClosing=!1,t.openClose(),t.draw(),ctx.fillStyle="rgba(0,255,255,0.05)",ctx.fillRect(1600,-400,400,400),ctx.fillStyle="rgba(0,0,0,0.4)",ctx.fillRect(1250,-2800,100,2200),ctx.fillRect(1550,25,475,25)},m.health<1&&(powerUps.directSpawn(1298,-3500,"heal",!1,23),powerUps.directSpawn(1305,-3e3,"heal",!1,35));for(let e=0;e<10;e++)spawn.springer(2100+100*e,-250),mob[mob.length-1].isDropPowerUp=!1;spawn.mapRect(-2750,-2800,2600,4600),spawn.mapRect(3050,-2800,1550,4600),spawn.mapRect(-250,50,3500,1750),spawn.mapRect(-200,0,950,100),spawn.mapRect(-150,-2800,1400,2200),spawn.mapRect(1350,-2800,675,2200),spawn.mapRect(725,12,50,25),spawn.mapRect(725,25,75,25),spawn.mapRect(750,38,75,25),spawn.mapRect(1550,0,475,35),spawn.mapRect(1600,-400,50,225),spawn.mapRect(1600,-600,425,250),spawn.mapRect(1975,-600,50,625),spawn.mapRect(2025,-2800,1075,2450)},stack(){level.setPosToSpawn(60,-50),spawn.mapRect(10,-10,100,20),level.exit.x=1775,level.exit.y=-685,spawn.mapRect(level.exit.x,level.exit.y+25,100,100),simulation.zoomScale=1400,level.defaultZoom=1400,simulation.zoomTransition(level.defaultZoom,1),document.body.style.backgroundColor=level.trainingBackgroundColor,b.resetAllGuns();let e=0;level.trainingText("use your <strong class='color-f'>field</strong> to stack the <strong class='color-block'>blocks</strong>"),level.announceTextTraining(750,100,"use your field to stack the blocks"),level.custom=()=>{0===e&&m.pos.x>1635&&(e++,level.trainingText("<s>use your <strong class='color-f'>field</strong> to stack the <strong class='color-block'>blocks</strong></s>"),level.announceTextTraining(750,100,"")),ctx.fillStyle="#f2f2f2",ctx.fillRect(1600,-1050,400,400),level.enter.draw(),level.exit.drawAndCheck()},level.customTopLayer=()=>{ctx.fillStyle="rgba(0,255,255,0.05)",ctx.fillRect(1600,-1050,400,400),ctx.fillStyle="rgba(0,0,0,0.4)",ctx.fillRect(250,-2800,200,1800)},m.health<1&&(powerUps.directSpawn(298,-3500,"heal",!1,23),powerUps.directSpawn(305,-3e3,"heal",!1,35));for(let e=0;e<15;e++)spawn.bodyRect(280,-2e3-500*e,30+80*Math.random(),30+80*Math.random());spawn.mapRect(-2750,-2800,2600,4600),spawn.mapRect(2e3,-2800,2600,4600),spawn.mapRect(-250,0,3500,1800),spawn.mapRect(1600,-650,450,775),spawn.mapRect(-150,-2800,400,1800),spawn.mapRect(450,-2800,1675,1800),spawn.mapVertex(1300,0,"400 0  -500 0  -300 -125  400 -125")},mine(){level.setPosToSpawn(300,-50),spawn.mapRect(250,-10,100,20),level.exit.x=1775,level.exit.y=-685,spawn.mapRect(level.exit.x,level.exit.y+25,100,100),simulation.zoomScale=1400,level.defaultZoom=1400,simulation.zoomTransition(level.defaultZoom,1),document.body.style.backgroundColor=level.trainingBackgroundColor,b.resetAllGuns(),b.giveGuns("mine");let e=0;level.trainingText("press the red <strong>button</strong> to spawn a <strong>mob</strong>"),level.announceTextTraining(750,100,"press the red button to spawn a mob");const t=level.button(-100,-200);t.isUp=!0,spawn.mapRect(-150,-200,240,425),level.custom=()=>{0!==e||t.isUp?1===e&&body.length>2?(e++,level.trainingText("<s>press the red <strong>button</strong> to spawn a <strong>mob</strong><br>turn the <strong>mobs</strong> into <strong class='color-block'>blocks</strong></s><br>use your <strong class='color-f'>field</strong> to stack the <strong class='color-block'>blocks</strong>"),level.announceTextTraining(750,100,"use your field to stack the blocks")):2===e&&m.pos.x>1635&&(e++,level.trainingText("<s>press the red <strong>button</strong> to spawn a <strong>mob</strong><br>turn the <strong>mobs</strong> into <strong class='color-block'>blocks</strong><br>use your <strong class='color-f'>field</strong> to stack the <strong class='color-block'>blocks</strong></s>"),level.announceTextTraining(750,100,"")):(e++,level.trainingText("<s>press the red <strong>button</strong> to spawn a <strong>mob</strong></s><br>turn the <strong>mobs</strong> into <strong class='color-block'>blocks</strong>"),level.announceTextTraining(750,100,"turn the mobs into blocks"));let a=!1;for(let e=0;e<powerUp.length;e++)"ammo"===powerUp[e].name&&(a=!0);!a&&b.inventory.length&&0===b.guns[b.activeGun].ammo&&(powerUps.directSpawn(1300,-2e3,"ammo",!1),powerUps.directSpawn(1301,-2200,"ammo",!1)),ctx.fillStyle="#f2f2f2",ctx.fillRect(1600,-1050,400,400),level.enter.draw(),level.exit.drawAndCheck()},level.customTopLayer=()=>{t.query(),t.draw(),t.isUp?t.isReady=!0:t.isReady&&(t.isReady=!1,spawn.exploder(335,-1700),Matter.Body.setVelocity(mob[mob.length-1],{x:0,y:20}),ctx.fillStyle="rgba(255,0,0,0.9)",ctx.fillRect(550,-2800,200,1800)),ctx.fillStyle="rgba(0,255,255,0.05)",ctx.fillRect(1600,-1050,400,400),ctx.fillStyle="rgba(0,0,0,0.4)",ctx.fillRect(550,-2800,200,1800)},m.health<1&&(powerUps.directSpawn(298,-3500,"heal",!1,23),powerUps.directSpawn(305,-3e3,"heal",!1,35)),spawn.mapRect(-2750,-2800,2600,4600),spawn.mapRect(2e3,-2800,2600,4600),spawn.mapRect(-250,0,3500,1800),spawn.mapRect(1600,-650,450,775),spawn.mapRect(-150,-2800,700,1800),spawn.mapRect(750,-2800,1675,1800),spawn.mapVertex(1300,0,"400 0  -600 0  -300 -125  400 -125")},grenades(){level.setPosToSpawn(0,-50),spawn.mapRect(-50,-10,100,20),level.exit.x=1900,level.exit.y=-2835,spawn.mapRect(level.exit.x,level.exit.y+25,100,100),simulation.zoomScale=1400,level.defaultZoom=1400,simulation.zoomTransition(level.defaultZoom,1),document.body.style.backgroundColor=level.trainingBackgroundColor,b.resetAllGuns(),b.giveGuns("grenades");const e=level.elevator(550,-100,180,25,-840,.003,{up:.05,down:.2});e.addConstraint();const t=level.toggle(275,0),a=level.elevator(1400,-950,180,25,-2400,.0025);a.addConstraint();const o=level.button(1e3,-850);let s=0;level.trainingText("flip the <strong>switch</strong> to turn on the <strong>elevator</strong>"),level.announceTextTraining(325,50,"flip the switch to turn on the elevator"),level.custom=()=>{0===s&&e.isOn?(s++,level.trainingText("<s>flip the <strong>switch</strong> to turn on the <strong>elevator</strong></s>\n                                                                                        <br>put a <strong class='color-block'>block</strong> on the <strong>button</strong> to active the <strong>elevator</strong>"),level.announceTextTraining(1175,-810,"put a block on the button")):1===s&&a.isOn?(s++,level.trainingText("<s>flip the <strong>switch</strong> to turn on the <strong>elevator</strong><br>put a <strong class='color-block'>block</strong> on the <strong>button</strong> to active the <strong>elevator</strong></s>\n                                                                                            <br>hold <strong>jump</strong> before the <strong>elevator's</strong> <strong>apex</strong> to reach the <strong>exit</strong>"),level.announceTextTraining(1250,-810,"hold jump at the elevator's apex")):2===s&&m.pos.x>1635&&(s++,level.trainingText("<s>flip the <strong>switch</strong> to turn on the <strong>elevator</strong><br>put a <strong class='color-block'>block</strong> on the <strong>button</strong> to active the <strong>elevator</strong><br>hold <strong>jump</strong> before the <strong>elevator's</strong> <strong>apex</strong> to reach the <strong>exit</strong></s>")),ctx.fillStyle="#f2f2f2",ctx.fillRect(1725,-3100,375,300),level.enter.draw(),level.exit.drawAndCheck()},level.customTopLayer=()=>{t.query(),t.isOn?e.isOn||(e.isOn=!0,e.isUp=!1,e.removeConstraint(),e.frictionAir=.2):e.isOn&&(e.isOn=!1,e.frictionAir=.2,e.addConstraint()),e.isOn?(e.move(),ctx.fillStyle="#444"):ctx.fillStyle="#aaa",ctx.fillRect(640,-825,1,745),o.query(),o.draw(),o.isUp?a.isOn&&(a.isOn=!1,a.frictionAir=.2,a.addConstraint()):a.isOn||(a.isOn=!0,a.isUp=!1,a.removeConstraint(),a.frictionAir=.2),a.isOn?(a.move(),ctx.fillStyle="#444"):ctx.fillStyle="#aaa",ctx.fillRect(1490,-2300,1,1375),ctx.fillStyle="rgba(0,255,255,0.05)",ctx.fillRect(1725,-3100,375,300),ctx.fillStyle="rgba(0,0,0,0.05)",ctx.fillRect(-150,-250,300,250);let s=ctx.createLinearGradient(0,-150,0,-2300);s.addColorStop(0,"rgba(0,0,0,0.35)"),s.addColorStop(1,"rgba(0,0,0,0)"),ctx.fillStyle=s,ctx.fillRect(-200,-2300,1825,2300)},m.health<1&&(powerUps.directSpawn(298,-3500,"heal",!1,23),powerUps.directSpawn(305,-3e3,"heal",!1,35)),spawn.mapRect(-2750,-4800,2600,6600),spawn.mapRect(1600,-2800,3e3,4600),spawn.mapRect(-150,-4800,300,4550),spawn.mapRect(2125,-4775,2475,2050),spawn.mapRect(-250,0,3500,1800),spawn.mapRect(750,-850,950,950),spawn.mapRect(125,-275,25,100),spawn.mapRect(2100,-3150,50,350),spawn.mapRect(1725,-3150,50,175),spawn.mapRect(1725,-3150,425,50),spawn.nodeGroup(1200,-1500,"grenadier",7,35,200)},harpoon(){level.setPosToSpawn(0,-50),spawn.mapRect(-50,-10,100,20),level.exit.x=1900,level.exit.y=-2835,spawn.mapRect(level.exit.x,level.exit.y+25,100,100),simulation.zoomScale=1400,level.defaultZoom=1400,simulation.zoomTransition(level.defaultZoom,1),document.body.style.backgroundColor=level.trainingBackgroundColor,b.resetAllGuns(),b.giveGuns("harpoon");let e=0;level.trainingText("climb up to the exit"),level.announceTextTraining(1175,-810,"climb up to the exit"),level.custom=()=>{0===e&&m.pos.x>1635&&(e++,level.trainingText("<s>climb up to the exit</s>")),ctx.fillStyle="#f2f2f2",ctx.fillRect(1725,-3100,375,300),level.enter.draw(),level.exit.drawAndCheck()},level.customTopLayer=()=>{ctx.fillStyle="rgba(0,255,255,0.05)",ctx.fillRect(1725,-3100,375,300),ctx.fillStyle="rgba(0,90,100,0.05)",ctx.fillRect(-150,-250,300,250);let e=ctx.createLinearGradient(0,-150,0,-2300);e.addColorStop(0,"rgba(0,90,100,0.35)"),e.addColorStop(1,"rgba(0,90,100,0)"),ctx.fillStyle=e,ctx.fillRect(-200,-2300,1825,2300),t.query(),a.query(),o.query(),s.query(),n.query(),l.query(),i.query(),c.query(),p.query(),r.query(),h.query(),d.query()};const t=level.vanish(175,-325,175,25),a=level.vanish(525,-625,175,25),o=level.vanish(1125,-1125,175,25),s=level.vanish(1500,-1450,100,25),n=level.vanish(1125,-1675,175,25),l=level.vanish(750,-1950,175,25),i=level.vanish(550,-1950,175,25),c=level.vanish(350,-1950,175,25),p=level.vanish(150,-1950,175,25),r=level.vanish(325,-2300,200,25),h=level.vanish(725,-2550,100,25),d=level.vanish(1125,-2700,150,25);m.health<1&&(powerUps.directSpawn(298,-3500,"heal",!1,23),powerUps.directSpawn(305,-3e3,"heal",!1,35)),spawn.mapRect(-2750,-4800,2600,6600),spawn.mapRect(1600,-2800,3e3,4600),spawn.mapRect(-150,-4800,300,4550),spawn.mapRect(2125,-4775,2475,2050),spawn.mapRect(-250,0,3500,1800),spawn.mapRect(750,-850,950,950),spawn.mapRect(125,-275,25,100),spawn.mapRect(2100,-3150,50,350),spawn.mapRect(1725,-3150,50,175),spawn.mapRect(1725,-3150,425,50),spawn.grower(250,-375),spawn.grower(1e3,-900),spawn.grower(1475,-925),spawn.grower(275,-2e3),spawn.grower(650,-2e3),spawn.grower(1475,-975),spawn.grower(1575,-1525),spawn.grower(1700,-2850)},diamagnetism(){localSettings.isHideHUD&&(localSettings.isHideHUD=!1),m.addHealth(1/0),document.getElementById("health").style.display="none",document.getElementById("health-bg").style.display="none",document.getElementById("defense-bar").style.display="none",document.getElementById("damage-bar").style.display="none";const e=["harpoon","shotgun","nail gun","super balls","wave","foam","laser"],t=Math.floor(Math.random()*e.length);b.giveGuns(e[t],1/0),m.setField(2),m.fieldRegen=0,level.trainingText("<strong>diamagnetism</strong> by <span class='color-var'>Richard0820</span><br><strong>Don't get hit.</strong><br> Find the portal to the exit.");const a=[],o=level.button(287,-300),s=level.door(750,-275,50,125,125),n=level.door(750,-525,50,125,125),l=y(4425,-3925,525,3975),i=y(1550,-9950,275,3300),c=y(4200,-8725,750,4450),p=[];p.push(x(-50,-625,825,375)),p.push(x(3225,-3675,1200,1e3)),p.push(x(3575,-5675,625,800)),p.push(x(775,-4250,400,375)),p.push(x(2825,-2975,250,300)),p.push(x(3675,-1125,325,250));let r={x:125,y:-9575};n.isClosing=!0,o.isUp=!0,level.setPosToSpawn(125,-9575),level.exit.x=-1825,level.exit.y=50,spawn.mapRect(level.enter.x,level.enter.y+20,100,20),spawn.mapRect(level.exit.x,level.exit.y+20,100,20),level.defaultZoom=1800,simulation.zoomTransition(level.defaultZoom),document.body.style.backgroundColor="#d8dadf",function(e,t,o,s,n=25,l=1500,i=6){for(let c=0;c<i;c++)c%2==0?a.push(w(e,t+c*(s+l),o,s,level.enter.x,level.enter.y)):a.push(w(e+o-n,t+c*(s+l),o,s,level.enter.x,level.enter.y))}(-50,-9050,425,100);const h=new Image;h.src="https://raw.githubusercontent.com/Whyisthisnotavalable/image-yy/main/Hotpot-removed.png",level.chain(-675,400,-.4366271598,!0,20),level.chain(-1600,125,.5144513131,!0,19);const d=function(e,t,a,o){const s=150,n=200,l=Matter.Vector.rotate({x:1,y:0},t),i=Matter.Vector.rotate({x:1,y:0},o);draw=function(){ctx.beginPath();let e=this.vertices;ctx.moveTo(e[0].x,e[0].y);for(let t=1;t<e.length;++t)ctx.lineTo(e[t].x,e[t].y);ctx.fillStyle=this.color,ctx.fill()},query=function(e=!1){if(0===Matter.Query.collides(this,[player]).length)player.isInPortal===this&&(player.isInPortal=null);else if(player.isInPortal!==this){let e;m.buttonCD_jump===m.cycle&&(player.force.y=0),m.buttonCD_jump=0,player.isInPortal=this.portalPair,this.portalPair.angle%(Math.PI/2)?Matter.Body.setPosition(player,this.portalPair.portal.position):Matter.Body.setPosition(player,this.portalPair.position),e=0!==this.portalPair.angle&&this.portalPair.angle!==Math.PI?Math.max(10,Math.min(50,.8*player.velocity.y))+11:Math.max(6,Math.min(50,Vector.magnitude(player.velocity)));let t=Vector.mult(this.portalPair.unit,e);Matter.Body.setVelocity(player,t);for(let e=0;e<bullet.length;e++)bullet[e].botType&&(Matter.Body.setPosition(bullet[e],Vector.add(this.portalPair.portal.position,{x:250*(Math.random()-.5),y:250*(Math.random()-.5)})),Matter.Body.setVelocity(bullet[e],{x:0,y:0}));if(tech.isHealAttract)for(let e=0;e<powerUp.length;e++)"heal"===powerUp[e].name&&Vector.magnitudeSquared(Vector.sub(powerUp[e].position,m.pos))<1e6&&Matter.Body.setPosition(powerUp[e],Vector.add(this.portalPair.portal.position,{x:500*(Math.random()-.5),y:500*(Math.random()-.5)}))}for(let t=0,a=body.length;t<a;t++)if(body[t]!==m.holdingTarget)if(0===Matter.Query.collides(this,[body[t]]).length)body[t].isInPortal===this&&(body[t].isInPortal=null);else if(body[t].isInPortal!==this){if(e){Matter.Composite.remove(engine.world,body[t]),body.splice(t,1);break}let a;body[t].isInPortal=this.portalPair,this.portalPair.angle%(Math.PI/2)?Matter.Body.setPosition(body[t],this.portalPair.portal.position):Matter.Body.setPosition(body[t],this.portalPair.position),a=0!==this.portalPair.angle&&this.portalPair.angle!==Math.PI?Math.max(10,Math.min(50,.8*body[t].velocity.y))+11:Math.max(6,Math.min(50,Vector.magnitude(body[t].velocity)));let o=Vector.mult(this.portalPair.unit,a);Matter.Body.setVelocity(body[t],o)}};const c=composite[composite.length]=Bodies.rectangle(e.x,e.y,50,s,{isSensor:!0,angle:t,color:"hsla(197, 100%, 50%,0.7)",draw:draw}),p=composite[composite.length]=Bodies.rectangle(a.x,a.y,50,s,{isSensor:!0,angle:o,color:"hsla(29, 100%, 50%, 0.7)",draw:draw}),r=composite[composite.length]=Bodies.rectangle(e.x-.5*l.x*n,e.y-.5*l.y*n,n,160,{collisionFilter:{category:cat.map,mask:cat.bullet|cat.powerUp|cat.mob|cat.mobBullet},unit:l,angle:t,color:color.map,draw:draw,query:query,lastPortalCycle:0});Matter.Body.setStatic(r,!0),Composite.add(engine.world,r);const h=composite[composite.length]=Bodies.rectangle(a.x-.5*i.x*n,a.y-.5*i.y*n,n,160,{collisionFilter:{category:cat.map,mask:cat.bullet|cat.powerUp|cat.mob|cat.mobBullet},unit:i,angle:o,color:color.map,draw:draw,query:query,lastPortalCycle:0});return Matter.Body.setStatic(h,!0),Composite.add(engine.world,h),r.portal=c,h.portal=p,r.portalPair=h,h.portalPair=r,[c,p,r,h]}({x:3825,y:-1e3},3*Math.PI,{x:550,y:-100},3*Math.PI);function w(e,t,a,o,s,n){return{move:{x:s,y:n},min:{x:e,y:t},max:{x:e+a,y:t+o},width:a,height:o,maxHeight:o,isOn:!0,query(){this.isOn&&(ctx.lineWidth=5,ctx.strokeStyle=`hsla(0, 100%, 50%,${.6+.4*Math.random()})`,ctx.strokeRect(this.min.x,this.min.y,this.width,this.height),this.height>0&&Matter.Query.region([player],this).length&&(Matter.Body.setVelocity(player,{x:0,y:0}),Matter.Body.setPosition(player,{x:this.move.x,y:this.move.y}),m.energy=m.maxEnergy))}}}function y(e,t,a,o){return{min:{x:e,y:t},max:{x:e+a,y:t+o},width:a,height:o,maxHeight:o,isOn:!0,query(){this.isOn&&(ctx.fillStyle="rgba(0, 250, 250, 0.55)",ctx.fillRect(this.min.x,this.min.y,this.width,this.height),this.height>0&&Matter.Query.region([player],this).length&&input.field&&(player.force.y-=.015,m.energy=m.maxEnergy),ctx.fillStyle="rgba(0, 250, 250)",ctx.fillRect(this.min.x+this.width*Math.random(),this.min.y,5,this.height))}}}function x(e,t,a,o){return{min:{x:e,y:t},max:{x:e+a,y:t+o},width:a,height:o,maxHeight:o,isOn:!0,query(){this.isOn&&(ctx.fillStyle="rgba(0, 250, 0, 0.11)",ctx.fillRect(this.min.x,this.min.y,this.width,this.height),this.height>0&&Matter.Query.region([player],this).length&&(m.energy=m.maxEnergy,r.x=this.min.x+this.width/2,r.y=this.min.y+this.height/2))}}}level.custom=()=>{d[2].query(),d[3].query(),d[0].draw(),d[1].draw(),d[2].draw(),d[3].draw(),l.query(),i.query(),c.query(),input.field&&player.position.x<775&&player.position.x>-50&&(m.energy>.02?m.energy-=.01:input.field=!1),level.exit.drawAndCheck(),level.enter.draw(),o.query(),o.draw(),o.isUp?o.isUp&&(s.isClosing=!1,n.isClosing=!0):(s.isClosing=!0,n.isClosing=!1),s.draw(),s.openClose(),n.draw(),n.openClose();for(let e=0;e<a.length;e++)a[e].query();for(let e=0;e<p.length;e++)p[e].query();ctx.fillStyle="gray",ctx.fillRect(1175,-6650,2400,2375),ctx.drawImage(h,2125,-5712.5,500,500),m.immuneCycle>m.cycle&&(m.energy=m.maxEnergy,Matter.Body.setPosition(player,{x:r.x,y:r.y}))},level.customTopLayer=()=>{},spawn.mapRect(-100,0,5100,100),spawn.mapRect(-100,-1e4,5100,100),spawn.mapRect(4900,-1e4,100,10100),spawn.mapRect(-100,-1e4,100,9800),spawn.mapRect(-100,-9525,450,100),spawn.mapRect(725,-300,100,400),spawn.mapRect(725,-1e4,100,9500),spawn.mapRect(-100,-300,925,100),spawn.mapRect(800,-675,3675,100),spawn.mapRect(4375,-1425,100,850),spawn.mapRect(1350,-1425,3125,100),spawn.mapRect(1350,-1425,100,600),spawn.mapRect(1350,-925,2700,100),spawn.mapRect(1575,-1175,2475,100),spawn.mapRect(3950,-1175,100,350),spawn.mapRect(4375,-2725,100,1400),spawn.mapRect(775,-2725,2325,100),spawn.mapRect(3200,-2725,1275,100),spawn.mapRect(3200,-3975,100,1350),spawn.mapRect(4375,-3950,100,1125),spawn.mapRect(4375,-3975,625,100),spawn.mapRect(3200,-4325,100,450),spawn.mapRect(3200,-4325,1600,100),spawn.mapRect(4450,-2725,50,25),spawn.mapRect(1125,-3025,2175,100),spawn.mapRect(725,-3925,2175,100),spawn.mapRect(3525,-6700,100,2475),spawn.mapRect(4150,-6700,100,2475),spawn.mapRect(1125,-6700,2500,105),spawn.mapRect(1125,-6700,100,2625),spawn.mapRect(1500,-8775,100,2175),spawn.mapRect(4150,-8775,100,1900),spawn.mapRect(1775,-8775,2475,100),spawn.mapRect(4225,-6700,50,25),spawn.mapRect(4150,-8775,850,100),spawn.mapRect(3600,-2825,125,125),spawn.mapRect(3275,-3050,125,125),spawn.mapRect(3600,-3275,125,125),spawn.mapRect(3300,-3525,125,125),spawn.mapRect(3575,-3725,900,125),spawn.mapRect(4075,-3775,75,75),spawn.mapRect(4225,-3875,75,175),spawn.mapRect(3600,-6625,100,100),spawn.mapRect(4075,-6475,100,100),spawn.mapRect(3600,-6300,100,100),spawn.mapRect(4075,-6175,100,100),spawn.mapRect(3600,-6e3,100,100),spawn.mapRect(4075,-5875,100,100),spawn.mapRect(3600,-5700,100,100),spawn.mapRect(4075,-5550,100,100),spawn.mapRect(3600,-5400,100,1125),spawn.mapRect(3675,-5300,100,1025),spawn.mapRect(3750,-5225,100,950),spawn.mapRect(3825,-5150,100,875),spawn.mapRect(3900,-5075,100,800),spawn.mapRect(3975,-5e3,100,725),spawn.mapRect(4050,-4925,125,650),spawn.mapRect(4150,-6925,75,125),spawn.mapRect(1775,-8775,100,1900),spawn.mapRect(1775,-9950,100,975),spawn.mapRect(1500,-9950,100,975),spawn.mapRect(1275,-8775,325,100),spawn.mapRect(1200,-7775,25,1175),spawn.mapRect(1250,-7950,25,1350),spawn.mapRect(1300,-8175,25,1575),spawn.mapRect(1350,-8500,25,1900),spawn.mapRect(1400,-8625,25,2025),spawn.mapRect(1450,-8700,25,2100),spawn.mapRect(1150,-7625,25,1025),spawn.mapRect(1125,-4325,2175,100),spawn.mapRect(4250,-925,150,100),spawn.mapRect(575,-225,175,50),spawn.mapRect(575,-50,175,75),spawn.mapRect(-25,50,125,100),spawn.mapRect(75,75,50,50),spawn.sniper(3600,-7300),spawn.sniper(3325,-7475),spawn.sniper(2825,-7500),spawn.sniper(2250,-7450),spawn.sniper(4125,-5150),spawn.sniper(4100,-5675),spawn.sniper(4100,-5950),spawn.sniper(4125,-6325),spawn.sniper(3875,-6975),spawn.stabber(4075,-4075),spawn.stabber(3775,-3950),spawn.stabber(3500,-3850),spawn.stabber(4e3,-3500),spawn.stabber(3850,-3125),spawn.stabber(3450,-3125),spawn.stabber(4225,-2900),spawn.hopper(4125,-250),spawn.hopper(3525,-250),spawn.hopper(2925,-325),spawn.hopper(2175,-150),spawn.hopper(1175,-400),spawn.mantisBoss(3425,-9350),spawn.pulsarBoss(1725,-6050,1),spawn.pulsarBoss(1800,-4850,1),spawn.pulsarBoss(3e3,-4825,1),spawn.pulsarBoss(2975,-6175,1),spawn.spinner(2025,-4050),spawn.spinner(2125,-2825),spawn.pulsar(2450,-3775),spawn.pulsar(2200,-3750),spawn.pulsar(1900,-3775),spawn.pulsar(1600,-3725),spawn.pulsar(1300,-3750),spawn.pulsar(925,-3725),spawn.focuser(3925,-2375),spawn.focuser(1150,-2450),spawn.focuser(2450,-1675),spawn.mapVertex(-850,500,"0 0 500 0 250 500"),spawn.mapVertex(-1775,250,"0 0 500 0 250 500"),spawn.bodyRect(25,-375,50,50)},trainingTemplate(){m.addHealth(1/0),document.getElementById("health").style.display="none",document.getElementById("health-bg").style.display="none",document.getElementById("defense-bar").style.display="none",document.getElementById("damage-bar").style.display="none",level.setPosToSpawn(60,-50),spawn.mapRect(10,-10,100,20),level.exit.x=1775,level.exit.y=-35,spawn.mapRect(level.exit.x,level.exit.y+25,100,100),simulation.zoomScale=1400,level.defaultZoom=1400,simulation.zoomTransition(level.defaultZoom,1),document.body.style.backgroundColor=level.trainingBackgroundColor;let e=0;level.trainingText(`press <strong class="key-input-train">${input.key.down.replace("Key","").replace("Digit","")}</strong> to crouch`),level.custom=()=>{0===e&&input.down&&(e++,level.trainingText(`<s>press <strong class="key-input-train">${input.key.down.replace("Key","").replace("Digit","")}</strong> to crouch</s>`)),ctx.fillStyle="#f2f2f2",ctx.fillRect(1600,-400,400,400),level.enter.draw(),level.exit.drawAndCheck()},level.customTopLayer=()=>{ctx.fillStyle="rgba(0,255,255,0.05)",ctx.fillRect(1600,-400,400,400)},spawn.mapRect(-2750,-2800,2600,4600),spawn.mapRect(2e3,-2800,2600,4600),spawn.mapRect(-250,50,3500,1750),spawn.mapRect(-200,0,950,100),spawn.mapRect(1575,0,500,100),spawn.mapRect(-250,-2800,3500,2200),spawn.mapRect(725,12,50,25),spawn.mapRect(725,25,75,25),spawn.mapRect(750,38,75,25),spawn.mapRect(1525,25,75,50),spawn.mapRect(1500,38,50,25),spawn.mapRect(1550,12,50,25),spawn.mapRect(1600,-1200,500,850),spawn.mapRect(1600,-400,50,225)}};