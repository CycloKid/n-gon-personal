let player,jumpSensor,playerBody,playerHead,headSensor;const m={spawn(){let e=Vertices.fromPath("0,40, 50,40, 50,115, 30,130, 20,130, 0,115, 0,40");playerBody=Bodies.fromVertices(0,0,e),jumpSensor=Bodies.rectangle(0,46,36,6,{sleepThreshold:99999999999,isSensor:!0}),e=Vertices.fromPath("16 -82  2 -66  2 -37  43 -37  43 -66  30 -82"),playerHead=Bodies.fromVertices(0,-55,e),headSensor=Bodies.rectangle(0,-57,48,45,{sleepThreshold:99999999999,isSensor:!0}),player=Body.create({parts:[playerBody,playerHead,jumpSensor,headSensor],inertia:1/0,friction:.002,frictionAir:.001,restitution:0,sleepThreshold:1/0,collisionFilter:{group:0,category:cat.player,mask:cat.body|cat.map|cat.mob|cat.mobBullet|cat.mobShield}}),Matter.Body.setMass(player,m.mass),Composite.add(engine.world,[player])},cycle:600,lastKillCycle:0,lastHarmCycle:0,width:50,radius:30,eyeFillColor:null,fillColor:null,fillColorDark:null,bodyGradient:null,color:{hue:0,sat:0,light:100},setFillColors(){m.fillColor=`hsl(${m.color.hue},${m.color.sat}%,${m.color.light}%)`,m.fillColorDark=`hsl(${m.color.hue},${m.color.sat}%,${m.color.light-25}%)`;let e=ctx.createLinearGradient(-30,0,30,0);e.addColorStop(0,m.fillColorDark),e.addColorStop(1,m.fillColor),m.bodyGradient=e},height:42,yOffWhen:{crouch:22,stand:49,jump:70},defaultMass:5,mass:5,FxNotHolding:.015,Fx:.016,jumpForce:.42,setMovement(){m.Fx=tech.baseFx*m.fieldFx*m.squirrelFx*(tech.isFastTime?1.5:1)/player.mass,m.jumpForce=tech.baseJumpForce*m.fieldJump*m.squirrelJump*(tech.isFastTime?1.13:1)/player.mass/player.mass},FxAir:.016,yOff:70,yOffGoal:70,onGround:!1,lastOnGroundCycle:0,coyoteCycles:5,hardLanding:130,squirrelFx:1,squirrelJump:1,velocitySmooth:{x:0,y:0},standingOn:void 0,numTouching:0,crouch:!1,spawnPos:{x:0,y:0},spawnVel:{x:0,y:0},pos:{x:0,y:0},yPosDifference:24.2859,Sy:0,Vx:0,Vy:0,friction:{ground:.01,air:.0025},airSpeedLimit:125,angle:0,walk_cycle:0,stepSize:0,flipLegs:-1,hip:{x:12,y:24},knee:{x:0,y:0,x2:0,y2:0},foot:{x:0,y:0},legLength1:55,legLength2:45,transX:0,transY:0,history:new Array(600),rewindCount:0,resetHistory(){const e={position:{x:player.position.x,y:player.position.y},velocity:{x:player.velocity.x,y:player.velocity.y},yOff:m.yOff,angle:m.angle,health:m.health,energy:m.energy,activeGun:b.activeGun};for(let t=0;t<600;t++)m.history[t]=e},move(){m.pos.x=player.position.x,m.pos.y=playerBody.position.y-m.yOff,m.Vx=player.velocity.x,m.Vy=player.velocity.y,m.history.splice(simulation.cycle%600,1,{position:{x:player.position.x,y:player.position.y},velocity:{x:player.velocity.x,y:player.velocity.y},yOff:m.yOff,angle:m.angle,health:m.health,energy:m.energy,activeGun:b.activeGun})},transSmoothX:0,transSmoothY:0,lastGroundedPositionY:0,lookSmoothing:.07,look(){},lookDefault(){m.angle=Math.atan2(simulation.mouseInGame.y-m.pos.y,simulation.mouseInGame.x-m.pos.x);m.transSmoothX=canvas.width2-m.pos.x-.8*(simulation.mouse.x-canvas.width2),m.transSmoothY=canvas.height2-m.pos.y-.8*(simulation.mouse.y-canvas.height2),m.transX+=(m.transSmoothX-m.transX)*m.lookSmoothing,m.transY+=(m.transSmoothY-m.transY)*m.lookSmoothing},doCrouch(){m.crouch||(m.crouch=!0,m.yOffGoal=m.yOffWhen.crouch,playerHead.position.y-player.position.y<0&&Matter.Body.setPosition(playerHead,{x:player.position.x,y:player.position.y+9.1740767}))},undoCrouch(){m.crouch&&(m.crouch=!1,m.yOffGoal=m.yOffWhen.stand,playerHead.position.y-player.position.y>0&&Matter.Body.setPosition(playerHead,{x:player.position.x,y:player.position.y-30.28592321}))},hardLandCD:0,hardLandCDScale:1,checkHeadClear:()=>!(Matter.Query.collides(headSensor,map).length>0),buttonCD_jump:0,jump(){m.buttonCD_jump=m.cycle,m.cycle-m.lastOnGroundCycle<6&&Matter.Body.applyForce(m.standingOn,m.pos,{x:0,y:.12*m.jumpForce*Math.min(m.standingOn.mass,5)}),player.force.y=-m.jumpForce,Matter.Body.setVelocity(player,{x:player.velocity.x,y:Math.max(-10,Math.min(m.standingOn.velocity.y,10))})},moverX:0,groundControl(){m.crouch?!input.down&&m.checkHeadClear()&&m.hardLandCD<m.cycle&&m.undoCrouch():input.down||m.hardLandCD>m.cycle?m.doCrouch():input.up&&m.buttonCD_jump+20<m.cycle&&m.jump();const e=player.velocity.x-m.moverX;if(input.left&&!input.right)player.force.x-=e>-2?1.5*m.Fx:m.Fx;else if(input.right&&!input.left)player.force.x+=e<2?1.5*m.Fx:m.Fx;else{const e=.92;Matter.Body.setVelocity(player,{x:.08*m.moverX+player.velocity.x*e,y:player.velocity.y*e})}if(Math.abs(e)>4){const e=!m.crouch||!input.down&&m.checkHeadClear()?.89:.65;Matter.Body.setVelocity(player,{x:m.moverX*(1-e)+player.velocity.x*e,y:player.velocity.y*e})}m.moverX=0},airControl(){input.up&&m.buttonCD_jump+20<m.cycle&&m.lastOnGroundCycle+m.coyoteCycles>m.cycle&&m.jump(),m.buttonCD_jump+60>m.cycle&&!input.up&&m.Vy<0&&Matter.Body.setVelocity(player,{x:player.velocity.x,y:.94*player.velocity.y}),input.left&&player.velocity.x>-m.airSpeedLimit/player.mass/player.mass&&(player.force.x-=m.FxAir),input.right&&player.velocity.x<m.airSpeedLimit/player.mass/player.mass&&(player.force.x+=m.FxAir)},printBlock(){const e=Math.floor(4+6*Math.random()*Math.random());body[body.length]=Matter.Bodies.polygon(m.pos.x,m.pos.y,e,8,{friction:.05,frictionAir:.001,collisionFilter:{category:0,mask:0},classType:"body",isPrinted:!0,radius:10,density:.002});const t=body[body.length-1];Composite.add(engine.world,t),m.throwCharge=4,m.holdingTarget=t,m.isHolding=!0,m.fieldUpgrades[4].endoThermic(.4)},alive:!1,isSwitchingWorlds:!1,switchWorlds(e=""){if(!m.isSwitchingWorlds){let t=0;for(let e=tech.tech.length-1;e>-1;e--)tech.tech[e].count>0&&!tech.tech[e].isLore&&!tech.tech[e].isNonRefundable&&!tech.tech[e].isAltRealityTech&&(t+=tech.tech[e].count);powerUps.boost.endCycle=0,simulation.isTextLogOpen=!1,tech.resetAllTech(),e&&tech.giveTech(e);for(let e=0;e<bullet.length;++e)Matter.Composite.remove(engine.world,bullet[e]);bullet=[],powerUps.research.count=Math.floor(powerUps.research.count*(.5+1.5*Math.random())),m.coupling=Math.floor(m.coupling*(.5+1.5*Math.random())),m.health=m.health*(1+.5*(Math.random()-.5)),m.health>1&&(m.health=1),m.setField(Math.ceil(Math.random()*(m.fieldUpgrades.length-1))),b.inventory=[],b.activeGun=null,b.inventoryGun=0;for(let e=0,t=b.guns.length;e<t;++e)b.guns[e].have=!1,b.guns[e].ammo!==1/0&&(b.guns[e].ammo=0,b.guns[e].ammoPack=b.guns[e].defaultAmmoPack);const o=1+Math.floor(Math.random()*Math.random()*7);for(let e=0;e<o;e++)b.giveGuns();for(let e=0,t=b.inventory.length;e<t;e++)b.guns[b.inventory[e]].ammo!==1/0&&(b.guns[b.inventory[e]].ammo=Math.floor(b.guns[b.inventory[e]].ammo*(.25+Math.random()+Math.random()+Math.random())));let l=()=>{if(m.cycle%10)m.alive?requestAnimationFrame(l):m.isSwitchingWorlds=!1;else if(t>0&&m.alive){t--;let e=[];for(let t=0,o=tech.tech.length;t<o;t++)if(tech.tech[t].count<tech.tech[t].maxCount&&tech.tech[t].allowed()&&!tech.tech[t].isBadRandomOption&&!tech.tech[t].isLore&&!tech.tech[t].isJunk)for(let o=0;o<tech.tech[t].frequency;o++)e.push(t);e.length>0&&tech.giveTech(e[Math.floor(Math.random()*e.length)]),requestAnimationFrame(l)}else m.isSwitchingWorlds=!1};requestAnimationFrame(l),b.respawnBots(),simulation.makeGunHUD(),simulation.updateTechHUD(),m.displayHealth(),simulation.isTextLogOpen=!0,m.drop(),simulation.paused&&build.pauseGrid()}},death(){if(tech.isImmortal){m.setMaxHealth(),m.health=1,simulation.wipe=function(){ctx.fillStyle="rgba(255,255,255,0)",ctx.fillRect(0,0,canvas.width,canvas.height)},level.isFlipped=!1,simulation.clearNow=!0,m.switchWorlds();const e=1e3;for(let t=0,o=5;t<o;t++)setTimeout(function(){simulation.wipe=function(){ctx.fillStyle="rgba(255,255,255,0)",ctx.fillRect(0,0,canvas.width,canvas.height)},simulation.isTextLogOpen=!0,simulation.inGameConsole("simulation.amplitude <span class='color-symbol'>=</span> 0."+(o-t-1),e),simulation.isTextLogOpen=!1,simulation.wipe=function(){ctx.fillStyle=`rgba(255,255,255,${(t+1)*(t+1)*.006})`,ctx.fillRect(0,0,canvas.width,canvas.height)}},(t+1)*e);setTimeout(function(){simulation.wipe=function(){ctx.clearRect(0,0,canvas.width,canvas.height)},simulation.isTextLogOpen=!0,simulation.inGameConsole("simulation.amplitude <span class='color-symbol'>=</span> null"),tech.isImmortal=!1},6*e)}else m.alive&&(m.storeTech(),m.alive=!1,simulation.paused=!0,m.health=0,simulation.ephemera=[],document.getElementById("defense-bar").style.display="none",document.getElementById("damage-bar").style.display="none",m.displayHealth(),document.getElementById("text-log").style.display="none",document.getElementById("fade-out").style.opacity=.9,setTimeout(function(){Composite.clear(engine.world),Engine.clear(engine),simulation.splashReturn()},5e3))},storeTech(){if(localSettings.isAllowed&&!simulation.isCheating){const e=[];for(i=0,len=b.inventory.length;i<len;i++)e.push(b.inventory[i]);const t=[];for(let e=0;e<tech.tech.length;e++)tech.tech[e].count>0&&!tech.tech[e].isNonRefundable&&t.push(tech.tech[e].name);t.length&&(localSettings.entanglement={fieldIndex:m.fieldMode,gunIndexes:e,techIndexes:t,position:{x:m.pos.x,y:m.pos.y},levelName:level.levels[level.onLevel],isHorizontalFlipped:simulation.isHorizontalFlipped},localSettings.isAllowed&&localStorage.setItem("localSettings",JSON.stringify(localSettings)))}},health:0,maxHealth:1,drawHealth(){m.health<1&&(ctx.fillStyle="rgba(100, 100, 100, 0.5)",ctx.fillRect(m.pos.x-m.radius,m.pos.y-50,60,10),ctx.fillStyle="#f00",ctx.fillRect(m.pos.x-m.radius,m.pos.y-50,60*m.health,10))},displayHealth(){id=document.getElementById("health"),id.style.width=Math.floor(300*m.maxHealth*Math.pow(Math.max(0,m.health)/m.maxHealth,1.4))+"px",m.health<0?id.style.borderRightColor="#f00":id.style.borderRightColor="rgb(51, 162, 125)"},addHealth(e){tech.isEnergyHealth||(m.health+=e*simulation.healScale*(level.isLowHeal?.5:1),m.health>m.maxHealth&&(m.health=m.maxHealth),m.displayHealth())},baseHealth:1,setMaxHealth(e){m.maxHealth=m.baseHealth+tech.extraMaxHealth+6*tech.isFallingDamage,m.maxHealth/=m.fieldUpgrades[1].energyHealthRatio,level.isReducedHealth&&(level.reducedHealthLost=Math.max(0,m.health-.5*m.maxHealth),m.maxHealth*=.5),document.getElementById("health-bg").style.width=`${Math.floor(300*m.maxHealth)}px`,document.getElementById("defense-bar").style.width=Math.floor(300*m.maxHealth*(1-m.defense()))+"px",e&&simulation.inGameConsole(`<span class='color-var'>m</span>.<span class='color-h'>maxHealth</span> <span class='color-symbol'>=</span> ${m.maxHealth.toFixed(2)}`),m.health>m.maxHealth&&(m.health=m.maxHealth),m.displayHealth()},defaultFPSCycle:0,immuneCycle:0,lastCalculatedDamage:0,lastCalculatedDefense:0,damageDone:1,damageReduction:1,defense(){let e=m.damageReduction*powerUps.difficulty.damageReduction;if(tech.energyDefense&&m.energy>1.99&&(e*=.1),powerUps.boost.isDefense&&powerUps.boost.endCycle>simulation.cycle&&(e*=.3),tech.isMaxHealthDefense&&(m.health===m.maxHealth||tech.isEnergyHealth&&m.energy>m.maxEnergy-.01)&&(e*=.1),tech.isDiaphragm&&(e*=.55+.35*Math.sin(.01*m.cycle)),tech.isHarmDarkMatter&&(e*=tech.isMoveDarkMatter||tech.isNotDarkMatter?.25:.4),tech.isImmortal&&(e*=.7),0!==m.fieldMode&&3!==m.fieldMode||(e*=.973**m.coupling),tech.isHarmReduceNoKill&&m.lastKillCycle+300<m.cycle&&(e*=.3),tech.isAddBlockMass&&m.isHolding&&(e*=.1),tech.isSpeedHarm&&tech.speedAdded+player.speed>.1&&(e*=1-Math.min(.01583*(tech.speedAdded+player.speed),.95)),tech.isHarmReduce&&input.field&&(e*=.1),tech.isNeutronium&&input.field&&m.fieldCDcycle<m.cycle&&(e*=.05),tech.isBotArmor&&(e*=.96**b.totalBots()),tech.isHarmArmor&&m.lastHarmCycle+600>m.cycle&&(e*=.4),tech.isNoFireDefense&&m.cycle>m.fireCDcycle+120&&(e*=.3),tech.isTurret&&m.crouch&&(e*=.3),tech.isFirstDer&&b.inventory[0]===b.activeGun&&(e*=.85**b.inventory.length),tech.isLowHealthDefense&&(e*=Math.pow(.2,Math.max(0,1-(tech.isEnergyHealth?m.energy/m.maxEnergy:m.health/m.maxHealth)))),tech.isRemineralize){const t=(simulation.cycle-tech.mineralLastCheck)/60;tech.mineralLastCheck=simulation.cycle,tech.mineralDamage=1+(tech.mineralDamage-1)*Math.pow(.9,t),tech.mineralDamageReduction=1-(1-tech.mineralDamageReduction)*Math.pow(.9,t),e*=tech.mineralDamageReduction}return tech.isInPilot&&m.fieldOn&&Vector.magnitude(Vector.sub(m.fieldPosition,m.pos))<m.fieldRadius+100&&(e*=.1),e*m.fieldHarmReduction},rewind(e){if(tech.isRewindGrenade){const t=50,o=m.cycle+t+10+30*tech.isPetalsExplode+21*tech.isCircleExplode;m.immuneCycle<o&&(m.immuneCycle=o);for(let o=1,l=Math.floor(4+e/40);o<l;o++){b.grenade(Vector.add(m.pos,{x:10*(Math.random()-.5),y:10*(Math.random()-.5)}),-o*Math.PI/l);const e=bullet[bullet.length-1];tech.isNeutronBomb?Matter.Body.setVelocity(e,{x:.3*e.velocity.x,y:.3*e.velocity.y}):tech.isVacuumBomb?(Matter.Body.setVelocity(e,{x:.5*e.velocity.x,y:.5*e.velocity.y}),e.endCycle=simulation.cycle+t):tech.isRPG?e.endCycle=simulation.cycle+10:(Matter.Body.setVelocity(e,{x:.5*e.velocity.x,y:.5*e.velocity.y}),e.endCycle=simulation.cycle+t)}}let t=m.history[(simulation.cycle-e)%600];Matter.Body.setPosition(player,t.position),Matter.Body.setVelocity(player,{x:t.velocity.x,y:t.velocity.y}),m.yOff=t.yOff,m.yOff<48?m.doCrouch():m.undoCrouch();for(let e=0;e<bullet.length;e++)bullet[e].botType&&(Matter.Body.setPosition(bullet[e],Vector.add(player.position,{x:250*(Math.random()-.5),y:250*(Math.random()-.5)})),Matter.Body.setVelocity(bullet[e],{x:0,y:0}));m.energy=Math.max(m.energy-e/330,.01),m.immuneCycle<m.cycle+m.collisionImmuneCycles&&(m.immuneCycle=m.cycle+m.collisionImmuneCycles);let o=!0;const l=function(){if(m.defaultFPSCycle<m.cycle)simulation.fpsCap=simulation.fpsCapDefault,simulation.fpsInterval=1e3/simulation.fpsCap,document.getElementById("dmg").style.transition="opacity 1s",document.getElementById("dmg").style.opacity="0";else if(requestAnimationFrame(l),o){o=!1,ctx.save(),ctx.globalCompositeOperation="lighter",ctx.translate(canvas.width2,canvas.height2),ctx.scale(simulation.zoom/simulation.edgeZoomOutSmooth,simulation.zoom/simulation.edgeZoomOutSmooth),ctx.translate(-canvas.width2+m.transX,-canvas.height2+m.transY);for(let o=1;o<e;o++)t=m.history[(simulation.cycle-o)%600],m.pos.x=t.position.x,m.pos.y=t.position.y+m.yPosDifference-t.yOff,m.yOff=t.yOff,m.draw();ctx.restore(),m.resetHistory()}};if(m.defaultFPSCycle<m.cycle&&requestAnimationFrame(l),simulation.fpsCap=3,simulation.fpsInterval=1e3/simulation.fpsCap,m.defaultFPSCycle=m.cycle,tech.isRewindBot){const t=.05*e*tech.isRewindBot,o=Math.floor(e/t);for(let e=0;e<t;e++){const t=m.history[Math.abs(m.cycle-e*o)%600].position;b.randomBot({x:t.x+20*(Math.random()-.5),y:t.y+20*(Math.random()-.5)},!1,!1),bullet[bullet.length-1].endCycle=simulation.cycle+440+Math.floor(120*Math.random())}}},collisionImmuneCycles:30,takeDamage(e,t=!0){if(tech.isRewindAvoidDeath&&m.energy+.05>Math.min(.95,m.maxEnergy)&&e>.01){const e=Math.floor(Math.min(299,150*m.energy));return simulation.inGameConsole(`<span class='color-var'>m</span>.rewind(${e})`),void m.rewind(e)}if(m.lastHarmCycle=m.cycle,tech.isDroneOnDamage&&bullet.length<180){const t=Math.min(95*(e-.045*Math.random()),65)/tech.droneEnergyReduction*(tech.isEnergyHealth?.5:1);for(let e=0;e<t;e++)Math.random()<.5&&b.drone({x:m.pos.x+30*Math.cos(m.angle)+100*(Math.random()-.5),y:m.pos.y+30*Math.sin(m.angle)+100*(Math.random()-.5)});m.fieldUpgrades[4].endoThermic(Math.min(5*e,1))}if(tech.isEnergyHealth){if(t&&(e*=Math.pow(m.defense(),.6)),e=Math.min(e,.49*m.maxHealth),m.energy-=e,m.energy<0||isNaN(m.energy)){if(tech.isDeathAvoid&&powerUps.research.count&&!tech.isDeathAvoidedThisLevel){tech.isDeathAvoidedThisLevel=!0,powerUps.research.changeRerolls(-1),simulation.inGameConsole(`<span class='color-var'>m</span>.<span class='color-r'>research</span><span class='color-symbol'>--</span><br>${powerUps.research.count}`);for(let e=0;e<22;e++)powerUps.spawn(m.pos.x+100*(Math.random()-.5),m.pos.y+100*(Math.random()-.5),"heal",!1);m.energy=m.maxEnergy+.1,m.immuneCycle<m.cycle+300&&(m.immuneCycle=m.cycle+300),simulation.wipe=function(){ctx.fillStyle="rgba(255,255,255,0.03)",ctx.fillRect(0,0,canvas.width,canvas.height)},setTimeout(function(){simulation.wipe=function(){ctx.clearRect(0,0,canvas.width,canvas.height)}},3e3)}else m.health=0,m.energy=0,m.death();return}}else{if(t&&(e*=m.defense()),e=Math.min(e,.4*m.maxHealth),m.health-=e,tech.isEnergyNoAmmo&&m.health<.33)for(let e=0;e<tech.tech.length;e++)if("non-renewables"===tech.tech[e].name){powerUps.ejectTech(e);break}if(tech.crouchAmmoCount&&m.health<.33)for(let e=0;e<tech.tech.length;e++)if("desublimated ammunition"===tech.tech[e].name){powerUps.ejectTech(e);break}if(m.health<0||isNaN(m.health))if(tech.isDeathAvoid&&powerUps.research.count>0&&!tech.isDeathAvoidedThisLevel){tech.isDeathAvoidedThisLevel=!0,m.health=.05,powerUps.research.changeRerolls(-1),simulation.inGameConsole(`<span class='color-var'>m</span>.<span class='color-r'>research</span><span class='color-symbol'>--</span><br>${powerUps.research.count}`);for(let e=0;e<16;e++)powerUps.spawn(m.pos.x+100*(Math.random()-.5),m.pos.y+100*(Math.random()-.5),"heal",!1);m.immuneCycle<m.cycle+300&&(m.immuneCycle=m.cycle+300),simulation.wipe=function(){ctx.fillStyle="rgba(255,255,255,0.03)",ctx.fillRect(0,0,canvas.width,canvas.height)},setTimeout(function(){simulation.wipe=function(){ctx.clearRect(0,0,canvas.width,canvas.height)}},3e3)}else{if(!tech.isNoDeath)return m.health=0,m.displayHealth(),void m.death();tech.isDeathTech&&!tech.isDeathTechTriggered&&(tech.isDeathTechTriggered=!0,powerUps.spawn(player.position.x,player.position.y,"tech"),tech.addJunkTechToPool(.02))}m.displayHealth(),document.getElementById("dmg").style.transition="opacity 0s",document.getElementById("dmg").style.opacity=.1+Math.min(.6,4*e)}e>.03&&(m.lastHit=e,e>.06/m.holdingMassScale&&m.drop(),m.isCloak&&(m.fireCDcycle=m.cycle));const o=function(){m.defaultFPSCycle<m.cycle?(simulation.fpsCap=simulation.fpsCapDefault,simulation.fpsInterval=1e3/simulation.fpsCap,document.getElementById("dmg").style.transition="opacity 1s",document.getElementById("dmg").style.opacity="0"):requestAnimationFrame(o)};if(m.defaultFPSCycle<m.cycle&&requestAnimationFrame(o),e>.05){if(simulation.fpsCap=4,simulation.fpsInterval=1e3/simulation.fpsCap,tech.isHarmFreeze)for(let e=0,t=mob.length;e<t;e++)mobs.statusSlow(mob[e],480)}else simulation.fpsCap=simulation.fpsCapDefault,simulation.fpsInterval=1e3/simulation.fpsCap;if(m.defaultFPSCycle=m.cycle,level.isMobHealPlayerDamage)for(let t=0;t<mob.length;t++)mob[t].health<1&&mob[t].isDropPowerUp&&mob[t].alive&&(simulation.drawList.push({x:mob[t].position.x,y:mob[t].position.y,radius:mob[t].radius+20,color:"rgba(0,255,100,0.5)",time:10}),mob[t].health+=7*e,mob[t].health>1&&(mob[t].health=1))},buttonCD:0,drawLeg(e){},calcLeg(e,t){m.hip.x=12+t,m.hip.y=24+t,m.stepSize=.8*m.stepSize+7*Math.sqrt(Math.min(9,Math.abs(m.Vx)))*m.onGround*.2;const o=.034*m.walk_cycle+e;m.foot.x=2.2*m.stepSize*Math.cos(o)+t,m.foot.y=t+1.2*m.stepSize*Math.sin(o)+m.yOff+m.height;const l=m.yOff+m.height;m.foot.y>l&&(m.foot.y=l);const i=Math.sqrt((m.hip.x-m.foot.x)*(m.hip.x-m.foot.x)+(m.hip.y-m.foot.y)*(m.hip.y-m.foot.y)),a=(m.legLength1*m.legLength1-m.legLength2*m.legLength2+i*i)/(2*i),s=Math.sqrt(m.legLength1*m.legLength1-a*a);m.knee.x=a/i*(m.foot.x-m.hip.x)-s/i*(m.foot.y-m.hip.y)+m.hip.x+t,m.knee.y=a/i*(m.foot.y-m.hip.y)+s/i*(m.foot.x-m.hip.x)+m.hip.y},draw(){},isAltSkin:!1,drawBoost(){},resetSkin(){simulation.isAutoZoom=!0,m.hardLandCDScale=1,m.yOffWhen.jump=70,m.yOffWhen.stand=49,m.yOffWhen.crouch=22,m.isAltSkin=!1,m.coyoteCycles=5,m.hardLanding=130,m.squirrelFx=1,m.squirrelJump=1,m.velocitySmooth={x:0,y:0},requestAnimationFrame(()=>{m.setMovement()}),m.color={hue:0,sat:0,light:100},m.setFillColors(),m.draw=function(){ctx.fillStyle=m.fillColor,m.walk_cycle+=m.flipLegs*m.Vx,ctx.save(),ctx.globalAlpha=m.immuneCycle<m.cycle?1:m.cycle%3?.1:.65+.1*Math.random(),ctx.translate(m.pos.x,m.pos.y),m.calcLeg(Math.PI,-3),m.drawLeg("#4a4a4a"),m.calcLeg(0,0),m.drawLeg("#333"),ctx.rotate(m.angle),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.arc(15,0,4,0,2*Math.PI),ctx.strokeStyle="#333",ctx.lineWidth=2,ctx.stroke(),ctx.restore(),m.yOff=.85*m.yOff+.15*m.yOffGoal,powerUps.boost.draw()},m.drawLeg=function(e){m.angle>-Math.PI/2&&m.angle<Math.PI/2?m.flipLegs=1:m.flipLegs=-1,ctx.save(),ctx.scale(m.flipLegs,1),ctx.beginPath(),ctx.moveTo(m.hip.x,m.hip.y),ctx.lineTo(m.knee.x,m.knee.y),ctx.lineTo(m.foot.x,m.foot.y),ctx.strokeStyle=e,ctx.lineWidth=5,ctx.stroke(),ctx.beginPath(),ctx.moveTo(m.foot.x,m.foot.y),m.onGround?(ctx.lineTo(m.foot.x-14,m.foot.y+5),ctx.moveTo(m.foot.x,m.foot.y),ctx.lineTo(m.foot.x+14,m.foot.y+5)):(ctx.lineTo(m.foot.x-12,m.foot.y+8),ctx.moveTo(m.foot.x,m.foot.y),ctx.lineTo(m.foot.x+12,m.foot.y+8)),ctx.lineWidth=4,ctx.stroke(),ctx.beginPath(),ctx.arc(m.hip.x,m.hip.y,9,0,2*Math.PI),ctx.moveTo(m.knee.x+5,m.knee.y),ctx.arc(m.knee.x,m.knee.y,5,0,2*Math.PI),ctx.moveTo(m.foot.x+4,m.foot.y+1),ctx.arc(m.foot.x,m.foot.y+1,4,0,2*Math.PI),ctx.fillStyle=m.fillColor,ctx.fill(),ctx.lineWidth=2,ctx.stroke(),ctx.restore()}},skin:{none(){m.isAltSkin=!0},favicon(){m.yOffWhen.jump=70,m.yOffWhen.stand=49,m.yOffWhen.crouch=22,m.isAltSkin=!1,m.fillColor=`hsl(${m.color.hue},${m.color.sat}%,${m.color.light}%)`,m.fillColorDark=`hsl(${m.color.hue},${m.color.sat}%,${m.color.light-10}%)`;let e=ctx.createLinearGradient(-30,0,30,0);e.addColorStop(0,m.fillColorDark),e.addColorStop(1,m.fillColor),m.bodyGradient=e,m.draw=function(){ctx.fillStyle=m.fillColor,m.walk_cycle+=m.flipLegs*m.Vx,ctx.save(),ctx.globalAlpha=m.immuneCycle<m.cycle?1:m.cycle%3?.1:.65+.1*Math.random(),ctx.translate(m.pos.x,m.pos.y),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.arc(12,0,4.5,0,2*Math.PI),ctx.strokeStyle="#333",ctx.lineWidth=4.5,ctx.stroke(),ctx.restore(),m.yOff=.85*m.yOff+.15*m.yOffGoal,powerUps.boost.draw()}},egg(){m.isAltSkin=!0,m.yOffWhen.stand=52,m.yOffWhen.jump=72,m.squirrelJump=1.15,m.setMovement(),m.draw=function(){if(powerUps.boost.endCycle>simulation.cycle){ctx.save(),ctx.translate(m.pos.x,m.pos.y),m.velocitySmooth=Vector.add(Vector.mult(m.velocitySmooth,.8),Vector.mult(player.velocity,.2)),ctx.rotate(Math.atan2(m.velocitySmooth.y,m.velocitySmooth.x)),ctx.beginPath();const e=39,t=14*Vector.magnitude(m.velocitySmooth)+e;ctx.arc(0,0,e,-Math.PI/2,Math.PI/2),ctx.bezierCurveTo(-e,e,-e,0,-t,0),ctx.bezierCurveTo(-e,0,-e,-e,0,-e);const o=Math.min(.5,(powerUps.boost.endCycle-simulation.cycle)/powerUps.boost.duration);ctx.fillStyle=`rgba(0,0,0,${.04+.3*o})`,ctx.fill(),ctx.restore()}m.walk_cycle+=m.flipLegs*m.Vx,ctx.save(),ctx.globalAlpha=m.immuneCycle<m.cycle?1:m.cycle%3?.1:.65+.1*Math.random(),ctx.translate(m.pos.x,m.pos.y),m.calcLeg(Math.PI,-1.25),m.drawLeg("#606060"),m.calcLeg(0,0),m.drawLeg("#444"),ctx.rotate(m.angle),ctx.beginPath(),ctx.ellipse(0,0,.9*31,1.05*31,0,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.ellipse(15,0,3.2,4.4,0,0,2*Math.PI),ctx.strokeStyle="#333",ctx.lineWidth=2,ctx.stroke(),ctx.restore(),m.yOff=.75*m.yOff+.25*m.yOffGoal},m.drawLeg=function(e){m.angle>-Math.PI/2&&m.angle<Math.PI/2?m.flipLegs=1:m.flipLegs=-1;const t={x:m.hip.x-5,y:m.hip.y+5},o=Vector.sub(m.knee,t),l=Vector.mult(Vector.rotate(Vector.normalise(o),Math.PI/2),8),i=Vector.add(t,l),a=Vector.add(i,Vector.mult(o,.9)),s={x:m.foot.x-10,y:m.foot.y-15};ctx.save(),ctx.scale(m.flipLegs,1),ctx.beginPath(),ctx.moveTo(t.x,t.y),ctx.lineTo(m.knee.x,m.knee.y),ctx.lineTo(s.x,s.y),ctx.moveTo(i.x,i.y),ctx.lineTo(a.x,a.y),ctx.lineTo(m.knee.x,m.knee.y),ctx.strokeStyle=e,ctx.lineWidth=3,ctx.stroke(),ctx.beginPath(),ctx.moveTo(s.x,s.y),ctx.quadraticCurveTo(m.foot.x-30,m.foot.y+12,m.foot.x+13,m.foot.y+3),ctx.lineWidth=1.5,ctx.stroke(),ctx.beginPath(),ctx.arc(m.hip.x,m.hip.y-2,11,0,2*Math.PI),ctx.moveTo(m.knee.x+3,m.knee.y),ctx.arc(m.knee.x,m.knee.y,3,0,2*Math.PI),ctx.moveTo(a.x+2.5,a.y),ctx.arc(a.x,a.y,2.5,0,2*Math.PI),ctx.moveTo(s.x+2.5,s.y),ctx.arc(s.x,s.y,2.5,0,2*Math.PI),ctx.fillStyle="#f6f6f6",ctx.fill(),ctx.lineWidth=1,ctx.stroke(),ctx.restore()}},mech(){m.isAltSkin=!0,m.yOffWhen.stand=52,m.yOffWhen.jump=72,m.coyoteCycles=11+120*tech.isCoyote,m.hardLandCDScale=.5,m.hardLanding=160,m.squirrelFx=1.4,m.squirrelJump=1.16,m.setMovement(),m.draw=function(){if(powerUps.boost.endCycle>simulation.cycle){ctx.save(),ctx.translate(m.pos.x,m.pos.y),m.velocitySmooth=Vector.add(Vector.mult(m.velocitySmooth,.8),Vector.mult(player.velocity,.2)),ctx.rotate(Math.atan2(m.velocitySmooth.y,m.velocitySmooth.x)),ctx.beginPath();const e=39,t=14*Vector.magnitude(m.velocitySmooth)+e;ctx.arc(0,0,e,-Math.PI/2,Math.PI/2),ctx.bezierCurveTo(-e,e,-e,0,-t,0),ctx.bezierCurveTo(-e,0,-e,-e,0,-e);const o=Math.min(.5,(powerUps.boost.endCycle-simulation.cycle)/powerUps.boost.duration);ctx.fillStyle=`rgba(0,0,0,${.04+.3*o})`,ctx.fill(),ctx.restore()}m.walk_cycle+=m.flipLegs*m.Vx,ctx.save(),ctx.globalAlpha=m.immuneCycle<m.cycle?1:m.cycle%3?.1:.65+.1*Math.random(),ctx.translate(m.pos.x,m.pos.y),m.calcLeg(Math.PI,-1.25),m.drawLeg("#606060"),m.calcLeg(0,0),m.drawLeg("#444"),ctx.rotate(m.angle),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.arc(15,0,4,0,2*Math.PI),ctx.strokeStyle="#333",ctx.lineWidth=2,ctx.stroke(),ctx.restore(),m.yOff=.75*m.yOff+.25*m.yOffGoal},m.drawLeg=function(e){m.angle>-Math.PI/2&&m.angle<Math.PI/2?m.flipLegs=1:m.flipLegs=-1;const t={x:m.hip.x-5,y:m.hip.y+5},o=Vector.sub(m.knee,t),l=Vector.mult(Vector.rotate(Vector.normalise(o),Math.PI/2),8),i=Vector.add(t,l),a=Vector.add(i,Vector.mult(o,.9)),s={x:m.foot.x-10,y:m.foot.y-15};ctx.save(),ctx.scale(m.flipLegs,1),ctx.beginPath(),ctx.moveTo(t.x,t.y),ctx.lineTo(m.knee.x,m.knee.y),ctx.lineTo(s.x,s.y),ctx.moveTo(i.x,i.y),ctx.lineTo(a.x,a.y),ctx.lineTo(m.knee.x,m.knee.y),ctx.strokeStyle=e,ctx.lineWidth=3,ctx.stroke(),ctx.beginPath(),ctx.moveTo(s.x,s.y),ctx.quadraticCurveTo(m.foot.x-30,m.foot.y+12,m.foot.x+13,m.foot.y+3),ctx.lineWidth=1.5,ctx.stroke(),m.coyoteCycles>30&&!m.onGround&&(ctx.lineWidth=.2*Math.max(0,Math.min(3*(m.cycle-m.lastOnGroundCycle),Math.min(120,m.lastOnGroundCycle+m.coyoteCycles-m.cycle))),ctx.strokeStyle="rgba(255, 255, 0, 0.3)",ctx.stroke()),ctx.beginPath(),ctx.arc(m.hip.x,m.hip.y-1,11,0,2*Math.PI),ctx.moveTo(m.knee.x+3,m.knee.y),ctx.arc(m.knee.x,m.knee.y,3,0,2*Math.PI),ctx.moveTo(a.x+2.5,a.y),ctx.arc(a.x,a.y,2.5,0,2*Math.PI),ctx.moveTo(s.x+2.5,s.y),ctx.arc(s.x,s.y,2.5,0,2*Math.PI),ctx.fillStyle=m.fillColor,ctx.fill(),ctx.lineWidth=1,ctx.stroke(),ctx.restore()}},polar(){m.isAltSkin=!0,m.fillColor=`hsl(${m.color.hue},${m.color.sat}%,${m.color.light}%)`,m.fillColorDark=`hsl(${m.color.hue},${m.color.sat}%,${m.color.light-35}%)`;let e=ctx.createLinearGradient(-30,0,30,0);e.addColorStop(0,m.fillColorDark),e.addColorStop(.7,m.fillColor),m.bodyGradient=e,m.draw=function(){ctx.fillStyle=m.fillColor,m.walk_cycle+=m.flipLegs*m.Vx,ctx.save(),ctx.globalAlpha=m.immuneCycle<m.cycle?1:m.cycle%3?.1:.65+.1*Math.random(),ctx.translate(m.pos.x,m.pos.y),m.calcLeg(Math.PI,-3);const e=(m.lastKillCycle-m.cycle+tech.isDamageCooldownTime)/tech.isDamageCooldownTime,t=e<0?"#fff":"#aaa",o=220+20*Math.sin(.01*m.cycle),l=e<0?`hsl(${o}, 80%, 40%)`:"#fff";m.drawLeg(t,l),m.calcLeg(0,0),m.drawLeg(t,l),ctx.rotate(m.angle),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=t,ctx.fill(),ctx.beginPath(),ctx.moveTo(15,0),ctx.lineTo(28,0),ctx.strokeStyle=l,ctx.lineWidth=4,ctx.stroke(),ctx.restore(),ctx.beginPath(),ctx.ellipse(m.pos.x,m.pos.y,24,18,3.14*Math.random(),0,2*Math.PI),ctx.fillStyle=e<0?`hsl(${o}, 80%, 40%)`:`rgba(255,255,255,${Math.min(Math.max(0,e+.3),1)})`,ctx.fill(),m.yOff=.85*m.yOff+.15*m.yOffGoal,powerUps.boost.draw()},m.drawLeg=function(e,t){m.angle>-Math.PI/2&&m.angle<Math.PI/2?m.flipLegs=1:m.flipLegs=-1,ctx.save(),ctx.scale(m.flipLegs,1),ctx.beginPath(),ctx.moveTo(m.hip.x,m.hip.y),ctx.lineTo(m.knee.x,m.knee.y),ctx.lineTo(m.foot.x,m.foot.y),ctx.strokeStyle=e,ctx.lineWidth=5,ctx.stroke(),ctx.beginPath(),ctx.moveTo(m.foot.x,m.foot.y),m.onGround?(ctx.lineTo(m.foot.x-15,m.foot.y+5),ctx.moveTo(m.foot.x,m.foot.y),ctx.lineTo(m.foot.x+15,m.foot.y+5)):(ctx.lineTo(m.foot.x-13,m.foot.y+8),ctx.moveTo(m.foot.x,m.foot.y),ctx.lineTo(m.foot.x+13,m.foot.y+8)),ctx.lineWidth=3,ctx.stroke(),ctx.beginPath(),ctx.arc(m.hip.x,m.hip.y,11,0,2*Math.PI),ctx.moveTo(m.knee.x+5,m.knee.y),ctx.arc(m.knee.x,m.knee.y,5,0,2*Math.PI),ctx.moveTo(m.foot.x+5,m.foot.y),ctx.arc(m.foot.x,m.foot.y,5,0,2*Math.PI),ctx.fillStyle=t,ctx.fill(),ctx.restore()}},strokeGap(){m.isAltSkin=!0,m.yOffWhen.stand=52,m.yOffWhen.jump=72,m.draw=function(){if(powerUps.boost.endCycle>simulation.cycle){ctx.save(),ctx.translate(m.pos.x,m.pos.y),m.velocitySmooth=Vector.add(Vector.mult(m.velocitySmooth,.8),Vector.mult(player.velocity,.2)),ctx.rotate(Math.atan2(m.velocitySmooth.y,m.velocitySmooth.x)),ctx.beginPath();const e=40,t=9*Vector.magnitude(m.velocitySmooth)+e;ctx.arc(0,0,e,-Math.PI/2,Math.PI/2),ctx.bezierCurveTo(-e,e,-e,0,-t,0),ctx.bezierCurveTo(-e,0,-e,-e,0,-e);const o=Math.min(.5,(powerUps.boost.endCycle-simulation.cycle)/powerUps.boost.duration);ctx.fillStyle=`rgba(255,255,255,${.3+o})`,ctx.fill(),ctx.strokeStyle="#446",ctx.lineWidth=.2+4*o,ctx.stroke(),ctx.restore()}m.walk_cycle+=m.flipLegs*m.Vx,ctx.save(),ctx.globalAlpha=m.immuneCycle<m.cycle?1:m.cycle%3?.1:.65+.1*Math.random(),ctx.translate(m.pos.x,m.pos.y),m.calcLeg(Math.PI,-1.25),m.drawLeg("#606080"),m.calcLeg(0,0),m.drawLeg("#446"),ctx.rotate(m.angle),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle="#fff",ctx.fill(),ctx.beginPath();const e=.7+.17*Math.sin(.012*m.cycle);ctx.arc(0,0,30,-e,e,!0),ctx.strokeStyle="#446",ctx.lineWidth=2,ctx.stroke(),ctx.beginPath(),ctx.moveTo(13,0),ctx.lineTo(20,0),ctx.lineWidth=5,ctx.stroke(),ctx.restore(),m.yOff=.85*m.yOff+.15*m.yOffGoal},m.drawLeg=function(e){m.angle>-Math.PI/2&&m.angle<Math.PI/2?m.flipLegs=1:m.flipLegs=-1,ctx.save(),ctx.scale(m.flipLegs,1),ctx.beginPath(),ctx.moveTo(m.hip.x,m.hip.y),ctx.lineTo(m.knee.x,m.knee.y),ctx.lineTo(m.foot.x,m.foot.y),ctx.strokeStyle=e,ctx.lineWidth=5,ctx.stroke(),ctx.beginPath(),ctx.moveTo(m.foot.x,m.foot.y),m.onGround?(ctx.lineTo(m.foot.x-14,m.foot.y+5),ctx.moveTo(m.foot.x,m.foot.y),ctx.lineTo(m.foot.x+14,m.foot.y+5)):(ctx.lineTo(m.foot.x-12,m.foot.y+8),ctx.moveTo(m.foot.x,m.foot.y),ctx.lineTo(m.foot.x+12,m.foot.y+8)),ctx.lineWidth=4,ctx.stroke(),ctx.beginPath(),ctx.arc(m.hip.x,m.hip.y,8,0,2*Math.PI),ctx.moveTo(m.knee.x+4,m.knee.y),ctx.arc(m.knee.x,m.knee.y,4,0,2*Math.PI),ctx.moveTo(m.foot.x+4,m.foot.y+1),ctx.arc(m.foot.x,m.foot.y+1,4,0,2*Math.PI),ctx.fillStyle=m.fillColor,ctx.fill(),ctx.lineWidth=2,ctx.stroke(),ctx.restore()}},energy(){m.isAltSkin=!0,m.color={hue:184,sat:100,light:85},m.setFillColors(),m.draw=function(){if(powerUps.boost.endCycle>simulation.cycle){ctx.save(),ctx.translate(m.pos.x,m.pos.y),m.velocitySmooth=Vector.add(Vector.mult(m.velocitySmooth,.8),Vector.mult(player.velocity,.2)),ctx.rotate(Math.atan2(m.velocitySmooth.y,m.velocitySmooth.x)),ctx.beginPath();const e=40,t=10*Vector.magnitude(m.velocitySmooth)+e;ctx.arc(0,0,e,-Math.PI/2,Math.PI/2),ctx.bezierCurveTo(-e,e,-e,0,-t,0),ctx.bezierCurveTo(-e,0,-e,-e,0,-e);const o=Math.min(.5,(powerUps.boost.endCycle-simulation.cycle)/powerUps.boost.duration);ctx.fillStyle=`hsla(184,100%,70%,${.1+1.5*o})`,ctx.fill(),ctx.strokeStyle="#035",ctx.lineWidth=.2+3*o,ctx.stroke(),ctx.restore()}ctx.fillStyle=m.fillColor,m.walk_cycle+=m.flipLegs*m.Vx,ctx.save(),ctx.globalAlpha=m.immuneCycle<m.cycle?1:m.cycle%3?.1:.65+.1*Math.random(),ctx.translate(m.pos.x,m.pos.y),m.calcLeg(Math.PI,-3),m.drawLeg("#456"),m.calcLeg(0,0),m.drawLeg("#345"),ctx.rotate(m.angle),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.strokeStyle="rgba(0,255,255,0.25)",ctx.lineWidth=15,ctx.stroke(),ctx.fillStyle="hsl(184,100%,85%)",ctx.fill(),ctx.beginPath(),ctx.arc(17,0,5.5,0,2*Math.PI),ctx.fillStyle="#357",ctx.fill(),ctx.restore(),m.yOff=.85*m.yOff+.15*m.yOffGoal},m.drawLeg=function(e){m.angle>-Math.PI/2&&m.angle<Math.PI/2?m.flipLegs=1:m.flipLegs=-1,ctx.save(),ctx.scale(m.flipLegs,1),ctx.beginPath(),ctx.moveTo(m.hip.x,m.hip.y),ctx.lineTo(m.knee.x,m.knee.y),ctx.lineTo(m.foot.x,m.foot.y),ctx.strokeStyle=e,ctx.lineWidth=5,ctx.stroke(),ctx.beginPath(),ctx.moveTo(m.foot.x,m.foot.y),m.onGround?(ctx.lineTo(m.foot.x-15,m.foot.y+5),ctx.moveTo(m.foot.x,m.foot.y),ctx.lineTo(m.foot.x+15,m.foot.y+5)):(ctx.lineTo(m.foot.x-13,m.foot.y+8),ctx.moveTo(m.foot.x,m.foot.y),ctx.lineTo(m.foot.x+13,m.foot.y+8)),ctx.lineWidth=3,ctx.stroke(),ctx.beginPath(),ctx.arc(m.hip.x,m.hip.y,10,0,2*Math.PI),ctx.moveTo(m.knee.x+6,m.knee.y),ctx.arc(m.knee.x,m.knee.y,6,0,2*Math.PI),ctx.moveTo(m.foot.x+5,m.foot.y),ctx.arc(m.foot.x,m.foot.y+1,5,0,2*Math.PI),ctx.strokeStyle="rgba(0,255,255,0.25)",ctx.lineWidth=6,ctx.stroke(),ctx.fillStyle=m.fillColor,ctx.fill(),ctx.restore()}},tungsten(){m.hardLandCDScale=2,m.hardLanding=60,m.isAltSkin=!0,m.color={hue:210,sat:5,light:75},m.fillColor=`hsl(${m.color.hue},${m.color.sat}%,${m.color.light}%)`,m.fillColorDark=`hsl(${m.color.hue},${m.color.sat}%,${m.color.light-50}%)`;const e=ctx.createLinearGradient(-30,-5,30,10);e.addColorStop(0,"#e0e0e0"),e.addColorStop(.3,"#bbb"),e.addColorStop(.4,"#b3b3b3"),e.addColorStop(.5,"#c5c5c5"),e.addColorStop(.65,"#bbb"),e.addColorStop(.7,"#b3b3b3"),e.addColorStop(.75,"#bbb"),e.addColorStop(1,"#e0e0e0"),m.bodyGradient=e,m.draw=function(){ctx.fillStyle=m.fillColor,m.walk_cycle+=m.flipLegs*m.Vx,ctx.save(),ctx.globalAlpha=m.immuneCycle<m.cycle?1:m.cycle%3?.1:.65+.1*Math.random(),ctx.translate(m.pos.x,m.pos.y),m.calcLeg(4.2,-3),m.drawLeg("#666"),m.calcLeg(2.1,-1),m.drawLeg("#5f5f5f"),m.calcLeg(0,1),m.drawLeg("#555"),ctx.rotate(m.angle);ctx.beginPath(),ctx.lineTo(33,0),ctx.lineTo(16.5,28.578),ctx.lineTo(-16.5,28.578),ctx.lineTo(-33,0),ctx.lineTo(-16.5,-28.578),ctx.lineTo(16.5,-28.578),ctx.lineTo(33,0),ctx.lineTo(16.5,0),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.strokeStyle="#333",ctx.lineWidth=1.5,ctx.stroke(),ctx.beginPath(),ctx.arc(15,0,3,0,2*Math.PI),ctx.fillStyle="#333",ctx.fill(),ctx.restore(),m.yOff=.9*m.yOff+.1*m.yOffGoal,powerUps.boost.draw()},m.drawLeg=function(e){m.angle>-Math.PI/2&&m.angle<Math.PI/2?m.flipLegs=1:m.flipLegs=-1,ctx.save(),ctx.scale(m.flipLegs,1),ctx.beginPath(),ctx.moveTo(m.hip.x,m.hip.y),ctx.lineTo(m.knee.x,m.knee.y),ctx.lineTo(m.foot.x,m.foot.y),ctx.strokeStyle=e,ctx.lineWidth=4.5,ctx.stroke(),ctx.beginPath(),ctx.moveTo(m.foot.x,m.foot.y-1),ctx.lineTo(m.foot.x-15,m.foot.y+5),ctx.lineTo(m.foot.x+15,m.foot.y+5),ctx.lineTo(m.foot.x,m.foot.y-1),ctx.lineWidth=4,ctx.stroke(),ctx.beginPath(),ctx.arc(m.hip.x,m.hip.y-4,12,0,2*Math.PI),ctx.moveTo(m.knee.x+6,m.knee.y),ctx.arc(m.knee.x,m.knee.y,6,0,2*Math.PI),ctx.moveTo(m.foot.x+5,m.foot.y),ctx.arc(m.foot.x,m.foot.y,5,0,2*Math.PI),ctx.fillStyle=m.fillColor,ctx.fill(),ctx.lineWidth=1,ctx.strokeStyle="#000",ctx.stroke(),ctx.restore()}},anodize(){m.isAltSkin=!0,m.color={hue:210,sat:14,light:65},m.fillColor=`hsl(${m.color.hue},${m.color.sat}%,${m.color.light}%)`,m.fillColorDark=`hsl(${m.color.hue},${m.color.sat}%,${m.color.light-50}%)`;const e=ctx.createRadialGradient(16,0,0,0,0,40);e.addColorStop(0,"#c78034"),e.addColorStop(.04,"#bd5235"),e.addColorStop(.08,"#ab554d"),e.addColorStop(.12,"#8f5d8f"),e.addColorStop(.16,"#4352ab"),e.addColorStop(.2,"#2058b3"),e.addColorStop(.24,"#1a6fc4"),e.addColorStop(.28,"#1b85cf"),e.addColorStop(.32,"#2d9bd7"),e.addColorStop(.4,"#d2d7b4"),e.addColorStop(.44,"#e1cd87"),e.addColorStop(.48,"#f0b955"),e.addColorStop(.52,"#ffa050"),e.addColorStop(.56,"#ff8269"),e.addColorStop(.6,"#f5697d"),e.addColorStop(.64,"#e65aaf"),e.addColorStop(.68,"#d732d7"),e.addColorStop(.72,"#c846e6"),e.addColorStop(.76,"#c850fa"),e.addColorStop(.8,"#878cf0"),e.addColorStop(.84,"#37beeb"),e.addColorStop(.88,"#00d2be"),e.addColorStop(.92,"#00e19b"),e.addColorStop(.96,"#19f5aa"),e.addColorStop(1,"#aaf5af"),m.bodyGradient=e,m.draw=function(){if(powerUps.boost.endCycle>simulation.cycle){ctx.save(),ctx.translate(m.pos.x,m.pos.y),m.velocitySmooth=Vector.add(Vector.mult(m.velocitySmooth,.8),Vector.mult(player.velocity,.2)),ctx.rotate(Math.atan2(m.velocitySmooth.y,m.velocitySmooth.x)),ctx.beginPath();const e=40,t=12*Vector.magnitude(m.velocitySmooth)+e;ctx.arc(0,0,e,-Math.PI/2,Math.PI/2),ctx.bezierCurveTo(-e,e,-e,0,-t,0),ctx.bezierCurveTo(-e,0,-e,-e,0,-e);const o=Math.min(.5,(powerUps.boost.endCycle-simulation.cycle)/powerUps.boost.duration);ctx.fillStyle=`hsla(${simulation.cycle},100%,70%,${.1+2*o})`,ctx.fill(),ctx.restore()}ctx.fillStyle=m.fillColor,m.walk_cycle+=m.flipLegs*m.Vx,ctx.save(),ctx.globalAlpha=m.immuneCycle<m.cycle?1:m.cycle%3?.1:.65+.1*Math.random(),ctx.translate(m.pos.x,m.pos.y),m.calcLeg(Math.PI,-3),m.drawLeg("#4a4a5a"),m.calcLeg(0,0),m.drawLeg("#445"),ctx.rotate(m.angle),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.strokeStyle="#222",ctx.lineWidth=2,ctx.restore(),m.yOff=.85*m.yOff+.15*m.yOffGoal},m.drawLeg=function(e){m.angle>-Math.PI/2&&m.angle<Math.PI/2?m.flipLegs=1:m.flipLegs=-1,ctx.save(),ctx.scale(m.flipLegs,1),ctx.beginPath(),ctx.moveTo(m.hip.x,m.hip.y),ctx.lineTo(m.knee.x,m.knee.y),ctx.lineTo(m.foot.x,m.foot.y),ctx.strokeStyle=e,ctx.lineWidth=5,ctx.stroke(),ctx.beginPath(),ctx.moveTo(m.foot.x,m.foot.y),m.onGround?(ctx.lineTo(m.foot.x-15,m.foot.y+5),ctx.moveTo(m.foot.x,m.foot.y),ctx.lineTo(m.foot.x+15,m.foot.y+5)):(ctx.lineTo(m.foot.x-13,m.foot.y+8),ctx.moveTo(m.foot.x,m.foot.y),ctx.lineTo(m.foot.x+13,m.foot.y+8)),ctx.lineWidth=4,ctx.stroke(),ctx.beginPath(),ctx.arc(m.hip.x,m.hip.y,9,0,2*Math.PI),ctx.fillStyle="#222",ctx.fill(),ctx.beginPath(),ctx.arc(m.knee.x,m.knee.y,5,0,2*Math.PI),ctx.fill(),ctx.beginPath(),ctx.arc(m.foot.x,m.foot.y,4,0,2*Math.PI),ctx.fill(),ctx.restore()}},dilate(){m.isAltSkin=!0,simulation.isAutoZoom=!1,m.draw=function(){const e=8+4*Math.sin(.01*m.cycle);if(ctx.fillStyle=m.fillColor,m.walk_cycle+=m.flipLegs*m.Vx,ctx.save(),ctx.globalAlpha=m.immuneCycle<m.cycle?1:m.cycle%3?.1:.65+.1*Math.random(),ctx.translate(m.pos.x,m.pos.y),m.calcLeg(Math.PI,-3),m.drawLeg("#456"),m.calcLeg(0,0),m.drawLeg("#345"),ctx.rotate(m.angle),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.strokeStyle="#345",ctx.lineWidth=2,ctx.arc(12,0,e,0,2*Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(12,0,e,0,2*Math.PI),ctx.stroke(),ctx.restore(),m.yOff=.85*m.yOff+.15*m.yOffGoal,powerUps.boost.endCycle>simulation.cycle){ctx.save(),ctx.translate(m.pos.x,m.pos.y),m.velocitySmooth=Vector.add(Vector.mult(m.velocitySmooth,.8),Vector.mult(player.velocity,.2)),ctx.rotate(Math.atan2(m.velocitySmooth.y,m.velocitySmooth.x)),ctx.beginPath();const e=39,t=6*Vector.magnitude(m.velocitySmooth)+e;ctx.arc(0,0,e,-Math.PI/2,Math.PI/2),ctx.bezierCurveTo(-e,e,-e,0,-t,0),ctx.bezierCurveTo(-e,0,-e,-e,0,-e),ctx.strokeStyle="#345";const o=Math.min(.5,(powerUps.boost.endCycle-simulation.cycle)/powerUps.boost.duration);ctx.lineWidth=.2+4*o,ctx.stroke(),ctx.restore()}simulation.setZoom(1800+500*Math.sin(.01*m.cycle))}},dilate2(){m.isAltSkin=!0,m.draw=function(){const e=Math.sin(.01*m.cycle);if(ctx.fillStyle=m.fillColor,m.walk_cycle+=m.flipLegs*m.Vx,ctx.save(),ctx.globalAlpha=m.immuneCycle<m.cycle?1:m.cycle%3?.1:.65+.1*Math.random(),ctx.translate(m.pos.x,m.pos.y),m.calcLeg(Math.PI,-3),m.drawLeg("#456"),m.calcLeg(0,0),m.drawLeg("#345"),ctx.rotate(m.angle),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.strokeStyle="#345",ctx.lineWidth=3+3*Math.sin(.01*m.cycle+Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(12,0,8+4*e,0,2*Math.PI),ctx.fillStyle="#345",ctx.fill(),ctx.restore(),m.yOff=.85*m.yOff+.15*m.yOffGoal,powerUps.boost.endCycle>simulation.cycle){ctx.save(),ctx.translate(m.pos.x,m.pos.y),m.velocitySmooth=Vector.add(Vector.mult(m.velocitySmooth,.8),Vector.mult(player.velocity,.2)),ctx.rotate(Math.atan2(m.velocitySmooth.y,m.velocitySmooth.x)),ctx.beginPath();const e=39,t=6*Vector.magnitude(m.velocitySmooth)+e;ctx.arc(0,0,e,-Math.PI/2,Math.PI/2),ctx.bezierCurveTo(-e,e,-e,0,-t,0),ctx.bezierCurveTo(-e,0,-e,-e,0,-e);const o=Math.min(.5,(powerUps.boost.endCycle-simulation.cycle)/powerUps.boost.duration);ctx.strokeStyle="#345",ctx.lineWidth=.2+7*o,ctx.stroke(),ctx.restore()}simulation.setZoom(1800+500*e)},m.drawLeg=function(e){m.angle>-Math.PI/2&&m.angle<Math.PI/2?m.flipLegs=1:m.flipLegs=-1,ctx.save(),ctx.scale(m.flipLegs,1),ctx.beginPath(),ctx.moveTo(m.hip.x,m.hip.y),ctx.lineTo(m.knee.x,m.knee.y),ctx.lineTo(m.foot.x,m.foot.y),ctx.strokeStyle=e,ctx.lineWidth=6+2*Math.sin(.01*m.cycle+Math.PI),ctx.stroke(),ctx.beginPath(),ctx.moveTo(m.foot.x,m.foot.y),m.onGround?(ctx.lineTo(m.foot.x-15,m.foot.y+5),ctx.moveTo(m.foot.x,m.foot.y),ctx.lineTo(m.foot.x+15,m.foot.y+5)):(ctx.lineTo(m.foot.x-13,m.foot.y+8),ctx.moveTo(m.foot.x,m.foot.y),ctx.lineTo(m.foot.x+13,m.foot.y+8)),ctx.lineWidth=4,ctx.stroke(),ctx.beginPath(),ctx.arc(m.hip.x,m.hip.y,11,0,2*Math.PI),ctx.moveTo(m.knee.x+7,m.knee.y),ctx.arc(m.knee.x,m.knee.y,7,0,2*Math.PI),ctx.moveTo(m.foot.x+6,m.foot.y),ctx.arc(m.foot.x,m.foot.y,6,0,2*Math.PI),ctx.fillStyle="#345",ctx.fill(),ctx.lineWidth=3+3*Math.sin(.01*m.cycle+Math.PI),ctx.stroke(),ctx.restore()}},CPT(){m.isAltSkin=!0,m.fillColor=`hsl(${m.color.hue},${m.color.sat}%,${m.color.light}%)`,m.fillColorDark=`hsl(${m.color.hue},${m.color.sat}%,${m.color.light-35}%)`;let e=ctx.createLinearGradient(-20,0,15,0);e.addColorStop(0,m.fillColorDark),e.addColorStop(1,m.fillColor),m.bodyGradient=e,m.draw=function(){ctx.fillStyle=m.fillColor,m.walk_cycle+=m.flipLegs*m.Vx,ctx.save(),ctx.globalAlpha=m.immuneCycle<m.cycle?1:m.cycle%3?.1:.65+.1*Math.random(),ctx.translate(m.pos.x,m.pos.y),m.calcLeg(Math.PI,-3),m.drawLeg("#eee"),m.calcLeg(0,0),m.drawLeg("#fff"),ctx.rotate(.024*simulation.cycle),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=m.energy>.85*Math.min(1,m.maxEnergy)?m.bodyGradient:"#fff",ctx.fill(),ctx.restore(),ctx.beginPath(),ctx.arc(m.pos.x+15*Math.cos(m.angle),m.pos.y+15*Math.sin(m.angle),5,0,2*Math.PI),ctx.fillStyle="#000",ctx.fill(),m.yOff=.85*m.yOff+.15*m.yOffGoal,powerUps.boost.draw()},m.drawLeg=function(e){m.angle>-Math.PI/2&&m.angle<Math.PI/2?m.flipLegs=1:m.flipLegs=-1,ctx.save(),ctx.scale(m.flipLegs,1),ctx.beginPath(),ctx.moveTo(m.hip.x,m.hip.y),ctx.lineTo(m.knee.x,m.knee.y),ctx.lineTo(m.foot.x,m.foot.y),ctx.strokeStyle=e,ctx.lineWidth=5,ctx.stroke(),ctx.beginPath(),ctx.moveTo(m.foot.x,m.foot.y),m.onGround?(ctx.lineTo(m.foot.x-15,m.foot.y+5),ctx.moveTo(m.foot.x,m.foot.y),ctx.lineTo(m.foot.x+15,m.foot.y+5)):(ctx.lineTo(m.foot.x-13,m.foot.y+8),ctx.moveTo(m.foot.x,m.foot.y),ctx.lineTo(m.foot.x+13,m.foot.y+8)),ctx.lineWidth=3,ctx.stroke(),ctx.beginPath(),ctx.arc(m.hip.x,m.hip.y,11,0,2*Math.PI),ctx.moveTo(m.knee.x+5,m.knee.y),ctx.arc(m.knee.x,m.knee.y,5,0,2*Math.PI),ctx.moveTo(m.foot.x+5,m.foot.y),ctx.arc(m.foot.x,m.foot.y,5,0,2*Math.PI),ctx.fillStyle="#000",ctx.fill(),ctx.restore()}},verlet(){m.isAltSkin=!0,m.draw=function(){ctx.fillStyle=m.fillColor,m.walk_cycle+=m.flipLegs*m.Vx,ctx.save(),ctx.globalAlpha=m.immuneCycle<m.cycle?1:m.cycle%3?.1:.65+.1*Math.random(),ctx.translate(m.pos.x,m.pos.y),m.calcLeg(Math.PI,-2),m.drawLeg("#4a4a4a"),m.calcLeg(0,0),m.drawLeg("#333"),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill();const e=.09;ctx.strokeStyle="#000",ctx.lineWidth=1,ctx.beginPath(),ctx.arc(0,0,e*(simulation.cycle+0)%30,0,2*Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(0,0,e*(simulation.cycle+15/e)%30,0,2*Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.stroke(),ctx.globalCompositeOperation="difference",ctx.rotate(m.angle),ctx.beginPath(),ctx.arc(21,0,8,0,2*Math.PI),ctx.fillStyle=input.fire?"#0ff":input.field?"#d30":"#fff",ctx.fill(),ctx.restore(),m.yOff=.85*m.yOff+.15*m.yOffGoal,powerUps.boost.draw()},m.drawLeg=function(e){m.angle>-Math.PI/2&&m.angle<Math.PI/2?m.flipLegs=1:m.flipLegs=-1,ctx.save(),ctx.scale(m.flipLegs,1),ctx.beginPath(),ctx.moveTo(m.hip.x,m.hip.y),ctx.lineTo(m.knee.x,m.knee.y),ctx.lineTo(m.foot.x,m.foot.y),ctx.strokeStyle=e,ctx.lineWidth=1,ctx.stroke(),ctx.beginPath(),ctx.moveTo(m.foot.x,m.foot.y);const t=m.onGround?5:10;ctx.lineTo(m.foot.x-15,m.foot.y+t),ctx.moveTo(m.foot.x,m.foot.y),ctx.lineTo(m.foot.x+15,m.foot.y+t),ctx.lineWidth=1,ctx.stroke(),ctx.beginPath(),ctx.arc(m.hip.x,m.hip.y,9,0,2*Math.PI),ctx.moveTo(m.knee.x+5,m.knee.y),ctx.arc(m.knee.x,m.knee.y,3,0,2*Math.PI),ctx.moveTo(m.foot.x+5,m.foot.y),ctx.arc(m.foot.x,m.foot.y,4,0,2*Math.PI),ctx.fillStyle="#000",ctx.fill(),ctx.restore()}},stubs(){m.isAltSkin=!0,m.draw=function(){ctx.fillStyle=m.fillColor,m.walk_cycle+=m.flipLegs*m.Vx,ctx.save(),ctx.globalAlpha=m.immuneCycle<m.cycle?1:m.cycle%3?.1:.65+.1*Math.random(),ctx.translate(m.pos.x,m.pos.y),m.calcLeg(Math.PI,-3),m.drawLeg("#555"),m.calcLeg(0,0),m.drawLeg("#333"),ctx.rotate(m.angle),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.arc(15,0,4,0,2*Math.PI),ctx.strokeStyle="#333",ctx.lineWidth=2,ctx.stroke(),ctx.restore(),m.yOff=.85*m.yOff+.15*m.yOffGoal,powerUps.boost.draw()},m.drawLeg=function(e){m.angle>-Math.PI/2&&m.angle<Math.PI/2?m.flipLegs=1:m.flipLegs=-1,ctx.save(),ctx.scale(m.flipLegs,1),ctx.beginPath(),ctx.moveTo(m.hip.x,m.hip.y),ctx.lineTo(m.knee.x,m.knee.y),ctx.lineTo(m.foot.x,m.foot.y+5),ctx.strokeStyle=e,ctx.lineWidth=6,ctx.stroke(),ctx.restore()}},Sleipnir(){m.isAltSkin=!0,m.draw=function(){ctx.fillStyle=m.fillColor,m.walk_cycle+=m.flipLegs*m.Vx,ctx.save(),ctx.globalAlpha=m.immuneCycle<m.cycle?1:m.cycle%3?.1:.65+.1*Math.random(),ctx.translate(m.pos.x,m.pos.y);for(let e=0;e<16;e++)m.calcLeg(Math.PI*e/8,-3*e/16),m.drawLeg("#444");ctx.rotate(m.angle),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.arc(15,0,4,0,2*Math.PI),ctx.strokeStyle="#333",ctx.lineWidth=2,ctx.stroke(),ctx.restore(),m.yOff=.85*m.yOff+.15*m.yOffGoal,powerUps.boost.draw()}},diegesis(){m.isAltSkin=!0,m.draw=function(){ctx.fillStyle=m.fillColor,m.walk_cycle+=m.flipLegs*m.Vx,ctx.save(),ctx.globalAlpha=m.immuneCycle<m.cycle?1:m.cycle%3?.1:.65+.1*Math.random(),ctx.translate(m.pos.x,m.pos.y),m.calcLeg(Math.PI,-3),m.drawLeg("#4a4a4a"),m.calcLeg(0,0),m.drawLeg("#333"),ctx.rotate(m.angle-(m.fireCDcycle!==1/0?.25*m.flipLegs*Math.pow(Math.max(m.fireCDcycle-m.cycle,0),.5):0)),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.arc(15,0,4,0,2*Math.PI),ctx.strokeStyle="#333",ctx.lineWidth=2,ctx.stroke(),ctx.restore(),m.yOff=.85*m.yOff+.15*m.yOffGoal,powerUps.boost.draw()}},cat(){m.isAltSkin=!0,m.coyoteCycles=10,m.draw=function(){ctx.fillStyle=m.fillColor,m.walk_cycle+=m.flipLegs*m.Vx,ctx.save(),ctx.globalAlpha=m.immuneCycle<m.cycle?1:m.cycle%3?.1:.65+.1*Math.random(),ctx.translate(m.pos.x,m.pos.y),m.calcLeg(Math.PI,-3),m.drawLeg("#4a4a4a"),m.angle>-Math.PI/2&&m.angle<Math.PI/2||(ctx.scale(1,-1),ctx.rotate(Math.PI)),ctx.beginPath(),ctx.moveTo(-30,0),ctx.bezierCurveTo(-65,-75,-5,150+5*Math.sin(simulation.cycle/10),10*Math.sin(simulation.cycle/10)-70,0+10*Math.sin(simulation.cycle/10)),ctx.strokeStyle="#333",ctx.lineWidth=4,ctx.stroke(),m.angle>-Math.PI/2&&m.angle<Math.PI/2||(ctx.scale(1,-1),ctx.rotate(0-Math.PI)),m.calcLeg(0,0),m.drawLeg("#333"),ctx.rotate(m.angle),m.angle>-Math.PI/2&&m.angle<Math.PI/2||ctx.scale(1,-1),ctx.beginPath(),ctx.moveTo(5,-30),ctx.lineTo(20,-40),ctx.lineTo(20,-20),ctx.lineWidth=2,ctx.fillStyle="#f3f",ctx.fill(),ctx.stroke(),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.stroke(),ctx.moveTo(19,0),ctx.arc(15,0,4,Math.PI,2*Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(24.3,6,5,2*Math.PI,Math.PI),ctx.stroke(),ctx.beginPath(),ctx.moveTo(30,6),ctx.lineTo(32,0),ctx.lineTo(26,0),ctx.lineTo(30,6),ctx.fillStyle="#f3f",ctx.fill(),ctx.stroke(),ctx.restore(),m.yOff=.85*m.yOff+.15*m.yOffGoal,powerUps.boost.draw()}},pareidolia(){m.isAltSkin=!0,m.draw=function(){ctx.fillStyle=m.fillColor,m.walk_cycle+=m.flipLegs*m.Vx,ctx.save(),ctx.globalAlpha=m.immuneCycle<m.cycle?1:m.cycle%3?.1:.65+.1*Math.random(),ctx.translate(m.pos.x,m.pos.y),m.calcLeg(Math.PI,-3),m.drawLeg("#4a4a4a"),m.calcLeg(0,0),m.drawLeg("#333"),ctx.rotate(m.angle),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.strokeStyle="#333",ctx.lineWidth=2,m.angle>-Math.PI/2&&m.angle<Math.PI/2||ctx.scale(1,-1),ctx.stroke(),ctx.beginPath(),ctx.arc(2,-6,7,0,2*Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(25,-6,7,.25*Math.PI,1.6*Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(2,-10,9,1.25*Math.PI,1.75*Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(25,-10,9,1.25*Math.PI,1.4*Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(18,13,10,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.stroke(),ctx.beginPath(),ctx.arc(18,13,6,0,2*Math.PI),ctx.fillStyle="#555",ctx.fill(),ctx.stroke(),ctx.beginPath(),ctx.arc(3,-6,3,0,2*Math.PI),ctx.fill(),ctx.stroke(),ctx.beginPath(),ctx.arc(26,-6,3,0,2*Math.PI),ctx.fill(),ctx.stroke(),ctx.restore(),m.yOff=.85*m.yOff+.15*m.yOffGoal,powerUps.boost.draw()}},flipFlop(){m.isAltSkin=!0,m.draw=function(){ctx.fillStyle=m.fillColor,m.walk_cycle+=m.flipLegs*m.Vx,ctx.save(),ctx.globalAlpha=m.immuneCycle<m.cycle?1:m.cycle%3?.1:.65+.1*Math.random(),ctx.translate(m.pos.x,m.pos.y),m.calcLeg(Math.PI,-3),m.drawLeg("#4a4a4a"),m.calcLeg(0,0),m.drawLeg("#333"),ctx.rotate(m.angle),ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.arc(15,0,4,0,2*Math.PI),ctx.strokeStyle="#333",ctx.lineWidth=2,ctx.stroke(),ctx.beginPath(),ctx.arc(15,0,3.5,0,2*Math.PI),ctx.fillStyle=m.eyeFillColor,ctx.fill(),ctx.restore(),m.yOff=.85*m.yOff+.15*m.yOffGoal,powerUps.boost.draw()}},hexagon(){m.isAltSkin=!0,m.fillColor=`hsl(${m.color.hue},${m.color.sat}%,${m.color.light}%)`,m.fillColorDark=`hsl(${m.color.hue},${m.color.sat}%,${m.color.light-35}%)`;let e=ctx.createLinearGradient(-30,0,30,0);e.addColorStop(0,m.fillColorDark),e.addColorStop(.7,m.fillColor),m.bodyGradient=e,m.draw=function(){ctx.fillStyle=m.fillColor,m.walk_cycle+=m.flipLegs*m.Vx,ctx.save(),ctx.globalAlpha=m.immuneCycle<m.cycle?1:m.cycle%3?.1:.65+.1*Math.random(),ctx.translate(m.pos.x,m.pos.y),m.calcLeg(Math.PI,-3),m.drawLeg("#4a4a4a"),m.calcLeg(0,0),m.drawLeg("#333"),ctx.rotate(m.angle);ctx.beginPath(),ctx.lineTo(32,0),ctx.lineTo(16,27.712),ctx.lineTo(-16,27.712),ctx.lineTo(-32,0),ctx.lineTo(-16,-27.712),ctx.lineTo(16,-27.712),ctx.lineTo(32,0),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.arc(15,0,4,0,2*Math.PI),ctx.strokeStyle="#333",ctx.lineWidth=2,ctx.stroke(),ctx.restore(),m.yOff=.85*m.yOff+.15*m.yOffGoal,powerUps.boost.draw()},m.drawLeg=function(e){m.angle>-Math.PI/2&&m.angle<Math.PI/2?m.flipLegs=1:m.flipLegs=-1,ctx.save(),ctx.scale(m.flipLegs,1),ctx.beginPath(),ctx.moveTo(m.hip.x,m.hip.y),ctx.lineTo(m.knee.x,m.knee.y),ctx.lineTo(m.foot.x,m.foot.y),ctx.strokeStyle=e,ctx.lineWidth=6,ctx.stroke(),ctx.beginPath(),ctx.moveTo(m.foot.x,m.foot.y),m.onGround?(ctx.lineTo(m.foot.x-15,m.foot.y+5),ctx.moveTo(m.foot.x,m.foot.y),ctx.lineTo(m.foot.x+15,m.foot.y+5)):(ctx.lineTo(m.foot.x-13,m.foot.y+8),ctx.moveTo(m.foot.x,m.foot.y),ctx.lineTo(m.foot.x+13,m.foot.y+8)),ctx.lineWidth=3,ctx.stroke(),ctx.beginPath(),ctx.arc(m.hip.x,m.hip.y,11,0,2*Math.PI),ctx.moveTo(m.knee.x+5,m.knee.y),ctx.arc(m.knee.x,m.knee.y,5,0,2*Math.PI),ctx.moveTo(m.foot.x+5,m.foot.y),ctx.arc(m.foot.x,m.foot.y,5,0,2*Math.PI),ctx.fillStyle="#000",ctx.fill(),ctx.restore()}}},closest:{dist:1e3,index:0},isHolding:!1,isCloak:!1,throwCharge:0,fireCDcycle:0,fieldCDcycle:0,fieldMode:0,maxEnergy:1,holdingTarget:null,timeSkipLastCycle:0,coupling:0,fieldFx:1,fieldJump:1,blockingRecoil:4,grabPowerUpRange2:0,isFieldActive:!1,fieldRange:155,fieldShieldingScale:1,fieldDamage:1,isSneakAttack:!1,lastHit:0,sneakAttackCycle:0,enterCloakCycle:0,duplicateChance:0,energy:0,fieldRegen:.001,fieldMode:0,fieldFire:!1,fieldHarmReduction:1,holdingMassScale:0,hole:{isOn:!1,isReady:!1,pos1:{x:0,y:0},pos2:{x:0,y:0}},fieldArc:0,fieldThreshold:0,calculateFieldThreshold(){m.fieldThreshold=Math.cos(m.fieldArc*Math.PI)},setHoldDefaults(){if(tech.isNeutronium&&3!==m.fieldMode){tech.removeTech("neutronium")&&powerUps.directSpawn(m.pos.x,m.pos.y,"tech")}m.energy<m.maxEnergy&&(m.energy=m.maxEnergy),m.fieldMeterColor="#0cf",m.eyeFillColor=m.fieldMeterColor,m.fieldShieldingScale=1,m.fieldBlockCD=10,m.fieldDamage=1,m.fieldHarmReduction=1,m.isSneakAttack=!1,m.duplicateChance=0,m.grabPowerUpRange2=2e5,m.blockingRecoil=4,m.fieldRange=155,m.fieldFire=!1,m.fieldCDcycle=0,m.isCloak=!1,player.collisionFilter.mask=cat.body|cat.map|cat.mob|cat.mobBullet|cat.mobShield,m.airSpeedLimit=125,m.fieldFx=1,m.fieldJump=1,m.setFieldRegen(),m.setMovement(),m.drop(),m.holdingMassScale=.5,m.fieldArc=.2,m.calculateFieldThreshold(),m.isTimeDilated=!0,m.wakeCheck(),m.setMaxEnergy(!1),m.setMaxHealth(!1),m.couplingChange(),m.hole={isOn:!1,isReady:!1,pos1:{x:0,y:0},pos2:{x:0,y:0}}},setMaxEnergy(e=!0){m.maxEnergy=(tech.isMaxEnergyTech?.5:1)+tech.bonusEnergy+tech.healMaxEnergyBonus+tech.harmonicEnergy+3*tech.isGroundState+1.5*(1===m.fieldMode)+.05*(0===m.fieldMode||1===m.fieldMode)*m.coupling+.77*tech.isStandingWaveExpand,m.maxEnergy*=m.fieldUpgrades[1].energyHealthRatio,level.isReducedEnergy&&(m.maxEnergy*=.5),e&&simulation.inGameConsole(`<span class='color-var'>m</span>.<span class='color-f'>maxEnergy</span> <span class='color-symbol'>=</span> ${m.maxEnergy.toFixed(2)}`)},fieldMeterColor:"#0cf",drawRegenEnergy(e="rgba(0, 0, 0, 0.4)",t=60){if(m.energy<m.maxEnergy){m.regenEnergy(),ctx.fillStyle=e;const o=m.pos.x-m.radius*m.maxEnergy,l=m.pos.y-50;ctx.fillRect(o,l,t*m.maxEnergy,10),ctx.fillStyle=m.fieldMeterColor,ctx.fillRect(o,l,t*m.energy,10)}else if(m.energy>m.maxEnergy+.05){ctx.fillStyle=e;const o=m.pos.x-m.radius*m.energy,l=m.pos.y-50;ctx.fillStyle=m.fieldMeterColor,ctx.fillRect(o,l,t*m.energy,10)}},drawRegenEnergyCloaking:function(){if(m.energy<m.maxEnergy){m.regenEnergy();const e=m.pos.x-m.radius*m.maxEnergy,t=m.pos.y-50;ctx.fillStyle="rgba(0, 0, 0, 0.2)",ctx.fillRect(e,t,60*m.maxEnergy,10),ctx.fillStyle="#fff",ctx.fillRect(e,t,60*m.energy,10),ctx.beginPath(),ctx.rect(e,t,60*m.maxEnergy,10),ctx.strokeStyle=m.fieldMeterColor,ctx.lineWidth=1,ctx.stroke()}},setFieldRegen(){0===m.fieldMode?m.fieldRegen=.001:6===m.fieldMode?m.fieldRegen=.002:2===m.fieldMode?m.fieldRegen=833e-6:4===m.fieldMode?m.fieldRegen=.002:5===m.fieldMode||8===m.fieldMode?m.fieldRegen=.001667:9===m.fieldMode?m.fieldRegen=.001334:10===m.fieldMode?m.fieldRegen=.0015:m.fieldRegen=.001,4===m.fieldMode&&(m.fieldRegen+=1e-4*m.coupling),0===m.fieldMode&&(m.fieldRegen+=5e-5*m.coupling),tech.isTimeCrystals?m.fieldRegen*=2.5:tech.isGroundState&&(m.fieldRegen*=.66)},regenEnergy(){m.immuneCycle<m.cycle&&m.fieldCDcycle<m.cycle&&(m.energy+=m.fieldRegen*level.isReducedRegen),m.energy<0&&(m.energy=0)},regenEnergyDefault(){m.immuneCycle<m.cycle&&m.fieldCDcycle<m.cycle&&(m.energy+=m.fieldRegen*level.isReducedRegen),m.energy<0&&(m.energy=0)},lookingAt(e){const t=Vector.normalise(Vector.sub(e.position,m.pos)),o={x:Math.cos(m.angle),y:Math.sin(m.angle)};return Vector.dot(o,t)>m.fieldThreshold},drop(){m.isHolding&&(m.fieldCDcycle=m.cycle+15,m.isHolding=!1,m.throwCharge=0,m.definePlayerMass()),m.holdingTarget&&(m.holdingTarget.collisionFilter.category=cat.body,m.holdingTarget.collisionFilter.mask=cat.player|cat.map|cat.body|cat.bullet|cat.mob|cat.mobBullet,m.holdingTarget=null)},definePlayerMass(e=m.defaultMass){Matter.Body.setMass(player,e),m.setMovement(),m.yOffWhen.stand=Math.max(m.yOffWhen.crouch,Math.min(49,49-6*(e-5))),m.onGround&&!m.crouch&&(m.yOffGoal=m.yOffWhen.stand)},drawHold(e,t=!0){if(e){const o=15,l=e.vertices.length-1;ctx.fillStyle="rgba(110,170,200,"+(.2+.4*Math.random())+")",ctx.lineWidth=1,ctx.strokeStyle="#000",ctx.beginPath(),ctx.moveTo(m.pos.x+o*Math.cos(m.angle),m.pos.y+o*Math.sin(m.angle)),ctx.lineTo(e.vertices[l].x,e.vertices[l].y),ctx.lineTo(e.vertices[0].x,e.vertices[0].y),ctx.fill(),t&&ctx.stroke();for(let i=0;i<l;i++)ctx.beginPath(),ctx.moveTo(m.pos.x+o*Math.cos(m.angle),m.pos.y+o*Math.sin(m.angle)),ctx.lineTo(e.vertices[i].x,e.vertices[i].y),ctx.lineTo(e.vertices[i+1].x,e.vertices[i+1].y),ctx.fill(),t&&ctx.stroke()}},holding(){m.fireCDcycle<m.cycle&&(m.fireCDcycle=m.cycle-1),m.holdingTarget?(m.energy-=m.fieldRegen,m.energy<0&&(m.energy=0),Matter.Body.setPosition(m.holdingTarget,{x:m.pos.x+70*Math.cos(m.angle),y:m.pos.y+70*Math.sin(m.angle)}),Matter.Body.setVelocity(m.holdingTarget,player.velocity),Matter.Body.rotate(m.holdingTarget,.01/m.holdingTarget.mass)):m.isHolding=!1},throwBlock(){},throwBlockDefault(){if(m.holdingTarget){if(input.field)if(m.energy>.001)if(m.fireCDcycle<m.cycle&&(m.fireCDcycle=m.cycle),tech.isCapacitor&&m.throwCharge<4&&(m.throwCharge=4),m.throwCharge+=.5/m.holdingTarget.mass/b.fireCDscale,m.throwCharge<6&&(m.energy-=.001/b.fireCDscale),tech.isTokamak){const e=m.pos.x+15*Math.cos(m.angle),t=m.pos.y+15*Math.sin(m.angle),o=m.holdingTarget.vertices.length-1,l=m.throwCharge>4?.65:.06*m.throwCharge;ctx.fillStyle=`rgba(255,0,255,${l})`,ctx.beginPath(),ctx.moveTo(e,t),ctx.lineTo(m.holdingTarget.vertices[o].x,m.holdingTarget.vertices[o].y),ctx.lineTo(m.holdingTarget.vertices[0].x,m.holdingTarget.vertices[0].y),ctx.fill();for(let l=0;l<o;l++)ctx.beginPath(),ctx.moveTo(e,t),ctx.lineTo(m.holdingTarget.vertices[l].x,m.holdingTarget.vertices[l].y),ctx.lineTo(m.holdingTarget.vertices[l+1].x,m.holdingTarget.vertices[l+1].y),ctx.fill();if(tech.isTokamakFly&&m.throwCharge>4&&m.energy>.01){player.force.y-=.5*player.mass*simulation.g;let e=!1;const t=player.mass*simulation.g*Math.pow(5/player.mass,.1);input.down?(e=!0,player.force.y+=.9*t):input.up&&(e=!0,player.force.y-=.9*t),m.onGround||(input.left?(e=!0,player.force.x-=.4*t):input.right&&(e=!0,player.force.x+=.4*t),e&&(m.energy-=.0017))}}else{if(tech.isGroupThrow){const e=81e4;for(let t=0;t<body.length;t++){const o=Vector.sub(m.pos,body[t].position),l=Vector.magnitudeSquared(o);if(l<e&&(body[t].force.y-=body[t].mass*(1.01*simulation.g),l>4e4)){const e=Vector.mult(Vector.normalise(o),8e-4*body[t].mass);body[t].force.x+=e.x,body[t].force.y+=e.y,Matter.Body.setVelocity(body[t],{x:.96*body[t].velocity.x,y:.96*body[t].velocity.y})}}ctx.beginPath(),ctx.arc(m.pos.x,m.pos.y,Math.sqrt(e),0,2*Math.PI),ctx.fillStyle="rgba(245,245,255,0.15)",ctx.fill()}const e=m.pos.x+15*Math.cos(m.angle),t=m.pos.y+15*Math.sin(m.angle),o=m.holdingTarget.vertices.length-1,l=m.throwCharge*m.throwCharge*m.throwCharge,i=ctx.createRadialGradient(e,t,l,e,t,l+5);i.addColorStop(0,"rgba(255,50,150,0.3)"),i.addColorStop(1,"transparent"),ctx.fillStyle=i,ctx.beginPath(),ctx.moveTo(e,t),ctx.lineTo(m.holdingTarget.vertices[o].x,m.holdingTarget.vertices[o].y),ctx.lineTo(m.holdingTarget.vertices[0].x,m.holdingTarget.vertices[0].y),ctx.fill();for(let l=0;l<o;l++)ctx.beginPath(),ctx.moveTo(e,t),ctx.lineTo(m.holdingTarget.vertices[l].x,m.holdingTarget.vertices[l].y),ctx.lineTo(m.holdingTarget.vertices[l+1].x,m.holdingTarget.vertices[l+1].y),ctx.fill();const a=30,s=Math.min(m.throwCharge/5,1),n=tech.isPrinter?15+80*s*Math.min(.85,.8/Math.pow(m.holdingTarget.mass,.1)):80*s*Math.min(.85,.8/Math.pow(m.holdingTarget.mass,.25)),c={x:n*Math.cos(m.angle),y:n*Math.sin(m.angle)};ctx.beginPath();for(let e=1,t=10;e<t+1;e++){const o=a*e/t;ctx.lineTo(m.pos.x+o*c.x,m.pos.y+o*c.y+.34*o*o)}ctx.strokeStyle="rgba(68, 68, 68, 0.15)",ctx.lineWidth=2,ctx.stroke()}else m.drop();else if(m.throwCharge>0)if(m.holdingTarget.isPrinted&&(m.holdingTarget.isPrinted=void 0),m.fieldCDcycle=m.cycle+20,m.fireCDcycle=m.cycle+20,m.isHolding=!1,tech.isTokamak&&m.throwCharge>4){m.throwCycle=m.cycle+180,m.immuneCycle<m.cycle&&(m.energy+=.25*Math.sqrt(m.holdingTarget.mass)*Math.min(5,m.throwCharge)*level.isReducedRegen),m.throwCharge=0,m.definePlayerMass();for(let e=0;e<body.length;e++)body[e]===m.holdingTarget&&(Matter.Composite.remove(engine.world,body[e]),body.splice(e,1));if(b.pulse(60*Math.pow(m.holdingTarget.mass,.25),m.angle),tech.isTokamakHeal&&tech.tokamakHealCount<5){tech.tokamakHealCount++;let e=Math.min(65*Math.sqrt(m.maxHealth),14*Math.pow(m.holdingTarget.mass,.4));powerUps.healGiveMaxEnergy&&(e=powerUps.heal.size()),powerUps.spawn(m.pos.x,m.pos.y,"heal",!0,e*simulation.healScale**.25*Math.sqrt(tech.largerHeals*(tech.isHalfHeals?.5:1)))}}else{m.holdingTarget.collisionFilter.category=cat.bullet,m.holdingTarget.collisionFilter.mask=cat.map|cat.body|cat.bullet|cat.mob|cat.mobBullet|cat.mobShield,tech.isBlockRestitution&&(m.holdingTarget.restitution=.999,m.holdingTarget.friction=m.holdingTarget.frictionStatic=m.holdingTarget.frictionAir=.001);const e=function(t){const o=t.position.x-player.position.x,l=t.position.y-player.position.y;o*o+l*l>1e4&&t!==m.holdingTarget?(t.collisionFilter.category=cat.body,t.collisionFilter.mask=cat.player|cat.map|cat.body|cat.bullet|cat.mob|cat.mobBullet):setTimeout(e,40,t)};setTimeout(e,200,m.holdingTarget);const t=Math.min(m.throwCharge/5,1);let o=tech.isPrinter?15+80*t*Math.min(.85,.8/Math.pow(m.holdingTarget.mass,.1)):80*t*Math.min(.85,.8/Math.pow(m.holdingTarget.mass,.25));if(0!==Matter.Query.collides(m.holdingTarget,map).length&&(o*=.7,0!==Matter.Query.ray(map,m.holdingTarget.position,m.pos).length&&(o=0)),m.throwCharge=0,m.throwCycle=m.cycle+180,Matter.Body.setVelocity(m.holdingTarget,{x:.5*player.velocity.x+Math.cos(m.angle)*o,y:.5*player.velocity.y+Math.sin(m.angle)*o}),Matter.Body.setVelocity(player,{x:player.velocity.x-Math.cos(m.angle)*o/(m.crouch?30:10)*Math.sqrt(m.holdingTarget.mass),y:player.velocity.y-Math.sin(m.angle)*o/30*Math.sqrt(m.holdingTarget.mass)}),m.definePlayerMass(),tech.isStaticBlock&&(m.holdingTarget.isStatic=!0),tech.isAddBlockMass){const e=function(t,o){if(t.mass<o){const l=1.04;Matter.Body.scale(t,l,l),setTimeout(e,20,t,o)}};e(m.holdingTarget,Math.min(20,3*m.holdingTarget.mass))}if(tech.isGroupThrow){const e=81e4;for(let o=0;o<body.length;o++)if(body[o]!==m.holdingTarget){const l=Vector.magnitudeSquared(Vector.sub(m.pos,body[o].position));if(l<e){const i=90*t*Math.min(.85,.8/Math.pow(body[o].mass,.25))*Math.pow((e-l)/e,.2);Matter.Body.setVelocity(body[o],{x:.5*body[o].velocity.x+Math.cos(m.angle)*i,y:.5*body[o].velocity.y+Math.sin(m.angle)*i})}}}}}else m.isHolding=!1},throwSelf(){if(m.holdingTarget){if(input.field)if(m.energy>.001){m.fireCDcycle<m.cycle&&(m.fireCDcycle=m.cycle),tech.isCapacitor&&m.throwCharge<4&&(m.throwCharge=4),m.throwCharge+=.5/m.holdingTarget.mass/b.fireCDscale,m.throwCharge<6&&(m.energy-=.001/b.fireCDscale);const e=m.pos.x+15*Math.cos(m.angle),t=m.pos.y+15*Math.sin(m.angle),o=m.holdingTarget.vertices.length-1,l=m.throwCharge*m.throwCharge*m.throwCharge,i=ctx.createRadialGradient(e,t,l,e,t,l+5);i.addColorStop(0,"rgba(255,50,150,0.3)"),i.addColorStop(1,"transparent"),ctx.fillStyle=i,ctx.beginPath(),ctx.moveTo(e,t),ctx.lineTo(m.holdingTarget.vertices[o].x,m.holdingTarget.vertices[o].y),ctx.lineTo(m.holdingTarget.vertices[0].x,m.holdingTarget.vertices[0].y),ctx.fill();for(let l=0;l<o;l++)ctx.beginPath(),ctx.moveTo(e,t),ctx.lineTo(m.holdingTarget.vertices[l].x,m.holdingTarget.vertices[l].y),ctx.lineTo(m.holdingTarget.vertices[l+1].x,m.holdingTarget.vertices[l+1].y),ctx.fill();const a=30,s=Math.min(m.throwCharge/5,1),n=tech.isPrinter?15+80*s*Math.min(.85,.8/Math.pow(m.holdingTarget.mass,.1)):80*s*Math.min(.85,.8/Math.pow(m.holdingTarget.mass,.25)),c={x:n*Math.cos(m.angle),y:n*Math.sin(m.angle)};ctx.beginPath();for(let e=1,t=10;e<t+1;e++){const o=a*e/t;ctx.lineTo(m.pos.x+o*c.x,m.pos.y+o*c.y+.34*o*o)}ctx.strokeStyle="rgba(68, 68, 68, 0.15)",ctx.lineWidth=2,ctx.stroke()}else m.drop();else if(m.throwCharge>0){m.holdingTarget.isPrinted&&(m.holdingTarget.isPrinted=void 0),m.fieldCDcycle=m.cycle+20,m.fireCDcycle=m.cycle+20,m.isHolding=!1,m.holdingTarget.collisionFilter.category=cat.bullet,m.holdingTarget.collisionFilter.mask=cat.map|cat.body|cat.bullet|cat.mob|cat.mobBullet|cat.mobShield,tech.isBlockRestitution&&(m.holdingTarget.restitution=.999,m.holdingTarget.friction=m.holdingTarget.frictionStatic=m.holdingTarget.frictionAir=.001);const e=function(t){const o=t.position.x-player.position.x,l=t.position.y-player.position.y;o*o+l*l>1e4&&t!==m.holdingTarget?(t.collisionFilter.category=cat.body,t.collisionFilter.mask=cat.player|cat.map|cat.body|cat.bullet|cat.mob|cat.mobBullet):setTimeout(e,40,t)};setTimeout(e,200,m.holdingTarget);const t=Math.min(m.throwCharge/5,1);let o=tech.isPrinter?15+80*t*Math.min(.85,.8/Math.pow(m.holdingTarget.mass,.1)):80*t*Math.min(.85,.8/Math.pow(m.holdingTarget.mass,.25));if(m.throwCharge=0,m.throwCycle=m.cycle+180,Matter.Body.setVelocity(m.holdingTarget,{x:Math.cos(m.angle)*o/(m.crouch?30:10)*Math.sqrt(m.holdingTarget.mass),y:player.velocity.y-Math.sin(m.angle)*o/30*Math.sqrt(m.holdingTarget.mass)}),Matter.Body.setVelocity(player,{x:player.velocity.x-.5*player.velocity.x+Math.cos(m.angle)*o,y:player.velocity.y-.5*player.velocity.y+Math.sin(m.angle)*o}),m.definePlayerMass(),tech.isAddBlockMass){const e=function(t,o){if(t.mass<o){const l=1.04;Matter.Body.scale(t,l,l),setTimeout(e,20,t,o)}};e(m.holdingTarget,Math.min(20,3*m.holdingTarget.mass))}}}else m.isHolding=!1},drawField(){m.holdingTarget?(ctx.fillStyle="rgba(110,170,200,"+m.energy*(.05+.05*Math.random())+")",ctx.strokeStyle="rgba(110, 200, 235, "+(.3+.08*Math.random())+")"):(ctx.fillStyle="rgba(110,170,200,"+(.02+m.energy*(.15+.15*Math.random()))+")",ctx.strokeStyle="rgba(110, 200, 235, "+(.6+.2*Math.random())+")");const e=m.fieldRange;ctx.beginPath(),ctx.arc(m.pos.x,m.pos.y,e,m.angle-Math.PI*m.fieldArc,m.angle+Math.PI*m.fieldArc,!1),ctx.lineWidth=2,ctx.stroke();let t=13,o=.75*Math.PI*m.fieldArc,l=m.angle+o,i=m.pos.x+.6*e*Math.cos(l),a=m.pos.y+.6*e*Math.sin(l);ctx.quadraticCurveTo(i,a,m.pos.x+t*Math.cos(m.angle),m.pos.y+t*Math.sin(m.angle)),l=m.angle-o,i=m.pos.x+.6*e*Math.cos(l),a=m.pos.y+.6*e*Math.sin(l),ctx.quadraticCurveTo(i,a,m.pos.x+1*e*Math.cos(m.angle-Math.PI*m.fieldArc),m.pos.y+1*e*Math.sin(m.angle-Math.PI*m.fieldArc)),ctx.fill();let s=m.angle+1.7*Math.PI*m.fieldArc*(Math.random()-.5);ctx.beginPath(),t=15,ctx.moveTo(m.pos.x+t*Math.cos(m.angle),m.pos.y+t*Math.sin(m.angle)),ctx.lineTo(m.pos.x+e*Math.cos(s),m.pos.y+e*Math.sin(s)),ctx.strokeStyle="rgba(120,170,255,0.6)",ctx.lineWidth=1,ctx.stroke()},grabPowerUp(){m.fireCDcycle<m.cycle&&(m.fireCDcycle=m.cycle-1);for(let e=0,t=powerUp.length;e<t;++e){if(tech.isEnergyNoAmmo&&"ammo"===powerUp[e].name)continue;const t=m.pos.x-powerUp[e].position.x,o=m.pos.y-powerUp[e].position.y,l=t*t+o*o+10;if(l<m.grabPowerUpRange2&&(m.lookingAt(powerUp[e])||l<1e4)&&0===Matter.Query.ray(map,powerUp[e].position,m.pos).length&&(tech.isHealAttract&&"heal"===powerUp[e].name||(powerUp[e].force.x+=t/Math.sqrt(l)*.04*powerUp[e].mass,powerUp[e].force.y+=o/Math.sqrt(l)*.04*powerUp[e].mass-powerUp[e].mass*simulation.g,Matter.Body.setVelocity(powerUp[e],{x:.11*powerUp[e].velocity.x,y:.11*powerUp[e].velocity.y})),l<5e3&&!simulation.isChoosing&&("heal"!==powerUp[e].name||m.maxHealth-m.health>.01||tech.isOverHeal)))return powerUps.onPickUp(powerUp[e]),Matter.Body.setVelocity(player,{x:player.velocity.x+powerUp[e].velocity.x/player.mass*4*powerUp[e].mass,y:player.velocity.y+powerUp[e].velocity.y/player.mass*4*powerUp[e].mass}),powerUp[e].effect(),Matter.Composite.remove(engine.world,powerUp[e]),void powerUp.splice(e,1)}},grabPowerUpEasy(){for(let e=0,t=powerUp.length;e<t;++e){if(tech.isEnergyNoAmmo&&"ammo"===powerUp[e].name)continue;const t=m.pos.x-powerUp[e].position.x,o=m.pos.y-powerUp[e].position.y,l=t*t+o*o+10;if(l<m.grabPowerUpRange2&&0===Matter.Query.ray(map,powerUp[e].position,m.pos).length&&(tech.isHealAttract&&"heal"===powerUp[e].name||(powerUp[e].force.x+=t/Math.sqrt(l)*.05*powerUp[e].mass,powerUp[e].force.y+=o/Math.sqrt(l)*.05*powerUp[e].mass-powerUp[e].mass*simulation.g,Matter.Body.setVelocity(powerUp[e],{x:.11*powerUp[e].velocity.x,y:.11*powerUp[e].velocity.y})),l<2e4&&!simulation.isChoosing&&("heal"!==powerUp[e].name||m.maxHealth-m.health>.01||tech.isOverHeal)))return powerUps.onPickUp(powerUp[e]),Matter.Body.setVelocity(player,{x:player.velocity.x+powerUp[e].velocity.x/player.mass*4*powerUp[e].mass,y:player.velocity.y+powerUp[e].velocity.y/player.mass*4*powerUp[e].mass}),powerUp[e].effect(),Matter.Composite.remove(engine.world,powerUp[e]),void powerUp.splice(e,1)}},minEnergyToDeflect:.05,bulletsToBlocks(e){if(e.isMobBullet&&!e.isInvulnerable&&e.mass<10&&body.length<mobs.maxMobBody){body[body.length]=Matter.Bodies.polygon(e.position.x,e.position.y,e.vertices.length,e.radius,{friction:.05,frictionAir:.001,collisionFilter:{category:cat.bullet,mask:cat.map|cat.body|cat.bullet|cat.mob|cat.mobBullet|cat.mobShield},classType:"body",isPrinted:!0,radius:10,density:.002});const t=body[body.length-1];Composite.add(engine.world,t);const o=Vector.mult(Vector.normalise(e.velocity),-Math.max(40,e.speed));Matter.Body.setVelocity(t,o),simulation.ephemera.push({count:120,do(){if(this.count--,this.count<0){simulation.removeEphemera(this),Matter.Composite.remove(engine.world,t);for(let e=0;e<body.length;e++)if(body[e]===t){body.splice(e,1);break}}}}),Matter.Composite.remove(engine.world,e),e.alive=!1}},pushMass(e,t=(.025+Math.sqrt(e.mass)*Vector.magnitude(Vector.sub(e.velocity,player.velocity))*.002)*m.fieldShieldingScale){if(m.energy>m.minEnergyToDeflect){if(e.isShielded&&(t*=2),m.energy-=t,m.energy<m.minEnergyToDeflect?(m.energy=0,m.fieldCDcycle=m.cycle+Math.max(m.fieldBlockCD,60),tech.isLaserField&&simulation.ephemera.push({count:20+Math.floor(30*m.maxEnergy*.0018/tech.laserDrain),do(){this.count--,this.count<0&&simulation.removeEphemera(this);for(let e=0,t=12;e<t;e++){const o=6.28*e/t+.04*m.cycle;tech.isLaserLens?(b.guns[11].lens(),b.laser({x:m.pos.x+30*Math.cos(o),y:m.pos.y+30*Math.sin(o)},{x:m.pos.x+3e3*Math.cos(o),y:m.pos.y+3e3*Math.sin(o)},2.5*tech.laserDamage*b.guns[11].lensDamage)):b.laser({x:m.pos.x+30*Math.cos(o),y:m.pos.y+30*Math.sin(o)},{x:m.pos.x+3e3*Math.cos(o),y:m.pos.y+3e3*Math.sin(o)},2.5*tech.laserDamage)}}})):m.fieldCDcycle=m.cycle+m.fieldBlockCD,!e.isInvulnerable&&m.coupling&&0===m.fieldMode&&bullet.length<200)for(let t=0;t<m.coupling;t++)if(.1*m.coupling-t>1.25*Math.random()){const t=Vector.mult(Vector.normalise(Vector.sub(e.position,m.pos)),m.fieldRange*m.harmonicRadius*(.4+.3*Math.random())),o=Vector.rotate(t,1*(Math.random()-.5)),l=Math.atan2(t.y,t.x);b.iceIX(6+6*Math.random(),l+3*(Math.random()-.5),Vector.add(m.pos,o))}m.bulletsToBlocks(e);const o=Vector.normalise(Vector.sub(player.position,e.position));if(tech.blockDmg){if(Matter.Body.setVelocity(e,{x:.5*e.velocity.x,y:.5*e.velocity.y}),e.isShielded)for(let t=0,o=mob.length;t<o;t++)mob[t].id===e.shieldID&&mob[t].damage(tech.blockDmg*(tech.isBlockRadiation?6:2),!0);else tech.isBlockRadiation?e.isMobBullet?e.damage(3*tech.blockDmg,!0):mobs.statusDoT(e,.42*tech.blockDmg,180):e.damage(tech.blockDmg,!0);const t=40;ctx.beginPath();for(let e=0,l=.5*tech.blockDmg;e<l;e++){let e=m.pos.x-20*o.x,l=m.pos.y-20*o.y;ctx.moveTo(e,l);for(let i=0;i<8;i++)e+=t*(-o.x+1.5*(Math.random()-.5)),l+=t*(-o.y+1.5*(Math.random()-.5)),ctx.lineTo(e,l)}ctx.lineWidth=3,ctx.strokeStyle="#f0f",ctx.stroke()}else m.drawHold(e);tech.isStunField&&mobs.statusStun(e,tech.isStunField);const l=Math.sqrt(Math.min(12,Math.max(.15,e.mass)));Matter.Body.setVelocity(e,{x:player.velocity.x-15*o.x/l,y:player.velocity.y-15*o.y/l}),e.isUnstable&&(m.fieldCDcycle<m.cycle+30&&(m.fieldCDcycle=m.cycle+10),e.death()),m.crouch?Matter.Body.setVelocity(player,{x:player.velocity.x+.1*m.blockingRecoil*o.x*l,y:player.velocity.y+.1*m.blockingRecoil*o.y*l}):Matter.Body.setVelocity(player,{x:player.velocity.x+m.blockingRecoil*o.x*l,y:player.velocity.y+m.blockingRecoil*o.y*l})}},pushMobsFacing(){for(let e=0,t=mob.length;e<t;++e)Vector.magnitude(Vector.sub(mob[e].position,m.pos))-mob[e].radius<m.fieldRange&&m.lookingAt(mob[e])&&!mob[e].isUnblockable&&0===Matter.Query.ray(map,mob[e].position,m.pos).length&&(mob[e].locatePlayer(),m.pushMass(mob[e]),!tech.deflectEnergy||mob[e].isInvulnerable||mob[e].isShielded||(m.energy+=tech.deflectEnergy*level.isReducedRegen))},lookForBlock(){const e={targetIndex:null,targetRange:150};for(let t=0,o=body.length;t<o;++t)if(0===Matter.Query.ray(map,body[t].position,m.pos).length){const o=Vector.magnitude(Vector.sub(body[t].position,m.pos)),l=m.lookingAt(body[t]);o<e.targetRange+30&&l&&!body[t].isNotHoldable&&(e.targetRange=o,e.targetIndex=t)}if(body[e.targetIndex]){m.holdingTarget=body[e.targetIndex],ctx.beginPath();let t=m.holdingTarget.vertices;ctx.moveTo(t[0].x,t[0].y);for(let e=1;e<t.length;e+=1)ctx.lineTo(t[e].x,t[e].y);ctx.lineTo(t[0].x,t[0].y),ctx.fillStyle="rgba(190,215,230,"+(.3+.7*Math.random())+")",ctx.fill(),ctx.globalAlpha=.2,m.drawHold(m.holdingTarget),ctx.globalAlpha=1}else m.holdingTarget=null},pickUp(){m.isHolding=!0,totalMomentum=Vector.add(Vector.mult(player.velocity,player.mass),Vector.mult(m.holdingTarget.velocity,m.holdingTarget.mass)),Matter.Body.setVelocity(player,Vector.mult(totalMomentum,1/(m.defaultMass+m.holdingTarget.mass))),m.definePlayerMass(m.defaultMass+m.holdingTarget.mass*m.holdingMassScale),m.holdingTarget.collisionFilter.category=0,m.holdingTarget.collisionFilter.mask=0},wakeCheck(){if(m.isTimeDilated){function e(e){for(let t=0,o=e.length;t<o;++t)Matter.Sleeping.set(e[t],!1),e[t].storeVelocity&&(Matter.Body.setVelocity(e[t],{x:e[t].storeVelocity.x,y:e[t].storeVelocity.y}),Matter.Body.setAngularVelocity(e[t],e[t].storeAngularVelocity))}m.isTimeDilated=!1,e(mob),e(body),e(bullet);for(let t=0,o=cons.length;t<o;t++)0===cons[t].stiffness&&(cons[t].stiffness=cons[t].storeStiffness)}},hold(){},couplingDescription(e=m.coupling){switch(m.fieldMode){case 0:return"<strong>all</strong> effects";case 1:return`+${(5*e).toFixed(0)} maximum <strong class='color-f'>energy</strong>`;case 2:return`<span style = 'font-size:95%;'><strong>deflecting</strong> condenses ${(.1*e).toFixed(2)} <strong class='color-s'>ice IX</strong></span>`;case 3:return`<strong>${(.973**e).toFixed(2)}x</strong> <strong class='color-defense'>damage taken</strong>`;case 4:return`<strong>+${(.6*e).toFixed(1)}</strong> <strong class='color-f'>energy</strong> per second`;case 5:return`<strong>${(1+.025*e).toFixed(3)}x</strong> <strong class='color-d'>damage</strong>`;case 6:return`<strong>+${(1+.05*e).toFixed(2)}x</strong> longer <strong style='letter-spacing: 2px;'>stopped time</strong>`;case 7:return`<strong>${(1+.05*e).toFixed(3)}x</strong> ambush <strong class='color-d'>damage</strong>`;case 8:return`<strong>${(1+.05*e).toFixed(2)}x</strong> <strong class='color-block'>block</strong> collision <strong class='color-d'>damage</strong>`;case 9:return`<span style = 'font-size:89%;'>after eating <strong class='color-block'>blocks</strong> <strong>+${(2*e).toFixed(0)}</strong> <strong class='color-f'>energy</strong></span>`;case 10:return`<span style="opacity: 1;">${powerUps.orb.ammo(1)}</span> give ${(4*e).toFixed(0)}% more ammo`}},couplingChange(e=0){if(e>0&&-1!==level.onLevel&&simulation.inGameConsole(`<div class="coupling-circle"></div> m.coupling <span class='color-symbol'>+=</span> ${e}`,60),m.coupling+=e,m.coupling<0){for(let e=powerUp.length-1;e>-1&&("coupling"!==powerUp[e].name||(Matter.Composite.remove(engine.world,powerUp[e]),powerUp.splice(e,1),m.coupling+=1,m.coupling<0));e--);m.coupling=0}m.setMaxEnergy(!1),m.setFieldRegen(),mobs.setMobSpawnHealth(),powerUps.setPowerUpMode()},setField(e){if(window.removeEventListener("keydown",m.fieldEvent),m.fieldUpgrades[8].collider&&(Matter.Composite.remove(engine.world,m.fieldUpgrades[8].collider),m.fieldUpgrades[8].collider=null),isNaN(e)){let t=!1;for(let o=0;o<m.fieldUpgrades.length;o++)if(e===m.fieldUpgrades[o].name){e=o,t=!0;break}if(!t)return}m.fieldMode=e,document.getElementById("field").innerHTML=m.fieldUpgrades[e].name,m.setHoldDefaults(),m.fieldUpgrades[e].effect(),simulation.inGameConsole(`<div class="circle-grid field"></div> &nbsp; <span class='color-var'>m</span>.setField("<strong class='color-text'>${m.fieldUpgrades[m.fieldMode].name}</strong>")<br>input.key.field<span class='color-symbol'>:</span> ["<span class='color-text'>MouseRight</span>"]`),1===m.fieldMode&&simulation.inGameConsole(`m<span class='color-symbol'>.</span>fieldUpgrades<span class='color-symbol'>[1]</span>energyHealthRatio <span class='color-symbol'>=</span> ${m.fieldUpgrades[1].energyHealthRatio} &nbsp; &nbsp; <em style="float: right;font-family: monospace;font-size: 1rem;color: #055;">←←↓→→↓</em>`),2===m.fieldMode&&simulation.inGameConsole("m<span class='color-symbol'>.</span>fieldPosition<span class='color-symbol'>+=</span>10 &nbsp; &nbsp; <em style=\"float: right;font-family: monospace;font-size: 1rem;color: #055;\">← → ← → ↧</em>"),3===m.fieldMode&&simulation.inGameConsole("body<span class='color-symbol'>[i].</span>force <span class='color-symbol'>=</span> push &nbsp; &nbsp; <em style=\"float: right;font-family: monospace;font-size: 1rem;color: #055;\">←↖↑→↗↑↑</em>"),4===m.fieldMode&&simulation.inGameConsole(`simulation<span class='color-symbol'>.</span>molecularMode <span class='color-symbol'>=</span> ${m.fieldUpgrades[4].modeText()} &nbsp; &nbsp; <em style="float: right;font-family: monospace;font-size: 1rem;color: #055;">↓↘→↓↙←↑↑↓</em>`),5===m.fieldMode&&simulation.inGameConsole("m<span class='color-symbol'>.</span>energy <span class='color-symbol'>+=</span> 0.05 &nbsp; &nbsp; <em style=\"float: right;font-family: monospace;font-size: 1rem;color: #055;\">←↙↓↘→→↧</em>"),6===m.fieldMode&&simulation.inGameConsole("m<span class='color-symbol'>.</span>history<span class='color-symbol'>[(</span>m<span class='color-symbol'>.</span>cycle <span class='color-symbol'>-</span> 200 <span class='color-symbol'>)</span> <span class='color-symbol'>%</span> 600 <span class='color-symbol'>]</span>  &nbsp; &nbsp; <em style=\"float: right;font-family: monospace;font-size: 0.9rem;color: #055;\">←↙↓↘→↗↑↖←↙↓↘→↗↑</em>"),7===m.fieldMode&&simulation.inGameConsole("<strong>4.5</strong><span class='color-symbol'>→</span><strong>6x</strong> <strong class='color-cloaked'>decloaking</strong> <strong class='color-d'>damage</strong> &nbsp; &nbsp; <em style=\"float: right;font-family: monospace;font-size: 1rem;color: #055;\">↑↓↙←↓↘→</em>"),8===m.fieldMode&&simulation.inGameConsole("Composite<span class='color-symbol'>.</span>add<span class='color-symbol'>(</span>engine.world<span class='color-symbol'>,</span> block<span class='color-symbol'>)</span> &nbsp; &nbsp; <em style =\"float: right; font-family: monospace;font-size:1rem;color:#055;\">//↓↓→↘↓↙←↓↓</em>"),9===m.fieldMode&&simulation.inGameConsole("simulation<span class='color-symbol'>.</span>setPosition<span class='color-symbol'>({</span> x<span class='color-symbol'>:</span> 0<span class='color-symbol'>,</span> y<span class='color-symbol'>:</span> 0 <span class='color-symbol'>})</span> &nbsp; &nbsp; <em style =\"float: right; font-family: monospace;font-size:1rem;color:#055;\">//↓↓↓↑↓</em>"),10===m.fieldMode&&simulation.inGameConsole("Matter<span class='color-symbol'>.</span>Body<span class='color-symbol'>.</span>setPosition<span class='color-symbol'>(</span>player<span class='color-symbol'>, {</span> x<span class='color-symbol'>:</span> 0<span class='color-symbol'>,</span> y<span class='color-symbol'>:</span> 0 <span class='color-symbol'>})</span> &nbsp; &nbsp; <em style =\"float: right; font-family: monospace;font-size:1rem;color:#055;\">//↑↑↓↓</em>")},fieldEvent:null,fieldUpgrades:[{name:"field emitter",imageNumber:Math.floor(26*Math.random()),description:"<em>initial field</em><br>use <strong class='color-f'>energy</strong> to <strong>deflect</strong> mobs and <strong>throw</strong> <strong class='color-block'>blocks</strong>\n        <br><strong>6</strong> <strong class='color-f'>energy</strong> per second",effect:()=>{m.hold=function(){m.isHolding?(m.drawHold(m.holdingTarget),m.holding(),m.throwBlock()):input.field&&m.fieldCDcycle<m.cycle?(m.energy>m.fieldRegen&&(m.energy-=m.fieldRegen),m.grabPowerUp(),m.lookForBlock(),m.energy>m.minEnergyToDeflect&&(m.drawField(),m.pushMobsFacing())):m.holdingTarget&&m.fieldCDcycle<m.cycle?m.pickUp():m.holdingTarget=null,m.drawRegenEnergy()}}},{name:"standing wave",description:"<strong>3</strong> oscillating <strong>shields</strong> are permanently active\n            <br><strong>+150</strong> max <strong class='color-f'>energy</strong>\n            <br><strong>6</strong> <strong class='color-f'>energy</strong> per second<em style =\"float: right; font-family: monospace;font-size:1rem;color:#fff;\">←←↓→→↓</em>",keyLog:[null,null,null,null,null,null],energyHealthRatio:1,drainCD:0,effect:()=>{m.fieldEvent=function(e){m.fieldUpgrades[m.fieldMode].keyLog.shift(),m.fieldUpgrades[m.fieldMode].keyLog.push(e.code);const t=[input.key.left,input.key.left,input.key.down,input.key.right,input.key.right,input.key.down],o=(e,t)=>e.length===t.length&&e.every((e,o)=>e===t[o]);(o(m.fieldUpgrades[m.fieldMode].keyLog,["ArrowLeft","ArrowLeft","ArrowDown","ArrowRight","ArrowRight","ArrowDown"])||o(m.fieldUpgrades[m.fieldMode].keyLog,t))&&(1===m.fieldUpgrades[1].energyHealthRatio?m.fieldUpgrades[1].energyHealthRatio=2:2===m.fieldUpgrades[1].energyHealthRatio?m.fieldUpgrades[1].energyHealthRatio=.5:m.fieldUpgrades[1].energyHealthRatio=1,m.setMaxEnergy(),m.setMaxHealth(),m.displayHealth(),simulation.inGameConsole(`m<span class='color-symbol'>.</span>fieldUpgrades<span class='color-symbol'>[1]</span>energyHealthRatio <span class='color-symbol'>=</span> ${m.fieldUpgrades[1].energyHealthRatio} &nbsp; &nbsp; <em style="float: right;font-family: monospace;font-size: 1rem;color: #fff;">←←↓→→↓</em>`))},window.addEventListener("keydown",m.fieldEvent),m.fieldBlockCD=0,m.blockingRecoil=1,m.fieldRange=185,m.fieldShieldingScale=1.6*Math.pow(.5,tech.harmonics-2),m.harmonic3Phase=()=>{const e=(.75+.3*Math.sin(m.cycle/23))*m.fieldRange*m.harmonicRadius,t=(.68+.37*Math.sin(m.cycle/37))*m.fieldRange*m.harmonicRadius,o=(.7+.35*Math.sin(m.cycle/47))*m.fieldRange*m.harmonicRadius,l=Math.max(e,t,o);ctx.fillStyle="rgba(110,170,200,"+Math.min(.55,.04+.7*m.energy*(.1+.11*Math.random()))+")",ctx.beginPath(),ctx.arc(m.pos.x,m.pos.y,e,0,2*Math.PI),ctx.fill(),ctx.beginPath(),ctx.arc(m.pos.x,m.pos.y,t,0,2*Math.PI),ctx.fill(),ctx.beginPath(),ctx.arc(m.pos.x,m.pos.y,o,0,2*Math.PI),ctx.fill();for(let e=0,t=mob.length;e<t;++e)Vector.magnitude(Vector.sub(mob[e].position,m.pos))-mob[e].radius<l&&!mob[e].isUnblockable&&(mob[e].locatePlayer(),this.drainCD>m.cycle?m.pushMass(mob[e],0):(m.pushMass(mob[e]),this.drainCD=m.cycle+15))},m.harmonicRadius=1,m.harmonicAtomic=()=>{const e=.0031*simulation.cycle,t=.023*simulation.cycle,o=m.fieldRange*m.harmonicRadius;ctx.lineWidth=1,ctx.strokeStyle="rgba(110,170,200,0.8)",ctx.fillStyle="rgba(110,170,200,"+Math.min(.6,.7*m.energy*(.11+.1*Math.random())*(3/tech.harmonics))+")";for(let l=0;l<tech.harmonics;l++)ctx.beginPath(),ctx.ellipse(m.pos.x,m.pos.y,o*Math.abs(Math.sin(t+l/tech.harmonics*Math.PI)),o,e+l/tech.harmonics*Math.PI,0,2*Math.PI),ctx.fill(),ctx.stroke();for(let e=0,t=mob.length;e<t;++e)Vector.magnitude(Vector.sub(mob[e].position,m.pos))-mob[e].radius<o&&!mob[e].isUnblockable&&(mob[e].locatePlayer(),this.drainCD>m.cycle?m.pushMass(mob[e],0):(m.pushMass(mob[e]),this.drainCD=m.cycle+15))},2===tech.harmonics?m.harmonicShield=m.harmonic3Phase:m.harmonicShield=m.harmonicAtomic,m.hold=function(){m.isHolding?(m.drawHold(m.holdingTarget),m.holding(),m.throwBlock()):input.field&&m.fieldCDcycle<m.cycle?(m.energy>m.fieldRegen&&(m.energy-=m.fieldRegen),m.grabPowerUp(),m.lookForBlock()):m.holdingTarget&&m.fieldCDcycle<m.cycle?m.pickUp():m.holdingTarget=null,m.energy>m.minEnergyToDeflect&&m.fieldCDcycle<m.cycle&&(tech.isStandingWaveExpand&&(input.field?m.harmonicRadius=.99*m.harmonicRadius+.04:m.harmonicRadius=.994*m.harmonicRadius+.006),simulation.isTimeSkipping||m.harmonicShield()),m.drawRegenEnergy()}}},{name:"perfect diamagnetism",description:"<strong>deflecting</strong> does not drain <strong class='color-f'>energy</strong><br><strong>shield</strong> maintains <strong>functionality</strong> while inactive<br><strong>5</strong> <strong class='color-f'>energy</strong> per second<em style =\"float: right; font-family: monospace;font-size:1rem;color:#fff;\">← → ← → ↧</em>",keyLog:[null,null,null,null,null],effect:()=>{m.fieldEvent=function(e){m.fieldUpgrades[m.fieldMode].keyLog.shift(),m.fieldUpgrades[m.fieldMode].keyLog.push(e.code);const t=[input.key.left,input.key.right,input.key.left,input.key.right,input.key.down],o=(e,t)=>e.length===t.length&&e.every((e,o)=>e===t[o]);(o(m.fieldUpgrades[m.fieldMode].keyLog,["ArrowLeft","ArrowRight","ArrowLeft","ArrowRight","ArrowDown"])||o(m.fieldUpgrades[m.fieldMode].keyLog,t))&&simulation.ephemera.push({do(){const e=.5,t={x:m.fieldPosition.x+m.fieldRange*Math.cos(m.fieldAngle+e*Math.PI*m.fieldArc),y:m.fieldPosition.y+m.fieldRange*Math.sin(m.fieldAngle+e*Math.PI*m.fieldArc)},o={x:m.fieldPosition.x+m.fieldRange*Math.cos(m.fieldAngle-e*Math.PI*m.fieldArc),y:m.fieldPosition.y+m.fieldRange*Math.sin(m.fieldAngle-e*Math.PI*m.fieldArc)},l=Matter.Query.ray(map,t,o,35);input.down&&!l.length||simulation.removeEphemera(this);const i={x:Math.cos(m.fieldAngle),y:Math.sin(m.fieldAngle)};m.fieldPosition=Vector.add(m.fieldPosition,Vector.mult(i,10))}})},window.addEventListener("keydown",m.fieldEvent),m.fieldMeterColor="#48f",m.eyeFillColor=m.fieldMeterColor,m.fieldShieldingScale=0,m.fieldBlockCD=3,m.grabPowerUpRange2=1e7,m.fieldPosition={x:m.pos.x,y:m.pos.y},m.fieldAngle=m.angle,m.perfectPush=(e=!1)=>{if(m.fieldCDcycle<m.cycle)for(let t=0,o=mob.length;t<o;++t)if(Vector.magnitude(Vector.sub(mob[t].position,m.fieldPosition))-mob[t].radius<m.fieldRange&&!mob[t].isUnblockable&&Vector.dot({x:Math.cos(m.fieldAngle),y:Math.sin(m.fieldAngle)},Vector.normalise(Vector.sub(mob[t].position,m.fieldPosition)))>m.fieldThreshold&&0===Matter.Query.ray(map,mob[t].position,m.fieldPosition).length){mob[t].locatePlayer();const o=Vector.normalise(Vector.sub(m.fieldPosition,mob[t].position));if(m.fieldCDcycle=m.cycle+m.fieldBlockCD+(mob[t].isShielded?10:0),!mob[t].isInvulnerable&&bullet.length<250)for(let e=0;e<m.coupling;e++)if(.1*m.coupling-e>Math.random()){const e=m.fieldAngle+4*m.fieldArc*(Math.random()-.5),t=m.fieldRange*(.6+.3*Math.random());b.iceIX(6+6*Math.random(),e,Vector.add(m.fieldPosition,{x:t*Math.cos(e),y:t*Math.sin(e)}))}if(tech.blockDmg){if(Matter.Body.setVelocity(mob[t],{x:.5*mob[t].velocity.x,y:.5*mob[t].velocity.y}),mob[t].isShielded)for(let e=0,o=mob.length;e<o;e++)mob[e].id===mob[t].shieldID&&mob[e].damage(tech.blockDmg*(tech.isBlockRadiation?6:2),!0);else tech.isBlockRadiation?mob[t].isMobBullet?mob[t].damage(3*tech.blockDmg,!0):mobs.statusDoT(mob[t],.42*tech.blockDmg,180):mob[t].damage(tech.blockDmg,!0);const e=40;ctx.beginPath();for(let t=0,l=.5*tech.blockDmg;t<l;t++){let t=m.fieldPosition.x-20*o.x,l=m.fieldPosition.y-20*o.y;ctx.moveTo(t,l);for(let i=0;i<8;i++)t+=e*(-o.x+1.5*(Math.random()-.5)),l+=e*(-o.y+1.5*(Math.random()-.5)),ctx.lineTo(t,l)}ctx.lineWidth=3,ctx.strokeStyle="#f0f",ctx.stroke()}else if(e){ctx.lineWidth=2,ctx.fillStyle=`rgba(110,150,220, ${.2+.4*Math.random()})`,ctx.strokeStyle="#000";const e=mob[t].vertices.length-1,o=mob[t].radius;ctx.beginPath(),ctx.moveTo(mob[t].vertices[e].x+o*(Math.random()-.5),mob[t].vertices[e].y+o*(Math.random()-.5));for(let l=0;l<e;l++)ctx.lineTo(mob[t].vertices[l].x+o*(Math.random()-.5),mob[t].vertices[l].y+o*(Math.random()-.5));ctx.lineTo(mob[t].vertices[e].x+o*(Math.random()-.5),mob[t].vertices[e].y+o*(Math.random()-.5)),ctx.fill(),ctx.stroke()}else{const e=15,o=mob[t].vertices.length-1;ctx.lineWidth=1,ctx.fillStyle=`rgba(110,150,220, ${.2+.4*Math.random()})`,ctx.strokeStyle="#000",ctx.beginPath(),ctx.moveTo(m.fieldPosition.x+e*Math.cos(m.fieldAngle),m.fieldPosition.y+e*Math.sin(m.fieldAngle)),ctx.lineTo(mob[t].vertices[o].x,mob[t].vertices[o].y),ctx.lineTo(mob[t].vertices[0].x,mob[t].vertices[0].y),ctx.fill(),ctx.stroke();for(let l=0;l<o;l++)ctx.beginPath(),ctx.moveTo(m.fieldPosition.x+e*Math.cos(m.fieldAngle),m.fieldPosition.y+e*Math.sin(m.fieldAngle)),ctx.lineTo(mob[t].vertices[l].x,mob[t].vertices[l].y),ctx.lineTo(mob[t].vertices[l+1].x,mob[t].vertices[l+1].y),ctx.fill(),ctx.stroke()}m.bulletsToBlocks(mob[t]),tech.isStunField&&mobs.statusStun(mob[t],tech.isStunField);const l=Math.sqrt(Math.max(1,mob[t].mass));if(Matter.Body.setVelocity(mob[t],{x:player.velocity.x-30*o.x/l,y:player.velocity.y-30*o.y/l}),mob[t].isUnstable&&(m.fieldCDcycle<m.cycle+10&&(m.fieldCDcycle=m.cycle+6),mob[t].death()),!e&&mob[t].isDropPowerUp&&player.speed<12){const e=Math.sqrt(Math.min(10,Math.max(.2,mob[t].mass)));Matter.Body.setVelocity(player,{x:.9*player.velocity.x+.6*o.x*e,y:.9*player.velocity.y+.6*o.y*e})}}},m.hold=function(){const e=Math.sin(.022*m.cycle);if(m.fieldRange=180+12*e+100*tech.isBigField,m.fieldArc=.35+.045*e+.065*tech.isBigField,m.calculateFieldThreshold(),m.isHolding)m.drawHold(m.holdingTarget),m.holding(),m.throwBlock();else if(input.field){const t=.5+.7*(Math.PI/2-Math.min(Math.PI/2,Math.abs(m.angle+Math.PI/2)));if(player.velocity.y>1){player.force.y-=t*(tech.isBigField?.95:.5)*player.mass*simulation.g;const e=7e-4*t*player.mass;player.velocity.x>.5?player.force.x+=e:player.velocity.x<-.5&&(player.force.x-=e),Matter.Body.setVelocity(player,{x:player.velocity.x,y:.98*player.velocity.y})}m.energy>m.fieldRegen&&(m.energy-=m.fieldRegen),m.grabPowerUp(),m.lookForBlock(),m.fieldPosition={x:m.pos.x,y:m.pos.y},m.fieldAngle=m.angle,m.holdingTarget?(ctx.fillStyle=`rgba(110,150,220, ${.06+.03*Math.random()})`,ctx.strokeStyle=`rgba(110,150,220, ${.35+.05*Math.random()})`):(ctx.fillStyle=`rgba(110,150,220, ${.27+.2*Math.random()-.1*e})`,ctx.strokeStyle=`rgba(110,150,220, ${.4+.5*Math.random()})`),ctx.beginPath(),ctx.arc(m.pos.x,m.pos.y,m.fieldRange,m.angle-Math.PI*m.fieldArc,m.angle+Math.PI*m.fieldArc,!1),ctx.lineWidth=2.5-1.5*e,ctx.stroke();const o=.57+.04*e,l=(1-1.2*o)*Math.PI*m.fieldArc;let i=m.angle+l,a=m.pos.x+o*m.fieldRange*Math.cos(i),s=m.pos.y+o*m.fieldRange*Math.sin(i);ctx.quadraticCurveTo(a,s,m.pos.x+30*Math.cos(m.angle),m.pos.y+30*Math.sin(m.angle)),i=m.angle-l,a=m.pos.x+o*m.fieldRange*Math.cos(i),s=m.pos.y+o*m.fieldRange*Math.sin(i),ctx.quadraticCurveTo(a,s,m.pos.x+1*m.fieldRange*Math.cos(m.angle-Math.PI*m.fieldArc),m.pos.y+1*m.fieldRange*Math.sin(m.angle-Math.PI*m.fieldArc)),ctx.fill(),m.perfectPush()}else if(m.holdingTarget&&m.fieldCDcycle<m.cycle)m.pickUp();else if(m.holdingTarget=null,!input.field){ctx.fillStyle=`rgba(110,150,220, ${.27+.2*Math.random()-.1*e})`,ctx.strokeStyle=`rgba(110,180,255, ${.4+.5*Math.random()})`,ctx.beginPath(),ctx.arc(m.fieldPosition.x,m.fieldPosition.y,m.fieldRange,m.fieldAngle-Math.PI*m.fieldArc,m.fieldAngle+Math.PI*m.fieldArc,!1),ctx.lineWidth=2.5-1.5*e,ctx.stroke();const t=.8+.06*e,o=(1-1.2*t)*Math.PI*m.fieldArc;let l=m.fieldAngle+o;ctx.quadraticCurveTo(m.fieldPosition.x+t*m.fieldRange*Math.cos(l),m.fieldPosition.y+t*m.fieldRange*Math.sin(l),m.fieldPosition.x+1*m.fieldRange*Math.cos(m.fieldAngle-Math.PI*m.fieldArc),m.fieldPosition.y+1*m.fieldRange*Math.sin(m.fieldAngle-Math.PI*m.fieldArc)),ctx.fill(),m.perfectPush(!0)}if(m.drawRegenEnergy("rgba(0,0,0,0.2)"),tech.isPerfectBrake){const t=200+140*e+150*m.energy;for(let e=0;e<mob.length;e++){if(Vector.magnitude(Vector.sub(m.pos,mob[e].position))<t){const t=mob[e].isShielded?8:4;mob[e].speed>t&&Vector.dot(mob[e].velocity,Vector.sub(m.pos,mob[e].position))>0&&Matter.Body.setVelocity(mob[e],Vector.mult(Vector.normalise(mob[e].velocity),t))}}ctx.beginPath(),ctx.arc(m.pos.x,m.pos.y,t,0,2*Math.PI),ctx.fillStyle="hsla(200,50%,61%,0.08)",ctx.fill()}}}},{name:"negative mass",description:"use <strong class='color-f'>energy</strong> to nullify &nbsp;<strong style='letter-spacing: 7px;'>gravity</strong><br><strong>0.5x</strong> <strong class='color-defense'>damage taken</strong><br><strong>6</strong> <strong class='color-f'>energy</strong> per second<em style =\"float: right; font-family: monospace;font-size:1rem;color:#fff;\">←↖↑→↗↑↑</em>",keyLog:[null,null,null,null,null],fieldDrawRadius:0,effect:()=>{m.fieldEvent=function(e){m.fieldUpgrades[3].keyLog.shift(),m.fieldUpgrades[3].keyLog.push(e.code);const t=[input.key.left,input.key.up,input.key.right,input.key.up,input.key.up],o=(e,t)=>e.length===t.length&&e.every((e,o)=>e===t[o]),l=tech.negativeMassCost?.13:0;input.field&&m.energy>l&&(o(m.fieldUpgrades[3].keyLog,["ArrowLeft","ArrowUp","ArrowRight","ArrowUp","ArrowUp"])||o(m.fieldUpgrades[3].keyLog,t))&&(m.energy-=l,simulation.ephemera.push({count:60,range:1700,do(){this.count--,this.count<0&&simulation.removeEphemera(this);for(let e=0,t=body.length;e<t;++e)if(sub=Vector.sub(body[e].position,m.pos),dist=Vector.magnitude(sub),dist<this.range){const t=Vector.mult(Vector.normalise(sub),.012*dist/1e3*body[e].mass);body[e].force.x-=t.x,body[e].force.y-=t.y+1.1*body[e].mass*simulation.g,Matter.Body.setVelocity(body[e],{x:.9*body[e].velocity.x,y:.9*body[e].velocity.y})}}}),simulation.inGameConsole("body<span class='color-symbol'>[i].</span>force <span class='color-symbol'>=</span> push &nbsp; &nbsp; <em style=\"float: right;font-family: monospace;font-size: 1rem;color: #055;\">←↖↑→↗↑↑</em>"))},window.addEventListener("keydown",m.fieldEvent),m.fieldFire=!0,m.holdingMassScale=.01,m.fieldMeterColor="#333",m.eyeFillColor=m.fieldMeterColor,m.fieldHarmReduction=.5,m.fieldDrawRadius=0,m.hold=function(){if(m.airSpeedLimit=125,m.FxAir=.016,m.isHolding)m.drawHold(m.holdingTarget),m.holding(),m.throwBlock();else if(input.field){if(m.energy>m.fieldRegen&&tech.negativeMassCost>0&&(m.energy-=m.fieldRegen),m.grabPowerUp(),m.lookForBlock(),m.energy>0&&m.fieldCDcycle<m.cycle){if(tech.isFlyFaster){function e(e,t,o=1.06){for(let l=0,i=e.length;l<i;++l)sub=Vector.sub(e[l].position,m.pos),dist=Vector.magnitude(sub),dist<t&&(e[l].force.y-=e[l].mass*(simulation.g*o),input.left?e[l].force.x-=m.FxAir*e[l].mass/10:input.right&&(e[l].force.x+=m.FxAir*e[l].mass/10))}m.airSpeedLimit=1e3,m.FxAir=.01,input.down?(player.force.y+=.5*player.mass*simulation.g,this.fieldDrawRadius=.97*this.fieldDrawRadius+15,e(powerUp,this.fieldDrawRadius,0),e(body,this.fieldDrawRadius,0)):input.up?(m.energy-=5*tech.negativeMassCost,this.fieldDrawRadius=.97*this.fieldDrawRadius+33,player.force.y-=2.25*player.mass*simulation.g,e(powerUp,this.fieldDrawRadius,1.8),e(body,this.fieldDrawRadius,1.8)):(m.energy-=tech.negativeMassCost,this.fieldDrawRadius=.97*this.fieldDrawRadius+24,player.force.y-=1.07*player.mass*simulation.g,e(powerUp,this.fieldDrawRadius),e(body,this.fieldDrawRadius))}else{function t(e,t,o=1.06){for(let l=0,i=e.length;l<i;++l)sub=Vector.sub(e[l].position,m.pos),dist=Vector.magnitude(sub),dist<t&&(e[l].force.y-=e[l].mass*(simulation.g*o),input.left?e[l].force.x-=m.FxAir*e[l].mass/10:input.right&&(e[l].force.x+=m.FxAir*e[l].mass/10))}m.airSpeedLimit=400,m.FxAir=.005,input.down?(player.force.y-=.5*player.mass*simulation.g,this.fieldDrawRadius=.97*this.fieldDrawRadius+12,t(powerUp,this.fieldDrawRadius,.7),t(body,this.fieldDrawRadius,.7)):input.up?(m.energy-=5*tech.negativeMassCost,this.fieldDrawRadius=.97*this.fieldDrawRadius+25.5,player.force.y-=1.45*player.mass*simulation.g,t(powerUp,this.fieldDrawRadius,1.38),t(body,this.fieldDrawRadius,1.38)):(m.energy-=tech.negativeMassCost,this.fieldDrawRadius=.97*this.fieldDrawRadius+19.5,player.force.y-=1.07*player.mass*simulation.g,t(powerUp,this.fieldDrawRadius),t(body,this.fieldDrawRadius))}m.energy<0&&(m.fieldCDcycle=m.cycle+120,m.energy=0),input.down||input.up||input.left||input.right,Matter.Body.setVelocity(player,{x:.99*player.velocity.x,y:.98*player.velocity.y}),simulation.isTimeSkipping||(ctx.beginPath(),ctx.arc(m.pos.x,m.pos.y,this.fieldDrawRadius,0,2*Math.PI),ctx.fillStyle="#f5f5ff",ctx.globalCompositeOperation="difference",ctx.fill(),ctx.globalCompositeOperation="source-over")}}else m.holdingTarget&&m.fieldCDcycle<m.cycle?(m.pickUp(),this.fieldDrawRadius=0):(m.holdingTarget=null,this.fieldDrawRadius=0);m.drawRegenEnergy("rgba(0,0,0,0.2)")}}},{name:"molecular assembler",modeText:()=>(0===simulation.molecularMode?"<strong class='color-p' style='letter-spacing: 2px;'>spores":1===simulation.molecularMode?"<strong>missiles":2===simulation.molecularMode?"<strong class='color-s'>ice IX":"<strong>drones")+"</strong>",description:`use <strong class='color-f'>energy</strong> to <strong>deflect</strong> mobs<br>excess <strong class='color-f'>energy</strong> used to <strong class='color-print'>print</strong> ${0===simulation.molecularMode?"<strong class='color-p' style='letter-spacing: 2px;'>spores":1===simulation.molecularMode?"<strong>missiles":2===simulation.molecularMode?"<strong class='color-s'>ice IX":"<strong>drones"}</strong><br><strong>12</strong> <strong class='color-f'>energy</strong> per second <em style ="float: right; font-family: monospace;font-size:1rem;color:#fff;">↓↘→↓↙←↑↑↓</em>`,setDescription:()=>`use <strong class='color-f'>energy</strong> to <strong>deflect</strong> mobs<br>excess <strong class='color-f'>energy</strong> used to <strong class='color-print'>print</strong> ${0===simulation.molecularMode?"<strong class='color-p' style='letter-spacing: 2px;'>spores":1===simulation.molecularMode?"<strong>missiles":2===simulation.molecularMode?"<strong class='color-s'>ice IX":"<strong>drones"}</strong><br><strong>12</strong> <strong class='color-f'>energy</strong> per second <em style ="float: right; font-family: monospace;font-size:1rem;color:#fff;">↓↘→↓↙←↑↑↓</em>`,endoThermic(e){if(tech.isEndothermic){const t=10*e;if(Math.random()<t)for(let e=0;e<t;e++)b.iceIX(1)}},keyLog:[null,null,null,null,null,null,null],effect:()=>{m.fieldEvent=function(e){m.fieldUpgrades[4].keyLog.shift(),m.fieldUpgrades[4].keyLog.push(e.code);const t=[input.key.down,input.key.right,input.key.down,input.key.left,input.key.up,input.key.up,input.key.down],o=(e,t)=>e.length===t.length&&e.every((e,o)=>e===t[o]);if(o(m.fieldUpgrades[4].keyLog,["ArrowDown","ArrowRight","ArrowDown","ArrowLeft","ArrowUp","ArrowUp","ArrowDown"])||o(m.fieldUpgrades[4].keyLog,t)){simulation.molecularMode=simulation.molecularMode<3?simulation.molecularMode+1:0,m.fieldUpgrades[4].description=m.fieldUpgrades[4].setDescription();const e=(0===simulation.molecularMode?"<em class='color-p' style='letter-spacing: 2px;'>spores":1===simulation.molecularMode?"<em>missiles":2===simulation.molecularMode?"<em class='color-s'>ice IX":"<em>drones")+"</em>";simulation.inGameConsole(`simulation<span class='color-symbol'>.</span>molecularMode <span class='color-symbol'>=</span> ${simulation.molecularMode} // ${e} &nbsp; <em style="float: right;font-family: monospace;font-size: 1rem;color: #fff;">↓↘→↓↙←↑↑↓</em>`)}},window.addEventListener("keydown",m.fieldEvent),m.fieldMeterColor="#ff0",m.eyeFillColor=m.fieldMeterColor,m.hold=function(){if(m.energy>m.maxEnergy-.02&&m.fieldCDcycle<m.cycle&&!input.field&&bullet.length<300&&m.cycle%2)if(0===simulation.molecularMode)if(tech.isSporeFlea){const e=.18+.02*(Math.max(bullet.length,130)-130);if(m.energy>e){m.energy-=e;const t=m.crouch?20+8*Math.random():10+3*Math.random();b.flea({x:m.pos.x+35*Math.cos(m.angle),y:m.pos.y+35*Math.sin(m.angle)},{x:t*Math.cos(m.angle),y:t*Math.sin(m.angle)}),m.fieldUpgrades[4].endoThermic(e)}}else if(tech.isSporeWorm){const e=.18+.02*(Math.max(bullet.length,130)-130);if(m.energy>e){m.energy-=e,b.worm({x:m.pos.x+35*Math.cos(m.angle),y:m.pos.y+35*Math.sin(m.angle)});const t=2+1*Math.random();Matter.Body.setVelocity(bullet[bullet.length-1],{x:t*Math.cos(m.angle),y:t*Math.sin(m.angle)}),m.fieldUpgrades[4].endoThermic(e)}}else{const e=.095+.01*(Math.max(bullet.length,130)-130);for(let t=0,o=5;t<o&&m.energy>3*e;t++){m.energy-=e;const t=Vector.rotate({x:1,y:0},6.28*Math.random());b.spore(Vector.add(m.pos,Vector.mult(t,25)),Vector.mult(t,10)),m.fieldUpgrades[4].endoThermic(e)}}else if(1===simulation.molecularMode){const e=.33;m.energy-=e;const t={x:Math.cos(m.angle),y:Math.sin(m.angle)},o=Vector.mult(Vector.perp(t),.08);b.missile({x:m.pos.x+30*t.x,y:m.pos.y+30*t.y},m.angle,-15),bullet[bullet.length-1].force.x+=o.x*(Math.random()-.5),bullet[bullet.length-1].force.y+=.005+o.y*(Math.random()-.5),m.fieldUpgrades[4].endoThermic(e)}else if(2===simulation.molecularMode){const e=.04;m.energy-=e,b.iceIX(1),m.fieldUpgrades[4].endoThermic(e)}else if(3===simulation.molecularMode)if(tech.isDroneRadioactive){const e=.8+.01*(Math.max(bullet.length,50)-50);m.energy>e&&(m.energy-=e,b.droneRadioactive({x:m.pos.x+30*Math.cos(m.angle)+10*(Math.random()-.5),y:m.pos.y+30*Math.sin(m.angle)+10*(Math.random()-.5)},25),m.fieldUpgrades[4].endoThermic(e))}else{const e=(.45+.006*(Math.max(bullet.length,100)-100))*tech.droneEnergyReduction;m.energy>e&&(m.energy-=e,b.drone(),m.fieldUpgrades[4].endoThermic(e))}if(m.isHolding){if(m.drawHold(m.holdingTarget),m.holding(),tech.isPrinter&&m.holdingTarget.isPrinted&&input.field){m.holdingTarget.radius+=Math.min(1.1,1.3/m.holdingTarget.mass);const e=m.holdingTarget.radius*(1+.12*Math.sin(.11*m.cycle)),t=m.holdingTarget.radius*(1+.12*Math.cos(.11*m.cycle));let o=.01*m.cycle%(2*Math.PI),l=[];for(let i=0,a=m.holdingTarget.vertices.length;i<a;i++)o+=2*Math.PI/a,l.push({x:m.holdingTarget.position.x+e*Math.cos(o),y:m.holdingTarget.position.y+t*Math.sin(o)});Matter.Body.setVertices(m.holdingTarget,l),m.definePlayerMass(m.defaultMass+m.holdingTarget.mass*m.holdingMassScale)}m.throwBlock()}else input.field&&m.fieldCDcycle<m.cycle?(m.energy>m.fieldRegen&&(m.energy-=m.fieldRegen),m.grabPowerUp(),m.lookForBlock(),tech.isPrinter&&input.down?m.printBlock():m.energy>m.minEnergyToDeflect&&(m.drawField(),m.pushMobsFacing())):m.holdingTarget&&m.fieldCDcycle<m.cycle?m.pickUp():m.holdingTarget=null;m.drawRegenEnergy()}}},{name:"plasma torch",description:"use <strong class='color-f'>energy</strong> to emit short range <strong class='color-plasma'>plasma</strong><br><strong>1.5x</strong> <strong class='color-d'>damage</strong><br><strong>10</strong> <strong class='color-f'>energy</strong> per second<em style=\"float: right;font-family: monospace;font-size: 1rem;color: #fff;\">←↙↓↘→→↧</em>",keyLog:[null,null,null,null,null],set(){m.fieldEvent=function(e){m.fieldUpgrades[5].keyLog.shift(),m.fieldUpgrades[5].keyLog.push(e.code);const t=[input.key.left,input.key.down,input.key.right,input.key.right,input.key.down],o=(e,t)=>e.length===t.length&&e.every((e,o)=>e===t[o]);(o(m.fieldUpgrades[5].keyLog,["ArrowLeft","ArrowDown","ArrowRight","ArrowRight","ArrowDown"])||o(m.fieldUpgrades[5].keyLog,t))&&(simulation.ephemera.push({do(){if((!input.down||input.field||input.fire)&&simulation.removeEphemera(this),!(simulation.cycle%6)){const e={distance:1500,target:null},t={x:Math.cos(m.angle),y:Math.sin(m.angle)};for(let o=0,l=mob.length;o<l;++o)if(!mob[o].isInvulnerable&&mob[o].alive&&0===Matter.Query.ray(map,m.pos,mob[o].position).length){const l=Vector.dot(t,Vector.normalise(Vector.sub(mob[o].position,m.pos))),i=Vector.magnitude(Vector.sub(m.pos,mob[o].position));i<e.distance&&l>.65&&(e.distance=i,(null===e.target||Math.random()<.5)&&(e.target=mob[o]))}let o;o=e.target?e.target.vertices[Math.floor(e.target.vertices.length*Math.random())]:Vector.add(m.pos,Vector.rotate(Vector.mult(t,Math.floor(300+800*Math.random())),Math.random()-.5)),simulation.ephemera.push({count:25,who:e.target,where:o,isReady:!0,path:[o],do(){if(this.count--,this.count<0&&simulation.removeEphemera(this),this.isReady)for(let e=0;e<1;e++)if(Vector.magnitudeSquared(Vector.sub(m.pos,this.where))>1e3){const e=Vector.mult(Vector.normalise(Vector.sub(m.pos,this.where)),20+Math.floor(60*Math.random()));this.path.push(this.where),this.where=Vector.add(this.where,Vector.rotate(e,1*(Math.random()-.5)))}else if(this.who){this.isReady=!1,m.energy+=.08;const e=.08;this.who.damage(e),simulation.drawList.push({x:this.path[0].x,y:this.path[0].y,radius:8,color:"rgba(136,136,255,0.9)",time:simulation.drawTime}),simulation.drawList.push({x:this.path[this.path.length-1].x,y:this.path[this.path.length-1].y,radius:6+Math.floor(5*Math.random()),color:"rgba(136,136,255,0.9)",time:simulation.drawTime}),this.who.speed>1?Matter.Body.setVelocity(this.who,{x:.1*this.who.velocity.x,y:.1*this.who.velocity.y}):Matter.Body.setVelocity(this.who,{x:.3*this.who.velocity.x,y:.3*this.who.velocity.y});break}ctx.beginPath(),ctx.moveTo(this.path[0].x,this.path[0].y);for(let e=0,t=this.path.length;e<t;e++)ctx.lineTo(this.path[e].x,this.path[e].y);ctx.strokeStyle="#88f",ctx.lineWidth=1+1*Math.random(),ctx.stroke(),ctx.strokeStyle="rgba(136,136,255,0.15)",ctx.lineWidth=15+10*Math.random(),ctx.stroke()}})}}}),simulation.inGameConsole("m<span class='color-symbol'>.</span>energy <span class='color-symbol'>+=</span> 0.05 &nbsp; &nbsp; <em style=\"float: right;font-family: monospace;font-size: 1rem;color: #fff;\">←↙↓↘→→↧</em>"))},window.addEventListener("keydown",m.fieldEvent),b.isExtruderOn=!1,m.fieldDamage=1.5,m.plasmaBall&&(m.plasmaBall.reset(),Matter.Composite.remove(engine.world,m.plasmaBall)),tech.isPlasmaBall?(m.plasmaBall=Bodies.circle(m.pos.x+10*Math.cos(m.angle),m.pos.y+10*Math.sin(m.angle),1,{isSensor:!0,frictionAir:0,alpha:.7,isAttached:!1,isOn:!1,drain:.0018,radiusLimit:10,damage:.7,effectRadius:10,setPositionToNose(){const e={x:m.pos.x+27*Math.cos(m.angle),y:m.pos.y+27*Math.sin(m.angle)};m.plasmaBall.effectRadius=2*m.plasmaBall.circleRadius,Matter.Body.setPosition(this,Vector.add(e,Vector.mult(Vector.normalise(Vector.sub(e,m.pos)),this.effectRadius)))},fire(){m.energy>.06&&(m.energy-=.06),this.isAttached=!1;const e=5+Math.min(15,80/this.mass);Matter.Body.setVelocity(this,{x:.4*player.velocity.x+e*Math.cos(m.angle),y:e*Math.sin(m.angle)}),m.plasmaBall.setPositionToNose()},scale(e){this.circleRadius>this.radiusLimit&&Matter.Body.scale(m.plasmaBall,e,e)},reset(){const e=1/this.circleRadius;Matter.Body.scale(this,e,e),this.alpha=.7,this.isOn=!1},do(){if(this.isOn){this.effectRadius=2*m.plasmaBall.circleRadius*(.6+.4*tech.isPlasmaRange),Matter.Query.collides(this,map).length>0&&(this.isAttached?this.scale(Math.max(.9,.99-.1/this.circleRadius)):(m.plasmaBall.explode(),Matter.Body.setVelocity(this,{x:0,y:0}),this.reset()));const e=this.damage*(tech.isControlPlasma&&!this.isAttached?2:1),t=[],o=150+1600*tech.plasmaDischarge+1.3*this.effectRadius;for(let l=0,i=mob.length;l<i;l++)if(mob[l].alive&&(!mob[l].isBadTarget||mob[l].isMobBullet)&&!mob[l].isInvulnerable){const i=Vector.magnitude(Vector.sub(this.position,mob[l].position));i<this.effectRadius+mob[l].radius?(mob[l].damage(e),mob[l].speed>5?Matter.Body.setVelocity(mob[l],{x:.6*mob[l].velocity.x,y:.6*mob[l].velocity.y}):Matter.Body.setVelocity(mob[l],{x:.93*mob[l].velocity.x,y:.93*mob[l].velocity.y})):i<o+mob[l].radius&&0===Matter.Query.ray(map,mob[l].position,this.position).length&&t.push(mob[l])}for(let o=0;o<t.length;o++)if(tech.plasmaDischarge>Math.random()){const o=t[Math.floor(Math.random()*t.length)];o.damage(4*e);const l=Vector.sub(o.position,this.position),i=Vector.normalise(l);let a=12;const m=Vector.magnitude(l)/(a+2);let s=this.position.x,n=this.position.y;ctx.beginPath(),ctx.moveTo(s,n);for(let e=0;e<a;e++)s+=m*(i.x+(Math.random()-.5)),n+=m*(i.y+(Math.random()-.5)),ctx.lineTo(s,n);ctx.lineTo(o.position.x,o.position.y),ctx.strokeStyle="#88f",ctx.lineWidth=6+3*Math.random(),ctx.stroke(),o.damageReduction&&simulation.drawList.push({x:o.position.x,y:o.position.y,radius:15,color:"rgba(150,150,255,0.4)",time:15})}const l=this.effectRadius*(.99+.02*Math.random())+3*Math.random(),i=ctx.createRadialGradient(this.position.x,this.position.y,0,this.position.x,this.position.y,l),a=this.alpha+.15*Math.random(),s=.75+.1*Math.random();if(i.addColorStop(0,`rgba(255,255,255,${a})`),i.addColorStop(s,`rgba(255,245,255,${a})`),i.addColorStop(s+.1,`rgba(255,200,255,${a})`),i.addColorStop(1,`rgba(255,75,255,${a})`),ctx.fillStyle=i,ctx.beginPath(),ctx.arc(this.position.x,this.position.y,l,0,2*Math.PI),ctx.fill(),tech.isControlPlasma){this.isAttached||(ctx.strokeStyle="rgb(255, 0, 212)",ctx.lineWidth=Math.max(2,.04*this.effectRadius),ctx.stroke());const e=Vector.normalise(Vector.sub(simulation.mouseInGame,this.position)),t=Vector.magnitude(this.velocity),o=Vector.mult(e,.008*Math.pow(t,1.8));Matter.Body.setVelocity(this,Vector.add(o,this.velocity)),Matter.Body.setVelocity(this,Vector.mult(Vector.normalise(this.velocity),t))}ctx.beginPath();const n=Vector.rotate({x:1,y:0},6.28*Math.random());let c=Vector.add(this.position,Vector.mult(n,.98*l));ctx.moveTo(c.x,c.y);const r=Vector.normalise(Vector.sub(this.position,c));for(let e=0,t=7;e<t;e++){const e=Vector.rotate(Vector.mult(r,17*Math.random()),2*(Math.random()-.5));c=Vector.add(c,e),ctx.lineTo(c.x,c.y)}ctx.strokeStyle="#88f",ctx.lineWidth=.5+2*Math.random(),ctx.stroke()}},explode(){simulation.ephemera.push({vertices:this.vertices,position:{x:m.plasmaBall.position.x,y:m.plasmaBall.position.y},radius:m.plasmaBall.effectRadius,alpha:1,do(){this.radius*=1.05,this.alpha-=.05,this.alpha<0&&simulation.removeEphemera(this);const e=this.radius*(.99+.02*Math.random())+3*Math.random(),t=ctx.createRadialGradient(this.position.x,this.position.y,0,this.position.x,this.position.y,e),o=this.alpha+.15*Math.random(),l=.75+.1*Math.random();t.addColorStop(0,`rgba(255,255,255,${o})`),t.addColorStop(l,`rgba(255,245,255,${o})`),t.addColorStop(l+.1,`rgba(255,200,255,${o})`),t.addColorStop(1,`rgba(255,75,255,${o})`),ctx.fillStyle=t,ctx.beginPath(),ctx.arc(this.position.x,this.position.y,e,0,2*Math.PI),ctx.fill();const i=m.plasmaBall.damage;for(let e=0,t=mob.length;e<t;e++)if(mob[e].alive&&(!mob[e].isBadTarget||mob[e].isMobBullet)&&!mob[e].isInvulnerable){Vector.magnitude(Vector.sub(this.position,mob[e].position))<this.radius+mob[e].radius&&mob[e].damage(i)}}})}}),Composite.add(engine.world,m.plasmaBall),m.hold=function(){if(m.isHolding)m.drawHold(m.holdingTarget),m.holding(),m.throwBlock();else if(input.field){if(tech.isPlasmaBoost&&powerUps.boost.endCycle<simulation.cycle+60&&(powerUps.boost.endCycle=simulation.cycle+60),m.energy>m.fieldRegen&&(m.energy-=m.fieldRegen),m.grabPowerUp(),m.lookForBlock(),m.fieldCDcycle<m.cycle)if(m.plasmaBall.isAttached)if(m.energy>m.plasmaBall.drain){if(tech.isCapacitor){m.energy-=2*m.plasmaBall.drain;const e=1+48*Math.pow(Math.max(1,m.plasmaBall.circleRadius),-1.8);Matter.Body.scale(m.plasmaBall,e,e)}else{m.energy-=m.plasmaBall.drain;const e=1+16*Math.pow(Math.max(1,m.plasmaBall.circleRadius),-1.8);Matter.Body.scale(m.plasmaBall,e,e)}if(m.energy>m.maxEnergy){m.energy-=2*m.plasmaBall.drain;const e=1+16*Math.pow(Math.max(1,m.plasmaBall.circleRadius),-1.8);Matter.Body.scale(m.plasmaBall,e,e)}m.plasmaBall.setPositionToNose();const e=player.velocity.y>0?Math.max(.5,1-.006*player.velocity.y*player.velocity.y):Math.max(.997,1-.001*Math.abs(player.velocity.y));Matter.Body.setVelocity(player,{x:Math.max(.95,1-.002*Math.abs(player.velocity.x))*player.velocity.x,y:e*player.velocity.y}),player.velocity.y>5?player.force.y-=.9*player.mass*simulation.g:player.force.y-=.5*player.mass*simulation.g}else m.plasmaBall.fire();else m.plasmaBall.isOn?(m.plasmaBall.explode(),m.plasmaBall.reset()):(m.plasmaBall.isAttached=!0,m.plasmaBall.isOn=!0,m.plasmaBall.alpha=.7,m.plasmaBall.setPositionToNose())}else m.holdingTarget&&m.fieldCDcycle<m.cycle?(m.pickUp(),m.plasmaBall.isAttached&&m.plasmaBall.fire()):(m.holdingTarget=null,m.plasmaBall.isAttached&&m.plasmaBall.fire());m.drawRegenEnergy("rgba(0, 0, 0, 0.2)"),m.plasmaBall.do()}):tech.isExtruder?m.hold=function(){b.isExtruderOn=!1,m.isHolding?(m.drawHold(m.holdingTarget),m.holding(),m.throwBlock()):input.field&&m.fieldCDcycle<m.cycle?(tech.isPlasmaBoost&&powerUps.boost.endCycle<simulation.cycle+60&&(powerUps.boost.endCycle=simulation.cycle+60),m.energy>m.fieldRegen&&(m.energy-=m.fieldRegen),m.grabPowerUp(),m.lookForBlock(),b.extruder()):m.holdingTarget&&m.fieldCDcycle<m.cycle?m.pickUp():m.holdingTarget=null,m.drawRegenEnergy("rgba(0, 0, 0, 0.2)"),input.field?b.wasExtruderOn=!0:(b.wasExtruderOn=!1,b.canExtruderFire=!0),ctx.beginPath();for(let e=1,t=bullet.length;e<t;e++)bullet[e].isWave&&(bullet[e].isBranch||bullet[e-1].isBranch?ctx.moveTo(bullet[e].position.x,bullet[e].position.y):ctx.lineTo(bullet[e].position.x,bullet[e].position.y));b.wasExtruderOn&&b.isExtruderOn&&ctx.lineTo(m.pos.x+15*Math.cos(m.angle),m.pos.y+15*Math.sin(m.angle)),ctx.lineWidth=4,ctx.strokeStyle="#f07",ctx.stroke(),ctx.lineWidth=tech.extruderRange,ctx.strokeStyle="rgba(255,0,110,0.06)",ctx.stroke()}:m.hold=function(){m.isHolding?(m.drawHold(m.holdingTarget),m.holding(),m.throwBlock()):input.field&&m.fieldCDcycle<m.cycle?(tech.isPlasmaBoost&&powerUps.boost.endCycle<simulation.cycle+60&&(powerUps.boost.endCycle=simulation.cycle+60),m.energy>m.fieldRegen&&(m.energy-=m.fieldRegen),m.grabPowerUp(),m.lookForBlock(),b.plasma()):m.holdingTarget&&m.fieldCDcycle<m.cycle?m.pickUp():m.holdingTarget=null,m.drawRegenEnergy("rgba(0, 0, 0, 0.2)")}},effect(){m.fieldMeterColor="#f0f",m.eyeFillColor=m.fieldMeterColor,this.set()}},{name:"time dilation",description:"use <strong class='color-f'>energy</strong> to <strong style='letter-spacing: 2px;'>stop time</strong><br><strong>1.2x</strong> movement and <strong><em>fire rate</em></strong><br><strong>12</strong> <strong class='color-f'>energy</strong> per second<em style =\"float: right; font-family: monospace;font-size:0.8rem;color:#fff;\">←↙↓↘→↗↑↖←↙↓↘→↗↑</em>",keyLog:[null,null,null,null,null,null,null,null],isRewindMode:!1,isRewinding:!1,set(){m.fieldEvent=function(e){m.fieldUpgrades[6].keyLog.shift(),m.fieldUpgrades[6].keyLog.push(e.code);const t=[input.key.left,input.key.down,input.key.right,input.key.up,input.key.left,input.key.down,input.key.right,input.key.up],o=(e,t)=>e.length===t.length&&e.every((e,o)=>e===t[o]);if(o(m.fieldUpgrades[6].keyLog,["ArrowLeft","ArrowDown","ArrowRight","ArrowUp","ArrowLeft","ArrowDown","ArrowRight","ArrowUp"])||o(m.fieldUpgrades[6].keyLog,t)){const e=.1;m.energy>e&&(m.energy-=e,m.fieldUpgrades[6].isRewindMode?(m.fieldUpgrades[6].isRewindMode=!1,window.removeEventListener("keydown",m.fieldEvent),m.fieldUpgrades[6].set(),m.wakeCheck()):(m.fieldUpgrades[6].isRewindMode=!0,window.removeEventListener("keydown",m.fieldEvent),m.fieldUpgrades[6].set(),m.wakeCheck())),simulation.inGameConsole("m<span class='color-symbol'>.</span>history<span class='color-symbol'>[(</span>m<span class='color-symbol'>.</span>cycle <span class='color-symbol'>-</span> 200 <span class='color-symbol'>)</span> <span class='color-symbol'>%</span> 600 <span class='color-symbol'>]</span>  &nbsp; &nbsp; <em style=\"float: right;font-family: monospace;font-size: 0.9rem;color: #fff;\">←↙↓↘→↗↑↖←↙↓↘→↗↑</em>")}},window.addEventListener("keydown",m.fieldEvent),m.fieldMeterColor="#3fe",m.eyeFillColor=m.fieldMeterColor,m.fieldFx=1.25,m.setMovement(),b.setFireCD();const e=()=>{function e(e){for(let t=0,o=e.length;t<o;++t)e[t].isSleeping||(e[t].storeVelocity=e[t].velocity,e[t].storeAngularVelocity=e[t].angularVelocity),Matter.Sleeping.set(e[t],!0)}m.immuneCycle=m.cycle+10,ctx.globalCompositeOperation="saturation",ctx.fillStyle="#ccc",ctx.fillRect(-5e4,-5e4,1e5,1e5),ctx.globalCompositeOperation="source-over",m.isTimeDilated=!0,e(mob),e(body),e(bullet),simulation.cycle--};m.fieldUpgrades[6].isRewindMode?(this.rewindCount=0,m.grabPowerUpRange2=6e5,m.fieldUpgrades[6].rewindDrain=1,m.hold=function(){if(input.field&&m.grabPowerUp(),m.isHolding)m.drawHold(m.holdingTarget),m.holding(),m.throwBlock(),m.wakeCheck();else if(input.field&&m.fieldCDcycle<m.cycle){const t=.002*m.fieldUpgrades[6].rewindDrain/(1+.04*m.coupling);if(m.fieldUpgrades[6].rewindDrain*=1.0015,0===this.rewindCount&&m.lookForBlock(),!m.holdingTarget){m.energy>t?e():(m.fieldCDcycle=m.cycle+120,m.energy=0,m.wakeCheck(),m.wakeCheck()),this.isRewinding=!0,this.rewindCount+=2;let o=m.history[(simulation.cycle-this.rewindCount)%600];if(this.rewindCount>599||m.energy<t)this.rewindCount=0,m.resetHistory(),m.fireCDcycle<m.cycle+60&&(m.fieldCDcycle=m.cycle+60),m.immuneCycle=m.cycle;else{ctx.globalCompositeOperation="saturation",ctx.fillStyle="#ccc",ctx.fillRect(-1e5,-1e5,2e5,2e5),ctx.globalCompositeOperation="source-over",m.energy-=t,m.immuneCycle<m.cycle+5&&(m.immuneCycle=m.cycle+5),Matter.Body.setPosition(player,o.position),Matter.Body.setVelocity(player,{x:o.velocity.x,y:o.velocity.y}),m.health<o.health&&(m.health=o.health,m.health>m.maxHealth&&(m.health=m.maxHealth),m.displayHealth()),m.yOff=o.yOff,m.yOff<48?m.doCrouch():m.undoCrouch(),ctx.beginPath(),ctx.moveTo(m.pos.x,m.pos.y);const e=this.rewindCount/600;ctx.arc(m.pos.x,m.pos.y,30,3*Math.PI/2,2*Math.PI*(1-e)+3*Math.PI/2),ctx.lineTo(m.pos.x,m.pos.y),ctx.fillStyle=`rgba(0,150,150,${e})`,ctx.fill(),m.grabPowerUpEasy()}}}else m.holdingTarget&&m.fieldCDcycle<m.cycle?(m.pickUp(),this.rewindCount=0,m.wakeCheck()):tech.isTimeStop&&player.speed<1&&m.onGround&&!input.fire?(e(),this.rewindCount=0):(m.holdingTarget=null,this.rewindCount=0,m.wakeCheck());m.drawRegenEnergy(),input.field&&m.fieldCDcycle<m.cycle||(m.fieldUpgrades[6].rewindDrain>1&&(m.fieldUpgrades[6].rewindDrain/=1.0005),this.isRewinding&&(this.isRewinding=!1,m.resetHistory()))}):(m.grabPowerUpRange2=2e5,m.fieldFire=!0,m.isTimeDilated=!1,m.hold=function(){if(m.isHolding)m.wakeCheck(),m.drawHold(m.holdingTarget),m.holding(),m.throwBlock();else if(input.field&&m.fieldCDcycle<m.cycle){const t=.0026/(1+.03*m.coupling);m.energy>t&&(m.energy-=t),m.grabPowerUp(),m.lookForBlock(),m.energy>t?e():(m.fieldCDcycle=m.cycle+120,m.energy=0,m.wakeCheck(),m.wakeCheck())}else tech.isTimeStop&&player.speed<1&&m.onGround&&m.fireCDcycle<m.cycle&&!input.fire?e():m.holdingTarget&&m.fieldCDcycle<m.cycle?(m.wakeCheck(),m.pickUp()):(m.wakeCheck(),m.holdingTarget=null);m.drawRegenEnergy()})},effect(){tech.isTimeStop?m.fieldHarmReduction=.6:m.fieldHarmReduction=1,this.set()}},{name:"metamaterial cloaking",description:"<strong>0.4x</strong> <strong class='color-defense'>damage taken</strong> while <strong class='color-cloaked'>cloaked</strong><br>after <strong class='color-cloaked'>decloaking</strong> <strong>4.5x</strong> <strong class='color-d'>damage</strong> for <strong>2</strong> s<br><strong>6</strong> <strong class='color-f'>energy</strong> per second<em style =\"float: right; font-family: monospace;font-size:1rem;color:#fff;\">↑↓↙←↓↘→</em>",keyLog:[null,null,null,null,null],smallFieldRadius:130,effect:()=>{m.fieldEvent=function(e){m.fieldUpgrades[7].keyLog.shift(),m.fieldUpgrades[7].keyLog.push(e.code);const t=[input.key.up,input.key.down,input.key.left,input.key.down,input.key.right],o=(e,t)=>e.length===t.length&&e.every((e,o)=>e===t[o]);(o(m.fieldUpgrades[7].keyLog,["ArrowUp","ArrowDown","ArrowLeft","ArrowDown","ArrowRight"])||o(m.fieldUpgrades[7].keyLog,t))&&(130===m.fieldUpgrades[7].smallFieldRadius?(m.fieldUpgrades[7].smallFieldRadius=70,simulation.inGameConsole("<strong>4.5</strong><span class='color-symbol'>→</span><strong>6x</strong> <strong class='color-cloaked'>decloaking</strong> <strong class='color-d'>damage</strong> &nbsp; &nbsp; <em style=\"float: right;font-family: monospace;font-size: 1rem;color: #fff;\">↑↓↙←↓↘→</em>")):(m.fieldUpgrades[7].smallFieldRadius=130,simulation.inGameConsole("<strong>6</strong><span class='color-symbol'>→</span><strong>4.5x</strong> <strong class='color-cloaked'>decloaking</strong> <strong class='color-d'>damage</strong> &nbsp; &nbsp; <em style=\"float: right;font-family: monospace;font-size: 1rem;color: #fff;\">↑↓↙←↓↘→</em>")))},window.addEventListener("keydown",m.fieldEvent),m.fieldFire=!0,m.fieldMeterColor="#333",m.eyeFillColor=m.fieldMeterColor,m.fieldPhase=0,m.isCloak=!1,m.fieldDrawRadius=0,m.isSneakAttack=!0,m.sneakAttackCycle=0,m.enterCloakCycle=0,m.drawCloakedM=function(){m.walk_cycle-=m.flipLegs*m.Vx,m.pos.x+=4,m.draw()},m.drawCloak=function(){m.fieldPhase+=.007;const e=.15*Math.sin(.5*m.fieldPhase);ctx.beginPath(),ctx.ellipse(m.pos.x,m.pos.y,m.fieldDrawRadius*(1-e),m.fieldDrawRadius*(1+e),m.fieldPhase,0,2*Math.PI),ctx.fillStyle="#fff",ctx.lineWidth=2,ctx.strokeStyle="#000",ctx.globalCompositeOperation="destination-in",ctx.fill(),ctx.globalCompositeOperation="source-over",ctx.clip()},m.hold=function(){if(m.isHolding?(m.drawHold(m.holdingTarget),m.holding(),m.throwBlock()):input.field&&m.fieldCDcycle<m.cycle?(m.energy>m.fieldRegen&&(m.energy-=m.fieldRegen),m.grabPowerUp(),m.lookForBlock()):m.holdingTarget&&m.fieldCDcycle<m.cycle?m.pickUp():m.holdingTarget=null,m.energy<.05&&m.fireCDcycle<m.cycle&&!input.fire&&(m.fireCDcycle=m.cycle),m.fireCDcycle+10<m.cycle&&!input.fire){if(!m.isCloak){if(m.isCloak=!0,m.fieldHarmReduction=.4,m.enterCloakCycle=m.cycle,tech.isCloakHealLastHit&&m.lastHit>0){const e=Math.min(.75*m.lastHit,m.energy);m.addHealth(e),m.lastHit=0,simulation.drawList.push({x:m.pos.x,y:m.pos.y,radius:200*Math.sqrt(e),color:"rgba(0,255,200,0.6)",time:16})}if(tech.isIntangible)for(let e=0;e<bullet.length;e++)bullet[e].botType&&"orbit"!==bullet[e].botType&&(bullet[e].collisionFilter.mask=cat.map|cat.bullet|cat.mobBullet|cat.mobShield)}}else if(m.isCloak){if(m.sneakAttackCycle=m.cycle,m.isCloak=!1,m.fieldHarmReduction=1,tech.isIntangible)for(let e=0;e<bullet.length;e++)bullet[e].botType&&"orbit"!==bullet[e].botType&&(bullet[e].collisionFilter.mask=cat.map|cat.body|cat.bullet|cat.mob|cat.mobBullet|cat.mobShield);if(tech.isCloakStun){const e=1.25*m.fieldDrawRadius;for(let t=0,o=mob.length;t<o;++t)Vector.magnitude(Vector.sub(mob[t].position,m.pos))<e&&0===Matter.Query.ray(map,mob[t].position,m.pos).length&&!mob[t].isBadTarget&&(isMobsAround=!0,mobs.statusStun(mob[t],120))}}if(m.isCloak?(m.fieldRange=.85*m.fieldRange+m.fieldUpgrades[7].smallFieldRadius,m.fieldDrawRadius=1.1*m.fieldRange,m.drawCloak(),ctx.beginPath(),ctx.arc(m.pos.x,m.pos.y,35,0,2*Math.PI),ctx.strokeStyle="rgba(255,255,255,0.25)",ctx.lineWidth=10,ctx.stroke()):m.fieldRange<4e3&&(m.fieldRange+=90,m.fieldDrawRadius=m.fieldRange,m.drawCloak()),tech.isIntangible)if(m.isCloak){player.collisionFilter.mask=cat.map;let e=Matter.Query.region(mob,player.bounds);if(e.length>0)for(let t=0;t<e.length;t++)m.energy>0&&(e[t].isUnblockable||(m.energy-=.004+5e-4*simulation.difficultyMode),e[t].shield&&(m.energy-=.015+.001*simulation.difficultyMode))}else player.collisionFilter.mask=cat.body|cat.map|cat.mob|cat.mobBullet|cat.mobShield;if(this.drawRegenEnergyCloaking(),m.isSneakAttack&&m.sneakAttackCycle+Math.min(100,.66*(m.cycle-m.enterCloakCycle))>m.cycle){m.fieldDamage=(4.5+(130===m.fieldUpgrades[7].smallFieldRadius?0:1.5))*(1+.05*m.coupling);const e=.5*(m.sneakAttackCycle+Math.min(100,.66*(m.cycle-m.enterCloakCycle))-m.cycle);ctx.beginPath(),ctx.arc(m.pos.x,m.pos.y,32,0,2*Math.PI),ctx.strokeStyle="rgba(180,30,70,0.5)",ctx.lineWidth=Math.max(Math.min(10,e),3),ctx.stroke()}else m.fieldDamage=1}}},{name:"pilot wave",description:"use <strong class='color-f'>energy</strong> to guide <strong class='color-block'>blocks</strong><br><div class=\"circle-grid tech\"></div>, <div class=\"circle-grid gun\"></div>, and <div class=\"circle-grid field\"></div> have <strong>+3</strong> <strong class='color-choice'><span>ch</span><span>oi</span><span>ces</span></strong><br><strong>10</strong> <strong class='color-f'>energy</strong> per second<em style =\"float: right; font-family: monospace;font-size:1rem;color:#fff;\">↓↓→↘↓↙←↓↓</em>",keyLog:[null,null,null,null,null,null,null],collider:null,fieldMass:1,drain:1,effect:()=>{m.fieldUpgrades[8].collider=Matter.Bodies.polygon(m.pos.x,m.pos.y,8,35,{friction:0,frictionAir:.12,collisionFilter:{category:cat.player,mask:cat.map},classType:"field",lastSpeed:0}),Composite.add(engine.world,m.fieldUpgrades[8].collider),m.fieldEvent=function(e){m.fieldUpgrades[8].keyLog.shift(),m.fieldUpgrades[8].keyLog.push(e.code);const t=[input.key.down,input.key.down,input.key.right,input.key.down,input.key.left,input.key.down,input.key.down],o=(e,t)=>e.length===t.length&&e.every((e,o)=>e===t[o]),l=90+Math.floor(30*Math.random()),i=11+Math.floor(7*Math.random()),a={min:{x:m.pos.x-l,y:m.pos.y+60-i},max:{x:m.pos.x+l,y:m.pos.y+60+i}};!o(m.fieldUpgrades[8].keyLog,["ArrowDown","ArrowDown","ArrowRight","ArrowDown","ArrowLeft","ArrowDown","ArrowDown"])&&!o(m.fieldUpgrades[8].keyLog,t)||Matter.Query.region(map,a).length||m.crouch||(Matter.Body.setPosition(player,{x:player.position.x,y:player.position.y-i}),body[body.length]=Matter.Bodies.rectangle(m.pos.x,a.max.y,2*l,2*i,{friction:.05,frictionAir:.001,collisionFilter:{category:cat.body,mask:cat.player|cat.map|cat.body|cat.bullet|cat.mob|cat.mobBullet},classType:"body",isPilotWave:!0}),Composite.add(engine.world,body[body.length-1]),simulation.inGameConsole("Composite<span class='color-symbol'>.</span>add<span class='color-symbol'>(</span>engine.world<span class='color-symbol'>,</span> block<span class='color-symbol'>)</span> &nbsp; &nbsp; <em style =\"float: right; font-family: monospace;font-size:1rem;color:#fff;\">//↓↓→↘↓↙←↓↓</em>"))},window.addEventListener("keydown",m.fieldEvent),m.fieldMeterColor="#333",m.eyeFillColor=m.fieldMeterColor,m.fieldPhase=0,m.fieldPosition={x:simulation.mouseInGame.x,y:simulation.mouseInGame.y},m.lastFieldPosition={x:simulation.mouseInGame.x,y:simulation.mouseInGame.y},m.fieldOn=!1,m.fieldFire=!0,m.fieldRadius=0,m.drop(),m.hold=function(){let e=tech.isNoPilotCost?!input.field:input.field;if(tech.isPrinter)if(input.field&&m.fieldCDcycle<m.cycle&&input.down&&!m.isHolding&&m.printBlock(),m.isHolding){if(m.drawHold(m.holdingTarget),m.holding(),tech.isPrinter&&m.holdingTarget.isPrinted&&input.field){m.holdingTarget.radius+=Math.min(1.1,1.3/m.holdingTarget.mass);const e=m.holdingTarget.radius*(1+.12*Math.sin(.11*m.cycle)),t=m.holdingTarget.radius*(1+.12*Math.cos(.11*m.cycle));let o=.01*m.cycle%(2*Math.PI),l=[];for(let i=0,a=m.holdingTarget.vertices.length;i<a;i++)o+=2*Math.PI/a,l.push({x:m.holdingTarget.position.x+e*Math.cos(o),y:m.holdingTarget.position.y+t*Math.sin(o)});Matter.Body.setVertices(m.holdingTarget,l),m.definePlayerMass(m.defaultMass+m.holdingTarget.mass*m.holdingMassScale)}m.throwBlock()}else m.holdingTarget=null;if(e)if(m.fieldCDcycle<m.cycle){m.fieldOn||(m.fieldOn=!0,Matter.Body.setPosition(m.fieldUpgrades[8].collider,m.pos),m.fieldPosition.x=m.pos.x,m.fieldPosition.y=m.pos.y);const e=1.2,t=Vector.sub(simulation.mouseInGame,m.fieldUpgrades[8].collider.position),o=Vector.magnitude(t),l=Math.max(1.5,Math.pow(m.fieldUpgrades[8].fieldMass,.3)),i=17e-8/l*Math.pow(o,2);let a=Vector.mult(Vector.normalise(t),i);const s=.17/l;Vector.magnitude(a)>s&&(a=Vector.mult(Vector.normalise(a),s)),m.fieldUpgrades[8].collider.force=a,Matter.Query.ray(map,m.fieldPosition,m.fieldUpgrades[8].collider.position).length&&(Matter.Body.setVelocity(m.fieldUpgrades[8].collider,Vector.mult(m.fieldUpgrades[8].collider.velocity,.6)),m.fieldRadius*=.6),m.fieldPosition.x=m.fieldUpgrades[8].collider.position.x,m.fieldPosition.y=m.fieldUpgrades[8].collider.position.y;for(let t=0,o=powerUp.length;t<o;++t){if(tech.isEnergyNoAmmo&&"ammo"===powerUp[t].name)continue;const o=m.fieldPosition.x-powerUp[t].position.x,l=m.fieldPosition.y-powerUp[t].position.y,i=o*o+l*l+200,a=e*m.fieldRadius;if(i<a*a&&!simulation.isChoosing&&(tech.isOverHeal||"heal"!==powerUp[t].name||m.maxHealth-m.health>.01)){simulation.ephemera.push({count:5,PposX:powerUp[t].position.x,PposY:powerUp[t].position.y,size:powerUp[t].size,color:powerUp[t].color,do(){this.count--,this.count<0&&simulation.removeEphemera(this),ctx.beginPath(),ctx.arc(this.PposX,this.PposY,this.size*(this.count+2)/7,0,2*Math.PI),ctx.fillStyle=this.color,ctx.fill()}}),powerUps.onPickUp(powerUp[t]),powerUp[t].effect(),Matter.Composite.remove(engine.world,powerUp[t]),powerUp.splice(t,1);break}}let n,c,r;Matter.Query.ray(map,m.fieldPosition,player.position).length?(n=0,c=.995,r=1.5*m.fieldRegen*m.fieldUpgrades[8].drain):(n=Math.max(50,250-2*m.fieldUpgrades[8].collider.speed),c=.97,r=m.fieldRegen*m.fieldUpgrades[8].drain),tech.isNoPilotCost&&(r=0),m.fieldRadius=m.fieldRadius*c+n*(1-c);const d=Math.max(0,m.fieldUpgrades[8].collider.speed-m.fieldUpgrades[8].collider.lastSpeed);if(m.fieldUpgrades[8].collider.lastSpeed=m.fieldUpgrades[8].collider.speed,m.energy>=r){m.energy-=r,m.fieldUpgrades[8].fieldMass=1;for(let e=0,t=body.length;e<t;++e)if(Vector.magnitude(Vector.sub(body[e].position,m.fieldPosition))<m.fieldRadius&&!body[e].isNotHoldable){const t=m.fieldUpgrades[8].drain*d*body[e].mass*95e-6;if(!(m.energy>t)){m.fieldCDcycle=m.cycle+60,m.fieldOn=!1,m.fieldRadius=0;break}{m.energy-=t,Matter.Body.setVelocity(body[e],m.fieldUpgrades[8].collider.velocity),Matter.Body.setAngularVelocity(body[e],.8*body[e].angularVelocity),m.fieldUpgrades[8].fieldMass+=body[e].mass;const o=Vector.sub(m.fieldPosition,body[e].position),l=Vector.mult(Vector.normalise(o),1e-4*body[e].mass*Vector.magnitude(o));if(body[e].force.x+=l.x,body[e].force.y+=l.y-body[e].mass*simulation.g,m.standingOn===body[e]&&m.onGround){m.walk_cycle-=m.flipLegs*m.Vx,m.stepSize=0,Matter.Body.setAngularVelocity(body[e],0*body[e].angularVelocity);const t=10,o=Math.max(-t,Math.min(m.fieldUpgrades[8].collider.velocity.x-player.velocity.x,t));Matter.Body.setVelocity(player,{x:player.velocity.x+o,y:player.velocity.y})}}}for(let e=0,t=bullet.length;e<t;++e)if(!bullet[e].botType&&bullet[e].speed<30&&Vector.magnitude(Vector.sub(bullet[e].position,m.fieldPosition))<m.fieldRadius&&!bullet[e].isNotHoldable){const t=m.fieldUpgrades[8].drain*d*bullet[e].mass*95e-6;if(m.energy>t){Matter.Body.setVelocity(bullet[e],m.fieldUpgrades[8].collider.velocity),Matter.Body.setAngularVelocity(bullet[e],.99*bullet[e].angularVelocity);const t=Vector.sub(m.fieldPosition,bullet[e].position),o=Vector.mult(Vector.normalise(t),1e-4*bullet[e].mass*Vector.magnitude(t));bullet[e].force.x+=o.x,bullet[e].force.y+=o.y-bullet[e].mass*simulation.g}}ctx.beginPath();const t=.008*m.cycle;m.fieldPhase+=.2;const o=1+.06*Math.sin(m.fieldPhase),l=1-.06*Math.sin(m.fieldPhase);ctx.beginPath(),ctx.ellipse(m.fieldPosition.x,m.fieldPosition.y,e*m.fieldRadius*o,e*m.fieldRadius*l,t,0,2*Math.PI),ctx.globalCompositeOperation="exclusion",ctx.fillStyle="#fff",ctx.fill(),ctx.globalCompositeOperation="source-over",ctx.beginPath(),ctx.ellipse(m.fieldPosition.x,m.fieldPosition.y,e*m.fieldRadius*o,e*m.fieldRadius*l,t,0,2*Math.PI*m.energy/m.maxEnergy),n||m.cycle%5?ctx.strokeStyle="#000":ctx.strokeStyle="#fff",ctx.lineWidth=4,ctx.stroke()}else m.fieldCDcycle=m.cycle+60,m.fieldOn=!1,m.fieldRadius=0}else m.grabPowerUp();else m.fieldOn=!1,m.fieldRadius=0;input.field&&m.grabPowerUp(),m.drawRegenEnergy("rgba(0,0,0,0.2)")}}},{name:"wormhole",description:"use <strong>16</strong> <strong class='color-f'>energy</strong> to <strong>tunnel</strong> through a <strong class='color-worm'>wormhole</strong><br><strong>+8%</strong> chance to <strong class='color-dup'>duplicate</strong> <strong>power ups</strong><br><strong>8</strong> <strong class='color-f'>energy</strong> per second<em style =\"float: right; font-family: monospace;font-size:1rem;color:#fff;\">↓↓↓↑↓</em>",keyLog:[null,null,null,null,null],drain:0,effect:function(){m.fieldEvent=function(e){m.fieldUpgrades[9].keyLog.shift(),m.fieldUpgrades[9].keyLog.push(e.code);const t=[input.key.down,input.key.down,input.key.down,input.key.up,input.key.down],o=(e,t)=>e.length===t.length&&e.every((e,o)=>e===t[o]),l=tech.isFreeWormHole?.02:.16;if(m.energy>l&&o(m.fieldUpgrades[9].keyLog,["ArrowDown","ArrowDown","ArrowDown","ArrowUp","ArrowDown"])||o(m.fieldUpgrades[9].keyLog,t)){m.energy-=l;const e=Matter.Query.ray(map,m.pos,{x:m.pos.x,y:m.pos.y-1e4},50);let t=!1;if(e.length){e.sort((e,t)=>{const o=e.body.position.y;return t.body.position.y-o});for(let o=0,l=Math.min(10,e.length);o<l;o++){const l=e[o].body.bounds.min.y;if(0===Matter.Query.ray(map,{x:m.pos.x,y:l},{x:m.pos.x,y:l-150},50).length){simulation.translatePlayerAndCamera({x:m.pos.x,y:l-90}),requestAnimationFrame(()=>{Matter.Body.setVelocity(player,{x:0,y:0})}),t=!0;break}}}else{const e=Matter.Query.ray(map,m.pos,{x:m.pos.x,y:m.pos.y+1e4},50);if(e.length){e.sort((e,t)=>{const o=e.body.position.y;return t.body.position.y-o});for(let o=0,l=Math.min(10,e.length);o<l;o++){const l=e[o].body.bounds.min.y;if(0===Matter.Query.ray(map,{x:m.pos.x,y:l},{x:m.pos.x,y:l-150},50).length){simulation.translatePlayerAndCamera({x:m.pos.x,y:l-90}),Matter.Body.setVelocity(player,{x:0,y:0}),t=!0;break}}}}t||simulation.translatePlayerAndCamera({x:m.pos.x,y:player.position.y-20})}},window.addEventListener("keydown",m.fieldEvent),m.fieldMeterColor="#bbf",m.eyeFillColor=m.fieldMeterColor,m.duplicateChance=.08,m.fieldRange=0,powerUps.setPowerUpMode(),m.hold=function(){if(m.hole.isOn){m.fieldRange=.97*m.fieldRange+.03*(50+10*Math.sin(.025*simulation.cycle));const t=m.fieldRange+30,o=Vector.add(Vector.mult(m.hole.unit,t),m.hole.pos1),l=Vector.add(Vector.mult(m.hole.unit,-t),m.hole.pos1),i=Vector.add(Vector.mult(m.hole.unit,t),m.hole.pos2),a=Vector.add(Vector.mult(m.hole.unit,-t),m.hole.pos2);ctx.beginPath(),ctx.moveTo(o.x,o.y),ctx.bezierCurveTo(m.hole.pos1.x,m.hole.pos1.y,m.hole.pos2.x,m.hole.pos2.y,i.x,i.y),ctx.lineTo(a.x,a.y),ctx.bezierCurveTo(m.hole.pos2.x,m.hole.pos2.y,m.hole.pos1.x,m.hole.pos1.y,l.x,l.y),ctx.fillStyle=`rgba(255,255,255,${200/m.fieldRange/m.fieldRange})`,ctx.fill(),ctx.beginPath(),ctx.ellipse(m.hole.pos1.x,m.hole.pos1.y,m.fieldRange,t,m.hole.angle,0,2*Math.PI),ctx.ellipse(m.hole.pos2.x,m.hole.pos2.y,m.fieldRange,t,m.hole.angle,0,2*Math.PI),ctx.fillStyle=`rgba(255,255,255,${32/m.fieldRange})`,ctx.fill();for(let d=0,y=powerUp.length;d<y;++d){if(tech.isEnergyNoAmmo&&"ammo"===powerUp[d].name)continue;const h=m.hole.pos1.x-powerUp[d].position.x,p=m.hole.pos1.y-powerUp[d].position.y,g=m.hole.pos2.x-powerUp[d].position.x,f=m.hole.pos2.y-powerUp[d].position.y;let x,u,M;if(h*h+p*p<g*g+f*f?(x=h,u=p):(x=g,u=f),M=x*x+u*u,M<6e5&&(powerUp[d].force.x+=x/M*4*powerUp[d].mass,powerUp[d].force.y+=u/M*4*powerUp[d].mass-powerUp[d].mass*simulation.g,Matter.Body.setVelocity(powerUp[d],{x:.05*powerUp[d].velocity.x,y:.05*powerUp[d].velocity.y}),M<1e3&&!simulation.isChoosing)){simulation.ephemera.push({count:5,PposX:powerUp[d].position.x,PposY:powerUp[d].position.y,size:powerUp[d].size,color:powerUp[d].color,do(){this.count--,this.count<0&&simulation.removeEphemera(this),ctx.beginPath(),ctx.arc(this.PposX,this.PposY,Math.max(1,this.size*(this.count+1)/7),0,2*Math.PI),ctx.fillStyle=this.color,ctx.fill()}}),m.fieldRange*=.8,powerUps.onPickUp(powerUp[d]),powerUp[d].effect(),Matter.Composite.remove(engine.world,powerUp[d]),powerUp.splice(d,1);break}}const s=500,n=100,c=.97,r=.9;for(let w=0,k=body.length;w<k;w++)if(!body[w].isNotHoldable){const v=Vector.magnitude(Vector.sub(m.hole.pos1,body[w].position)),C=Vector.magnitude(Vector.sub(m.hole.pos2,body[w].position));if(v<C){if(v<s){const P=Vector.mult(Vector.normalise(Vector.sub(m.hole.pos1,body[w].position)),1),T=Vector.mult(body[w].velocity,r);if(Matter.Body.setVelocity(body[w],Vector.add(T,P)),Vector.magnitude(Vector.sub(m.hole.pos1,body[w].position))<n&&(Matter.Body.scale(body[w],c,c),body[w].mass<.05)){if(Matter.Composite.remove(engine.world,body[w]),body.splice(w,1),m.fieldRange*=.8,(0===m.fieldMode||9===m.fieldMode)&&m.immuneCycle<m.cycle&&(m.energy+=.02*m.coupling*level.isReducedRegen),tech.isWormholeWorms)for(let S=0,V=1+Math.floor(4*Math.random());S<V;S++)b.worm(Vector.add(m.hole.pos2,Vector.rotate({x:.4*m.fieldRange,y:0},2*Math.PI*Math.random()))),Matter.Body.setVelocity(bullet[bullet.length-1],Vector.mult(Vector.rotate(m.hole.unit,Math.PI/2),-10));tech.isBlockDup&&tech.blockDupCount<.4&&(tech.blockDupCount+=.02,simulation.inGameConsole(`<span class='color-var'>duplicationChance</span><span class='color-symbol'>++</span> <em>//${(100*tech.blockDupCount).toFixed(0)}% for anyon</em>`));break}}}else if(C<s){const U=Vector.mult(Vector.normalise(Vector.sub(m.hole.pos2,body[w].position)),1),R=Vector.mult(body[w].velocity,r);if(Matter.Body.setVelocity(body[w],Vector.add(R,U)),Vector.magnitude(Vector.sub(m.hole.pos2,body[w].position))<n&&(Matter.Body.scale(body[w],c,c),body[w].mass<.05)){if(Matter.Composite.remove(engine.world,body[w]),body.splice(w,1),m.fieldRange*=.8,(0===m.fieldMode||9===m.fieldMode)&&m.immuneCycle<m.cycle&&(m.energy+=.02*m.coupling*level.isReducedRegen),0!==m.fieldMode&&9!==m.fieldMode||(m.energy+=.02*m.coupling*level.isReducedRegen),tech.isWormholeWorms)for(let I=0,D=1+Math.floor(4*Math.random());I<D;I++)b.worm(Vector.add(m.hole.pos2,Vector.rotate({x:.4*m.fieldRange,y:0},2*Math.PI*Math.random()))),Matter.Body.setVelocity(bullet[bullet.length-1],Vector.mult(Vector.rotate(m.hole.unit,Math.PI/2),-10));tech.isBlockDup&&tech.blockDupCount<.4&&(tech.blockDupCount+=.02,simulation.inGameConsole(`<span class='color-var'>duplicationChance</span><span class='color-symbol'>++</span> <em>//${(100*tech.blockDupCount).toFixed(0)}% for anyon</em>`));break}}}if(tech.isWormHoleBullets){for(let L=0,B=bullet.length;L<B;++L)bullet[L].botType||bullet[L].isInHole||(Vector.magnitude(Vector.sub(m.hole.pos1,bullet[L].position))<m.fieldRange?(Matter.Body.setPosition(bullet[L],Vector.add(m.hole.pos2,Vector.sub(m.hole.pos1,bullet[L].position))),m.fieldRange+=5,bullet[L].isInHole=!0):Vector.magnitude(Vector.sub(m.hole.pos2,bullet[L].position))<m.fieldRange&&(Matter.Body.setPosition(bullet[L],Vector.add(m.hole.pos1,Vector.sub(m.hole.pos2,bullet[L].position))),m.fieldRange+=5,bullet[L].isInHole=!0));for(let A=0,H=mob.length;A<H;A++){if(Vector.magnitude(Vector.sub(m.hole.pos1,mob[A].position))<200){const F=Vector.mult(Vector.normalise(Vector.sub(m.hole.pos1,mob[A].position)),-.07);Matter.Body.setVelocity(mob[A],Vector.add(mob[A].velocity,F))}if(Vector.magnitude(Vector.sub(m.hole.pos2,mob[A].position))<200){const O=Vector.mult(Vector.normalise(Vector.sub(m.hole.pos2,mob[A].position)),-.07);Matter.Body.setVelocity(mob[A],Vector.add(mob[A].velocity,O))}}}}if(m.fieldCDcycle<m.cycle){const G=40,E=Vector.add(Vector.mult(Vector.normalise(Vector.sub(simulation.mouseInGame,m.pos)),25),simulation.mouseInGame),W=Vector.sub(simulation.mouseInGame,m.pos);if(input.field){if(tech.isWormHolePause){function e(e){for(let t=0,o=e.length;t<o;++t)e[t].isSleeping||(e[t].storeVelocity=e[t].velocity,e[t].storeAngularVelocity=e[t].angularVelocity),Matter.Sleeping.set(e[t],!0)}m.immuneCycle<m.cycle+1&&(m.immuneCycle=m.cycle+1),m.isTimeDilated=!0,e(mob),e(body),e(bullet),simulation.cycle--,Matter.Body.setVelocity(player,{x:0,y:-55*player.mass*simulation.g}),player.force.x=0,player.force.y=0}m.grabPowerUp(),this.drain=tech.isFreeWormHole?.02:.16;const $=Vector.perp(Vector.normalise(W)),z={x:m.pos.x+30*Math.cos(m.angle),y:m.pos.y+30*Math.sin(m.angle)};m.fieldRange=.97*m.fieldRange+.03*(50+10*Math.sin(.025*simulation.cycle));const q=Vector.add(Vector.mult($,1.5*m.fieldRange),simulation.mouseInGame),N=Vector.add(Vector.mult($,-1.5*m.fieldRange),simulation.mouseInGame);ctx.beginPath(),ctx.moveTo(z.x,z.y),ctx.bezierCurveTo(z.x,z.y,simulation.mouseInGame.x,simulation.mouseInGame.y,q.x,q.y),ctx.moveTo(z.x,z.y),ctx.bezierCurveTo(z.x,z.y,simulation.mouseInGame.x,simulation.mouseInGame.y,N.x,N.y),m.energy>this.drain&&(tech.isWormholeMapIgnore||0===Matter.Query.ray(map,m.pos,E).length)&&0===Matter.Query.region(map,{min:{x:simulation.mouseInGame.x-G,y:simulation.mouseInGame.y-G},max:{x:simulation.mouseInGame.x+G,y:simulation.mouseInGame.y+G}}).length?(m.hole.isReady=!0,ctx.lineWidth=1,ctx.strokeStyle="#000",ctx.stroke()):(m.hole.isReady=!1,ctx.lineWidth=1,ctx.strokeStyle="#000",ctx.lineDashOffset=30*Math.random(),ctx.setLineDash([20,40]),ctx.stroke(),ctx.setLineDash([]))}else if(tech.isWormHolePause&&m.isTimeDilated&&m.wakeCheck(),m.hole.isReady&&m.energy>this.drain&&(tech.isWormholeMapIgnore||0===Matter.Query.ray(map,m.pos,E).length)&&0===Matter.Query.region(map,{min:{x:simulation.mouseInGame.x-G,y:simulation.mouseInGame.y-G},max:{x:simulation.mouseInGame.x+G,y:simulation.mouseInGame.y+G}}).length){m.energy-=this.drain,m.hole.isReady=!1,m.fieldRange=0,tech.isWormholeMapIgnore?simulation.translatePlayerAndCamera(simulation.mouseInGame):Matter.Body.setPosition(player,simulation.mouseInGame),m.buttonCD_jump=0;const X=Vector.mult(Vector.normalise(W),15);Matter.Body.setVelocity(player,{x:X.x,y:X.y-5}),m.immuneCycle<m.cycle+5&&(m.immuneCycle=m.cycle+5);for(let _=0;_<bullet.length;_++)bullet[_].botType&&(Matter.Body.setPosition(bullet[_],Vector.add(player.position,{x:250*(Math.random()-.5),y:250*(Math.random()-.5)})),Matter.Body.setVelocity(bullet[_],{x:0,y:0}));if(m.hole.isOn=!0,m.hole.pos1.x=m.pos.x,m.hole.pos1.y=m.pos.y,m.hole.pos2.x=player.position.x,m.hole.pos2.y=player.position.y,m.hole.angle=Math.atan2(W.y,W.x),m.hole.unit=Vector.perp(Vector.normalise(W)),tech.isWormholeDamage){who=Matter.Query.ray(mob,m.pos,simulation.mouseInGame,100);for(let Q=0;Q<who.length;Q++)who[Q].body.alive&&(mobs.statusDoT(who[Q].body,1,420),mobs.statusStun(who[Q].body,360))}if(tech.isNewWormHoleDamage){const j=1.5;m.damageDone*=j,simulation.ephemera.push({count:300,do(){this.count--,this.count<0&&(simulation.removeEphemera(this),m.damageDone/=j)}})}}}m.drawRegenEnergy()}}},{name:"grappling hook",description:"use <strong class='color-f'>energy</strong> to fire a hook that <strong>pulls</strong> you<br><strong>0.5x</strong> <strong class='color-defense'>damage taken</strong><br><strong>9</strong> <strong class='color-f'>energy</strong> per second<em style =\"float: right; font-family: monospace;font-size:1rem;color:#fff;\">↑↑↓↓</em>",keyLog:[null,null,null,null],effect:()=>{m.fieldEvent=function(e){m.fieldUpgrades[10].keyLog.shift(),m.fieldUpgrades[10].keyLog.push(e.code);const t=[input.key.up,input.key.up,input.key.down,input.key.down],o=(e,t)=>e.length===t.length&&e.every((e,o)=>e===t[o]);if(m.energy>.13&&o(m.fieldUpgrades[10].keyLog,["ArrowUp","ArrowUp","ArrowDown","ArrowDown"])||o(m.fieldUpgrades[10].keyLog,t)){const e=[...map,...body],t=Matter.Query.ray(e,m.pos,{x:m.pos.x,y:m.pos.y+5e3},40);if(t.length){t.sort((e,t)=>e.body.position.y-t.body.position.y);const e=t[0].body.bounds.min.y;if(e-m.pos.y>400){m.energy-=.13;const t=player.position.y,o=.05*Math.min(e-t,1500),l=Math.min(e-t,1500)*Math.min(e-t,1500);simulation.ephemera.push({count:0,do(){this.count++,this.count>6&&simulation.removeEphemera(this),ctx.fillStyle="rgba(255,255,255,0.5)",ctx.beginPath(),ctx.arc(m.pos.x,m.pos.y,o*this.count,0,2*Math.PI),ctx.lineWidth=10,ctx.fill(),ctx.beginPath(),ctx.moveTo(m.pos.x,t),ctx.lineTo(m.pos.x,e-90),ctx.strokeStyle="rgba(255,255,255,0.15)",ctx.lineWidth=40,ctx.stroke()}}),Matter.Body.setPosition(player,{x:m.pos.x,y:e-90}),Matter.Body.setVelocity(player,{x:player.velocity.x,y:0}),input.field=!1;const i=Math.min(Math.floor(.06*(e-t)),180);m.immuneCycle<m.cycle+i&&(m.immuneCycle=m.cycle+i),m.doCrouch(),m.yOff=m.yOffWhen.jump,m.hardLandCD=m.cycle+m.hardLandCDScale*Math.min(2*m.hardLanding/6.5-6,40);const a=.0015*o,s=.001*o;for(let e=0,t=body.length;e<t;++e)Vector.magnitudeSquared(Vector.sub(body[e].position,player.position))<l&&(body[e].force.x+=a*body[e].mass*(body[e].position.x>player.position.x?1:-1),body[e].force.y-=s*body[e].mass);for(let e=0,t=mob.length;e<t;++e)Vector.magnitudeSquared(Vector.sub(mob[e].position,player.position))<l&&(mob[e].force.x+=a*mob[e].mass*(mob[e].position.x>player.position.x?1:-1),mob[e].force.y-=s*mob[e].mass);for(let e=0,t=powerUp.length;e<t;++e)Vector.magnitudeSquared(Vector.sub(powerUp[e].position,player.position))<l&&(powerUp[e].force.x-=a*powerUp[e].mass*(powerUp[e].position.x>player.position.x?1:-1),powerUp[e].force.y+=s*powerUp[e].mass)}}}},window.addEventListener("keydown",m.fieldEvent),m.fieldFire=!0,m.eyeFillColor=m.fieldMeterColor,m.fieldHarmReduction=.5,m.grabPowerUpRange2=3e5,m.hold=function(){if(m.isHolding)m.drawHold(m.holdingTarget),m.holding(),m.throwBlock();else if(input.field)m.holdingTarget=null,m.fieldCDcycle<m.cycle&&(m.fieldCDcycle<m.cycle+15&&(m.fieldCDcycle=m.cycle+15),m.energy>.02&&(m.energy-=.02),b.grapple({x:m.pos.x+40*Math.cos(m.angle),y:m.pos.y+40*Math.sin(m.angle)},m.angle),m.fieldCDcycle<m.cycle+20&&(m.fieldCDcycle=m.cycle+20)),m.grabPowerUp();else if(m.holdingTarget=null,tech.isHookDefense&&m.energy>.15&&m.fieldCDcycle<m.cycle){const e=300;for(let t=0;t<mob.length;t++)if(!mob[t].isBadTarget&&!mob[t].isInvulnerable&&Vector.magnitude(Vector.sub(m.pos,mob[t].position))<e&&0===Matter.Query.ray(map,m.pos,mob[t].position).length){m.energy-=.1,m.fieldCDcycle<m.cycle+20&&(m.fieldCDcycle=m.cycle+20);const e=Math.atan2(mob[t].position.y-player.position.y,mob[t].position.x-player.position.x);b.harpoon(m.pos,mob[t],e,.75,!0,20),bullet[bullet.length-1].drain=0;const o=6;for(let l=o-1;l>0;l--)b.harpoon(m.pos,mob[t],e+2*l*Math.PI/o,.75,!0,10),bullet[bullet.length-1].drain=0;break}ctx.beginPath(),ctx.arc(m.pos.x,m.pos.y,e,0,2*Math.PI),ctx.strokeStyle="#000",ctx.lineWidth=.25,ctx.setLineDash([10,30]),ctx.stroke(),ctx.setLineDash([])}m.drawRegenEnergy()}}}],isShipMode:!1,shipMode(e=.03,t=.99,o=1.15,l=.92){if(!m.isShipMode){for(let e=0;e<mob.length;e++)mob[e].freeOfWires||(mob[e].freeOfWires=!0);m.isShipMode=!0;const i=[{x:29.979168754143455,y:4.748337243898336},{x:27.04503734408824,y:13.7801138209198},{x:21.462582474874278,y:21.462582475257523},{x:13.780113820536943,y:27.045037344471485},{x:4.74833724351507,y:29.979168754526473},{x:-4.748337245049098,y:29.979168754526473},{x:-13.780113822071026,y:27.045037344471485},{x:-21.46258247640829,y:21.462582475257523},{x:-27.045037345621797,y:13.7801138209198},{x:-29.979168755677012,y:4.748337243898336},{x:-29.979168755677012,y:-4.7483372446656045},{x:-27.045037345621797,y:-13.78011382168726},{x:-21.46258247640829,y:-21.462582476024817},{x:-13.780113822071026,y:-27.045037345239006},{x:-4.748337245049098,y:-29.97916875529422},{x:4.74833724351507,y:-29.97916875529422},{x:13.780113820536943,y:-27.045037345239006},{x:21.462582474874278,y:-21.462582476024817},{x:27.04503734408824,y:-13.78011382168726},{x:29.979168754143455,y:-4.7483372446656045}];Matter.Body.setVertices(player,Matter.Vertices.create(i,player)),player.parts.pop(),player.parts.pop(),player.parts.pop(),player.parts.pop(),m.defaultMass=30,Matter.Body.setMass(player,m.defaultMass),player.friction=.01,player.restitution=.2,m.spin=0,m.onGround=!1,m.lastOnGroundCycle=0,m.airControl=()=>{player.force.y-=player.mass*simulation.g,Matter.Body.setVelocity(player,{x:t*player.velocity.x,y:t*player.velocity.y}),input.up?(player.force.x+=e*Math.cos(m.angle)*m.squirrelJump,player.force.y+=e*Math.sin(m.angle)*m.squirrelJump):input.down&&(player.force.x-=.6*e*Math.cos(m.angle),player.force.y-=.6*e*Math.sin(m.angle)),Matter.Body.setAngularVelocity(player,player.angularVelocity*l),input.right?player.torque+=o:input.left&&(player.torque-=o),m.angle+=m.spin,m.angle=player.angle},m.move=()=>{m.pos.x=player.position.x,m.pos.y=player.position.y,m.Vx=player.velocity.x,m.Vy=player.velocity.y,m.history.splice(m.cycle%600,1,{position:{x:player.position.x,y:player.position.y},velocity:{x:player.velocity.x,y:player.velocity.y},yOff:m.yOff,angle:m.angle,health:m.health,energy:m.energy,activeGun:b.activeGun})},m.look=()=>{m.transSmoothX=canvas.width2-m.pos.x-.8*(simulation.mouse.x-canvas.width2),m.transSmoothY=canvas.height2-m.pos.y-.8*(simulation.mouse.y-canvas.height2),m.transX+=.07*(m.transSmoothX-m.transX),m.transY+=.07*(m.transSmoothY-m.transY)},simulation.camera=()=>{const e=simulation.mouse.x/window.innerWidth-.5,t=simulation.mouse.y/window.innerHeight-.5,o=Math.max(e*e,t*t);simulation.edgeZoomOutSmooth=.04*(1+4*o*o)+.96*simulation.edgeZoomOutSmooth,ctx.save(),ctx.translate(canvas.width2,canvas.height2),ctx.scale(simulation.zoom/simulation.edgeZoomOutSmooth,simulation.zoom/simulation.edgeZoomOutSmooth),ctx.translate(-canvas.width2+m.transX,-canvas.height2+m.transY),simulation.mouseInGame.x=(simulation.mouse.x-canvas.width2)/simulation.zoom*simulation.edgeZoomOutSmooth+canvas.width2-m.transX,simulation.mouseInGame.y=(simulation.mouse.y-canvas.height2)/simulation.zoom*simulation.edgeZoomOutSmooth+canvas.height2-m.transY},m.draw=()=>{if(ctx.save(),ctx.globalAlpha=m.immuneCycle<m.cycle?1:m.cycle%3?.1:.65+.1*Math.random(),ctx.translate(player.position.x,player.position.y),ctx.rotate(player.angle),input.up)(e=ctx.createLinearGradient(0,0,-150,0)).addColorStop(0,"rgba(150, 200, 255, 0.7)"),e.addColorStop(1,"rgba(150, 200, 255, 0)"),ctx.fillStyle=e,ctx.beginPath(),ctx.moveTo(-18,-25),ctx.lineTo(-18,25),ctx.lineTo(-50-100*Math.random(),0),ctx.fill();else if(input.down){var e;(e=ctx.createLinearGradient(0,0,80,0)).addColorStop(0,"rgba(150, 200, 255, 0.7)"),e.addColorStop(1,"rgba(150, 200, 255, 0)"),ctx.fillStyle=e,ctx.beginPath(),ctx.moveTo(20,-16),ctx.lineTo(20,16),ctx.lineTo(35+43*Math.random(),0),ctx.fill()}ctx.beginPath(),ctx.arc(0,0,30,0,2*Math.PI),ctx.fillStyle=m.bodyGradient,ctx.fill(),ctx.arc(15,0,4,0,2*Math.PI),ctx.strokeStyle="#333",ctx.lineWidth=2,ctx.stroke(),ctx.restore()},collisionChecks=function(e){const t=e.pairs;for(let l=0,i=t.length;l!=i;l++)for(let a=0;a<mob.length;a++)if(mob[a].alive&&m.alive){if(t[l].bodyA===mob[a]){o(t[l].bodyB);break}if(t[l].bodyB===mob[a]){o(t[l].bodyA);break}function o(e){if(m.immuneCycle<m.cycle&&e===player&&!mob[a].isSlowed&&!mob[a].isStunned){mob[a].foundPlayer();let e=Math.min(Math.max(.025*Math.sqrt(mob[a].mass),.05),.3)*mob[a].damageScale();if(tech.isRewindAvoidDeath&&m.energy+.05>Math.min(.95,m.maxEnergy)&&e>.01)return void m.takeDamage(e);m.takeDamage(e),tech.isPiezo&&(m.energy+=20.48*level.isReducedRegen),tech.isStimulatedEmission&&powerUps.ejectTech(),mob[a].onHit&&mob[a].onHit(),m.immuneCycle<m.cycle+m.collisionImmuneCycles&&(m.immuneCycle=m.cycle+m.collisionImmuneCycles);let o=Math.atan2(player.position.y-mob[a].position.y,player.position.x-mob[a].position.x);return Matter.Body.setVelocity(player,{x:player.velocity.x+8*Math.cos(o),y:player.velocity.y+8*Math.sin(o)}),Matter.Body.setVelocity(mob[a],{x:mob[a].velocity.x-8*Math.cos(o),y:mob[a].velocity.y-8*Math.sin(o)}),void(tech.isAnnihilation&&!mob[a].shield&&!mob[a].isShielded&&!mob[a].isBoss&&mob[a].isDropPowerUp&&m.energy>.08?(m.energy-=.08,m.immuneCycle=0,mob[a].death(),simulation.drawList.push({x:t[l].activeContacts[0].vertex.x,y:t[l].activeContacts[0].vertex.y,radius:1e3*e,color:"rgba(255,0,255,0.2)",time:simulation.drawTime})):simulation.drawList.push({x:t[l].activeContacts[0].vertex.x,y:t[l].activeContacts[0].vertex.y,radius:500*e,color:simulation.mobDmgColor,time:simulation.drawTime}))}if("bullet"===e.classType&&e.speed>e.minDmgSpeed){e.beforeDmg(mob[a]);let o=e.dmg+.15*e.mass*Vector.magnitude(Vector.sub(mob[a].velocity,e.velocity));return tech.isCrit&&mob[a].isStunned&&(o*=4),mob[a].damage(o),mob[a].alive&&mob[a].foundPlayer(),void(mob[a].damageReduction&&simulation.drawList.push({x:t[l].activeContacts[0].vertex.x,y:t[l].activeContacts[0].vertex.y,radius:40*Math.log(o+1.1)*mob[a].damageReduction+3,color:simulation.playerDmgColor,time:simulation.drawTime}))}if("body"===e.classType&&e.speed>6){const o=Vector.magnitude(Vector.sub(mob[a].velocity,e.velocity));if(o>9){let i=tech.blockDamage*o*e.mass*(tech.isMobBlockFling?2:1);if(mob[a].isShielded&&(i*=.7),mob[a].damage(i,!0),tech.isBlockPowerUps&&!mob[a].alive&&mob[a].isDropPowerUp&&Math.random()<.5){let e="ammo";Math.random()<.4?e="heal":Math.random()<.4&&!tech.isSuperDeterminism&&(e="research"),powerUps.spawn(mob[a].position.x,mob[a].position.y,e)}const s=i/Math.sqrt(e.mass);return s>.5&&mobs.statusStun(mob[a],30+60*Math.sqrt(s)),mob[a].alive&&mob[a].distanceToPlayer2()<1e6&&!m.isCloak&&mob[a].foundPlayer(),tech.fragments&&e.speed>10&&!e.hasFragmented&&(e.hasFragmented=!0,b.targetedNail(e.position,4*tech.fragments)),void(mob[a].damageReduction&&simulation.drawList.push({x:t[l].activeContacts[0].vertex.x,y:t[l].activeContacts[0].vertex.y,radius:40*Math.log(i+1.1)*mob[a].damageReduction+3,color:simulation.playerDmgColor,time:simulation.drawTime}))}}}}}}}};