const simulation={loop(){},normalLoop(){simulation.gravity(),Engine.update(engine,simulation.delta),simulation.wipe(),simulation.textLog(),m.onGround?m.groundControl():m.airControl(),m.move(),m.look(),simulation.camera(),level.custom(),powerUps.do(),mobs.draw(),simulation.draw.cons(),simulation.draw.body(),m.isTimeDilated||mobs.loop(),m.draw(),m.hold(),level.customTopLayer(),simulation.draw.drawMapPath(),b.fire(),b.bulletRemove(),b.bulletDraw(),m.isTimeDilated||b.bulletDo(),simulation.drawCircle(),simulation.runEphemera(),ctx.restore(),simulation.drawCursor()},testingLoop(){if(simulation.gravity(),Engine.update(engine,simulation.delta),simulation.wipe(),simulation.textLog(),m.onGround?m.groundControl():m.airControl(),m.move(),m.look(),simulation.camera(),level.custom(),m.draw(),m.hold(),level.customTopLayer(),simulation.draw.wireFrame(),input.fire&&m.fireCDcycle<m.cycle){m.fireCDcycle=m.cycle+15;for(let t=0,e=mob.length;t<e;t++)Vector.magnitudeSquared(Vector.sub(mob[t].position,simulation.mouseInGame))<mob[t].radius*mob[t].radius&&console.log(mob[t])}simulation.draw.cons(),simulation.draw.testing(),simulation.drawCircle(),simulation.runEphemera(),simulation.constructCycle(),ctx.restore(),simulation.testingOutput(),simulation.drawCursor()},isTimeSkipping:!1,timeSkip(t=60){simulation.isTimeSkipping=!0;for(let e=0;e<t;e++)simulation.cycle++,m.cycle++,simulation.gravity(),Engine.update(engine,simulation.delta),m.onGround?m.groundControl():m.airControl(),m.move(),level.custom(),mobs.loop(),m.walk_cycle+=m.flipLegs*m.Vx,m.hold(),level.customTopLayer(),b.fire(),b.bulletRemove(),b.bulletDo(),simulation.runEphemera();simulation.isTimeSkipping=!1},timePlayerSkip(t=60){simulation.isTimeSkipping=!0;for(let e=0;e<t;e++)simulation.cycle++,simulation.gravity(),Engine.update(engine,simulation.delta),m.isTimeDilated||mobs.loop(),7!==m.fieldMode&&m.hold(),b.bulletRemove(),m.isTimeDilated||b.bulletDo(),simulation.runEphemera();simulation.isTimeSkipping=!1},ephemera:[],removeEphemera:function(t,e){if(e){for(let e=0,o=simulation.ephemera.length;e<o;e++)if(simulation.ephemera[e].name===t){simulation.ephemera.splice(e,1);break}}else for(let e=0,o=simulation.ephemera.length;e<o;e++)if(simulation.ephemera[e]===t){simulation.ephemera.splice(e,1);break}},runEphemera(){for(let t=0;t<simulation.ephemera.length;t++)simulation.ephemera[t].do()},mouse:{x:canvas.width/2,y:canvas.height/2},mouseInGame:{x:0,y:0},g:.0024,onTitlePage:!0,isCheating:!1,isTraining:!1,paused:!1,isChoosing:!1,testing:!1,cycle:600,fpsCap:null,fpsCapDefault:72,isCommunityMaps:!1,cyclePaused:0,fallHeight:6e3,lastTimeStamp:0,delta:1e3/60,buttonCD:0,isHorizontalFlipped:!1,levelsCleared:0,difficultyMode:2,difficulty:0,constraint:0,healScale:1,accelScale:null,CDScale:null,molecularMode:Math.floor(4*Math.random()),pixelGraphics(){let t=ctx.getImageData(0,0,canvas.width,canvas.height),e=t.data;for(let t=e.length/2;t<e.length;t+=4)index=t%(canvas.width*canvas.height*2),e[t+0]=e[index+0],e[t+1]=e[index+1],e[t+2]=e[index+2],e[t+3]=e[index+3];for(let t=0;t<len;t++);ctx.putImageData(t,0,0)},drawCursor(){ctx.beginPath(),ctx.moveTo(simulation.mouse.x-10,simulation.mouse.y),ctx.lineTo(simulation.mouse.x+10,simulation.mouse.y),ctx.moveTo(simulation.mouse.x,simulation.mouse.y-10),ctx.lineTo(simulation.mouse.x,simulation.mouse.y+10),ctx.lineWidth=2,ctx.strokeStyle="#000",ctx.stroke()},drawCursorBasic(){ctx.beginPath(),ctx.moveTo(simulation.mouse.x-10,simulation.mouse.y),ctx.lineTo(simulation.mouse.x+10,simulation.mouse.y),ctx.moveTo(simulation.mouse.x,simulation.mouse.y-10),ctx.lineTo(simulation.mouse.x,simulation.mouse.y+10),ctx.lineWidth=2,ctx.strokeStyle="#000",ctx.stroke()},drawCursorCoolDown(){ctx.lineWidth=2,ctx.strokeStyle="#000",ctx.beginPath(),m.fireCDcycle>m.cycle?(ctx.strokeStyle="#000",ctx.arc(simulation.mouse.x,simulation.mouse.y,11,0,2*Math.PI)):ctx.strokeStyle="#000",ctx.moveTo(simulation.mouse.x-10,simulation.mouse.y),ctx.lineTo(simulation.mouse.x+10,simulation.mouse.y),ctx.moveTo(simulation.mouse.x,simulation.mouse.y-10),ctx.lineTo(simulation.mouse.x,simulation.mouse.y+10),ctx.stroke()},drawList:[],drawTime:8,mobDmgColor:"rgba(255,0,0,0.7)",playerDmgColor:"rgba(0,0,0,0.7)",drawCircle(){let t=simulation.drawList.length;for(;t--;)ctx.beginPath(),ctx.arc(simulation.drawList[t].x,simulation.drawList[t].y,simulation.drawList[t].radius,0,2*Math.PI),ctx.fillStyle=simulation.drawList[t].color,ctx.fill(),simulation.drawList[t].time?simulation.drawList[t].time--:m.isTimeDilated||simulation.drawList.splice(t,1)},circleFlare(t,e=100){boltNum=300*t;const o=[];colors=[powerUps.research.color,powerUps.ammo.color,powerUps.heal.color,powerUps.tech.color,powerUps.field.color,powerUps.gun.color];for(let t=0;t<boltNum;++t){const t=6+20*Math.random(),e=2*Math.PI*Math.random();o.push({x:m.pos.x,y:m.pos.y,Vx:t*Math.cos(e),Vy:t*Math.sin(e),color:colors[Math.floor(Math.random()*colors.length)]})}let i=0;loop=()=>{i++<e&&requestAnimationFrame(loop);for(let t=0,e=o.length;t<e;++t)o[t].x+=o[t].Vx,o[t].y+=o[t].Vy,Math.random()<.2&&simulation.drawList.push({x:o[t].x,y:o[t].y,radius:1.5+5*Math.random(),color:o[t].color,time:Math.floor(9+25*Math.random()*Math.random())})},requestAnimationFrame(loop)},boldActiveGunHUD(){if(b.inventory.length>0)for(let t=0,e=b.inventory.length;t<e;++t)b.inventory[t]===b.activeGun&&document.getElementById(b.activeGun)?document.getElementById(b.inventory[t]).style.opacity="1":document.getElementById(b.inventory[t]).style.opacity="0.3"},updateGunHUD(){for(let t=0,e=b.inventory.length;t<e;++t)document.getElementById(b.inventory[t]).innerHTML=`${b.guns[b.inventory[t]].name} - ${b.guns[b.inventory[t]].ammo}`},makeGunHUD(){const t=document.getElementById("guns");for(;t.firstChild;)t.removeChild(t.firstChild);for(let t=0,e=b.inventory.length;t<e;++t){const e=document.createElement("div");e.setAttribute("id",b.inventory[t]);const o=document.createTextNode(`${b.guns[b.inventory[t]].name} - ${b.guns[b.inventory[t]].ammo}`);e.appendChild(o),document.getElementById("guns").appendChild(e)}simulation.boldActiveGunHUD()},updateTechHUD(){let t="";for(let e=0,o=tech.tech.length;e<o;e++)tech.tech[e].isLost?(t&&(t+="<br>"),t+=`<span style="text-decoration: line-through;">${tech.tech[e].name}</span>`):tech.tech[e].count>0&&!tech.tech[e].isInstant&&(t&&(t+="<br>"),t+=tech.tech[e].name,tech.tech[e].count>1&&(t+=` (${tech.tech[e].count}x)`));document.getElementById("right-HUD").innerHTML=t},lastLogTime:0,isTextLogOpen:!0,inGameConsole(t,e=240){localSettings.isHideHUD||!simulation.isTextLogOpen||build.isExperimentSelection||(simulation.lastLogTime>m.cycle?(document.getElementById("text-log").innerHTML=document.getElementById("text-log").innerHTML+"<br>"+t,simulation.lastLogTime=m.cycle+e):(document.getElementById("text-log").innerHTML=t,document.getElementById("text-log").style.display="inline",simulation.lastLogTime=m.cycle+e))},textLog(){simulation.lastLogTime&&simulation.lastLogTime<m.cycle&&(simulation.lastLogTime=0,document.getElementById("text-log").style.display="none")},nextGun(){b.inventory.length>1&&!tech.isGunCycle&&!tech.isGunChoice&&(b.inventoryGun++,b.inventoryGun>b.inventory.length-1&&(b.inventoryGun=0),simulation.switchGun())},previousGun(){b.inventory.length>1&&!tech.isGunCycle&&!tech.isGunChoice&&(b.inventoryGun--,b.inventoryGun<0&&(b.inventoryGun=b.inventory.length-1),simulation.switchGun())},switchToGunInInventory(t){void 0!==b.inventory[t]&&b.inventoryGun!==t&&(b.inventoryGun=t,simulation.switchGun())},switchGun(){tech.isLongitudinal&&3===b.activeGun&&(b.guns[3].waves=[]),tech.crouchAmmoCount&&(tech.crouchAmmoCount=1),b.inventory.length>0&&(b.activeGun=b.inventory[b.inventoryGun]),b.guns[8].charge=0,simulation.updateGunHUD(),simulation.boldActiveGunHUD(),1===b.activeGun?simulation.drawCursor=simulation.drawCursorCoolDown:simulation.drawCursor=simulation.drawCursorBasic},zoom:null,zoomScale:1e3,isAutoZoom:!0,setZoom(t=simulation.zoomScale){simulation.zoomScale=t,simulation.zoom=canvas.height/t},zoomTransition(t,e=2){simulation.isAutoZoom&&simulation.ephemera.push({name:"zoom",count:simulation.testing?0:120,currentLevel:level.onLevel,do(){this.count--;const e=(t-simulation.zoomScale)/this.count;simulation.zoomScale+=e,this.count<1&&this.currentLevel===level.onLevel&&simulation.isAutoZoom&&(simulation.zoomScale=t,simulation.removeEphemera(this)),simulation.setZoom(simulation.zoomScale)}})},isInvertedVertical:!1,flipCameraVertical(t=1,e=()=>{}){if(!simulation.isInvertedVertical)if(t>0){let o=0;const i=()=>{m.alive&&(simulation.paused?requestAnimationFrame(i):(o++,ctx.setTransform(1,0,0,1,0,0),o===t?(ctx.translate(0,canvas.height),ctx.scale(1,-1)):(requestAnimationFrame(i),ctx.translate(0,canvas.height*o/t),ctx.scale(1,1-2*o/t)),o>Math.floor(t/2)&&!simulation.isInvertedVertical&&(simulation.isInvertedVertical=!0,mouseMove.reset(),simulation.mouse.y=canvas.height-simulation.mouse.y,e())))};requestAnimationFrame(i)}else ctx.translate(0,canvas.height),ctx.scale(1,-1),simulation.isInvertedVertical=!0,mouseMove.reset(),simulation.mouse.y=canvas.height-simulation.mouse.y},unFlipCameraVertical(t=0,e=()=>{}){if(t){let o=0;const i=()=>{m.alive&&(simulation.paused?requestAnimationFrame(i):(o++,ctx.setTransform(1,0,0,1,0,0),o===t||(requestAnimationFrame(i),ctx.translate(0,canvas.height-canvas.height*o/t),ctx.scale(1,2*o/t-1)),o>Math.floor(t/2)&&simulation.isInvertedVertical&&(simulation.isInvertedVertical=!1,mouseMove.reset(),simulation.mouse.y=canvas.height-simulation.mouse.y,e())))};requestAnimationFrame(i)}else ctx.reset(),ctx.font="25px Arial",simulation.isInvertedVertical=!1,mouseMove.reset(),simulation.mouse.y=canvas.height-simulation.mouse.y},translatePlayerAndCamera(t,e=!0){const o=player.position.x,i=player.position.y;Matter.Body.setPosition(player,{x:t.x,y:t.y});const s={x:o-player.position.x,y:i-player.position.y};if(m.transX+=s.x,m.transY+=s.y,simulation.mouseInGame.x=(simulation.mouse.x-canvas.width2)/simulation.zoom*simulation.edgeZoomOutSmooth+canvas.width2-m.transX,simulation.mouseInGame.y=(simulation.mouse.y-canvas.height2)/simulation.zoom*simulation.edgeZoomOutSmooth+canvas.height2-m.transY,m.angle=Math.atan2(simulation.mouseInGame.y-m.pos.y,simulation.mouseInGame.x-m.pos.x),e)for(let t=0;t<bullet.length;t++)bullet[t].botType&&(Vector.magnitudeSquared(Vector.sub(bullet[t].position,player.position))>1e6?(Matter.Body.setPosition(bullet[t],Vector.add(player.position,{x:250*(Math.random()-.5),y:250*(Math.random()-.5)})),Matter.Body.setVelocity(bullet[t],{x:0,y:0})):Matter.Body.setPosition(bullet[t],Vector.sub(bullet[t].position,s)))},setupCamera(){m.pos.x=player.position.x,m.pos.y=playerBody.position.y-m.yOff;m.transSmoothX=canvas.width2-m.pos.x-.8*(simulation.mouse.x-canvas.width2),m.transSmoothY=canvas.height2-m.pos.y-.8*(simulation.mouse.y-canvas.height2),m.transX+=m.transSmoothX-m.transX,m.transY+=m.transSmoothY-m.transY},edgeZoomOutSmooth:1,camera(){const t=simulation.mouse.x/window.innerWidth-.5,e=simulation.mouse.y/window.innerHeight-.5,o=Math.max(t*t,e*e);simulation.edgeZoomOutSmooth=.04*(1+4*o*o)+.96*simulation.edgeZoomOutSmooth,ctx.save(),ctx.translate(canvas.width2,canvas.height2),ctx.scale(simulation.zoom/simulation.edgeZoomOutSmooth,simulation.zoom/simulation.edgeZoomOutSmooth),ctx.translate(-canvas.width2+m.transX,-canvas.height2+m.transY),simulation.mouseInGame.x=(simulation.mouse.x-canvas.width2)/simulation.zoom*simulation.edgeZoomOutSmooth+canvas.width2-m.transX,simulation.mouseInGame.y=(simulation.mouse.y-canvas.height2)/simulation.zoom*simulation.edgeZoomOutSmooth+canvas.height2-m.transY},setCameraPosition(t,e,o=1){ctx.restore(),ctx.save(),ctx.translate(canvas.width2,canvas.height2),ctx.scale(o,o),ctx.translate(-t,-e),simulation.mouseInGame.x=(simulation.mouse.x-canvas.width2)/simulation.zoom*simulation.edgeZoomOutSmooth+canvas.width2-m.transX,simulation.mouseInGame.y=(simulation.mouse.y-canvas.height2)/simulation.zoom*simulation.edgeZoomOutSmooth+canvas.height2-m.transY},cameraNoLook(){ctx.save(),ctx.translate(canvas.width2,canvas.height2),ctx.translate(-canvas.width2+m.transX,-canvas.height2+m.transY),simulation.mouseInGame.x=(simulation.mouse.x-canvas.width2)/simulation.zoom*simulation.edgeZoomOutSmooth+canvas.width2-m.transX,simulation.mouseInGame.y=(simulation.mouse.y-canvas.height2)/simulation.zoom*simulation.edgeZoomOutSmooth+canvas.height2-m.transY},restoreCamera(){ctx.restore()},trails(t=150){for(let e=0;e<30;e++)setTimeout(function(){simulation.wipe=function(){ctx.fillStyle=`rgba(221,221,221,${e*e*5e-4+.0025})`,ctx.fillRect(0,0,canvas.width,canvas.height)}},e*t);setTimeout(function(){simulation.wipe=function(){ctx.clearRect(0,0,canvas.width,canvas.height)}},30*t)},wipe(){},gravity(){function t(t,e){for(var o=0;o<t.length;o++)t[o].force.y+=t[o].mass*e}m.isTimeDilated||(t(powerUp,simulation.g),t(body,simulation.g)),player.force.y+=player.mass*simulation.g},firstRun:!0,splashReturn(){document.fullscreenElement&&(document.body.addEventListener("mousedown",mouseMove.pointerUnlock,{once:!0}),document.exitPointerLock(),mouseMove.isPointerLocked=!1,mouseMove.reset()),document.getElementById("previous-seed").innerHTML=`previous seed: <span style="font-size:80%;">${Math.initialSeed}</span><br>`,document.getElementById("seed").value=Math.initialSeed=Math.seed,simulation.clearTimeouts(),simulation.onTitlePage=!0,document.getElementById("splash").onclick=function(){simulation.startGame()},document.getElementById("choose-grid").style.visibility="hidden",document.getElementById("choose-grid").style.opacity="0",document.getElementById("info").style.display="inline",document.getElementById("info").style.opacity="0",document.getElementById("experiment-button").style.display="inline",document.getElementById("experiment-button").style.opacity="0",document.getElementById("training-button").style.display="inline",document.getElementById("training-button").style.opacity="0",document.getElementById("start-button").style.display="inline",document.getElementById("start-button").style.opacity="0",document.getElementById("experiment-grid").style.display="none",document.getElementById("pause-grid-left").style.display="none",document.getElementById("pause-grid-right").style.display="none",document.getElementById("splash").style.display="inline",document.getElementById("splash").style.opacity="0",document.getElementById("dmg").style.display="none",document.getElementById("health-bg").style.display="none",document.getElementById("defense-bar").style.display="none",document.getElementById("damage-bar").style.display="none",document.body.style.cursor="auto",setTimeout(()=>{document.getElementById("experiment-button").style.opacity="1",document.getElementById("training-button").style.opacity="1",document.getElementById("start-button").style.opacity="1",document.getElementById("info").style.opacity="1",document.getElementById("splash").style.opacity="1"},200)},fpsInterval:0,then:null,startGame(t=!1,e=!1){for(simulation.isTextLogOpen=!0,simulation.clearMap(),t||(document.body.style.cursor="none",document.body.style.overflow="hidden"),simulation.isTraining=!!e,simulation.onTitlePage=!1,document.getElementById("choose-grid").style.visibility="hidden",document.getElementById("choose-grid").style.opacity="0",document.getElementById("experiment-grid").style.display="none",document.getElementById("info").style.display="none",document.getElementById("experiment-button").style.display="none",document.getElementById("training-button").style.display="none",document.getElementById("start-button").style.display="none",document.getElementById("splash").onclick=null,document.getElementById("splash").style.display="none",document.getElementById("dmg").style.display="inline",document.getElementById("health").style.display="inline",document.getElementById("health-bg").style.display="inline",localSettings.isHideHUD?(document.getElementById("right-HUD").style.display="none",document.getElementById("defense-bar").style.display="none",document.getElementById("damage-bar").style.display="none"):(document.getElementById("right-HUD").style.display="inline",document.getElementById("defense-bar").style.display="inline",document.getElementById("damage-bar").style.display="inline"),document.getElementById("guns").style.display="inline",document.getElementById("field").style.display="inline",document.getElementById("pause-grid-left").style.display="none",document.getElementById("pause-grid-right").style.display="none",document.getElementById("pause-grid-right").style.opacity="1",document.getElementById("pause-grid-left").style.opacity="1",ctx.globalCompositeOperation="source-over",ctx.shadowBlur=0,mouseMove.reset(),requestAnimationFrame(()=>{ctx.setTransform(1,0,0,1,0,0),ctx.setLineDash([])}),m.isShipMode?Composite.add(engine.world,[player]):(m.resetSkin(),m.spawn(),m.look=m.lookDefault),seededShuffle(level.constraint),level.populateLevels(),input.endKeySensing(),simulation.ephemera=[],powerUps.powerUpStorage=[],tech.resetAllTech(),b.resetAllGuns(),i=0,len=b.guns.length;i<len;i++)"laser"===b.guns[i].name&&b.guns[i].chooseFireMethod(),"nail gun"===b.guns[i].name&&b.guns[i].chooseFireMethod(),"super balls"===b.guns[i].name&&b.guns[i].chooseFireMethod(),"harpoon"===b.guns[i].name&&b.guns[i].chooseFireMethod(),"foam"===b.guns[i].name&&b.guns[i].chooseFireMethod();b.zeroBotCount(),m.isSwitchingWorlds=!1,simulation.isChoosing=!1,b.setFireMethod(),b.setFireCD();for(let t=0;t<b.guns.length;t++)b.guns[t].isRecentlyShown=!1;for(let t=0;t<m.fieldUpgrades.length;t++)m.fieldUpgrades[t].isRecentlyShown=!1;for(let t=0;t<tech.tech.length;t++)tech.tech[t].isRecentlyShown=!1;powerUps.tech.choiceLog=[],powerUps.gun.choiceLog=[],powerUps.field.choiceLog=[],powerUps.totalPowerUps=0,powerUps.research.count=0,powerUps.boost.endCycle=0,powerUps.isFieldSpawned=!1,m.setFillColors(),input.isPauseKeyReady=!0,simulation.wipe=function(){ctx.clearRect(0,0,canvas.width,canvas.height)},m.lastHit=0,m.hole.isOn=!1,simulation.paused=!1,engine.timing.timeScale=1,simulation.fpsCap=simulation.fpsCapDefault,simulation.isAutoZoom=!0,simulation.makeGunHUD(),simulation.lastLogTime=0,mobs.mobDeaths=0,level.isFlipped=!1,level.onLevel=0,level.levelsCleared=0,level.updateDifficulty(),simulation.clearNow=!0,document.getElementById("text-log").style.display="none",document.getElementById("fade-out").style.opacity=0,document.title="n-gon",simulation.inGameConsole(`Math.seed <span class='color-symbol'>=</span> ${Math.initialSeed}`),simulation.inGameConsole("<span class='color-var'>const</span> engine <span class='color-symbol'>=</span> Engine.create(); <em>//simulation begin</em>"),simulation.inGameConsole("engine.timing.timeScale <span class='color-symbol'>=</span> 1"),m.alive=!0,m.definePlayerMass(),m.onGround=!1,m.lastOnGroundCycle=0,m.health=0,level.isLowHeal=!1,m.addHealth(.25),m.drop(),m.holdingTarget=null,tech.healMaxEnergyBonus=0,m.energy=0,m.immuneCycle=0,m.coupling=0,m.setField(0),simulation.testing&&(simulation.testing=!1,simulation.loop=simulation.normalLoop,simulation.isConstructionMode&&(document.getElementById("construct").style.display="none")),simulation.isCheating=!1,simulation.firstRun=!1,build.hasExperimentalMode=!1,build.isExperimentSelection=!1,build.isExperimentRun=!1,localSettings.isHideHUD||simulation.ephemera.push({name:"dmgDefBars",count:0,do(){if(!(m.cycle%15)){const t=m.defense();m.lastCalculatedDefense!==t&&(document.getElementById("defense-bar").style.width=Math.floor(300*m.maxHealth*(1-t))+"px",m.lastCalculatedDefense=t);const e=tech.damageAdjustments();m.lastCalculatedDamage!==e&&(document.getElementById("damage-bar").style.height=Math.floor(.63*(Math.atan(.25*e-.25)+.25)*canvas.height)+"px",m.lastCalculatedDamage=e)}}}),simulation.ephemera.push({name:"checks",count:0,do(){if(!(m.cycle%60)){if(m.energy>m.maxEnergy&&(m.energy=m.maxEnergy+(m.energy-m.maxEnergy)*tech.overfillDrain,m.energy>1e6&&(m.energy=1e6)),m.pos.y>simulation.fallHeight)if("start"===level.fallMode){simulation.ephemera.push({count:160,do(){this.count--,(this.count<0||m.onGround)&&simulation.removeEphemera(this),player.velocity.y>70&&Matter.Body.setVelocity(player,{x:.99*player.velocity.x,y:.99*player.velocity.y}),player.velocity.y>90&&Matter.Body.setVelocity(player,{x:.99*player.velocity.x,y:.99*player.velocity.y})}});const t={x:player.position.x,y:player.position.y};Matter.Body.setPosition(player,{x:level.enter.x,y:level.enter.y-3e3});const e={x:t.x-player.position.x,y:t.y-player.position.y};m.transX+=e.x,m.transY+=e.y,simulation.mouseInGame.x=(simulation.mouse.x-canvas.width2)/simulation.zoom*simulation.edgeZoomOutSmooth+canvas.width2-m.transX,simulation.mouseInGame.y=(simulation.mouse.y-canvas.height2)/simulation.zoom*simulation.edgeZoomOutSmooth+canvas.height2-m.transY,m.angle=Math.atan2(simulation.mouseInGame.y-m.pos.y,simulation.mouseInGame.x-m.pos.x);for(let t=0;t<bullet.length;t++)bullet[t].botType&&Matter.Body.setPosition(bullet[t],Vector.sub(bullet[t].position,e))}else if("position"===level.fallMode){simulation.ephemera.push({count:180,do(){this.count--,(this.count<0||m.onGround)&&simulation.removeEphemera(this),player.velocity.y>70&&Matter.Body.setVelocity(player,{x:.99*player.velocity.x,y:.99*player.velocity.y}),player.velocity.y>90&&Matter.Body.setVelocity(player,{x:.99*player.velocity.x,y:.99*player.velocity.y})}});const t={x:player.position.x,y:player.position.y},e=Math.min(Math.max(level.fallModeBounds.left,player.position.x),level.fallModeBounds.right);Matter.Body.setPosition(player,{x:e,y:level.enter.y-4e3});const o={x:t.x-e,y:t.y-player.position.y};m.transX+=o.x,m.transY+=o.y,simulation.mouseInGame.x=(simulation.mouse.x-canvas.width2)/simulation.zoom*simulation.edgeZoomOutSmooth+canvas.width2-m.transX,simulation.mouseInGame.y=(simulation.mouse.y-canvas.height2)/simulation.zoom*simulation.edgeZoomOutSmooth+canvas.height2-m.transY,m.angle=Math.atan2(simulation.mouseInGame.y-m.pos.y,simulation.mouseInGame.x-m.pos.x);for(let t=0;t<bullet.length;t++)bullet[t].botType&&Matter.Body.setPosition(bullet[t],Vector.sub(bullet[t].position,o))}else{Matter.Body.setVelocity(player,{x:0,y:0}),Matter.Body.setPosition(player,{x:level.enter.x+50,y:level.enter.y-20});for(let t=0;t<bullet.length;t++)bullet[t].botType&&(Matter.Body.setPosition(bullet[t],Vector.add(player.position,{x:250*(Math.random()-.5),y:250*(Math.random()-.5)})),Matter.Body.setVelocity(bullet[t],{x:0,y:0}))}if(isNaN(player.position.x)&&m.death(),m.lastKillCycle+300>m.cycle&&(tech.isEnergyRecovery&&m.immuneCycle<m.cycle&&(m.energy+=.05*m.maxEnergy*level.isReducedRegen,simulation.drawList.push({x:m.pos.x,y:m.pos.y-45,radius:60*Math.sqrt(.05*m.maxEnergy),color:"rgba(0, 204, 255,0.4)",time:4})),tech.isHealthRecovery))if(tech.isEnergyHealth)m.immuneCycle<m.cycle&&(m.energy+=.005*m.maxEnergy*level.isReducedRegen,simulation.drawList.push({x:m.pos.x,y:m.pos.y,radius:60*Math.sqrt(.02*m.maxEnergy),color:"rgba(0, 204, 255,0.4)",time:4}));else{const t=.005*m.maxHealth;m.addHealth(t),simulation.drawList.push({x:m.pos.x,y:m.pos.y,radius:150*Math.sqrt(t),color:"rgba(0,255,200,0.5)",time:4})}if(!(m.cycle%420)){(Matter.Query.point(map,m.pos).length>0||Matter.Query.point(map,player.position).length>0)&&simulation.ephemera.push({count:240,do(){Matter.Query.point(map,m.pos).length>0||Matter.Query.point(map,player.position).length>0?(this.count--,this.count<0&&(simulation.removeEphemera(this),Matter.Body.setVelocity(player,{x:0,y:0}),Matter.Body.setPosition(player,{x:level.enter.x+50,y:level.enter.y-20}))):simulation.removeEphemera(this)}}),tech.isZeno&&(tech.isEnergyHealth?m.energy*=.95:(m.health*=.95,m.displayHealth()),simulation.drawList.push({x:m.pos.x,y:m.pos.y,radius:5,color:"rgb(255, 0, 195)",time:4})),tech.cyclicImmunity&&m.immuneCycle<m.cycle+tech.cyclicImmunity&&(m.immuneCycle=m.cycle+tech.cyclicImmunity);let t=body.length;for(;t--;)body[t].position.y>simulation.fallHeight&&(Matter.Composite.remove(engine.world,body[t]),body.splice(t,1));for(t=powerUp.length;t--;)if(powerUp[t].position.y>simulation.fallHeight)if(Matter.Body.setVelocity(powerUp[t],{x:0,y:0}),"position"===level.fallMode){const e=Math.min(Math.max(level.fallModeBounds.left,powerUp[t].position.x),level.fallModeBounds.right);Matter.Body.setPosition(powerUp[t],{x:e,y:level.enter.y-3e3})}else Matter.Body.setPosition(powerUp[t],{x:level.exit.x+30*(Math.random()-.5),y:level.exit.y+30*(Math.random()-.5)});for(t=mob.length;t--;)if(mob[t].position.y>simulation.fallHeight)if(mob[t].isBoss&&"position"===level.fallMode){Matter.Body.setVelocity(mob[t],{x:0,y:0});const e=Math.min(Math.max(level.fallModeBounds.left,mob[t].position.x),level.fallModeBounds.right);Matter.Body.setPosition(mob[t],{x:e,y:level.enter.y-3e3})}else mob[t].death()}}}}),simulation.fpsInterval=1e3/simulation.fpsCap,simulation.then=Date.now(),requestAnimationFrame(cycle)},clearTimeouts(){let t=window.setTimeout(function(){},0);for(;t--;)window.clearTimeout(t)},clearNow:!1,clearMap(){if(level.isVerticalFLipLevel=!1,level.isProcedural=!1,level.fallMode="",simulation.unFlipCameraVertical(),ctx.setTransform(1,0,0,1,0,0),m.alive){if(tech.isLongitudinal&&(b.guns[3].waves=[]),b.guns[10].have){let t=0;for(i=0,len=bullet.length;i<len;i++)("mine"!==bullet[i].bulletType||tech.isMineSentry&&void 0!==bullet[i].shots)&&"laser mine"!==bullet[i].bulletType||t++;tech.crouchAmmoCount&&(t=Math.ceil(t/2)),b.guns[10].ammo+=t,tech.ammoCap&&(b.guns[10].ammo=Math.min(tech.ammoCap,b.guns[10].ammo)),simulation.updateGunHUD()}if(tech.isMutualism&&!tech.isEnergyHealth)for(let t=0;t<bullet.length;t++)bullet[t].isMutualismActive&&(m.health+=.01+.01*(bullet[t].isSpore||bullet[t].isFlea?0:1),m.health>m.maxHealth&&(m.health=m.maxHealth),m.displayHealth());if(tech.isEndLevelPowerUp)for(let t=0;t<powerUp.length;t++)"tech"===powerUp[t].name?tech.giveTech():"gun"===powerUp[t].name?tech.isOneGun||b.giveGuns("random"):"field"===powerUp[t].name?0===m.fieldMode&&m.setField(Math.ceil(Math.random()*(m.fieldUpgrades.length-1))):powerUp[t].effect()}simulation.lastLogTime=0,spawn.allowShields=!0,powerUps.totalPowerUps=powerUp.length;let t=m.holdingTarget?m.holdingTarget:void 0;if(tech.deathSpawnsFromBoss=0,simulation.fallHeight=3e3,document.body.style.backgroundColor="#eee",color={block:"rgba(140,140,140,0.85)",blockS:"#222",map:"#444",bullet:"#000"},simulation.draw.drawMapPath=simulation.draw.drawMapPathDefault,m.fireCDcycle=0,m.drop(),m.hole.isOn=!1,simulation.drawList=[],mobs.maxMobBody=40,tech.isHealAttract&&m.alive){let t=0;for(let e=0,o=powerUp.length;e<o;e++)"heal"===powerUp[e].name&&Vector.magnitudeSquared(Vector.sub(powerUp[e].position,m.pos))<1e6&&t++;let e=()=>{t>0&&(requestAnimationFrame(e),simulation.paused||simulation.isChoosing||(t--,powerUps.directSpawn(level.enter.x+50+100*(Math.random()-.5),level.enter.y-60+100*(Math.random()-.5),"heal")))};requestAnimationFrame(e)}if(tech.isDronesTravel&&m.alive){let t=[],e=0,o=0,i=0;for(let s=0;s<bullet.length;++s)bullet[s].isDrone&&bullet[s].endCycle!==1/0?t.push({isImproved:bullet[s].isImproved,scale:bullet[s].scale,endCycle:bullet[s].endCycle}):bullet[s].isSpore?e++:bullet[s].wormSize?o++:bullet[s].isFlea&&i++;requestAnimationFrame(()=>{let e=()=>{const o=level.enter.x+50,i=level.enter.y-60;if(t.length&&(requestAnimationFrame(e),!simulation.paused&&!simulation.isChoosing&&m.alive)){if(tech.isDroneRadioactive)b.droneRadioactive({x:o+50*(Math.random()-.5),y:i+50*(Math.random()-.5)},0),t[0].scale&&(bullet[bullet.length-1].size=t[0].scale);else{b.drone({x:o+50*(Math.random()-.5),y:i+50*(Math.random()-.5)},0);const e=bullet[bullet.length-1];t[0].isImproved&&(e.isImproved=!0),t[0].scale&&(e.scale=t[0].scale,Matter.Body.scale(e,e.scale,e.scale)),e.endCycle=t[0].endCycle+300}t.shift()}};requestAnimationFrame(e)});let s=()=>{if(e>0&&(requestAnimationFrame(s),!simulation.paused&&!simulation.isChoosing)){e--;const t={x:level.enter.x+50,y:level.enter.y-60};b.spore({x:t.x+100*(Math.random()-.5),y:t.y+120*(Math.random()-.5)})}};requestAnimationFrame(s);let n=()=>{if(o>0&&(requestAnimationFrame(n),!simulation.paused&&!simulation.isChoosing)){o--;const t={x:level.enter.x+50,y:level.enter.y-60};b.worm({x:t.x+100*(Math.random()-.5),y:t.y+120*(Math.random()-.5)})}};requestAnimationFrame(n);let a=()=>{if(i>0&&(requestAnimationFrame(a),!simulation.paused&&!simulation.isChoosing)){i--;const t={x:level.enter.x+50,y:level.enter.y-60},e=6+3*Math.random(),o=2*Math.PI*Math.random();b.flea({x:t.x+100*(Math.random()-.5),y:t.y+120*(Math.random()-.5)},{x:e*Math.cos(o),y:e*Math.sin(o)})}};requestAnimationFrame(a)}if(tech.isQuantumEraser&&m.alive){let t=0;for(let e=0,o=mob.length;e<o;e++)mob[e].isDropPowerUp&&mob[e].alive&&t++;t*=.4,requestAnimationFrame(()=>{const e=["heal","ammo","heal","ammo","research","coupling","boost","tech","gun","field"];for(let o=0;o<t;o++)powerUps.spawnDelay(e[Math.floor(Math.random()*e.length)],1)})}function e(t){for(let e=0;e<t.length;++e)Matter.Composite.remove(engine.world,t[e])}e(map),map=[],e(body),body=[],e(mob),mob=[],e(powerUp),powerUp=[],e(cons),cons=[],e(consBB),consBB=[],e(bullet),bullet=[],e(composite),composite=[],t&&m.alive&&(len=body.length,body[len]=Matter.Bodies.fromVertices(0,0,t.vertices,{friction:t.friction,frictionAir:t.frictionAir,frictionStatic:t.frictionStatic}),Matter.Body.setPosition(body[len],m.pos),m.isHolding=!0,m.holdingTarget=body[len],m.holdingTarget.collisionFilter.category=0,m.holdingTarget.collisionFilter.mask=0,m.definePlayerMass(m.defaultMass+m.holdingTarget.mass*m.holdingMassScale),Composite.add(engine.world,m.holdingTarget),m.holdingTarget.classType="body"),simulation.fpsCap=simulation.fpsCapDefault,simulation.fpsInterval=1e3/simulation.fpsCap},testingOutput(){ctx.fillStyle="#000",ctx.textAlign="center",ctx.fillText(`(${simulation.mouseInGame.x.toFixed(1)}, ${simulation.mouseInGame.y.toFixed(1)})`,simulation.mouse.x,simulation.mouse.y-20)},sight:{intersectMap:[],getIntersection(t,e,o){const i=simulation.sight.getIntersections(t,e,o);var s={x:e.x,y:e.y,dist:(e.x-t.x)**2+(e.y-t.y)**2};for(const e of i){const o=(e.x-t.x)**2+(e.y-t.y)**2;o<s.dist&&(s={x:e.x,y:e.y,dist:o})}return s.dist=Math.sqrt(s.dist),s},getIntersections(t,e,o){function i(t,e,o,i){const s=t.x<e.x?t.x:e.x,n=t.x>e.x?t.x:e.x,a=t.y<e.y?t.y:e.y,l=t.y>e.y?t.y:e.y,m=o.x<i.x?o.x:i.x,r=o.x>i.x?o.x:i.x,h=o.y<i.y?o.y:i.y,u=o.y>i.y?o.y:i.y;return!(n<m||r<s||l<h||u<a)}const s=[];for(const n of o){for(let o=0;o<n.vertices.length-1;o++){const a=n.vertices[o],l=n.vertices[o+1];if(!i(t,e,a,l))continue;let m=simulation.checkLineIntersection(t,e,a,l);m.onLine1&&m.onLine2&&s.push({x:m.x,y:m.y})}const o=n.vertices[n.vertices.length-1],a=n.vertices[0];if(i(t,e,o,a)){let i=simulation.checkLineIntersection(t,e,o,a);i.onLine1&&i.onLine2&&s.push({x:i.x,y:i.y})}}return s},circleLoS(t,e){function o(t,e,o,i){const s=Math.atan2(e.y-t.y,e.x-t.x),n=Math.sqrt((t.x-o.x)**2+(t.y-o.y)**2),a=Math.sqrt((e.x-t.x)**2+(e.y-t.y)**2),l=Math.sqrt((o.x-e.x)**2+(o.y-e.y)**2),m=Math.acos((n**2+a**2-l**2)/(2*n*a))*(t.x-o.x)/-Math.abs(t.x-o.x),r=Math.cos(m)*n,h={x:Math.cos(s)*r+t.x,y:Math.sin(s)*r+t.y},u=Math.sqrt((h.x-o.x)**2+(h.y-o.y)**2);if(u==i)return[h];if(u<i){const s=Math.atan2(h.y-o.y,h.x-o.x),m=Math.acos(u/i),r={x:Math.cos(s+m)*i+o.x,y:Math.sin(s+m)*i+o.y},c={x:Math.cos(s-m)*i+o.x,y:Math.sin(s-m)*i+o.y},y={a:Math.sqrt((r.x-t.x)**2+(r.y-t.y)**2),b:Math.sqrt((r.x-e.x)**2+(r.y-e.y)**2)},d={a:Math.sqrt((c.x-t.x)**2+(c.y-t.y)**2),b:Math.sqrt((c.x-e.x)**2+(c.y-e.y)**2)},x=[];return Math.abs(a-(y.a+y.b))<.01?x.push(r):y.a<y.b?n<=i&&x.push(t):l<=i&&x.push(e),Math.abs(a-(d.a+d.b))<.01?x.push(c):d.a<=d.b?n<=i&&x.push(t):l<=i&&x.push(e),x}return[]}var i=[];for(const o of simulation.sight.intersectMap)for(var s=0;s<o.vertices.length;s++){const m=o.vertices[s],r=Math.atan2(m.y-t.y,m.x-t.x),h={x:Math.cos(r+Math.PI)+m.x,y:Math.sin(r+Math.PI)+m.y};if(0==Matter.Query.ray(map,t,h).length){var n=Math.sqrt((m.x-t.x)**2+(m.y-t.y)**2),a={x:m.x,y:m.y};if(n>e){const o=Math.atan2(m.y-t.y,m.x-t.x);a={x:Math.cos(o)*e+t.x,y:Math.sin(o)*e+t.y},n=e}(y=simulation.sight.getIntersection(t,a,map)).dist>=n&&(y={x:a.x,y:a.y,dist:n}),i.push(y);var l=Math.atan2(m.y-t.y,m.x-t.x);a={x:Math.cos(l+.001)*e+t.x,y:Math.sin(l+.001)*e+t.y},(y=simulation.sight.getIntersection(t,a,map)).dist>=e&&(y={x:a.x,y:a.y,dist:e}),i.push(y),l=Math.atan2(m.y-t.y,m.x-t.x),a={x:Math.cos(l-.001)*e+t.x,y:Math.sin(l-.001)*e+t.y},(y=simulation.sight.getIntersection(t,a,map)).dist>=e&&(y={x:a.x,y:a.y,dist:e}),i.push(y)}}const m=function(t,e,i){var s=[];for(const a of i){for(var n=0;n<a.vertices.length-1;n++)s.push(o(a.vertices[n],a.vertices[n+1],t,e));s.push(o(a.vertices[a.vertices.length-1],a.vertices[0],t,e))}const a=[];for(const t of s)2==t.length&&a.push(t);return a}(t,e,map),r=[];for(const o of m)for(const i of o){const o=Math.sqrt((i.x-t.x)**2+(i.y-t.y)**2),s=Math.atan2(i.y-t.y,i.x-t.x),n={x:Math.cos(s+Math.PI)+i.x,y:Math.sin(s+Math.PI)+i.y};Math.abs(o-e)<1&&0==Matter.Query.ray(map,t,n).length&&r.push(i)}for(s=0;s<r.length;s++){const o=r[s];var h=s+1;h==r.length&&(h=0);const n=r[h],l=Math.atan2(o.y-t.y,o.x-t.x),m=Math.atan2(n.y-t.y,n.x-t.x);var u;if(Math.abs(l)>Math.PI/2&&Math.abs(m)>Math.PI/2&&l/Math.abs(l)!=m/Math.abs(m)){var c;c=0==(u=((Math.PI-Math.abs(l))*(l/Math.abs(l))+(Math.PI-Math.abs(m))*(m/Math.abs(m)))/2)?1:u/Math.abs(u),u=Math.PI*c-u*c,test=!0}else u=(l+m)/2;a={x:Math.cos(u)*e+t.x,y:Math.sin(u)*e+t.y};var y=simulation.sight.getIntersection(t,a,map);i.push(o),y.dist<=e&&i.push({x:y.x,y:y.y})}return i.sort((e,o)=>Math.atan2(e.y-t.y,e.x-t.x)-Math.atan2(o.y-t.y,o.x-t.x)),i}},draw:{mapPath:null,setPaths(){simulation.draw.mapPath=new Path2D;for(let t=0,e=map.length;t<e;++t){let e=map[t].vertices;simulation.draw.mapPath.moveTo(e[0].x,e[0].y);for(let t=1;t<e.length;t+=1)simulation.draw.mapPath.lineTo(e[t].x,e[t].y);simulation.draw.mapPath.lineTo(e[0].x,e[0].y)}},lineOfSightPrecalculation(){simulation.sight.intersectMap=[];for(var t=0;t<map.length;t++){const i=map[t],s=[],n=[...map].slice(0,t).concat([...map].slice(t+1));for(var e=0;e<i.vertices.length-1;e++){var o=simulation.sight.getIntersections(i.vertices[e],i.vertices[e+1],n);s.push(i.vertices[e]);for(const t of o)s.push({x:t.x,y:t.y})}o=simulation.sight.getIntersections(i.vertices[i.vertices.length-1],i.vertices[0],n),s.push(i.vertices[i.vertices.length-1]);for(const t of o)s.push({x:t.x,y:t.y});simulation.sight.intersectMap.push({vertices:s})}},drawMapPath(){},drawMapPathDefault(){ctx.fillStyle=color.map,ctx.fill(simulation.draw.mapPath)},drawMapSight(){if(!simulation.isTimeSkipping){const i=m.pos,s=4e3,n=simulation.sight.circleLoS(i,s);if(n.length){ctx.beginPath(),ctx.moveTo(n[0].x,n[0].y);for(var t=1;t<n.length;t++){var e=Math.sqrt((n[t-1].x-i.x)**2+(n[t-1].y-i.y)**2),o=Math.sqrt((n[t].x-i.x)**2+(n[t].y-i.y)**2);if(Math.abs(e-s)<1&&Math.abs(o-s)<1){const e=Math.atan2(n[t-1].y-i.y,n[t-1].x-i.x),o=Math.atan2(n[t].y-i.y,n[t].x-i.x);ctx.arc(i.x,i.y,s,e,o)}else ctx.lineTo(n[t].x,n[t].y)}if(o=Math.sqrt((n[0].x-i.x)**2+(n[0].y-i.y)**2),e=Math.sqrt((n[n.length-1].x-i.x)**2+(n[n.length-1].y-i.y)**2),Math.abs(e-s)<1&&Math.abs(o-s)<1){const t=Math.atan2(n[n.length-1].y-i.y,n[n.length-1].x-i.x),e=Math.atan2(n[0].y-i.y,n[0].x-i.x);ctx.arc(i.x,i.y,s,t,e)}else ctx.lineTo(n[0].x,n[0].y);ctx.strokeStyle="#000",ctx.lineWidth=5,ctx.stroke(simulation.draw.mapPath),ctx.globalCompositeOperation="destination-in",ctx.fillStyle="#000",ctx.fill(),ctx.globalCompositeOperation="source-over",ctx.clip()}}},body(){ctx.beginPath();for(let t=0,e=body.length;t<e;++t){let e=body[t].vertices;ctx.moveTo(e[0].x,e[0].y);for(let t=1;t<e.length;t++)ctx.lineTo(e[t].x,e[t].y);ctx.lineTo(e[0].x,e[0].y)}ctx.lineWidth=2,ctx.fillStyle=color.block,ctx.fill(),ctx.strokeStyle=color.blockS,ctx.stroke()},cons(){ctx.beginPath();for(let t=0,e=cons.length;t<e;++t)ctx.moveTo(cons[t].pointA.x,cons[t].pointA.y),ctx.lineTo(cons[t].bodyB.position.x+cons[t].pointB.x,cons[t].bodyB.position.y+cons[t].pointB.y);for(let t=0,e=consBB.length;t<e;++t)ctx.moveTo(consBB[t].bodyA.position.x,consBB[t].bodyA.position.y),ctx.lineTo(consBB[t].bodyB.position.x,consBB[t].bodyB.position.y);ctx.lineWidth=2,ctx.strokeStyle="rgba(0,0,0,0.15)",ctx.stroke()},wireFrame(){const t=Composite.allBodies(engine.world);ctx.beginPath();for(let e=0;e<t.length;++e){let o=t[e].vertices;ctx.moveTo(o[0].x,o[0].y);for(let t=1;t<o.length;t++)ctx.lineTo(o[t].x,o[t].y);ctx.lineTo(o[0].x,o[0].y)}ctx.lineWidth=1,ctx.strokeStyle="#000",ctx.stroke()},testing(){ctx.beginPath();let t=jumpSensor.vertices;ctx.moveTo(t[0].x,t[0].y);for(let e=1;e<t.length;++e)ctx.lineTo(t[e].x,t[e].y);ctx.lineTo(t[0].x,t[0].y),ctx.fillStyle="rgba(255, 0, 0, 0.5)",ctx.fill(),ctx.beginPath(),t=playerBody.vertices,ctx.moveTo(t[0].x,t[0].y);for(let e=1;e<t.length;++e)ctx.lineTo(t[e].x,t[e].y);ctx.lineTo(t[0].x,t[0].y),ctx.fillStyle="rgba(0, 255, 255, 0.25)",ctx.fill(),ctx.beginPath(),t=playerHead.vertices,ctx.moveTo(t[0].x,t[0].y);for(let e=1;e<t.length;++e)ctx.lineTo(t[e].x,t[e].y);ctx.lineTo(t[0].x,t[0].y),ctx.fillStyle="rgba(255, 255, 0, 0.4)",ctx.fill(),ctx.beginPath(),t=headSensor.vertices,ctx.moveTo(t[0].x,t[0].y);for(let e=1;e<t.length;++e)ctx.lineTo(t[e].x,t[e].y);ctx.lineTo(t[0].x,t[0].y),ctx.fillStyle="rgba(0, 0, 255, 0.25)",ctx.fill()},font:{word:new Path2D,xPos:0,yPos:0,drawString(t,e,o){this.xPos=e,this.yPos=o;const i=t.toLowerCase().split("");i.forEach((t,e)=>{t>="a"&&t<="z"&&this[t]?(this[t](),e<i.length-1&&(this.xPos+=29)):" "===t&&(this.xPos+=29)})},a(){this.word.moveTo(this.xPos-1,this.yPos+40),this.word.lineTo(this.xPos+10,this.yPos+0),this.word.lineTo(this.xPos+21,this.yPos+40),this.word.moveTo(this.xPos+5,this.yPos+20),this.word.lineTo(this.xPos+15,this.yPos+20)},b(){this.word.moveTo(this.xPos+1,this.yPos),this.word.lineTo(this.xPos+1,this.yPos+40),this.word.moveTo(this.xPos+1,this.yPos),this.word.bezierCurveTo(this.xPos+22,this.yPos,this.xPos+22,this.yPos+20,this.xPos+1,this.yPos+20),this.word.moveTo(this.xPos+1,this.yPos+20),this.word.bezierCurveTo(this.xPos+25,this.yPos+20,this.xPos+25,this.yPos+40,this.xPos+1,this.yPos+40)},c(){const t=.2*Math.PI,e=this.xPos+11+11*Math.cos(t),o=this.yPos+20+20*Math.sin(t);this.word.moveTo(e,o),this.word.ellipse(this.xPos+11,this.yPos+20,11,20,0,t,1.8*Math.PI)},d(){this.word.moveTo(this.xPos+0,this.yPos),this.word.lineTo(this.xPos+0,this.yPos+40),this.word.arcTo(this.xPos+19,this.yPos+40,this.xPos+19,this.yPos+20,20),this.word.arcTo(this.xPos+19,this.yPos,this.xPos+1,this.yPos,20)},e(){this.word.moveTo(this.xPos+19,this.yPos+0),this.word.lineTo(this.xPos+0,this.yPos+0),this.word.lineTo(this.xPos+0,this.yPos+20),this.word.lineTo(this.xPos+17,this.yPos+20),this.word.moveTo(this.xPos+0,this.yPos+20),this.word.lineTo(this.xPos+0,this.yPos+40),this.word.lineTo(this.xPos+19,this.yPos+40)},f(){this.word.moveTo(this.xPos+0,this.yPos+0),this.word.lineTo(this.xPos+0,this.yPos+40),this.word.moveTo(this.xPos+0,this.yPos+0),this.word.lineTo(this.xPos+19,this.yPos+0),this.word.moveTo(this.xPos+0,this.yPos+20),this.word.lineTo(this.xPos+16,this.yPos+20)},g(){this.word.moveTo(this.xPos+17,this.yPos+6),this.word.bezierCurveTo(this.xPos+17,this.yPos+2,this.xPos+14,this.yPos+0,this.xPos+8,this.yPos+0),this.word.bezierCurveTo(this.xPos+3,this.yPos+0,this.xPos+0,this.yPos+4,this.xPos+0,this.yPos+20),this.word.bezierCurveTo(this.xPos+0,this.yPos+36,this.xPos+3,this.yPos+40,this.xPos+8,this.yPos+40),this.word.bezierCurveTo(this.xPos+14,this.yPos+40,this.xPos+17,this.yPos+36,this.xPos+17,this.yPos+30),this.word.lineTo(this.xPos+17,this.yPos+20),this.word.lineTo(this.xPos+10,this.yPos+20)},h(){this.word.moveTo(this.xPos+0,this.yPos+0),this.word.lineTo(this.xPos+0,this.yPos+40),this.word.moveTo(this.xPos+0,this.yPos+20),this.word.lineTo(this.xPos+17,this.yPos+20),this.word.lineTo(this.xPos+17,this.yPos+40),this.word.moveTo(this.xPos+17,this.yPos+20),this.word.lineTo(this.xPos+17,this.yPos+0)},i(){this.word.moveTo(this.xPos+0,this.yPos+0),this.word.lineTo(this.xPos+19,this.yPos+0),this.word.moveTo(this.xPos+9,this.yPos+0),this.word.lineTo(this.xPos+9,this.yPos+40),this.word.moveTo(this.xPos+0,this.yPos+40),this.word.lineTo(this.xPos+19,this.yPos+40)},j(){this.word.moveTo(this.xPos+18,this.yPos+0),this.word.lineTo(this.xPos+18,this.yPos+30),this.word.bezierCurveTo(this.xPos+18,this.yPos+37,this.xPos+14,this.yPos+40,this.xPos+8,this.yPos+40),this.word.bezierCurveTo(this.xPos+2,this.yPos+40,this.xPos+0,this.yPos+37,this.xPos+0,this.yPos+30)},k(){this.word.moveTo(this.xPos+0,this.yPos+0),this.word.lineTo(this.xPos+0,this.yPos+40),this.word.moveTo(this.xPos+0,this.yPos+20),this.word.lineTo(this.xPos+19,this.yPos+0),this.word.moveTo(this.xPos+4,this.yPos+17),this.word.lineTo(this.xPos+19,this.yPos+40)},l(){this.word.moveTo(this.xPos+1,this.yPos+0),this.word.lineTo(this.xPos+1,this.yPos+40),this.word.lineTo(this.xPos+20,this.yPos+40)},m(){this.word.moveTo(this.xPos+0,this.yPos+40),this.word.lineTo(this.xPos+0,this.yPos+0),this.word.lineTo(this.xPos+9,this.yPos+20),this.word.lineTo(this.xPos+17,this.yPos+0),this.word.lineTo(this.xPos+17,this.yPos+40)},n(){this.word.moveTo(this.xPos+0,this.yPos+40),this.word.lineTo(this.xPos+0,this.yPos+0),this.word.lineTo(this.xPos+17,this.yPos+40),this.word.lineTo(this.xPos+17,this.yPos+0)},o(){this.word.moveTo(this.xPos+20,this.yPos+20),this.word.ellipse(this.xPos+9,this.yPos+20,11,20,0,0,2*Math.PI)},p(){this.word.moveTo(this.xPos+0,this.yPos+40),this.word.lineTo(this.xPos+0,this.yPos+0),this.word.lineTo(this.xPos+10,this.yPos+0),this.word.bezierCurveTo(this.xPos+15,this.yPos+0,this.xPos+18,this.yPos+3,this.xPos+18,this.yPos+10),this.word.bezierCurveTo(this.xPos+18,this.yPos+17,this.xPos+15,this.yPos+20,this.xPos+10,this.yPos+20),this.word.lineTo(this.xPos+0,this.yPos+20)},q(){this.word.moveTo(this.xPos+20,this.yPos+20),this.word.ellipse(this.xPos+9,this.yPos+20,11,20,0,0,2*Math.PI),this.word.moveTo(this.xPos+12,this.yPos+28),this.word.lineTo(this.xPos+20,this.yPos+40)},r(){this.word.moveTo(this.xPos+0,this.yPos+40),this.word.lineTo(this.xPos+0,this.yPos+0),this.word.lineTo(this.xPos+10,this.yPos+0),this.word.bezierCurveTo(this.xPos+15,this.yPos+0,this.xPos+18,this.yPos+3,this.xPos+18,this.yPos+10),this.word.bezierCurveTo(this.xPos+18,this.yPos+17,this.xPos+15,this.yPos+20,this.xPos+10,this.yPos+20),this.word.lineTo(this.xPos+0,this.yPos+20),this.word.moveTo(this.xPos+8,this.yPos+20),this.word.lineTo(this.xPos+18,this.yPos+40)},s(){this.word.moveTo(this.xPos+18,this.yPos+6),this.word.bezierCurveTo(this.xPos+18,this.yPos+2,this.xPos+15,this.yPos+0,this.xPos+9,this.yPos+0),this.word.bezierCurveTo(this.xPos+3,this.yPos+0,this.xPos+0,this.yPos+3,this.xPos+0,this.yPos+8),this.word.bezierCurveTo(this.xPos+0,this.yPos+13,this.xPos+3,this.yPos+16,this.xPos+9,this.yPos+18),this.word.bezierCurveTo(this.xPos+15,this.yPos+20,this.xPos+18,this.yPos+24,this.xPos+18,this.yPos+32),this.word.bezierCurveTo(this.xPos+18,this.yPos+37,this.xPos+15,this.yPos+40,this.xPos+9,this.yPos+40),this.word.bezierCurveTo(this.xPos+3,this.yPos+40,this.xPos+0,this.yPos+37,this.xPos+0,this.yPos+34)},t(){this.word.moveTo(this.xPos-1,this.yPos+0),this.word.lineTo(this.xPos+21,this.yPos+0),this.word.moveTo(this.xPos+10,this.yPos+0),this.word.lineTo(this.xPos+10,this.yPos+40)},u(){this.word.moveTo(this.xPos+0,this.yPos+0),this.word.lineTo(this.xPos+0,this.yPos+30),this.word.bezierCurveTo(this.xPos+0,this.yPos+37,this.xPos+3,this.yPos+40,this.xPos+8,this.yPos+40),this.word.bezierCurveTo(this.xPos+14,this.yPos+40,this.xPos+17,this.yPos+37,this.xPos+17,this.yPos+30),this.word.lineTo(this.xPos+17,this.yPos+0)},v(){this.word.moveTo(this.xPos+0,this.yPos+0),this.word.lineTo(this.xPos+8,this.yPos+40),this.word.lineTo(this.xPos+17,this.yPos+0)},w(){this.word.moveTo(this.xPos+0,this.yPos+0),this.word.lineTo(this.xPos+0,this.yPos+40),this.word.lineTo(this.xPos+8,this.yPos+20),this.word.lineTo(this.xPos+17,this.yPos+40),this.word.lineTo(this.xPos+17,this.yPos+0)},x(){this.word.moveTo(this.xPos+0,this.yPos+0),this.word.lineTo(this.xPos+19,this.yPos+40),this.word.moveTo(this.xPos+19,this.yPos+0),this.word.lineTo(this.xPos+0,this.yPos+40)},y(){this.word.moveTo(this.xPos+-1,this.yPos+0),this.word.lineTo(this.xPos+10,this.yPos+20),this.word.lineTo(this.xPos+21,this.yPos+0),this.word.moveTo(this.xPos+10,this.yPos+20),this.word.lineTo(this.xPos+10,this.yPos+40)},z(){this.word.moveTo(this.xPos+0,this.yPos+0),this.word.lineTo(this.xPos+17,this.yPos+0),this.word.lineTo(this.xPos+0,this.yPos+40),this.word.lineTo(this.xPos+17,this.yPos+40)}}},checkLineIntersection(t,e,o,i){let s,n,a,l,m,r={x:null,y:null,onLine1:!1,onLine2:!1};return s=(i.y-o.y)*(e.x-t.x)-(i.x-o.x)*(e.y-t.y),0==s||(n=t.y-o.y,a=t.x-o.x,l=(i.x-o.x)*n-(i.y-o.y)*a,m=(e.x-t.x)*n-(e.y-t.y)*a,n=l/s,a=m/s,r.x=t.x+n*(e.x-t.x),r.y=t.y+n*(e.y-t.y),n>0&&n<1&&(r.onLine1=!0),a>0&&a<1&&(r.onLine2=!0)),r},constructMouseDownPosition:{x:0,y:0},constructMapString:[],constructCycle(){if(simulation.isConstructionMode&&simulation.constructMouseDownPosition){function t(t,e=25){return Math.ceil(t/e)*e}const e=t(simulation.constructMouseDownPosition.x),o=t(simulation.constructMouseDownPosition.y),i=Math.max(25,t(simulation.mouseInGame.x)-e),s=Math.max(25,t(simulation.mouseInGame.y)-o);ctx.strokeStyle="#000",ctx.lineWidth=2,ctx.strokeRect(e,o,i,s)}},enableConstructMode(){tech.giveTech("motion sickness"),level.isProcedural=!1,level.isVerticalFLipLevel=!1,simulation.isConstructionMode=!0,simulation.isHorizontalFlipped=!1,simulation.isAutoZoom=!1,simulation.zoomScale=2600,simulation.setZoom(),document.body.addEventListener("mouseup",t=>{if(simulation.testing&&simulation.constructMouseDownPosition){function e(t,e=25){return Math.ceil(t/e)*e}const o=e(simulation.constructMouseDownPosition.x),i=e(simulation.constructMouseDownPosition.y),s=Math.max(25,e(simulation.mouseInGame.x)-o),n=Math.max(25,e(simulation.mouseInGame.y)-i);1===t.button?level.isProcedural?simulation.outputMapString(`spawn.randomMob(x+${o}, ${i}, 0);\n`):simulation.outputMapString(`spawn.randomMob(${o}, ${i}, 0);\n`):4===t.button?simulation.outputMapString(`${Math.floor(simulation.constructMouseDownPosition.x)}, ${Math.floor(simulation.constructMouseDownPosition.y)} `):simulation.mouseInGame.x>simulation.constructMouseDownPosition.x&&simulation.mouseInGame.y>simulation.constructMouseDownPosition.y&&(0===t.button?(level.isProcedural?simulation.outputMapString(`spawn.mapRect(x+${o}, ${i}, ${s}, ${n});\n`):level.isVerticalFLipLevel?(console.log("hi"),simulation.outputMapString(`spawn.mapRect(${o}, ${i}, ${s}, ${n});\n`),simulation.outputMapString(`//spawn.mapRect(${o}, ${-i-n}, ${s}, ${n});\n`)):simulation.outputMapString(`spawn.mapRect(${o}, ${i}, ${s}, ${n});\n`),spawn.mapRect(o,i,s,n),len=map.length-1,map[len].collisionFilter.category=cat.map,map[len].collisionFilter.mask=cat.player|cat.map|cat.body|cat.bullet|cat.powerUp|cat.mob|cat.mobBullet,Matter.Body.setStatic(map[len],!0),Composite.add(engine.world,map[len]),simulation.draw.setPaths()):2===t.button&&(level.isProcedural?simulation.outputMapString(`spawn.bodyRect(x+${o}, ${i}, ${s}, ${n});\n`):simulation.outputMapString(`spawn.bodyRect(${o}, ${i}, ${s}, ${n});\n`),spawn.bodyRect(o,i,s,n)))}simulation.constructMouseDownPosition.x=void 0,simulation.constructMouseDownPosition.y=void 0}),simulation.constructMouseDownPosition.x=void 0,simulation.constructMouseDownPosition.y=void 0,document.body.addEventListener("mousedown",t=>{simulation.testing&&(simulation.constructMouseDownPosition.x=simulation.mouseInGame.x,simulation.constructMouseDownPosition.y=simulation.mouseInGame.y)}),document.body.addEventListener("wheel",t=>{t.deltaY>0?simulation.setZoom(simulation.zoomScale/.9):simulation.setZoom(.9*simulation.zoomScale)}),document.body.addEventListener("keydown",t=>{if(simulation.testing&&"KeyZ"===t.code&&simulation.constructMapString.length){if("m"===simulation.constructMapString[simulation.constructMapString.length-1][6]){const t=map.length-1;Matter.Composite.remove(engine.world,map[t]),map.splice(t,1),simulation.draw.setPaths()}else if("b"===simulation.constructMapString[simulation.constructMapString.length-1][6]){const t=body.length-1;Matter.Composite.remove(engine.world,body[t]),body.splice(t,1)}simulation.constructMapString.pop(),simulation.outputMapString()}})},outputMapString(t){t&&simulation.constructMapString.push(t);let e="",o="";for(let t=0,i=simulation.constructMapString.length;t<i;t++)e+=simulation.constructMapString[t],o+="<div>"+simulation.constructMapString[t]+"</div>";console.log(e),navigator.clipboard.writeText(e).then(function(){},function(){console.log("copy failed")}),document.getElementById("construct").innerHTML=o}};