"use strict";function seededShuffle(e){for(var t,n,i=e.length;0!==i;)n=Math.floor(Math.seededRandom(0,i)),t=e[i-=1],e[i]=e[n],e[n]=t;return e}function vertexCollision(e,t,n){let i,s={x:null,y:null,dist2:1/0,who:null,v1:null,v2:null};for(let o=0;o<n.length;o++){let l=n[o];for(let n=0;n<l.length;++n){let o=l[n].vertices;const a=o.length-1;for(let d=0;d<a;d++)if(i=simulation.checkLineIntersection(e,t,o[d],o[d+1]),i.onLine1&&i.onLine2){const t=e.x-i.x,a=e.y-i.y,c=t*t+a*a;c<s.dist2&&(!l[n].mob||l[n].alive)&&(s={x:i.x,y:i.y,dist2:c,who:l[n],v1:o[d],v2:o[d+1]})}if(i=simulation.checkLineIntersection(e,t,o[0],o[a]),i.onLine1&&i.onLine2){const t=e.x-i.x,d=e.y-i.y,c=t*t+d*d;c<s.dist2&&(s={x:i.x,y:i.y,dist2:c,who:l[n],v1:o[0],v2:o[a]})}}}return s}function beforeUnloadEventListener(e){e.preventDefault(),tech.isExitPrompt&&(m.damageDone*=1.25,simulation.inGameConsole("<span class='color-var'>tech</span>.damage *= 1.25 //beforeunload"),Math.random()<.25&&removeEventListener("beforeunload",beforeUnloadEventListener))}Math.hash=e=>{for(var t=0,n=9;t<e.length;)n=Math.imul(n^e.charCodeAt(t++),9**9);return n^n>>>9},window.addEventListener("error",e=>{simulation.inGameConsole(`<strong style='color:red;'>ERROR:</strong> ${e.stack&&e.stack.replace(/\n/g,"<br>")||e.message+` <u>${e.filename}:${e.lineno}</u>`}`)}),document.getElementById("seed").placeholder=Math.initialSeed=String(Math.floor(Date.now()%1e5)),Math.seed=Math.abs(Math.hash(Math.initialSeed)),Math.seededRandom=function(e=0,t=1){return Math.seed=(9301*Math.seed+49297)%233280,e+Math.seed/233280*(t-e)};const cat={player:1,map:16,body:256,bullet:4096,powerUp:65536,mob:1048576,mobBullet:16777216,mobShield:268435456,phased:4294967296};let color={block:"rgba(140,140,140,0.85)",blockS:"#222",map:"#444",bullet:"#000"};function getUrlVars(){let e={};return window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi,function(t,n,i){e[n]=i}),e}window.addEventListener("load",()=>{const e=getUrlVars();if(0!==Object.keys(e).length){openExperimentMenu();for(const t in e){if(e[t]=e[t].replace(/%20/g," "),e[t]=e[t].replace(/%27/g,"'"),e[t]=e[t].replace(/%CE%A8/g,"Î¨"),"field"===t){let n,i=!1;for(let s=0;s<m.fieldUpgrades.length;s++)if(e[t]===m.fieldUpgrades[s].name){n=s,i=!0;break}i&&build.choosePowerUp(n,"field")}if("gun"===t.substring(0,3)){let n,i=!1;for(let s=0;s<b.guns.length;s++)if(e[t]===b.guns[s].name){n=s,i=!0;break}i&&build.choosePowerUp(n,"gun")}if("tech"===t.substring(0,4))for(let n=0;n<tech.tech.length;n++)if(e[t]===tech.tech[n].name){build.choosePowerUp(n,"tech",!0);break}if("molMode"===t){simulation.molecularMode=Number(e[t]);const n=4;m.fieldUpgrades[n].description=m.fieldUpgrades[n].setDescription(),document.getElementById(`field-${n}`).innerHTML=`<div class="card-text">\n                <div class="grid-title"><div class="circle-grid-title field"></div> &nbsp; ${build.nameLink(m.fieldUpgrades[n].name)}</div>\n                ${m.fieldUpgrades[n].description}</div>`}requestAnimationFrame(()=>{build.sortTech("have",!0)})}}else if(localSettings.isTrainingNotAttempted&&localSettings.runCount<30){let e=document.createElementNS("http://www.w3.org/2000/svg","animate");e.setAttribute("id","myAnimation"),e.setAttribute("attributeType","XML"),e.setAttribute("attributeName","fill"),e.setAttribute("values","#5dd;#66f;#5dd"),e.setAttribute("dur","3s"),e.setAttribute("repeatCount","indefinite"),document.getElementById("training-button").appendChild(e),document.getElementById("myAnimation").beginElement()}});const canvas=document.getElementById("canvas"),ctx=canvas.getContext("2d");function setupCanvas(){canvas.width=window.innerWidth,canvas.height=window.innerHeight,canvas.width2=canvas.width/2,canvas.height2=canvas.height/2,ctx.font="25px Arial",ctx.lineJoin="round",ctx.lineCap="round",simulation.setZoom(),simulation.isInvertedVertical&&(ctx.translate(0,canvas.height),ctx.scale(1,-1))}document.body.style.backgroundColor="#fff",document.oncontextmenu=function(){return!1},setupCanvas(),window.onresize=()=>{setupCanvas()};for(let e=0,t=tech.tech.length;e<t;e++)tech.tech[e].link||(tech.tech[e].link=`<a target="_blank" href='https://en.wikipedia.org/w/index.php?search=${encodeURIComponent(tech.tech[e].name).replace(/'/g,"%27")}&title=Special:Search' class="link">${tech.tech[e].name}</a>`);const build={pixelDraw(){let e=0,t=ctx.getImageData(0,0,canvas.width,canvas.height),n=t.data;requestAnimationFrame(function i(){if(e++,!(e%2)){for(let e=0;e<canvas.height;++e)for(let t=0;t<canvas.width;t+=1){const i=4*(e*canvas.width+t);n[i+0]=255-n[i+0],n[i+1]=255-n[i+1],n[i+2]=255-n[i+2]}ctx.putImageData(t,0,0)}simulation.paused&&m.alive&&requestAnimationFrame(i)})},showImages(e){localSettings.isHideImages=!localSettings.isHideImages,localSettings.isAllowed&&localStorage.setItem("localSettings",JSON.stringify(localSettings)),"experiment"===e?build.reset():"pause"===e&&(build.unPauseGrid(),build.pauseGrid()),localSettings.isHideImages?(document.getElementById("choose-grid").classList.add("choose-grid-no-images"),document.getElementById("choose-grid").classList.remove("choose-grid")):(document.getElementById("choose-grid").classList.add("choose-grid"),document.getElementById("choose-grid").classList.remove("choose-grid-no-images")),document.getElementById("show-images").checked=!localSettings.isHideImages},hideHUD(){simulation.isTraining?localSettings.isHideHUD=!1:localSettings.isHideHUD=!localSettings.isHideHUD,localSettings.isAllowed&&localStorage.setItem("localSettings",JSON.stringify(localSettings)),document.getElementById("hide-hud").checked=localSettings.isHideHUD,document.getElementById("hide-hud").classList.toggle("ticked"),simulation.removeEphemera("dmgDefBars",!0),localSettings.isHideHUD||simulation.ephemera.push({name:"dmgDefBars",count:0,do(){if(!(m.cycle%15)){const e=m.defense();m.lastCalculatedDefense!==e&&(document.getElementById("defense-bar").style.width=Math.floor(300*m.maxHealth*(1-e))+"px",m.lastCalculatedDefense=e);const t=tech.damageAdjustments();m.lastCalculatedDamage!==t&&(document.getElementById("damage-bar").style.height=Math.floor(.53*(Math.atan(.25*t-.25)+.25)*canvas.height)+"px",m.lastCalculatedDamage=t)}}})},pauseGrid(){build.generatePauseLeft(),build.generatePauseRight(),document.getElementById("right-HUD").style.display="none",document.getElementById("guns").style.display="none",document.getElementById("field").style.display="none",document.getElementById("health").style.display="none",document.getElementById("health-bg").style.display="none",document.getElementById("defense-bar").style.display="none",document.getElementById("damage-bar").style.display="none",simulation.lastLogTime=m.cycle},generatePauseLeft(){let e,t="";tech.nailBotCount&&(t+=`<br><strong class='color-bot no-box'>nail-bots ${tech.nailBotCount}</strong>`),tech.orbitBotCount&&(t+=`<br><strong class='color-bot no-box'>orbital-bots ${tech.orbitBotCount}</strong>`),tech.boomBotCount&&(t+=`<br><strong class='color-bot no-box'>boom-bots ${tech.boomBotCount}</strong>`),tech.laserBotCount&&(t+=`<br><strong class='color-bot no-box'>laser-bots ${tech.laserBotCount}</strong>`),tech.foamBotCount&&(t+=`<br><strong class='color-bot no-box'>foam-bots ${tech.foamBotCount}</strong>`),tech.soundBotCount&&(t+=`<br><strong class='color-bot no-box'>sound-bots ${tech.soundBotCount}</strong>`),tech.dynamoBotCount&&(t+=`<br><strong class='color-bot no-box'>dynamo-bots ${tech.dynamoBotCount}</strong>`),tech.plasmaBotCount&&(t+=`<br><strong class='color-bot no-box'>plasma-bots ${tech.plasmaBotCount}</strong>`),tech.missileBotCount&&(t+=`<br><strong class='color-bot no-box'>missile-bots ${tech.missileBotCount}</strong>`),e=level.levelsCleared>0&&level.levelsCleared<13?`<br>${spawn.pickList[0]} (<strong class="color-tier">T${spawn.mobTierSpawnOrder[level.levelsCleared-1]}</strong>), ${spawn.pickList[1]} (<strong class="color-tier">T${spawn.mobTierSpawnOrder[level.levelsCleared]}</strong>)<span style="float: right;">mobs ${mob.length}</span>`:"";let n=document.fullscreenElement?`<div><span style="font-size:1.25em;font-weight: 600; float: left;">FULLSCREEN</span> <em style="float: right;color:#ccc;">press ${function(e){return e.replace("Key","").replace("Digit","")}(input.key.fullscreen)} or hold ESC to exit</em></div><br>`:"",i=`<div class="pause-grid-module" style="padding: 8px;">\n<span style="font-size:1.4em;font-weight: 600; float: left;">PAUSED</span> \n<em style="float: right;color:#ccc;">press ${input.key.pause} to resume</em>\n<br>\n${n}\n<button onclick="build.shareURL(false)" class='sort-button' style="font-size:1em;float: right;">copy build URL</button>\n<input onclick="build.hideHUD('settings')" type="checkbox" id="hide-hud" name="hide-hud" ${localSettings.isHideHUD?"checked":""}>\n<label for="hide-hud" title="hide: tech, damage taken, damage, in game console" style="font-size:1.15em;">minimal HUD</label>\n</div>\n\n<div class="pause-grid-module">\n<details id = "simulation-variables-details" style="padding: 0 8px;line-height: 140%;">\n<summary>simulation variables</summary>\n<div class="pause-details">\n<strong class='color-d'>damage</strong> ${tech.damageAdjustments().toPrecision(4)}x\n<span style="float: right;">empty</span>\n<br><strong class='color-defense'>damage taken</strong> ${m.defense().toPrecision(4)}x\n<span style="float: right;">empty</span>\n<br><strong class='color-h'>health</strong> (${level.isHideHealth?"null":(100*m.health).toFixed(0)} / ${(100*m.maxHealth).toFixed(0)})\n<span style="float: right;">${powerUps.research.count} ${powerUps.orb.research()}</span>\n<br><strong class='color-f'>energy</strong> (${(100*m.energy).toFixed(0)} / ${(100*m.maxEnergy).toFixed(0)}) + (${(6e3*m.fieldRegen*level.isReducedRegen).toFixed(0)}/s)\n<span style="float: right;">${tech.totalCount} ${powerUps.orb.tech()}</span>\n<br><strong><em>fire rate</em></strong> ${(1/b.fireCDscale).toFixed(2)}x\n<span style="float: right;">mass ${player.mass.toFixed(1)}</span>\n${m.coupling?"<br><span style = 'font-size:90%;'>"+m.couplingDescription(m.coupling)+`</span> from ${m.coupling.toFixed(0)} ${powerUps.orb.coupling(1)}`:""}\n<br><strong class='color-dup'>duplication</strong> ${(100*tech.duplicationChance()).toFixed(0)}%\n<span style="float: right;"><strong class='color-junk'>JUNK</strong> ${(100*(tech.junkChance+level.junkAdded)).toFixed(0)}%</span>\n${t}\n<br>\n<br> ${level.levelAnnounce()}\n<span style="float: right;">position (${player.position.x.toFixed(0)}, ${player.position.y.toFixed(0)})</span>\n<br>seed ${Math.initialSeed}\n<span style="float: right;">mouse (${simulation.mouseInGame.x.toFixed(0)}, ${simulation.mouseInGame.y.toFixed(0)})</span>\n<br>cycles ${m.cycle-600}\n<span style="float: right;">velocity (${player.velocity.x.toFixed(2)}, ${player.velocity.y.toFixed(2)})</span>\n<br>bullets ${bullet.length}\n<span style="float: right;">power ups ${powerUp.length}</span>\n${e}\n\n${simulation.isCheating?"<br><br><em>lore disabled</em>":""}\n</div>\n</details>\n</div>`;if(i+=`<div class="pause-grid-module card-background" style="height:auto;">\n<details id="difficulty-parameters-details" style="padding: 0 8px;">\n<summary>difficulty parameters</summary>\n<div class="pause-details">\n        ${simulation.difficultyMode>0?'<div class="pause-difficulty-row">spawn higher <strong class="color-tier">TIER</strong> mobs<br>after every <strong>4</strong> levels</div>':" "}\n        ${simulation.difficultyMode>1?"<div class=\"pause-difficulty-row\"><strong>0.5x</strong> <strong class='color-d'>damage</strong><br><strong>2x</strong> <strong class='color-defense'>damage taken</strong></div>":" "}\n        ${simulation.difficultyMode>2?`<div class="pause-difficulty-row">spawn a <strong>2nd boss</strong><br>bosses spawn <strong>fewer</strong> ${powerUps.orb.tech()}</div>`:" "}\n        ${simulation.difficultyMode>3?'<div class="pause-difficulty-row">one mob per level will<br>be from <strong>2</strong> <strong class="color-tier">TIER</strong> higher</div>':" "}\n        ${simulation.difficultyMode>4?'<div class="pause-difficulty-row"><strong>+1</strong> random <strong class="constraint">constraint</strong><br>fewer initial <strong>power ups</strong></div>':" "}\n        ${simulation.difficultyMode>5?"<div class=\"pause-difficulty-row\"><strong>0.5x</strong> <strong class='color-d'>damage</strong><br><strong>2x</strong> <strong class='color-defense'>damage taken</strong></div>":" "}\n        ${simulation.difficultyMode>6?`<div class="pause-difficulty-row"><strong>+1</strong> random <strong class="constraint">constraint</strong><br>fewer ${powerUps.orb.tech()} spawn</div>`:" "}\n</div>\n</details>\n${simulation.difficultyMode>4?`<details id="constraints-details" style="padding: 0 8px;"><summary>active constraints</summary><div class="pause-details"><span class="constraint">${level.constraintDescription1}<br>${level.constraintDescription2}</span></div></details>`:""}\n</div>`,i+=`<div class="pause-grid-module card-background" style="height:auto;">\n<details id = "console-log-details" style="padding: 0 8px;">\n<summary>console log</summary>\n<div class="pause-details">\n    <div class="pause-grid-module" style="    background-color: #e2e9ec;font-size: 0.8em;">${document.getElementById("text-log").innerHTML}</div>\n</div>\n</details>\n</div>`,tech.isPauseSwitchField||simulation.testing){i+='<div class="pause-grid-module" id ="pause-field-previous" style="animation: fieldColorCycle 3s linear infinite alternate; border-top: 1px solid #000;border-bottom: 1px solid #000;">\n                           <div class="grid-title" style="text-align: center;">â <div class="circle-grid field"></div> â</div></div>';i+=`<div class="pause-grid-module card-background" id="pause-field" ${localSettings.isHideImages?'style="height:auto;"':`style="background-image: url('img/field/${m.fieldUpgrades[m.fieldMode].name}${0===m.fieldMode?m.fieldUpgrades[0].imageNumber:""}.webp');"`} >\n                                                    <div class="card-text">\n                                                        <div class="grid-title"><div class="circle-grid-title field"></div> &nbsp; ${build.nameLink(m.fieldUpgrades[m.fieldMode].name)}</div>\n                                                        ${m.fieldUpgrades[m.fieldMode].description}</div> </div>`,i+='<div class="pause-grid-module" id="pause-field-next" style="animation: fieldColorCycle 3s linear infinite alternate;border-bottom: 1px solid #000;">\n                                                    <div class="grid-title" style="text-align: center;">â <div class="circle-grid field"></div> â</div></div>'}else{i+=`<div class="pause-grid-module card-background" id="pause-field" ${localSettings.isHideImages?'style="height:auto;"':`style="background-image: url('img/field/${m.fieldUpgrades[m.fieldMode].name}${0===m.fieldMode?m.fieldUpgrades[0].imageNumber:""}.webp');"`} >\n                                                    <div class="card-text">\n                                                        <div class="grid-title"><div class="circle-grid-title field"></div> &nbsp; ${build.nameLink(m.fieldUpgrades[m.fieldMode].name)}</div>\n                                                        ${m.fieldUpgrades[m.fieldMode].description}</div> </div>`}for(let e=0,t=b.inventory.length;e<t;e++){i+=`<div class="pause-grid-module card-background" ${localSettings.isHideImages?'style="height:auto;"':`style="background-image: url('img/gun/${b.guns[b.inventory[e]].name}.webp');"`} >\n                                                    <div class="card-text">\n                                                        <div class="grid-title"><div class="circle-grid-title gun"></div> &nbsp; ${build.nameLink(b.guns[b.inventory[e]].name)} - <span style="font-size:100%;font-weight: 100;">${b.guns[b.inventory[e]].ammo}</span></div>\n                                                        ${b.guns[b.inventory[e]].descriptionFunction()}</div> </div>`}let s=document.getElementById("pause-grid-left");s.style.display="grid",s.innerHTML=i,requestAnimationFrame(()=>{localSettings.isAllowed&&(document.getElementById("simulation-variables-details").open=localSettings.pauseMenuDetailsOpen[0],document.getElementById("difficulty-parameters-details").open=localSettings.pauseMenuDetailsOpen[1],document.getElementById("console-log-details").open=localSettings.pauseMenuDetailsOpen[2],document.getElementById("constraints-details")&&(document.getElementById("constraints-details").open=localSettings.pauseMenuDetailsOpen[3]))})},generatePauseRight(){let e=`<div class="sort">\n    <button onclick="build.sortTech('guntech')" class='sort-button'>${powerUps.orb.gunTech()}</button>\n    <button onclick="build.sortTech('fieldtech')" class='sort-button'>${powerUps.orb.fieldTech()}</button>\n    <button onclick="build.sortTech('damage')" class='sort-button'><strong class='color-d'>damage</strong></button>\n    <button onclick="build.sortTech('damage taken')" class='sort-button'><strong style="letter-spacing: 1px;font-weight: 100;">dmg taken</strong></button>\n    <button onclick="build.sortTech('heal')" class='sort-button'><strong class='color-h'>heal</strong></button>\n    <button onclick="build.sortTech('energy')" class='sort-button'><strong class='color-f'>energy</strong></button>\n    <input type="search" id="sort-input" style="width: 8em;font-size: 0.6em;color:#000;" placeholder="sort by" />\n    <button onclick="build.sortTech('input')" class='sort-button' style="border-radius: 0em;border: 1.5px #000 solid;font-size: 0.6em;" value="damage">sort</button>\n</div>`;const t=tech.isPauseEjectTech&&!simulation.isChoosing?"pause-eject":"";for(let n=0,i=tech.tech.length;n<i;n++)if(tech.tech[n].count>0){const i=localSettings.isHideImages||tech.tech[n].isJunk||tech.tech[n].isLore?'style="height:auto;"':`style = "background-image: url('img/${tech.tech[n].name}.webp');"`;tech.tech[n].isInstant||(tech.tech[n].isFieldTech?(e+=`<div id="${n}-pause-tech" class="pause-grid-module card-background ${t}" onclick="powerUps.pauseEjectTech(${n})" ${i}>`,e+=build.fieldTechText(n)+"</div>"):tech.tech[n].isGunTech?(e+=`<div id="${n}-pause-tech" class="pause-grid-module card-background ${t}" onclick="powerUps.pauseEjectTech(${n})" ${i}>`,e+=build.gunTechText(n)+"</div>"):tech.tech[n].isSkin?(e+=`<div id="${n}-pause-tech" class="pause-grid-module card-background ${t}" onclick="powerUps.pauseEjectTech(${n})" ${i}>`,e+=build.skinTechText(n)+"</div>"):tech.tech[n].isJunk?(e+=`<div id="${n}-pause-tech" class="pause-grid-module card-background ${t}" onclick="powerUps.pauseEjectTech(${n})" ${i}>`,e+=build.junkTechText(n)+"</div>"):(e+=`<div id="${n}-pause-tech" class="pause-grid-module card-background ${t}" onclick="powerUps.pauseEjectTech(${n})" ${i}>`,e+=build.techText(n)+"</div>"))}else tech.tech[n].isLost&&(e+=`<div class="pause-grid-module" style="text-decoration: line-through; padding-left: 8px; opacity: 0.4;"><div class="grid-title">${tech.tech[n].link}</div>${tech.tech[n].descriptionFunction?tech.tech[n].descriptionFunction():tech.tech[n].description}</div></div>`);const n=document.getElementById("pause-grid-right");n.style.display="grid",n.innerHTML=e,document.getElementById("sort-input").addEventListener("keydown",function(e){"Enter"===e.key&&(requestAnimationFrame(()=>{document.getElementById("sort-input").focus()}),build.sortTech("input"))})},sortTech(e,t=!1){const n=(t,n)=>{let i=(t.descriptionFunction?t.descriptionFunction():t.description).includes(e)||t.name.includes(e),s=(n.descriptionFunction?n.descriptionFunction():n.description).includes(e)||n.name.includes(e);return i&&!s?-1:!i&&s?1:0};"guntech"===e?tech.tech.sort((e,t)=>e.isGunTech&&t.isGunTech?e.allowed()===t.allowed()?0:e.allowed()?-1:1:e.isGunTech&&!t.isGunTech?-1:!e.isGunTech&&t.isGunTech?1:0):"fieldtech"===e?tech.tech.sort((e,t)=>e.isFieldTech&&t.isFieldTech?e.allowed()===t.allowed()?0:e.allowed()?-1:1:e.isFieldTech&&!t.isFieldTech?-1:!e.isFieldTech&&t.isFieldTech?1:0):"allowed"===e||"have"===e?tech.tech.sort((e,t)=>e.allowed()===t.allowed()?0:e.allowed()?-1:1):"heal"===e?tech.tech.sort((e,t)=>e.isHealTech&&t.isHealTech?e.allowed()===t.allowed()?0:e.allowed()?-1:1:e.isHealTech&&!t.isHealTech?-1:!e.isHealTech&&t.isHealTech?1:0):"bot"===e?tech.tech.sort((e,t)=>e.isBotTech&&t.isBotTech?e.allowed()===t.allowed()?0:e.allowed()?-1:1:e.isBotTech&&!t.isBotTech?-1:!e.isBotTech&&t.isBotTech?1:0):"skin"===document.getElementById("sort-input").value?tech.tech.sort((e,t)=>e.isSkin&&t.isSkin?e.allowed()===t.allowed()?0:e.allowed()?-1:1:e.isSkin&&!t.isSkin?-1:!e.isSkin&&t.isSkin?1:0):"junk"===document.getElementById("sort-input").value?tech.tech.sort((e,t)=>e.isJunk&&!t.isJunk?-1:!e.isJunk&&t.isJunk?1:0):"damage"===e||"damage taken"===e||"defense"===e||"energy"===e?tech.tech.sort(n):"input"===e&&(e=document.getElementById("sort-input").value.toLowerCase(),tech.tech.sort(n)),t?(build.populateGrid(),document.getElementById("tech-0").scrollIntoView()):build.generatePauseRight(),document.getElementById("sort-input").value=e,simulation.updateTechHUD()},unPauseGrid(){localSettings.isAllowed&&(document.getElementById("simulation-variables-details")&&(localSettings.pauseMenuDetailsOpen[0]=document.getElementById("simulation-variables-details").open),document.getElementById("difficulty-parameters-details")&&(localSettings.pauseMenuDetailsOpen[1]=document.getElementById("difficulty-parameters-details").open),document.getElementById("console-log-details")&&(localSettings.pauseMenuDetailsOpen[2]=document.getElementById("console-log-details").open),document.getElementById("constraints-details")&&(localSettings.pauseMenuDetailsOpen[3]=document.getElementById("constraints-details").open),localStorage.setItem("localSettings",JSON.stringify(localSettings))),document.getElementById("guns").style.display="inline",document.getElementById("field").style.display="inline",tech.isEnergyHealth?(document.getElementById("health").style.display="none",document.getElementById("health-bg").style.display="none"):level.isHideHealth||(document.getElementById("health").style.display="inline",document.getElementById("health-bg").style.display="inline"),localSettings.isHideHUD||(document.getElementById("right-HUD").style.display="inline",document.getElementById("defense-bar").style.display="inline",document.getElementById("damage-bar").style.display="inline"),document.getElementById("pause-grid-left").style.display="none",document.getElementById("pause-grid-right").style.display="none",document.getElementById("pause-grid-right").style.opacity="1",document.getElementById("pause-grid-left").style.opacity="1",window.scrollTo(0,0)},isExperimentSelection:!1,isExperimentRun:!1,techText:e=>`<div class="card-text" >\n                                <div class="grid-title" ><div class="circle-grid-title tech"></div> &nbsp; ${build.nameLink(tech.tech[e].name)} ${tech.tech[e].count>1?`(${tech.tech[e].count}x)`:""}</div>\n                                ${tech.tech[e].descriptionFunction?tech.tech[e].descriptionFunction():tech.tech[e].description}</div>`,instantTechText:e=>`<div class="card-text" >\n                                <div class="grid-title" > <div class="circle-grid-instant"></div> &nbsp; ${build.nameLink(tech.tech[e].name)} ${tech.tech[e].count>1?`(${tech.tech[e].count}x)`:""}</div>\n                                ${tech.tech[e].descriptionFunction?tech.tech[e].descriptionFunction():tech.tech[e].description}</div>`,skinTechText:e=>`<div class="card-text"> <div class="grid-title">\n                                <span style="position:relative;">\n                                    <div class="circle-grid-skin"></div>\n                                    <div class="circle-grid-skin-eye"></div>\n                                </span> &nbsp; &nbsp; &nbsp; &nbsp; ${build.nameLink(tech.tech[e].name)} ${tech.tech[e].count>1?`(${tech.tech[e].count}x)`:""}</div>\n                                ${tech.tech[e].descriptionFunction?tech.tech[e].descriptionFunction():tech.tech[e].description}</div>`,gunTechText:e=>`<div class="card-text"> <div class="grid-title">\n                                <span style="position:relative;">\n                                    <div class="circle-grid-title tech" style="position:absolute; top:0.12em; left:0;opacity:0.8;"></div>\n                                    <div class="circle-grid-title gun" style="position:absolute; top:0.12em; left:10px; opacity:0.65;"></div>\n                                </span> &nbsp; &nbsp; &nbsp; &nbsp;  &nbsp; ${build.nameLink(tech.tech[e].name)} ${tech.tech[e].count>1?`(${tech.tech[e].count}x)`:""}</div>\n                                ${tech.tech[e].descriptionFunction?tech.tech[e].descriptionFunction():tech.tech[e].description}</div>`,fieldTechText:e=>`<div class="card-text"><div class="grid-title">\n                                <span style="position:relative;">\n                                    <div class="circle-grid-title tech" style="position:absolute; top:0.12em; left:0;opacity:0.8;"></div>\n                                    <div class="circle-grid-title field" style="position:absolute; top:0.12em; left:10px;opacity:0.65;"></div>\n                                </span> &nbsp; &nbsp; &nbsp; &nbsp;  &nbsp; ${build.nameLink(tech.tech[e].name)} ${tech.tech[e].count>1?`(${tech.tech[e].count}x)`:""}</div>\n                                ${tech.tech[e].descriptionFunction?tech.tech[e].descriptionFunction():tech.tech[e].description}</div>`,junkTechText:e=>`<div class="card-text">\n                                <div class="grid-title"><div class="circle-grid-title junk"></div> &nbsp; ${build.nameLink(tech.tech[e].name)} ${tech.tech[e].count>1?`(${tech.tech[e].count}x)`:""}</div>\n                                ${tech.tech[e].descriptionFunction?tech.tech[e].descriptionFunction():tech.tech[e].description}</div>`,choosePowerUp(e,t,n=!1){if("gun"===t){let t=!1;for(let n=0,i=b.inventory.length;n<i;n++)if(b.guns[b.inventory[n]].name===b.guns[e].name){t=!0,document.getElementById("gun-"+b.inventory[n]).classList.remove("build-gun-selected"),b.inventory.splice(n,1),b.guns[e].count=0,b.guns[e].have=!1,b.guns[e].ammo!=1/0&&(b.guns[e].ammo=0),0===b.inventory.length&&(b.activeGun=null,b.inventoryGun=0),simulation.makeGunHUD();break}t||(document.getElementById("gun-"+e).classList.add("build-gun-selected"),b.giveGuns(e))}else if("field"===t){if(m.fieldMode!==e)document.getElementById("field-"+m.fieldMode).classList.remove("build-field-selected"),m.setField(e),document.getElementById("field-"+e).classList.add("build-field-selected"),document.getElementById("tech-150").focus();else if(4===m.fieldMode){const e=4;simulation.molecularMode++,simulation.molecularMode>e-1&&(simulation.molecularMode=0),m.fieldUpgrades[e].description=m.fieldUpgrades[e].setDescription(),document.getElementById(`field-${e}`).innerHTML=`<div class="card-text">\n                                <div class="grid-title"><div class="circle-grid-title field"></div> &nbsp; ${build.nameLink(m.fieldUpgrades[e].name)}</div>\n                                ${m.fieldUpgrades[e].description}</div>`}}else"tech"===t&&(tech.tech[e].count<tech.tech[e].maxCount?(document.getElementById("tech-"+e).classList.contains("build-tech-selected")||document.getElementById("tech-"+e).classList.add("build-tech-selected"),tech.giveTech(e)):tech.tech[e].isInstant?(document.getElementById("tech-"+e).classList.remove("build-tech-selected"),setTimeout(()=>{document.getElementById("tech-"+e).classList.add("build-tech-selected")},50)):(document.getElementById("tech-"+e).classList.remove("build-tech-selected"),tech.removeTech(e)));build.updateExperimentText(n)},updateExperimentText(e=!1){for(let t=0,n=tech.tech.length;t<n;t++){const n=document.getElementById("tech-"+t);tech.tech[t].isJunk&&!localSettings.isJunkExperiment||tech.tech[t].isLore||(tech.tech[t].allowed()||e||tech.tech[t].count>0?(tech.tech[t].isFieldTech?(n.classList.remove("experiment-grid-hide"),n.innerHTML=build.fieldTechText(t)):tech.tech[t].isGunTech?(n.classList.remove("experiment-grid-hide"),n.innerHTML=build.gunTechText(t)):tech.tech[t].isJunk?n.innerHTML=build.junkTechText(t):tech.tech[t].isSkin?(n.classList.remove("experiment-grid-hide"),n.innerHTML=build.skinTechText(t)):tech.tech[t].isInstant?n.innerHTML=build.instantTechText(t):n.innerHTML=build.techText(t),0===tech.tech[t].count&&n.classList.contains("build-tech-selected")&&n.classList.remove("build-tech-selected"),n.classList.contains("experiment-grid-disabled")&&(n.classList.remove("experiment-grid-disabled"),n.setAttribute("onClick",`javascript: build.choosePowerUp(${t},'tech')`))):(n.innerHTML=`<div class="grid-title">${tech.tech[t].name}</div>${tech.tech[t].descriptionFunction?tech.tech[t].descriptionFunction():tech.tech[t].description}</div>`,n.classList.contains("experiment-grid-disabled")||(n.classList.add("experiment-grid-disabled"),n.onclick=null),tech.tech[t].count>0&&tech.removeTech(t),n.classList.contains("build-tech-selected")&&n.classList.remove("build-tech-selected"),tech.tech[t].isFieldTech?n.innerHTML=build.fieldTechText(t):tech.tech[t].isGunTech?n.innerHTML=build.gunTechText(t):tech.tech[t].isJunk?n.innerHTML=build.junkTechText(t):tech.tech[t].isSkin?n.innerHTML=build.skinTechText(t):tech.tech[t].isInstant?n.innerHTML=build.instantTechText(t):n.innerHTML=build.techText(t)))}},populateGrid(){let e=`\n<div class="experiment-start-box">\n    <div class="sort" style="border: 0px;">\n        <button onclick="build.sortTech('guntech', true)" class='sort-button'>${powerUps.orb.gunTech()}</button>\n        <button onclick="build.sortTech('fieldtech', true)" class='sort-button'>${powerUps.orb.fieldTech()}</button>\n        <button onclick="build.sortTech('damage', true)" class='sort-button'><strong class='color-d'>damage</strong></button>\n        <button onclick="build.sortTech('damage taken', true)" class='sort-button'><strong style="letter-spacing: 1px;font-weight: 100;">dmg taken</strong></button>\n        <button onclick="build.sortTech('heal', true)" class='sort-button'><strong class='color-h'>heal</strong></button>\n        <button onclick="build.sortTech('energy', true)" class='sort-button'><strong class='color-f'>energy</strong></button>\n        <input type="search" id="sort-input" style="width: 7.5em;font-size: 0.6em;color:#000;" placeholder="sort by" />\n        <button onclick="build.sortTech('input', true)" class='sort-button' style="border-radius: 0em;border: 1.5px #000 solid;font-size: 0.6em;" value="damage">sort</button>\n    </div>\n    <div>\n        <div style="display: grid;grid-template-columns: repeat(3, 1fr);row-gap: 10px;column-gap: 25px;grid-auto-rows: minmax(5px, auto);margin:-5px 0px 10px 25px;line-height: 100%;">\n            <div style="grid-column: 1;grid-row: 2 / 4;">\n                <svg class="SVG-button" onclick="build.startExperiment()" width="150" height="70" >\n                    <g stroke='none' fill='#333' stroke-width="2" font-size="65px" font-family="Ariel, sans-serif">\n                        <text x="10" y="57">start</text>\n                    </g>\n                </svg>\n            </div>\n            <div style="grid-column: 2;grid-row: 2;">\n                <svg class="SVG-button" onclick="build.reset()" width="50" height="25">\n                    <g stroke='none' fill='#333' stroke-width="2" font-size="17px" font-family="Ariel, sans-serif">\n                        <text x="5" y="18">reset</text>\n                    </g>\n                </svg>\n            </div>\n            <div style="grid-column: 2;grid-row: 3/4;">\n                <svg class="SVG-button" onclick="build.shareURL(true)" width="52" height="25">\n                    <g stroke='none' fill='#333' stroke-width="2" font-size="17px" font-family="Ariel, sans-serif">\n                        <text x="5" y="18">share</text>\n                    </g>\n                </svg>\n            </div>\n        </div>\n    </div>\n</div>`;const t='style="height:auto; border: none; background-color: transparent;"';for(let n=0,i=m.fieldUpgrades.length;n<i;n++){const i=localSettings.isHideImages?t:`style="background-image: url('img/field/${m.fieldUpgrades[n].name}${0===n?m.fieldUpgrades[0].imageNumber:""}.webp');"`;e+=`<div id="field-${n}" class="experiment-grid-module card-background ${m.fieldMode===n?" build-field-selected":""}" onclick="build.choosePowerUp(${n},'field')" ${i} >\n                            <div class="card-text">\n                                <div class="grid-title"><div class="circle-grid-title field"></div> &nbsp; ${build.nameLink(m.fieldUpgrades[n].name)}</div>\n                                ${m.fieldUpgrades[n].description}</div> </div>`}for(let n=0,i=b.guns.length;n<i;n++){const i=localSettings.isHideImages?t:`style="background-image: url('img/gun/${b.guns[n].name}.webp');"`;e+=`<div id="gun-${n}" class="experiment-grid-module card-background ${b.guns[n].have?" build-gun-selected":""}" onclick="build.choosePowerUp(${n},'gun')" ${i} >\n                        <div class="card-text">\n                            <div class="grid-title"><div class="circle-grid-title gun"></div> &nbsp; ${build.nameLink(b.guns[n].name)}</div>\n                            ${b.guns[n].descriptionFunction()}</div> </div>`}for(let n=0,i=tech.tech.length;n<i;n++)if((!tech.tech[n].isJunk||localSettings.isJunkExperiment)&&!tech.tech[n].isLore){const i=localSettings.isHideImages||tech.tech[n].isJunk?t:`style="background-image: url('img/${tech.tech[n].name}.webp');"`;!(tech.tech[n].allowed()||tech.tech[n].count>0)||tech.tech[n].isInstant&&!localSettings.isJunkExperiment?e+=`<div id="tech-${n}" class="experiment-grid-module card-background experiment-grid-disabled" ${i}>`:e+=`<div id="tech-${n}" class="experiment-grid-module card-background ${tech.tech[n].count?"build-tech-selected":""}" onclick="build.choosePowerUp(${n},'tech')" ${i}>`,tech.tech[n].isFieldTech?e+=build.fieldTechText(n):tech.tech[n].isGunTech?e+=build.gunTechText(n):tech.tech[n].isSkin?e+=build.skinTechText(n):tech.tech[n].isJunk?e+=build.junkTechText(n):tech.tech[n].isInstant?e+=build.instantTechText(n):e+=build.techText(n),e+="</div>"}document.getElementById("experiment-grid").innerHTML=e,document.getElementById("sort-input").addEventListener("keydown",function(e){"Enter"===e.key&&build.sortTech("input",!0)});for(let e=0,t=tech.tech.length;e<t;e++)document.getElementById(`tech-${e}`)&&document.getElementById(`tech-${e}`).setAttribute("data-descr",tech.tech[e].requires);requestAnimationFrame(()=>{document.getElementById("sort-input").focus()})},nameLink:e=>`<a target="_blank" href='https://en.wikipedia.org/w/index.php?search=${encodeURIComponent(e).replace(/' /g,"%27")}&title=Special:Search' class="link">${e}</a>`,reset(){build.isExperimentSelection=!0,build.isExperimentRun=!0,simulation.startGame(!0),build.isExperimentSelection=!0,build.isExperimentRun=!0,simulation.paused=!0,b.inventory=[];for(let e=0,t=b.guns.length;e<t;++e)b.guns[e].count=0,b.guns[e].have=!1,b.guns[e].ammo!=1/0&&(b.guns[e].ammo=0);b.activeGun=null,b.inventoryGun=0,simulation.makeGunHUD(),tech.resetAllTech(),build.populateGrid(),document.getElementById("field-0").classList.add("build-field-selected"),document.getElementById("experiment-grid").style.display="grid"},shareURL(e=!1){let t="https://landgreen.github.io/n-gon/index.html?";t+=`&seed=${Math.initialSeed}`;let n=0;for(let e=0;e<b.inventory.length;e++)b.guns[b.inventory[e]].have&&(t+=`&gun${n}=${encodeURIComponent(b.guns[b.inventory[e]].name.trim())}`,n++);n=0;for(let e=0;e<tech.tech.length;e++)for(let i=0;i<tech.tech[e].count;i++)tech.tech[e].isLore||tech.tech[e].isJunk||tech.tech[e].isInstant||(t+=`&tech${n}=${encodeURIComponent(tech.tech[e].name.trim())}`,n++);t+=`&molMode=${encodeURIComponent(simulation.molecularMode)}`,t+=`&field=${encodeURIComponent(m.fieldUpgrades[m.fieldMode].name.trim())}`,t+=`&difficulty=${simulation.difficultyMode}`,e||simulation.inGameConsole("n-gon build URL copied to clipboard.<br>Paste into browser address bar."),console.log("n-gon build URL copied to clipboard.\nPaste into browser address bar."),console.log(t),navigator.clipboard.writeText(t).then(function(){e&&setTimeout(function(){alert("n-gon build URL copied to clipboard.\nPaste into browser address bar.")},300)},function(){e&&setTimeout(function(){alert("copy failed")},300),console.log("copy failed")})},hasExperimentalMode:!1,startExperiment(){build.isExperimentSelection=!1,b.inventory.length>0&&(b.activeGun=b.inventory[0],b.inventoryGun=0,simulation.makeGunHUD());for(let e=0;e<bullet.length;++e)Matter.Composite.remove(engine.world,bullet[e]);if(bullet=[],build.hasExperimentalMode=!1,!simulation.isCheating){for(let e=0,t=tech.tech.length;e<t;e++)tech.tech[e].count>0&&!tech.tech[e].isLore&&(simulation.isCheating=!0);0===b.inventory.length&&0===m.fieldMode||(simulation.isCheating=!0)}if(simulation.isCheating){lore.techCount=0;for(let e=0,t=tech.tech.length;e<t;e++)tech.tech[e].isLore&&(tech.tech[e].frequency=0,tech.tech[e].count=0);simulation.updateTechHUD()}else{for(let e=0;e<powerUp.length;++e)Matter.Composite.remove(engine.world,powerUp[e]);powerUp=[]}document.body.style.cursor="none",document.body.style.overflow="hidden",document.getElementById("experiment-grid").style.display="none",simulation.paused=!1,requestAnimationFrame(cycle)}};function openExperimentMenu(){document.getElementById("experiment-button").style.display="none",document.getElementById("training-button").style.display="none",document.getElementById("start-button").style.display="none";document.getElementById("experiment-grid").style.display="grid",document.body.style.overflowY="scroll",document.body.style.overflowX="hidden",document.getElementById("info").style.display="none",build.reset()}document.getElementById("experiment-button").addEventListener("click",()=>{openExperimentMenu()});const input={fire:!1,field:!1,up:!1,down:!1,left:!1,right:!1,isPauseKeyReady:!0,reset(){input.fire=!1,input.field=!1,input.up=!1,input.down=!1,input.left=!1,input.fire=!1,input.right=!1},key:{fire:"KeyF",field:"Space",up:"KeyW",down:"KeyS",left:"KeyA",right:"KeyD",pause:"KeyP",fullscreen:"KeyO",nextGun:"KeyE",previousGun:"KeyQ",testing:"KeyT"},setDefault(){input.key={fire:"KeyF",field:"Space",up:"KeyW",down:"KeyS",left:"KeyA",right:"KeyD",pause:"KeyP",fullscreen:"KeyO",nextGun:"KeyE",previousGun:"KeyQ",testing:"KeyT"},input.controlTextUpdate()},controlTextUpdate(){function e(e){return e.replace("Key","").replace("Digit","")}input.key.fire||(input.key.fire="KeyF"),document.getElementById("key-fire").innerHTML=e(input.key.fire),document.getElementById("key-field").innerHTML=e(input.key.field),document.getElementById("key-up").innerHTML=e(input.key.up),document.getElementById("key-down").innerHTML=e(input.key.down),document.getElementById("key-left").innerHTML=e(input.key.left),document.getElementById("key-right").innerHTML=e(input.key.right),document.getElementById("key-pause").innerHTML=e(input.key.pause),document.getElementById("key-fullscreen").innerHTML=e(input.key.fullscreen),document.getElementById("key-next-gun").innerHTML=e(input.key.nextGun),document.getElementById("key-previous-gun").innerHTML=e(input.key.previousGun),document.getElementById("key-testing").innerHTML=e(input.key.testing),document.getElementById("splash-up").innerHTML=e(input.key.up)[0],document.getElementById("splash-down").innerHTML=e(input.key.down)[0],document.getElementById("splash-left").innerHTML=e(input.key.left)[0],document.getElementById("splash-right").innerHTML=e(input.key.right)[0],document.getElementById("splash-pause").innerHTML=e(input.key.pause)[0],document.getElementById("splash-fullscreen").innerHTML=e(input.key.fullscreen)[0],document.getElementById("splash-next-gun").innerHTML=e(input.key.nextGun)[0],document.getElementById("splash-previous-gun").innerHTML=e(input.key.previousGun)[0],localSettings.key=input.key,localSettings.isAllowed&&localStorage.setItem("localSettings",JSON.stringify(localSettings))},focus:null,setTextFocus(){const e="#fff";document.getElementById("key-fire").style.background=e,document.getElementById("key-field").style.background=e,document.getElementById("key-up").style.background=e,document.getElementById("key-down").style.background=e,document.getElementById("key-left").style.background=e,document.getElementById("key-right").style.background=e,document.getElementById("key-pause").style.background=e,document.getElementById("key-fullscreen").style.background=e,document.getElementById("key-next-gun").style.background=e,document.getElementById("key-previous-gun").style.background=e,document.getElementById("key-testing").style.background=e,input.focus&&(input.focus.style.background="rgb(0, 200, 255)"),document.getElementById("key-num").style.background=e},setKeys(e){if(e.code&&"ArrowRight"!==e.code&&"ArrowLeft"!==e.code&&"ArrowUp"!==e.code&&"ArrowDown"!==e.code&&e.code!==input.key.fire&&e.code!==input.key.field&&e.code!==input.key.up&&e.code!==input.key.down&&e.code!==input.key.left&&e.code!==input.key.right&&e.code!==input.key.pause&&e.code!==input.key.nextGun&&e.code!==input.key.previousGun&&e.code!==input.key.testing&&"Digit1"!==e.code&&"Digit2"!==e.code&&"Digit3"!==e.code&&"Digit4"!==e.code&&"Digit5"!==e.code&&"Digit6"!==e.code&&"Digit7"!==e.code&&"Digit8"!==e.code&&"Digit9"!==e.code&&"Digit0"!==e.code&&"Minus"!==e.code&&"Equal"!==e.code)switch(input.focus.id){case"key-fire":input.key.fire=e.code;break;case"key-field":input.key.field=e.code;break;case"key-up":input.key.up=e.code;break;case"key-down":input.key.down=e.code;break;case"key-left":input.key.left=e.code;break;case"key-right":input.key.right=e.code;break;case"key-pause":input.key.pause=e.code;break;case"key-fullscreen":input.key.fullscreen=e.code;break;case"key-next-gun":input.key.nextGun=e.code;break;case"key-previous-gun":input.key.previousGun=e.code;break;case"key-testing":input.key.testing=e.code}input.controlTextUpdate(),input.endKeySensing()},endKeySensing(){window.removeEventListener("keydown",input.setKeys),input.focus=null,input.setTextFocus()}};document.getElementById("control-table").addEventListener("click",e=>{"key-input"===e.target.className&&(input.focus=e.target,input.setTextFocus(),window.addEventListener("keydown",input.setKeys))}),document.getElementById("control-details").addEventListener("toggle",function(){input.controlTextUpdate(),input.endKeySensing()}),document.getElementById("control-reset").addEventListener("click",input.setDefault),window.addEventListener("keyup",function(e){switch(e.code){case input.key.right:case"ArrowRight":input.right=!1;break;case input.key.left:case"ArrowLeft":input.left=!1;break;case input.key.up:case"ArrowUp":input.up=!1;break;case input.key.down:case"ArrowDown":input.down=!1;break;case input.key.fire:input.fire=!1;break;case input.key.field:input.field=!1}}),window.addEventListener("keydown",function(e){switch(e.code){case input.key.right:case"ArrowRight":input.right=!0;break;case input.key.left:case"ArrowLeft":input.left=!0;break;case input.key.up:case"ArrowUp":input.up=!0;break;case input.key.down:case"ArrowDown":input.down=!0;break;case input.key.fire:input.fire=!0;break;case input.key.field:input.field=!0;break;case input.key.nextGun:simulation.nextGun();break;case input.key.previousGun:simulation.previousGun();break;case input.key.pause:input.isPauseKeyReady&&m.alive&&!build.isExperimentSelection&&(input.isPauseKeyReady=!1,setTimeout(function(){input.isPauseKeyReady=!0},300),simulation.isChoosing?build.pauseGrid():simulation.paused?document.activeElement!==document.getElementById("sort-input")&&(build.unPauseGrid(),simulation.paused=!1,document.body.style.cursor="none",requestAnimationFrame(cycle),!document.fullscreenElement||simulation.onTitlePage||build.isExperimentSelection||simulation.isChoosing||(canvas.requestPointerLock(),mouseMove.isPointerLocked=!0,mouseMove.reset())):(simulation.paused=!0,build.pauseGrid(),document.body.style.cursor="auto",document.fullscreenElement&&(document.exitPointerLock(),mouseMove.isPointerLocked=!1,mouseMove.reset()),(tech.isPauseSwitchField||simulation.testing)&&(document.getElementById("pause-field-previous").addEventListener("click",()=>{const e=m.energy;4===m.fieldMode&&simulation.molecularMode>0?(simulation.molecularMode--,m.fieldUpgrades[4].description=m.fieldUpgrades[4].setDescription()):(m.setField(m.fieldMode<2?m.fieldUpgrades.length-1:m.fieldMode-1),4===m.fieldMode&&(simulation.molecularMode=3,m.fieldUpgrades[4].description=m.fieldUpgrades[4].setDescription())),m.energy=e,document.getElementById("pause-field").style.backgroundImage=`url('img/field/${m.fieldUpgrades[m.fieldMode].name}${0===m.fieldMode?Math.floor(10*Math.random()):""}.webp')`,document.getElementById("pause-field").innerHTML=`<div class="card-text"> <div class="grid-title"><div class="circle-grid field"></div> &nbsp; ${build.nameLink(m.fieldUpgrades[m.fieldMode].name)}</div>${m.fieldUpgrades[m.fieldMode].description}</div>`}),document.getElementById("pause-field-next").addEventListener("click",()=>{const e=m.energy;4===m.fieldMode&&simulation.molecularMode<3?(simulation.molecularMode++,m.fieldUpgrades[4].description=m.fieldUpgrades[4].setDescription()):(m.setField(m.fieldMode===m.fieldUpgrades.length-1?1:m.fieldMode+1),4===m.fieldMode&&(simulation.molecularMode=0,m.fieldUpgrades[4].description=m.fieldUpgrades[4].setDescription())),m.energy=e,document.getElementById("pause-field").style.backgroundImage=`url('img/field/${m.fieldUpgrades[m.fieldMode].name}${0===m.fieldMode?Math.floor(10*Math.random()):""}.webp')`,document.getElementById("pause-field").innerHTML=`<div class="card-text"> <div class="grid-title"><div class="circle-grid field"></div> &nbsp; ${build.nameLink(m.fieldUpgrades[m.fieldMode].name)}</div> ${m.fieldUpgrades[m.fieldMode].description}</div>`}))));break;case input.key.fullscreen:document.activeElement!==document.getElementById("sort-input")&&(document.fullscreenElement?(document.exitPointerLock(),mouseMove.isPointerLocked=!1,mouseMove.reset(),document.exitFullscreen(),input.reset()):mouseMove.isMouseInWindow&&document.documentElement.requestFullscreen().then(()=>{input.reset(),simulation.onTitlePage||build.isExperimentSelection||simulation.paused||simulation.isChoosing?document.addEventListener("mousedown",mouseMove.pointerUnlock,{once:!0}):(canvas.requestPointerLock(),mouseMove.isPointerLocked=!0,mouseMove.reset())}).catch(e=>{console.error("Error attempting to enable fullscreen:",e)}));break;case input.key.testing:if(m.alive&&localSettings.loreCount>0&&!simulation.paused&&!build.isExperimentSelection){if(simulation.difficultyMode>5){simulation.inGameConsole("<em>testing mode disabled for this difficulty</em>");break}simulation.testing?(simulation.testing=!1,simulation.loop=simulation.normalLoop,simulation.isConstructionMode&&(document.getElementById("construct").style.display="none"),simulation.inGameConsole("",0)):(simulation.testing=!0,simulation.loop=simulation.testingLoop,simulation.testing&&tech.setCheating(),simulation.isConstructionMode?document.getElementById("construct").style.display="inline":simulation.inGameConsole("<table class=\"pause-table\">\n                <tr>\n                    <td class='key-input-pause'>T</td>\n                    <td class='key-used'><strong>toggle testing</strong></td>\n                </tr>\n                <tr>\n                    <td class='key-input-pause'>R</td>\n                    <td class='key-used'>teleport to mouse</td>\n                </tr>\n                <tr>\n                    <td class='key-input-pause'>F</td>\n                    <td class='key-used'>cycle field</td>\n                </tr>\n                <tr>\n                    <td class='key-input-pause'>G</td>\n                    <td class='key-used'>all guns</td>\n                </tr>\n                <tr>\n                    <td class='key-input-pause'>H</td>\n                    <td class='key-used'>+100% defense</td>\n                </tr>\n                <tr>\n                    <td class='key-input-pause'>B</td>\n                    <td class='key-used'>damage, research</td>\n                </tr>\n                <tr>\n                    <td class='key-input-pause'>N</td>\n                    <td class='key-used'>fill health, energy</td>\n                </tr>\n                <tr>\n                    <td class='key-input-pause'>Y</td>\n                    <td class='key-used'>random tech</td>\n                </tr>\n                <tr>\n                    <td class='key-input-pause'>U</td>\n                    <td class='key-used'>next level</td>\n                </tr>\n                <tr>\n                    <td class='key-input-pause'>J</td>\n                    <td class='key-used'>clear mobs</td>\n                </tr>\n                <tr>\n                    <td class='key-input-pause'>â/+</td>\n                    <td class='key-used'>zoom in / out</td>\n                </tr>\n                <tr>\n                    <td class='key-input-pause'>1-8</td>\n                    <td class='key-used'>spawn things</td>\n                </tr>\n                <tr>\n                    <td class='key-input-pause'>â§X</td>\n                    <td class='key-used'>restart</td>\n                </tr></table>",1/0))}}if(b.inventory.length>1&&!simulation.testing&&!tech.isGunChoice&&!tech.isGunCycle)switch(e.code){case"Digit1":simulation.switchToGunInInventory(0);break;case"Digit2":simulation.switchToGunInInventory(1);break;case"Digit3":simulation.switchToGunInInventory(2);break;case"Digit4":simulation.switchToGunInInventory(3);break;case"Digit5":simulation.switchToGunInInventory(4);break;case"Digit6":simulation.switchToGunInInventory(5);break;case"Digit7":simulation.switchToGunInInventory(6);break;case"Digit8":simulation.switchToGunInInventory(7);break;case"Digit9":simulation.switchToGunInInventory(8);break;case"Digit0":simulation.switchToGunInInventory(9);break;case"Minus":simulation.switchToGunInInventory(10);break;case"Equal":simulation.switchToGunInInventory(11)}if(simulation.testing)switch("X"===e.key&&m.death(),e.key.toLowerCase()){case"=":simulation.zoomTransition(simulation.zoomScale/.9);break;case"-":simulation.zoomTransition(.9*simulation.zoomScale);break;case"`":powerUps.directSpawn(simulation.mouseInGame.x,simulation.mouseInGame.y,"research");break;case"1":powerUps.directSpawn(simulation.mouseInGame.x,simulation.mouseInGame.y,"heal");break;case"2":powerUps.directSpawn(simulation.mouseInGame.x,simulation.mouseInGame.y,"ammo");break;case"3":powerUps.directSpawn(simulation.mouseInGame.x,simulation.mouseInGame.y,"gun");break;case"4":powerUps.directSpawn(simulation.mouseInGame.x,simulation.mouseInGame.y,"field");break;case"5":powerUps.directSpawn(simulation.mouseInGame.x,simulation.mouseInGame.y,"tech");break;case"6":spawn.bodyRect(simulation.mouseInGame.x,simulation.mouseInGame.y,50,50);break;case"7":spawn.randomMobByLevelsCleared(simulation.mouseInGame.x,simulation.mouseInGame.y);break;case"8":spawn.randomLevelBoss(simulation.mouseInGame.x,simulation.mouseInGame.y);break;case"f":const e=m.fieldMode===m.fieldUpgrades.length-1?0:m.fieldMode+1;m.setField(e);break;case"g":b.giveGuns("all",1e3);break;case"h":m.immuneCycle===1/0?m.immuneCycle=0:m.immuneCycle=1/0;break;case"n":m.addHealth(1/0),m.energy=m.maxEnergy;break;case"y":tech.giveTech();break;case"b":tech.isRerollDamage=!0,powerUps.research.changeRerolls(1e6);break;case"r":m.resetHistory(),Matter.Body.setPosition(player,simulation.mouseInGame),Matter.Body.setVelocity(player,{x:0,y:0});for(let e=0;e<bullet.length;e++)bullet[e].botType&&(Matter.Body.setPosition(bullet[e],Vector.add(player.position,{x:250*(Math.random()-.5),y:250*(Math.random()-.5)})),Matter.Body.setVelocity(bullet[e],{x:0,y:0}));break;case"u":level.nextLevel();break;case"j":for(let e=0,t=mob.length;e<t;++e)mob[e].damage(1/0,!0);setTimeout(()=>{for(let e=0,t=mob.length;e<t;++e)mob[e].damage(1/0,!0)},100),setTimeout(()=>{for(let e=0,t=mob.length;e<t;++e)mob[e].damage(1/0,!0)},200);break;case"l":document.getElementById("field").style.display="none",document.getElementById("guns").style.display="none",document.getElementById("right-HUD").style.display="none"}}),document.addEventListener("visibilitychange",()=>{document.hidden&&document.fullscreenElement&&document.exitFullscreen()});const mouseMove={active(e){},default(e){simulation.mouse.x=e.clientX,simulation.mouse.y=e.clientY},pointerLocked(e){simulation.mouse.x+=e.movementX,simulation.mouse.y+=e.movementY,simulation.mouse.x<0&&(simulation.mouse.x=0),simulation.mouse.x>canvas.width&&(simulation.mouse.x=canvas.width),simulation.mouse.y<0&&(simulation.mouse.y=0),simulation.mouse.y>canvas.height&&(simulation.mouse.y=canvas.height)},inverted(e){simulation.mouse.x=e.clientX,simulation.mouse.y=window.innerHeight-e.clientY},invertedPointerLocked(e){simulation.mouse.x+=e.movementX,simulation.mouse.y-=e.movementY,simulation.mouse.x<0&&(simulation.mouse.x=0),simulation.mouse.x>canvas.width&&(simulation.mouse.x=canvas.width),simulation.mouse.y<0&&(simulation.mouse.y=0),simulation.mouse.y>canvas.height&&(simulation.mouse.y=canvas.height)},isPointerLocked:!1,isMouseInWindow:!0,pointerUnlock(){setTimeout(()=>{!document.fullscreenElement||simulation.onTitlePage||build.isExperimentSelection||simulation.paused||(canvas.requestPointerLock(),mouseMove.isPointerLocked=!0,mouseMove.reset())},100)},reset(){simulation.isInvertedVertical?mouseMove.isPointerLocked?mouseMove.active=mouseMove.invertedPointerLocked:mouseMove.active=mouseMove.inverted:mouseMove.isPointerLocked?mouseMove.active=mouseMove.pointerLocked:mouseMove.active=mouseMove.default}};let localSettings;function localStorageCheck(){try{return"localStorage"in window&&null!==window.localStorage}catch(e){return!1}}if(mouseMove.reset(),document.body.addEventListener("mousemove",e=>{mouseMove.active(e)}),document.body.addEventListener("mouseup",e=>{0===e.button?input.fire=!1:2===e.button&&(input.field=!1)}),document.body.addEventListener("mousedown",e=>{0===e.button?input.fire=!0:2===e.button&&(input.field=!0)}),document.body.addEventListener("mouseenter",e=>{1===e.button?input.fire=!0:input.fire=!1,mouseMove.isMouseInWindow=!0}),document.body.addEventListener("mouseleave",e=>{1===e.button?input.fire=!0:input.fire=!1,mouseMove.isMouseInWindow=!1}),document.body.addEventListener("wheel",e=>{simulation.paused||(e.deltaY>0?simulation.nextGun():simulation.previousGun())},{passive:!0}),localStorageCheck()?(localSettings=JSON.parse(localStorage.getItem("localSettings")),localSettings?(console.log("localStorage is enabled"),localSettings.isAllowed=!0,localSettings.isEmpty=!1):(console.log("localStorage is enabled, local settings empty"),localSettings={isAllowed:!0,isEmpty:!0})):(console.log("localStorage is disabled"),localSettings={isAllowed:!1}),localSettings.isAllowed&&!localSettings.isEmpty)console.log("restoring previous settings"),localSettings.key&&localSettings.key.fullscreen?input.key=localSettings.key:input.setDefault(),void 0===localSettings.loreCount&&(localSettings.loreCount=0,localStorage.setItem("localSettings",JSON.stringify(localSettings))),simulation.isCommunityMaps=localSettings.isCommunityMaps,document.getElementById("community-maps").checked=localSettings.isCommunityMaps,void 0===localSettings.fpsCapDefault&&(localSettings.fpsCapDefault="max"),void 0===localSettings.personalSeeds&&(localSettings.personalSeeds=[]),"max"===localSettings.fpsCapDefault?simulation.fpsCapDefault=999999999:simulation.fpsCapDefault=Number(localSettings.fpsCapDefault),document.getElementById("fps-select").value=localSettings.fpsCapDefault,localSettings.banList||(localSettings.banList=""),0!==localSettings.banList.length&&"undefined"!==localSettings.banList||(localSettings.banList="",localStorage.setItem("localSettings",JSON.stringify(localSettings))),document.getElementById("banned").value=localSettings.banList,localSettings.isLoreDoesNotNeedReset||(localSettings.isLoreDoesNotNeedReset=!0,localSettings.loreCount=0,localSettings.isAllowed&&localStorage.setItem("localSettings",JSON.stringify(localSettings))),void 0===localSettings.isHideImages&&(localSettings.isHideImages=!0),document.getElementById("show-images").checked=!localSettings.isHideImages,void 0===localSettings.isHideHUD&&(localSettings.isHideHUD=!0),document.getElementById("hide-hud").checked=localSettings.isHideHUD,void 0===localSettings.difficultyCompleted&&(localSettings.difficultyCompleted=[null,!1,!1,!1,!1,!1,!1,!1],localStorage.setItem("localSettings",JSON.stringify(localSettings))),void 0===localSettings.difficultyMode&&(localSettings.difficultyMode="2"),simulation.difficultyMode=localSettings.difficultyMode,lore.setTechGoal(),void 0===localSettings.pauseMenuDetailsOpen&&(localSettings.pauseMenuDetailsOpen=[!0,!1,!1,!0],localStorage.setItem("localSettings",JSON.stringify(localSettings)));else{console.log("setting default localSettings");const e=localSettings.isAllowed;localSettings={banList:"",isAllowed:e,personalSeeds:[],isJunkExperiment:!1,isCommunityMaps:!1,difficultyMode:"2",difficultyCompleted:[null,!1,!1,!1,!1,!1,!1,!1],fpsCapDefault:"max",runCount:0,isTrainingNotAttempted:!0,levelsClearedLastGame:0,loreCount:0,isLoreDoesNotNeedReset:!1,isHuman:!1,key:void 0,isHideImages:!0,isHideHUD:!1,pauseMenuDetailsOpen:[!0,!1,!1,!0]},input.setDefault(),localSettings.isAllowed&&localStorage.setItem("localSettings",JSON.stringify(localSettings)),document.getElementById("community-maps").checked=localSettings.isCommunityMaps,simulation.isCommunityMaps=localSettings.isCommunityMaps,document.getElementById("show-images").checked=!localSettings.isHideImages,document.getElementById("fps-select").value=localSettings.fpsCapDefault,document.getElementById("banned").value=localSettings.banList}document.getElementById("control-testing").style.visibility=0===localSettings.loreCount?"hidden":"visible",input.controlTextUpdate(),document.getElementById("fps-select").addEventListener("input",()=>{let e=document.getElementById("fps-select").value;simulation.fpsCapDefault="max"===e?999999999:Number(e),localSettings.fpsCapDefault=e,localSettings.isAllowed&&localStorage.setItem("localSettings",JSON.stringify(localSettings))}),document.getElementById("banned").addEventListener("input",()=>{localSettings.banList=document.getElementById("banned").value,localSettings.isAllowed&&localStorage.setItem("localSettings",JSON.stringify(localSettings))}),document.getElementById("community-maps").addEventListener("input",()=>{simulation.isCommunityMaps=document.getElementById("community-maps").checked,localSettings.isCommunityMaps=simulation.isCommunityMaps,localSettings.isAllowed&&localStorage.setItem("localSettings",JSON.stringify(localSettings))}),document.getElementById("updates").addEventListener("toggle",function(){let e='<pre><strong>n-gon</strong>: <a href="https://github.com/landgreen/n-gon/blob/master/todo.txt">todo list</a> and complete <a href="https://github.com/landgreen/n-gon/commits/master">change-log</a><hr>';var t,n,i,s;document.getElementById("updates-div").innerHTML=e,t="https://api.github.com/repos/landgreen/n-gon/commits",n=function(t){for(let n=0,i=20;n<i;n++)e+="<strong>"+t[n].commit.author.date.substr(0,10)+"</strong> - ",e+=t[n].commit.message,n<i-1&&(e+="<hr>");e+='</pre><hr><em>complete <a href="https://github.com/landgreen/n-gon/commits/master">change-log</a></em>',document.getElementById("updates-div").innerHTML=e.replace(/\n/g,"<br />")},i=function(e){console.error(e)},(s=new XMLHttpRequest).onreadystatechange=function(){s.readyState===XMLHttpRequest.DONE&&(200===s.status?n&&n(JSON.parse(s.responseText)):i&&i(s))},s.open("GET",t,!0),s.send()});const sound={tone(e,t=1e3,n=.05){const i=new(window.AudioContext||window.webkitAudioContext),s=i.createOscillator(),o=i.createGain();o.gain.value=n,s.connect(o),o.connect(i.destination),s.type="sine",s.frequency.value=e,s.start(),setTimeout(()=>{i.suspend(),i.close()},t)},portamento(e,t=1e3,n=10,i=.05){const s=new(window.AudioContext||window.webkitAudioContext),o=s.createOscillator(),l=s.createGain();l.gain.value=i,o.connect(l),l.connect(s.destination),o.type="sine",o.frequency.value=e,o.start();for(let i=0,l=.1*t;i<l;i++)o.frequency.setValueAtTime(e+i*n,s.currentTime+.01*i);setTimeout(()=>{s.suspend(),s.close()},t)}};function cycle(){simulation.paused||requestAnimationFrame(cycle);const e=Date.now(),t=e-simulation.then;t>simulation.fpsInterval&&(simulation.then=e-t%simulation.fpsInterval,simulation.cycle++,m.cycle++,simulation.clearNow&&(simulation.clearNow=!1,simulation.clearMap(),level.start()),simulation.loop())}localSettings.isHideImages?document.getElementById("choose-grid").classList.add("choose-grid-no-images"):(addEventListener("load",()=>{let e=new Array;for(let t=0,n=b.guns.length;t<n;t++)e.push("img/gun/"+b.guns[t].name+".webp");for(let t=1,n=m.fieldUpgrades.length;t<n;t++)e.push("img/field/"+m.fieldUpgrades[t].name+".webp");for(let t=0,n=tech.tech.length;t<n;t++)tech.tech[t].isJunk||tech.tech[t].isLore||e.push("img/"+tech.tech[t].name+".webp");let t=new Array;for(let n=0;n<e.length;n++)t[n]=new Image,t[n].src=e[n]}),document.getElementById("choose-grid").classList.add("choose-grid")),simulation.loop=simulation.normalLoop;