let bullet=[];const b={gravity:6e-4,activeGun:null,inventoryGun:0,inventory:[],setFireMethod(){tech.isFireMoveLock?b.fire=b.fireFloat:tech.isAlwaysFire?b.fire=b.fireAlwaysFire:b.fire=b.fireNormal},fire(){},fireNormal(){b.inventory.length&&null!==b.activeGun&&void 0!==b.activeGun&&(input.fire&&m.fireCDcycle<m.cycle&&(!input.field||m.fieldFire)&&(b.guns[b.activeGun].ammo>0?b.fireWithAmmo():b.outOfAmmo(),m.holdingTarget&&m.drop()),b.guns[b.activeGun].do())},fireNotMove(){b.inventory.length&&null!==b.activeGun&&void 0!==b.activeGun&&(input.fire&&m.fireCDcycle<m.cycle&&(!input.field||m.fieldFire)&&player.speed<2.5&&m.onGround&&Math.abs(m.yOff-m.yOffGoal)<1&&(b.guns[b.activeGun].ammo>0?b.fireWithAmmo():b.outOfAmmo(),m.holdingTarget&&m.drop()),b.guns[b.activeGun].do())},fireAlwaysFire(){b.inventory.length&&null!==b.activeGun&&void 0!==b.activeGun&&(m.fireCDcycle<m.cycle&&player.speed<.5&&m.onGround&&Math.abs(m.yOff-m.yOffGoal)<1&&(b.guns[b.activeGun].ammo>0&&b.fireWithAmmo(),m.holdingTarget&&m.drop()),b.guns[b.activeGun].do())},fireFloat(){b.inventory.length&&null!==b.activeGun&&void 0!==b.activeGun&&(!input.fire||input.field&&!m.fieldFire||(m.fireCDcycle<m.cycle&&(b.guns[b.activeGun].ammo>0?b.fireWithAmmo():b.outOfAmmo(),m.holdingTarget&&m.drop()),Matter.Body.setVelocity(player,{x:0,y:-55*player.mass*simulation.g}),player.force.x=0,player.force.y=0),b.guns[b.activeGun].do())},fireWithAmmo(){b.guns[b.activeGun].fire(),tech.crouchAmmoCount&&m.crouch?(tech.crouchAmmoCount%2&&(b.guns[b.activeGun].ammo--,level.is2xAmmo&&b.guns[b.activeGun].ammo>0&&"harpoon"!==b.guns[b.activeGun].name&&b.guns[b.activeGun].ammo--,simulation.updateGunHUD()),tech.crouchAmmoCount++):(b.guns[b.activeGun].ammo--,level.is2xAmmo&&b.guns[b.activeGun].ammo>0&&"harpoon"!==b.guns[b.activeGun].name&&b.guns[b.activeGun].ammo--,simulation.updateGunHUD())},outOfAmmo(){if(simulation.inGameConsole(`${b.guns[b.activeGun].name}.<span class='color-g'>ammo</span><span class='color-symbol'>:</span> 0`),m.fireCDcycle=m.cycle+30,tech.isAmmoFromHealth){const t=.02;if(tech.isEnergyHealth){if(m.maxEnergy>2*t){tech.healMaxEnergyBonus-=2*t,m.setMaxEnergy();for(let t=0;t<4;t++)powerUps.spawn(m.pos.x+50*(Math.random()-.5),m.pos.y+50*(Math.random()-.5),"ammo")}}else if(m.health>t){tech.extraMaxHealth-=t,m.setMaxHealth();for(let t=0;t<4;t++)powerUps.spawn(m.pos.x+50*(Math.random()-.5),m.pos.y+50*(Math.random()-.5),"ammo")}}},refundAmmo(){tech.crouchAmmoCount&&m.crouch&&null!==b.activeGun&&void 0!==b.activeGun?(tech.crouchAmmoCount--,tech.crouchAmmoCount%2&&(b.guns[b.activeGun].ammo++,simulation.updateGunHUD())):(b.guns[b.activeGun].ammo++,simulation.updateGunHUD())},giveGuns(t="random",e=22){if(tech.ammoCap&&(e=tech.ammoCap),tech.isOneGun&&b.resetAllGuns(),"random"===t){options=[];for(let t=0,e=b.guns.length;t<e;t++)b.guns[t].have||options.push(t);if(0===options.length)return;t=options[Math.floor(Math.random()*options.length)]}if("all"===t){for(let t=0;t<b.guns.length;t++)b.inventory[t]=t,b.guns[t].have=!0,b.guns[t].ammo!==1/0&&(b.guns[t].ammo=Math.ceil(b.guns[t].ammoPack*e));b.inventoryGun=0,b.activeGun=b.inventory[0]}else{if(isNaN(t)){let e=!1;for(let o=0;o<b.guns.length;o++)if(t===b.guns[o].name){t=o,e=!0;break}if(!e)return}b.guns[t].have||b.inventory.push(t),b.guns[t].have=!0,b.guns[t].ammo!==1/0&&(b.guns[t].ammo=Math.ceil(b.guns[t].ammoPack*e)),null===b.activeGun&&(b.inventoryGun=0,b.activeGun=b.inventory[0],b.guns[b.activeGun].charge&&(b.guns[b.activeGun].charge=0))}if(simulation.makeGunHUD(),simulation.switchGun(),b.setFireCD(),tech.isOneGun&&b.inventory>0){let t=0;for(let e=0,o=tech.tech.length;e<o;e++)if(tech.tech[e].isGunTech&&tech.tech[e].count>0&&!tech.tech[e].isInstant&&!tech.tech[e].isRemoveGun){t+=tech.removeTech(e)}for(let e=0;e<t;e++){const t=[];for(let o=0,i=tech.tech.length;o<i;o++)if(tech.tech[o].isGunTech&&tech.tech[o].allowed()&&!tech.tech[e].isRemoveGun&&!tech.tech[o].isJunk&&!tech.tech[o].isBadRandomOption&&tech.tech[o].count<tech.tech[o].maxCount){const e=tech.tech[o].requires.search(b.guns[b.activeGun].name),i=tech.tech[o].requires.search(" not ");-1!==e&&(-1===i||i>e)&&t.push(o)}if(t.length){const e=Math.floor(Math.random()*t.length);simulation.inGameConsole(`<span class='color-var'>tech</span>.giveTech("<strong class='color-text'>${tech.tech[t[e]].name}</strong>")`),tech.giveTech(t[e])}else tech.giveTech()}}},removeGun(t){for(let e=0;e<b.guns.length;e++)if(b.guns[e].name===t&&b.guns[e].have){b.guns[e].have=!1;for(let t=0;t<b.inventory.length;t++)if(b.inventory[t]===e){b.inventory.splice(t,1);break}b.inventory.length>0?b.activeGun=b.inventory[0]:b.activeGun=null,b.inventoryGun=0,simulation.makeGunHUD();break}b.setFireCD()},resetAllGuns(){b.inventory=[];for(let t=0,e=b.guns.length;t<e;++t)b.guns[t].count=0,b.guns[t].have=!1,b.guns[t].ammoPack=b.guns[t].defaultAmmoPack,b.guns[t].ammo!=1/0&&(b.guns[t].ammo=0);tech.buffedGun=0,b.activeGun=null,b.inventoryGun=0,simulation.drawCursor=simulation.drawCursorBasic},bulletRemove(){let t=bullet.length;for(;t--;)if(bullet[t].endCycle<simulation.cycle){if(bullet[t].onEnd(t),!bullet[t])break;Matter.Composite.remove(engine.world,bullet[t]),bullet.splice(t,1)}},bulletDraw(){ctx.beginPath();for(let t=0,e=bullet.length;t<e;t++){let e=bullet[t].vertices;ctx.moveTo(e[0].x,e[0].y);for(let t=1;t<e.length;t+=1)ctx.lineTo(e[t].x,e[t].y);ctx.lineTo(e[0].x,e[0].y)}ctx.fillStyle=color.bullet,ctx.fill()},bulletDo(){for(let t=0,e=bullet.length;t<e;t++)bullet[t].do()},fireProps(t,e,o,i){m.fireCDcycle=m.cycle+Math.floor(t*b.fireCDscale),Matter.Body.setVelocity(bullet[i],{x:.5*player.velocity.x+e*Math.cos(o),y:.5*player.velocity.y+e*Math.sin(o)}),Composite.add(engine.world,bullet[i])},fireCDscale:1,setFireCD(){b.fireCDscale=tech.fireRate*tech.slowFire*tech.researchHaste*tech.slowFireDamage,6===m.fieldMode&&(b.fireCDscale*=.8),tech.isFastTime&&(b.fireCDscale*=.666),tech.isFireRateForGuns&&(b.fireCDscale*=Math.pow(.76923,Math.max(0,b.inventory.length-1))),tech.isFireMoveLock&&(b.fireCDscale*=.25)},fireAttributes:(t,e=!0)=>e?{angle:t,friction:.5,frictionAir:0,dmg:0,classType:"bullet",collisionFilter:{category:cat.bullet,mask:cat.map|cat.body|cat.mob|cat.mobBullet|cat.mobShield},minDmgSpeed:10,beforeDmg(){},onEnd(){}}:{inertia:1/0,angle:t,friction:.5,frictionAir:0,dmg:0,classType:"bullet",collisionFilter:{category:cat.bullet,mask:cat.map|cat.body|cat.mob|cat.mobBullet|cat.mobShield},minDmgSpeed:10,beforeDmg(){},onEnd(){}},muzzleFlash(t=30){simulation.drawList.push({x:m.pos.x+20*Math.cos(m.angle),y:m.pos.y+20*Math.sin(m.angle),radius:t,color:"#fb0",time:1})},removeConsBB(t){for(let e=0,o=consBB.length;e<o;++e){if(consBB[e].bodyA===t){consBB[e].bodyA=consBB[e].bodyB,consBB.splice(e,1);break}if(consBB[e].bodyB===t){consBB[e].bodyB=consBB[e].bodyA,consBB.splice(e,1);break}}},onCollision(t){const e=t.pairs;for(let i=0,s=e.length;i!=s;i++){function o(t){t.onWallHit&&t.onWallHit()}e[i].bodyA.collisionFilter.category===cat.map&&e[i].bodyB.collisionFilter.category===cat.bullet?o(e[i].bodyB):e[i].bodyB.collisionFilter.category===cat.map&&e[i].bodyA.collisionFilter.category===cat.bullet&&o(e[i].bodyA)}},explosionRange:()=>tech.explosiveRadius*(tech.isExplosionHarm?1.7:1)*(tech.isSmallExplosion?.7:1)*(tech.isExplodeRadio?1.25:1),explosion(t,e,o="rgba(255,25,0,0.6)",i=1){let s,a=.019*(e*=tech.explosiveRadius);tech.isExplosionHarm&&(e*=1.7),tech.isSmallExplosion&&(e*=.7,a*=1.7);let l=Vector.sub(t,player.position),n=Vector.magnitude(l);if(tech.isSmartRadius&&e>n-50&&(e=Math.max(n-50,1)),tech.isExplodeRadio){if(e*=1.25,o="rgba(25,139,170,0.25)",simulation.drawList.push({x:t.x,y:t.y,radius:e,color:o,time:2*simulation.drawTime}),Vector.magnitude(Vector.sub(t,player.position))<e){const t=(tech.isExplosionHarm?.6:.45)*(tech.isRadioactiveResistance?.2:1);m.immuneCycle<m.cycle&&(m.energy-=t),m.energy<0&&(m.energy=0,m.takeDamage(.03*tech.radioactiveDamage*(tech.isRadioactiveResistance?.2:1)*spawn.dmgToPlayerByLevelsCleared()))}let i=1.5;for(let o=0,s=mob.length;o<s;++o)mob[o].alive&&!mob[o].isShielded&&(l=Vector.sub(t,mob[o].position),n=Vector.magnitude(l)-mob[o].radius,n<e&&(mob[o].shield&&(a*=2.5),Matter.Query.ray(map,mob[o].position,t).length>0&&(a*=.5),mobs.statusDoT(mob[o],a*i*.25,240),tech.isStun&&mobs.statusStun(mob[o],30),mob[o].locatePlayer(),i*=.87))}else{simulation.drawList.push({x:t.x,y:t.y,radius:e,color:o,time:simulation.drawTime});const r=100+2*e;if(simulation.drawList.push({x:t.x,y:t.y,radius:r,color:"rgba(100,20,0,0.03)",time:simulation.drawTime}),m.immuneCycle<m.cycle)if(n<e){const t=tech.isExplosionHarm?.067:.05;tech.isImmuneExplosion&&m.energy>.05?(m.energy-=.05,s=Vector.mult(Vector.normalise(l),-.6*player.mass*Math.max(0,Math.min(.15-.002*player.speed,.15))),player.force.x=s.x,player.force.y=s.y-.3):(m.takeDamage(t*spawn.dmgToPlayerByLevelsCleared()),s=Vector.mult(Vector.normalise(l),-Math.sqrt(a)*player.mass*.013),player.force.x+=s.x,player.force.y+=s.y)}else n<r&&(s=Vector.mult(Vector.normalise(l),-Math.sqrt(a)*player.mass*.005),player.force.x+=s.x,player.force.y+=s.y);for(let o=body.length-1;o>-1;o--)if(!body[o].isNotHoldable)if(l=Vector.sub(t,body[o].position),n=Vector.magnitude(l),n<e){if(s=Vector.mult(Vector.normalise(l),-Math.sqrt(a)*body[o].mass*.022),body[o].force.x+=s.x,body[o].force.y+=s.y,tech.isBlockExplode){body[o]===m.holdingTarget&&m.drop();const t=20+300*Math.pow(body[o].mass,.25),e=body[o].position,i=level.onLevel;Matter.Composite.remove(engine.world,body[o]),body.splice(o,1),setTimeout(()=>{i===level.onLevel&&b.explosion(e,t)},250+300*Math.random())}}else n<r&&(s=Vector.mult(Vector.normalise(l),-Math.sqrt(a)*body[o].mass*.011),body[o].force.x+=s.x,body[o].force.y+=s.y);for(let o=0,i=powerUp.length;o<i;++o)l=Vector.sub(t,powerUp[o].position),n=Vector.magnitude(l),n<e?(s=Vector.mult(Vector.normalise(l),-Math.sqrt(a)*powerUp[o].mass*.013),powerUp[o].force.x+=s.x,powerUp[o].force.y+=s.y):n<r&&(s=Vector.mult(Vector.normalise(l),-Math.sqrt(a)*powerUp[o].mass*.007),powerUp[o].force.x+=s.x,powerUp[o].force.y+=s.y);let c=1.5;for(let o=0,h=mob.length;o<h;++o)mob[o].alive&&!mob[o].isShielded&&(l=Vector.sub(t,mob[o].position),n=Vector.magnitude(l)-mob[o].radius,n<e?(mob[o].shield&&(a*=1.8),Matter.Query.ray(map,mob[o].position,t).length>0&&(a*=.5),mob[o].damage(a*c),mob[o].locatePlayer(),s=Vector.mult(Vector.normalise(l),-Math.sqrt(a*c)*mob[o].mass*(mob[o].isBoss?.003:.01)*i),tech.isStun?mobs.statusStun(mob[o],30):mob[o].isInvulnerable||(mob[o].force.x+=s.x,mob[o].force.y+=s.y),e*=.95,c*=.87):!mob[o].seePlayer.recall&&n<r&&(mob[o].locatePlayer(),s=Vector.mult(Vector.normalise(l),-Math.sqrt(a*c)*mob[o].mass*(mob[o].isBoss?0:.006*i)),tech.isStun?mobs.statusStun(mob[o],30):mob[o].isInvulnerable||(mob[o].force.x+=s.x,mob[o].force.y+=s.y)))}},pulse(t,e=m.angle,o=m.pos){let i,s=5.5*t;const a=[{x:o.x+20*Math.cos(e),y:o.y+20*Math.sin(e)},{x:o.x+5e3*Math.cos(e),y:o.y+5e3*Math.sin(e)}];if(i={x:null,y:null,dist2:1/0,who:null,v1:null,v2:null},i.who||(i=vertexCollision(a[0],a[1],[mob,map,body]),i.dist2!=1/0&&(a[a.length-1]={x:i.x,y:i.y})),i.who){b.explosion(a[1],s);const t=1.2*s;b.explosion({x:a[1].x+t*(Math.random()-.5),y:a[1].y+t*(Math.random()-.5)},s),b.explosion({x:a[1].x+t*(Math.random()-.5),y:a[1].y+t*(Math.random()-.5)},s)}ctx.beginPath(),ctx.moveTo(a[0].x,a[0].y),ctx.lineTo(a[1].x,a[1].y),t>50&&(ctx.strokeStyle="rgba(255,0,0,0.10)",ctx.lineWidth=70,ctx.stroke()),ctx.strokeStyle="rgba(255,0,0,0.25)",ctx.lineWidth=20,ctx.stroke(),ctx.strokeStyle="#f00",ctx.lineWidth=4,ctx.stroke();const l=Vector.sub(a[1],a[0]),n=Vector.magnitude(l);for(let e=0,o=Math.floor(5e-4*n*t);e<o;e++){const t=Math.random();simulation.drawList.push({x:a[0].x+l.x*t+10*(Math.random()-.5),y:a[0].y+l.y*t+10*(Math.random()-.5),radius:1.5+5*Math.random(),color:"rgba(255,0,0,0.5)",time:Math.floor(9+25*Math.random()*Math.random())})}},clusterExplode(t,e){const o=()=>{if(m.alive)if(simulation.paused||m.isTimeDilated)requestAnimationFrame(o);else if(i++,i<84&&requestAnimationFrame(o),!(i%7)){const o=Vector.rotate({x:1,y:0},6.28*Math.random());b.explosion(Vector.add(t,Vector.mult(o,e*(.01*i+.03*Math.random()))),e*(.4+.35*Math.random()),`hsla(${360*Math.random()},100%,66%,0.6)`,.2)}};let i=7;requestAnimationFrame(o)},starburst(t,e){const o=`hsla(${360*Math.random()},100%,66%,0.6)`,i=()=>{if(m.alive)if(simulation.paused||m.isTimeDilated)requestAnimationFrame(i);else if(l++,l<21&&requestAnimationFrame(i),l%2){const i=Vector.rotate({x:1,y:0},6.28*a*l/18+s);b.explosion(Vector.add(t,Vector.mult(i,.75*e)),.7*e,o,.5)}},s=6*Math.random(),a=Math.random()<.5?-1:1;let l=0;requestAnimationFrame(i)},fireFlower(t,e){const o=e*Math.sqrt(b.explosionRange()),i=()=>{if(m.alive)if(simulation.paused||m.isTimeDilated)requestAnimationFrame(i);else{if(s<30&&m.alive&&requestAnimationFrame(i),0===s){const o=`hsla(${360*Math.random()},100%,66%,0.6)`;b.explosion(t,.8*e,o,.5)}if(8===s){const i=`hsla(${360*Math.random()},100%,66%,0.6)`;for(let s=0,a=6;s<a;s++){const l=Vector.rotate({x:1,y:0},6.28*s/a);b.explosion(Vector.add(t,Vector.mult(l,1.1*o)),.6*e,i,.5)}}if(16===s){const i=`hsla(${360*Math.random()},100%,66%,0.6)`;for(let s=0,a=10;s<a;s++){const l=Vector.rotate({x:1,y:0},6.28*s/a);b.explosion(Vector.add(t,Vector.mult(l,1.4*o)),.45*e,i,.5)}}s++}};let s=0;requestAnimationFrame(i)},grenadeEnd(){tech.isCircleExplode?b.starburst(this.position,this.explodeRad):tech.isPetalsExplode?b.fireFlower(this.position,this.explodeRad):tech.isClusterExplode?b.clusterExplode(this.position,this.explodeRad):b.explosion(this.position,this.explodeRad),tech.fragments&&b.targetedNail(this.position,tech.fragments*Math.floor(2+1.5*Math.random()))},grenade(){},setGrenadeMode(){grenadeDefault=function(t={x:m.pos.x+30*Math.cos(m.angle),y:m.pos.y+30*Math.sin(m.angle)},e=m.angle,o=1){const i=bullet.length;bullet[i]=Bodies.circle(t.x,t.y,15,b.fireAttributes(e,!1)),Matter.Body.setDensity(bullet[i],3e-4),bullet[i].explodeRad=300*o+100*tech.isBlockExplode,bullet[i].onEnd=b.grenadeEnd,bullet[i].minDmgSpeed=1,bullet[i].beforeDmg=function(){this.endCycle=0},speed=m.crouch?43:32,Matter.Body.setVelocity(bullet[i],{x:.5*player.velocity.x+speed*Math.cos(e),y:.5*player.velocity.y+speed*Math.sin(e)}),bullet[i].endCycle=simulation.cycle+Math.floor(m.crouch?120:80)*tech.bulletsLastLonger,bullet[i].restitution=.4,bullet[i].do=function(){this.force.y+=.0025*this.mass},Composite.add(engine.world,bullet[i]),tech.isPrecision&&(bullet[i].do=function(){this.force.y+=.0025*this.mass;for(let t=0;t<mob.length;t++)!mob[t].isBadTarget&&!mob[t].isInvulnerable&&this.position.y<mob[t].bounds.min.y&&this.position.x>mob[t].position.x-mob[t].radius/2&&this.position.x<mob[t].position.x+mob[t].radius/2&&0===Matter.Query.ray(map,this.position,mob[t].position).length&&0===Matter.Query.ray(body,this.position,mob[t].position).length&&(Matter.Body.setVelocity(this,{x:0,y:4+Math.max(10,this.speed)}),this.do=function(){this.force.y+=.003*this.mass},ctx.strokeStyle="#000",ctx.lineWidth=3,ctx.beginPath(),ctx.moveTo(this.position.x,this.position.y),ctx.lineTo(mob[t].position.x,mob[t].position.y),ctx.stroke())})},grenadeRPG=function(t={x:m.pos.x+30*Math.cos(m.angle),y:m.pos.y+30*Math.sin(m.angle)},e=m.angle,o=1){const i=bullet.length;bullet[i]=Bodies.circle(t.x,t.y,15,b.fireAttributes(e,!1)),Matter.Body.setDensity(bullet[i],3e-4),bullet[i].explodeRad=300*o+100*tech.isBlockExplode,bullet[i].onEnd=b.grenadeEnd,bullet[i].minDmgSpeed=1,bullet[i].beforeDmg=function(){this.endCycle=0},speed=m.crouch?46:32,Matter.Body.setVelocity(bullet[i],{x:.8*player.velocity.x+speed*Math.cos(e),y:.5*player.velocity.y+speed*Math.sin(e)}),Composite.add(engine.world,bullet[i]),bullet[i].endCycle=simulation.cycle+70*tech.bulletsLastLonger,bullet[i].frictionAir=.07;bullet[i].thrust={x:.015*bullet[i].mass*Math.cos(e),y:.015*bullet[i].mass*Math.sin(e)},bullet[i].do=function(){this.force.x+=this.thrust.x,this.force.y+=this.thrust.y,(Matter.Query.collides(this,map).length||Matter.Query.collides(this,body).length)&&(this.endCycle=0)},tech.isPrecision&&(bullet[i].do=function(){this.force.x+=this.thrust.x,this.force.y+=this.thrust.y,(Matter.Query.collides(this,map).length||Matter.Query.collides(this,body).length)&&(this.endCycle=0);for(let t=0;t<mob.length;t++)!mob[t].isBadTarget&&!mob[t].isInvulnerable&&this.position.y<mob[t].bounds.min.y&&this.position.x>mob[t].position.x-mob[t].radius/2&&this.position.x<mob[t].position.x+mob[t].radius/2&&0===Matter.Query.ray(map,this.position,mob[t].position).length&&0===Matter.Query.ray(body,this.position,mob[t].position).length&&(Matter.Body.setVelocity(this,{x:0,y:4+Math.max(10,this.speed)}),this.frictionAir=0,this.do=function(){this.force.y+=.003*this.mass},ctx.strokeStyle="#000",ctx.lineWidth=3,ctx.beginPath(),ctx.moveTo(this.position.x,this.position.y),ctx.lineTo(mob[t].position.x,mob[t].position.y),ctx.stroke())})},grenadeRPGVacuum=function(t={x:m.pos.x+30*Math.cos(m.angle),y:m.pos.y+30*Math.sin(m.angle)},e=m.angle,o=1){const s=bullet.length;bullet[s]=Bodies.circle(t.x,t.y,15,b.fireAttributes(e,!1)),Matter.Body.setDensity(bullet[s],3e-4),bullet[s].explodeRad=350*o+Math.floor(50*Math.random())+100*tech.isBlockExplode,bullet[s].onEnd=b.grenadeEnd,bullet[s].minDmgSpeed=1,bullet[s].beforeDmg=function(){Matter.Body.setVelocity(this,{x:0,y:0}),this.endCycle=0},speed=m.crouch?46:32,Matter.Body.setVelocity(bullet[s],{x:.8*player.velocity.x+speed*Math.cos(e),y:.5*player.velocity.y+speed*Math.sin(e)}),Composite.add(engine.world,bullet[s]),bullet[s].endCycle=simulation.cycle+70*tech.bulletsLastLonger,bullet[s].frictionAir=.07,bullet[s].suckCycles=40;bullet[s].thrust={x:.015*bullet[s].mass*Math.cos(e),y:.015*bullet[s].mass*Math.sin(e)},bullet[s].suck=function(){const t=(t,o=3.2*this.explodeRad)=>{for(i=0,len=t.length;i<len;i++){const s=Vector.sub(this.position,t[i].position),a=Vector.magnitude(s);a<o&&a>150&&!t.isInvulnerable&&t[i]!==this&&(knock=Vector.mult(Vector.normalise(s),e*t[i].mass/Math.sqrt(a)),t[i].force.x+=knock.x,t[i].force.y+=knock.y)}};let e=.1;simulation.cycle>this.endCycle-5?(e=-.22,t(mob,3*this.explodeRad),t(body,2*this.explodeRad),t(powerUp,1.5*this.explodeRad),t(bullet,1.5*this.explodeRad),t([player],1.3*this.explodeRad)):(e=.11,t(mob,3*this.explodeRad),t(body,2*this.explodeRad),t(powerUp,1.5*this.explodeRad),t(bullet,1.5*this.explodeRad),t([player],1.3*this.explodeRad)),Matter.Body.setVelocity(this,{x:0,y:0});const o=2.75*this.explodeRad*(this.endCycle-simulation.cycle)/this.suckCycles;ctx.fillStyle="rgba(0,0,0,0.1)",ctx.beginPath(),ctx.arc(this.position.x,this.position.y,o,0,2*Math.PI),ctx.fill()},bullet[s].do=function(){simulation.cycle>this.endCycle-this.suckCycles?this.do=this.suck:Matter.Query.collides(this,map).length||Matter.Query.collides(this,body).length?(Matter.Body.setPosition(this,Vector.sub(this.position,this.velocity)),this.do=this.suck):(this.force.x+=this.thrust.x,this.force.y+=this.thrust.y)},tech.isPrecision&&(bullet[s].do=function(){simulation.cycle>this.endCycle-this.suckCycles?this.do=this.suck:Matter.Query.collides(this,map).length||Matter.Query.collides(this,body).length?(Matter.Body.setPosition(this,Vector.sub(this.position,this.velocity)),this.do=this.suck):(this.force.x+=this.thrust.x,this.force.y+=this.thrust.y);for(let t=0;t<mob.length;t++)!mob[t].isBadTarget&&!mob[t].isInvulnerable&&this.position.y<mob[t].bounds.min.y&&this.position.x>mob[t].position.x-mob[t].radius/2&&this.position.x<mob[t].position.x+mob[t].radius/2&&0===Matter.Query.ray(map,this.position,mob[t].position).length&&0===Matter.Query.ray(body,this.position,mob[t].position).length&&(Matter.Body.setVelocity(this,{x:0,y:4+Math.max(10,this.speed)}),this.frictionAir=0,this.do=function(){simulation.cycle>this.endCycle-this.suckCycles?this.do=this.suck:(Matter.Query.collides(this,map).length||Matter.Query.collides(this,body).length)&&(Matter.Body.setPosition(this,Vector.sub(this.position,this.velocity)),this.do=this.suck)},ctx.strokeStyle="#000",ctx.lineWidth=3,ctx.beginPath(),ctx.moveTo(this.position.x,this.position.y),ctx.lineTo(mob[t].position.x,mob[t].position.y),ctx.stroke())})},grenadeVacuum=function(t={x:m.pos.x+30*Math.cos(m.angle),y:m.pos.y+30*Math.sin(m.angle)},e=m.angle,o=1){const s=bullet.length;bullet[s]=Bodies.circle(t.x,t.y,20,b.fireAttributes(e,!1)),Matter.Body.setDensity(bullet[s],2e-4),bullet[s].explodeRad=350*o+Math.floor(50*Math.random())+100*tech.isBlockExplode,bullet[s].onEnd=b.grenadeEnd,bullet[s].beforeDmg=function(){Matter.Body.setVelocity(this,{x:0,y:0}),this.endCycle=0},bullet[s].restitution=.4,bullet[s].do=function(){if(this.force.y+=.0025*this.mass,simulation.cycle>this.endCycle-40){const e=this;function t(t,s=3.2*e.explodeRad){for(i=0,len=t.length;i<len;i++){const a=Vector.sub(e.position,t[i].position),l=Vector.magnitude(a);l<s&&l>150&&!t.isInvulnerable&&(knock=Vector.mult(Vector.normalise(a),o*t[i].mass/Math.sqrt(l)),t[i].force.x+=knock.x,t[i].force.y+=knock.y)}}let o=.1;simulation.cycle>this.endCycle-5?(o=-.22,t(mob,3*this.explodeRad),t(body,2*this.explodeRad),t(powerUp,1.5*this.explodeRad),t(bullet,1.5*this.explodeRad),t([player],1.3*this.explodeRad)):(o=.11,t(mob,3*this.explodeRad),t(body,2*this.explodeRad),t(powerUp,1.5*this.explodeRad),t(bullet,1.5*this.explodeRad),t([player],1.3*this.explodeRad)),Matter.Body.setVelocity(this,{x:0,y:0});const s=2.75*this.explodeRad*(this.endCycle-simulation.cycle)/40;ctx.fillStyle="rgba(0,0,0,0.1)",ctx.beginPath(),ctx.arc(this.position.x,this.position.y,s,0,2*Math.PI),ctx.fill()}},speed=35,bullet[s].endCycle=simulation.cycle+70*tech.bulletsLastLonger,m.crouch&&(speed+=9,bullet[s].endCycle+=20),Matter.Body.setVelocity(bullet[s],{x:.5*player.velocity.x+speed*Math.cos(e),y:.5*player.velocity.y+speed*Math.sin(e)}),Composite.add(engine.world,bullet[s]),tech.isPrecision&&(bullet[s].do=function(){this.force.y+=.0025*this.mass;if(simulation.cycle>this.endCycle-40){const e=this;function t(t,s=3.2*e.explodeRad){for(i=0,len=t.length;i<len;i++){const a=Vector.sub(e.position,t[i].position),l=Vector.magnitude(a);l<s&&l>150&&!t.isInvulnerable&&(knock=Vector.mult(Vector.normalise(a),o*t[i].mass/Math.sqrt(l)),t[i].force.x+=knock.x,t[i].force.y+=knock.y)}}let o=.1;simulation.cycle>this.endCycle-5?(o=-.22,t(mob,3*this.explodeRad),t(body,2*this.explodeRad),t(powerUp,1.5*this.explodeRad),t(bullet,1.5*this.explodeRad),t([player],1.3*this.explodeRad)):(o=.11,t(mob,3*this.explodeRad),t(body,2*this.explodeRad),t(powerUp,1.5*this.explodeRad),t(bullet,1.5*this.explodeRad),t([player],1.3*this.explodeRad)),Matter.Body.setVelocity(this,{x:0,y:0});const s=2.75*this.explodeRad*(this.endCycle-simulation.cycle)/40;ctx.fillStyle="rgba(0,0,0,0.1)",ctx.beginPath(),ctx.arc(this.position.x,this.position.y,s,0,2*Math.PI),ctx.fill()}for(let a=0;a<mob.length;a++)!mob[a].isBadTarget&&!mob[a].isInvulnerable&&this.position.y<mob[a].bounds.min.y&&this.position.x>mob[a].position.x-mob[a].radius/2&&this.position.x<mob[a].position.x+mob[a].radius/2&&0===Matter.Query.ray(map,this.position,mob[a].position).length&&0===Matter.Query.ray(body,this.position,mob[a].position).length&&(Matter.Body.setVelocity(this,{x:0,y:4+Math.max(10,this.speed)}),this.do=function(){this.force.y+=.0025*this.mass;if(simulation.cycle>this.endCycle-40){const e=this;function t(t,i=3.2*e.explodeRad){for(a=0,len=t.length;a<len;a++){const s=Vector.sub(e.position,t[a].position),l=Vector.magnitude(s);l<i&&l>150&&!t.isInvulnerable&&(knock=Vector.mult(Vector.normalise(s),o*t[a].mass/Math.sqrt(l)),t[a].force.x+=knock.x,t[a].force.y+=knock.y)}}let o=.1;simulation.cycle>this.endCycle-5?(o=-.22,t(mob,3*this.explodeRad),t(body,2*this.explodeRad),t(powerUp,1.5*this.explodeRad),t(bullet,1.5*this.explodeRad),t([player],1.3*this.explodeRad)):(o=.11,t(mob,3*this.explodeRad),t(body,2*this.explodeRad),t(powerUp,1.5*this.explodeRad),t(bullet,1.5*this.explodeRad),t([player],1.3*this.explodeRad)),Matter.Body.setVelocity(this,{x:0,y:0});const i=2.75*this.explodeRad*(this.endCycle-simulation.cycle)/40;ctx.fillStyle="rgba(0,0,0,0.1)",ctx.beginPath(),ctx.arc(this.position.x,this.position.y,i,0,2*Math.PI),ctx.fill()}},ctx.strokeStyle="#000",ctx.lineWidth=3,ctx.beginPath(),ctx.moveTo(this.position.x,this.position.y),ctx.lineTo(mob[a].position.x,mob[a].position.y),ctx.stroke())})},grenadeNeutron=function(t={x:m.pos.x+30*Math.cos(m.angle),y:m.pos.y+30*Math.sin(m.angle)},e=m.angle,o=1){const s=bullet.length;if(bullet[s]=Bodies.polygon(t.x,t.y,10,4,b.fireAttributes(e,!1)),b.fireProps((m.crouch?45:25)/Math.pow(.92,tech.missileCount),m.crouch?35:20,e,s),Matter.Body.setDensity(bullet[s],1e-6),bullet[s].endCycle=500+simulation.cycle,bullet[s].frictionAir=0,bullet[s].friction=1,bullet[s].frictionStatic=1,bullet[s].restitution=0,bullet[s].minDmgSpeed=0,bullet[s].damageRadius=100,bullet[s].maxDamageRadius=450*o+130*tech.isNeutronSlow,bullet[s].radiusDecay=(.81+.15*tech.isNeutronSlow)/tech.bulletsLastLonger,bullet[s].stuckTo=null,bullet[s].stuckToRelativePosition=null,tech.isRPG){const t=2;Matter.Body.scale(bullet[s],t,t),speed=m.crouch?25:15,Matter.Body.setVelocity(bullet[s],{x:.5*player.velocity.x+speed*Math.cos(e),y:.5*player.velocity.y+speed*Math.sin(e)});const o=.005;bullet[s].thrust={x:bullet[s].mass*o*Math.cos(e),y:bullet[s].mass*o*Math.sin(e)}}bullet[s].beforeDmg=function(){},bullet[s].stuck=function(){};let a=!1;bullet[s].do=function(){const t=()=>{this.collisionFilter.mask=0,Matter.Body.setVelocity(this,{x:0,y:0}),tech.isRPG&&(this.thrust={x:0,y:0}),this.do=this.radiationMode},e=Matter.Query.collides(this,mob);if(e.length)t(),this.stuckTo=e[0].bodyA,mobs.statusDoT(this.stuckTo,.6,360),this.stuckTo.isVerticesChange?this.stuckToRelativePosition={x:0,y:0}:this.stuckToRelativePosition=Vector.rotate(Vector.sub(this.position,this.stuckTo.position),-this.stuckTo.angle),this.stuck=function(){if(this.stuckTo&&this.stuckTo.alive){const t=Vector.rotate(this.stuckToRelativePosition,this.stuckTo.angle);Matter.Body.setPosition(this,Vector.add(Vector.add(t,this.stuckTo.velocity),this.stuckTo.position)),Matter.Body.setVelocity(this,this.stuckTo.velocity)}else this.collisionFilter.mask=cat.map|cat.body|cat.player|cat.mob,this.stuck=function(){this.force.y+=.001*this.mass}};else{const e=Matter.Query.collides(this,body);e.length?(e[0].bodyA.isNotHoldable?this.do=this.radiationMode:(t(),this.stuckTo=e[0].bodyA,this.stuckToRelativePosition=Vector.rotate(Vector.sub(this.position,this.stuckTo.position),-this.stuckTo.angle)),this.stuck=function(){if(this.stuckTo){const t=Vector.rotate(this.stuckToRelativePosition,this.stuckTo.angle);Matter.Body.setPosition(this,Vector.add(Vector.add(t,this.stuckTo.velocity),this.stuckTo.position))}else this.force.y+=.001*this.mass}):Matter.Query.collides(this,map).length?t():tech.isRPG?(this.force.x+=this.thrust.x,this.force.y+=this.thrust.y):this.force.y+=.001*this.mass}if(tech.isPrecision&&!a)for(let t=0;t<mob.length;t++)!mob[t].isBadTarget&&!mob[t].isInvulnerable&&this.position.y<mob[t].bounds.min.y&&this.position.x>mob[t].position.x-mob[t].radius/2&&this.position.x<mob[t].position.x+mob[t].radius/2&&0===Matter.Query.ray(map,this.position,mob[t].position).length&&0===Matter.Query.ray(body,this.position,mob[t].position).length&&(Matter.Body.setVelocity(this,{x:0,y:4+Math.max(10,this.speed)}),a=!0,tech.isRPG&&(this.thrust={x:0,y:0}),ctx.strokeStyle="#000",ctx.lineWidth=3,ctx.beginPath(),ctx.moveTo(this.position.x,this.position.y),ctx.lineTo(mob[t].position.x,mob[t].position.y),ctx.stroke())},bullet[s].radiationMode=function(){if(this.stuck(),this.damageRadius=.85*this.damageRadius+.15*this.maxDamageRadius,this.maxDamageRadius-=this.radiusDecay,this.damageRadius<15)this.endCycle=0;else{if(Vector.magnitude(Vector.sub(player.position,this.position))<this.damageRadius){const t=tech.isRadioactiveResistance?5e-4:.0025;m.energy>t?m.immuneCycle<m.cycle&&(m.energy-=t):(m.energy=0,m.takeDamage((tech.isRadioactiveResistance?16e-5*.2:16e-5)*tech.radioactiveDamage*spawn.dmgToPlayerByLevelsCleared()))}let t=.15*tech.radioactiveDamage;for(let e=0,o=mob.length;e<o;e++)Vector.magnitude(Vector.sub(mob[e].position,this.position))<this.damageRadius+mob[e].radius&&(Matter.Query.ray(map,mob[e].position,this.position).length>0&&(t*=.2),mob[e].damage(mob[e].shield?3*t:t),mob[e].locatePlayer(),tech.isNeutronSlow&&mob[e].speed>4&&Matter.Body.setVelocity(mob[e],{x:.97*mob[e].velocity.x,y:.97*mob[e].velocity.y}));if(ctx.beginPath(),ctx.arc(this.position.x,this.position.y,this.damageRadius,0,2*Math.PI),ctx.globalCompositeOperation="lighter",ctx.fillStyle=`rgba(25,139,170,${.2+.06*Math.random()})`,ctx.fill(),ctx.globalCompositeOperation="source-over",tech.isNeutronSlow){let t=(t,e=3.2*this.explodeRad)=>{for(i=0,len=t.length;i<len;i++){const o=Vector.sub(this.position,t[i].position);Vector.magnitude(o)<e&&Matter.Body.setVelocity(t[i],{x:.975*t[i].velocity.x,y:.975*t[i].velocity.y})}};t(body,this.damageRadius),t([player],this.damageRadius)}}}},tech.isNeutronBomb?(b.grenade=grenadeNeutron,tech.isRPG?b.guns[5].do=function(){}:b.guns[5].do=function(){if(!input.field&&m.crouch){const t=80,e=m.crouch?35:20,o=m.crouch?.137:.135,i={x:e*Math.cos(m.angle),y:e*Math.sin(m.angle)};ctx.strokeStyle="rgba(68, 68, 68, 0.2)",ctx.lineWidth=2,ctx.beginPath();for(let e=1,s=19;e<s+1;e++){const a=t*e/s;ctx.lineTo(m.pos.x+a*i.x,m.pos.y+a*i.y+o*a*a)}ctx.stroke()}}):tech.isRPG?(b.guns[5].do=function(){},tech.isVacuumBomb?b.grenade=grenadeRPGVacuum:b.grenade=grenadeRPG):tech.isVacuumBomb?(b.grenade=grenadeVacuum,b.guns[5].do=function(){if(!input.field&&m.crouch){const t=Math.floor(m.crouch?50:30),e=m.crouch?44:35,o={x:e*Math.cos(m.angle),y:e*Math.sin(m.angle)};ctx.strokeStyle="rgba(68, 68, 68, 0.2)",ctx.lineWidth=2,ctx.beginPath();for(let e=1.6,i=19;e<i+1;e++){const s=t*e/i;ctx.lineTo(m.pos.x+s*o.x,m.pos.y+s*o.y+.34*s*s)}ctx.stroke()}}):(b.grenade=grenadeDefault,b.guns[5].do=function(){if(!input.field&&m.crouch){const t=Math.floor(m.crouch?120:80),e=m.crouch?43:32,o={x:e*Math.cos(m.angle),y:e*Math.sin(m.angle)};ctx.strokeStyle="rgba(68, 68, 68, 0.2)",ctx.lineWidth=2,ctx.beginPath();for(let e=.5,i=19;e<i+1;e++){const s=t*e/i;ctx.lineTo(m.pos.x+s*o.x,m.pos.y+s*o.y+.34*s*s)}ctx.stroke()}})},grapple(t,e=m.angle){const o=bullet.length;bullet[o]=Bodies.fromVertices(t.x,t.y,[{x:-40,y:2,index:0,isInternal:!1},{x:-40,y:-2,index:1,isInternal:!1},{x:37,y:-2,index:2,isInternal:!1},{x:40,y:-1,index:3,isInternal:!1},{x:37,y:3,index:4,isInternal:!1}],{angle:e,friction:1,frictionAir:.4,thrustMag:.17,dmg:7,classType:"bullet",endCycle:simulation.cycle+70,isSlowPull:!1,drawStringControlMagnitude:1e3+1e3*Math.random(),drawStringFlip:Math.round(Math.random())?1:-1,attached:!1,glowColor:tech.hookNails?"rgba(200,0,0,0.07)":tech.isHarmReduce?"rgba(50,100,255,0.1)":"rgba(0,200,255,0.07)",collisionFilter:{category:cat.bullet,mask:tech.isShieldPierce?cat.body|cat.mob|cat.mobBullet:cat.body|cat.mob|cat.mobBullet|cat.mobShield},minDmgSpeed:4,density:.004,drain:.001,powerUpDamage:tech.isHarpoonPowerUp&&simulation.cycle-480<tech.harpoonPowerUpCycle,draw(){const t={x:m.pos.x+30*Math.cos(m.angle),y:m.pos.y+30*Math.sin(m.angle)},e=Vector.sub(t,this.vertices[0]);if(ctx.strokeStyle="#000",ctx.lineWidth=.5,ctx.beginPath(),ctx.moveTo(t.x,t.y),this.attached){const o=Vector.add(t,Vector.mult(e,-.5));ctx.quadraticCurveTo(o.x,o.y,this.vertices[0].x,this.vertices[0].y)}else{const o=Math.max(Vector.magnitude(e),60),i=Vector.mult(Vector.normalise(Vector.perp(e)),this.drawStringFlip*Math.min(.7*o,10+this.drawStringControlMagnitude/(10+Vector.magnitude(e)))),s=Vector.add(Vector.add(t,Vector.mult(e,-.5)),i);ctx.quadraticCurveTo(s.x,s.y,this.vertices[0].x,this.vertices[0].y)}ctx.strokeStyle=this.glowColor,ctx.lineWidth=10,ctx.stroke(),ctx.strokeStyle="#000",ctx.lineWidth=.5,ctx.stroke(),this.powerUpDamage&&(ctx.beginPath(),ctx.moveTo(this.vertices[0].x,this.vertices[0].y),ctx.lineTo(this.vertices[1].x,this.vertices[1].y),ctx.lineTo(this.vertices[2].x,this.vertices[2].y),ctx.lineTo(this.vertices[3].x,this.vertices[3].y),ctx.lineTo(this.vertices[4].x,this.vertices[4].y),ctx.lineJoin="miter",ctx.miterLimit=30,ctx.lineWidth=25,ctx.strokeStyle="rgba(0,255,255,0.4)",ctx.stroke(),ctx.lineWidth=8,ctx.strokeStyle="rgb(0,255,255)",ctx.stroke(),ctx.lineJoin="round",ctx.miterLimit=5,ctx.fillStyle="#000",ctx.fill()),ctx.beginPath(),ctx.lineTo(this.vertices[0].x,this.vertices[0].y);const o=Vector.add(this.vertices[3],Vector.mult(Vector.sub(this.vertices[3],this.vertices[2]),2));ctx.moveTo(this.vertices[2].x,this.vertices[2].y),ctx.lineTo(o.x,o.y),ctx.lineTo(this.vertices[1].x,this.vertices[1].y),ctx.fillStyle="#000",ctx.fill()},beforeDmg(t){if(tech.isShieldPierce&&t.isShielded&&(t.isShielded=!1,requestAnimationFrame(()=>{t.isShielded=!0})),m.fieldCDcycle<m.cycle+30&&(m.fieldCDcycle=m.cycle+30),tech.hookNails){b.targetedNail(this.position,tech.hookNails);const t=2*Math.PI*Math.random();for(let e=0;e<4;e++)b.nail(this.position,{x:10.5*Math.cos(t),y:10.5*Math.sin(t)},1.2)}tech.isHarpoonPowerUp&&simulation.cycle-480<tech.harpoonPowerUpCycle?Matter.Body.setDensity(this,1.8*.004):tech.isHarpoonFullHealth&&1===t.health&&(Matter.Body.setDensity(this,.00844),simulation.ephemera.push({count:3,vertices:this.vertices,do(){this.count--,this.count<0&&simulation.removeEphemera(this),ctx.beginPath(),ctx.moveTo(this.vertices[0].x,this.vertices[0].y);for(let t=1,e=this.vertices.length;t<e;t+=1)ctx.lineTo(this.vertices[t].x,this.vertices[t].y);ctx.lineTo(this.vertices[0].x,this.vertices[0].y),ctx.lineJoin="miter",ctx.miterLimit=20,ctx.lineWidth=40,ctx.strokeStyle="rgba(255,0,100,0.35)",ctx.stroke(),ctx.lineWidth=10,ctx.strokeStyle="#f07",ctx.stroke(),ctx.lineJoin="round",ctx.miterLimit=5,ctx.fillStyle="#000",ctx.fill()}})),this.retract()},caughtPowerUp:null,dropCaughtPowerUp(){this.caughtPowerUp&&(this.caughtPowerUp.collisionFilter.category=cat.powerUp,this.caughtPowerUp.collisionFilter.mask=cat.map|cat.powerUp,this.caughtPowerUp=null)},onEnd(){if(!this.caughtPowerUp||simulation.isChoosing||"heal"===this.caughtPowerUp.name&&m.health===m.maxHealth&&!tech.isOverHeal)this.dropCaughtPowerUp();else{let t=null;for(let e=0,o=powerUp.length;e<o;++e)powerUp[e]===this.caughtPowerUp&&(t=e);null!==t?(powerUps.onPickUp(this.caughtPowerUp),this.caughtPowerUp.effect(),Matter.Composite.remove(engine.world,this.caughtPowerUp),powerUp.splice(t,1),tech.isHarpoonPowerUp&&(tech.harpoonPowerUpCycle=simulation.cycle)):this.dropCaughtPowerUp()}},retract(){this.attached=!1,this.do=this.returnToPlayer,this.endCycle=simulation.cycle+60,Matter.Body.setDensity(this,5e-4),this.angularSpeed<.5&&(this.torque+=.001*this.inertia*(Math.random()-.5)),this.collisionFilter.mask=0;const t=this.pickUpTarget?Math.min(5,Math.max(this.pickUpTarget.mass,.5)):.5,e=Vector.normalise(Vector.sub(this.position,m.pos)),o=Vector.mult(e,t*(m.crouch?.1:.2));player.force.x+=o.x,player.force.y+=o.y},returnToPlayer(){if(Vector.magnitude(Vector.sub(this.position,m.pos))<100){this.endCycle=0;const t=Vector.normalise(Vector.sub(this.velocity,player.velocity)),e=Vector.mult(t,m.crouch?1e-4:2e-4);if(player.force.x+=e.x,player.force.y+=e.y,this.pickUpTarget){tech.isReel&&this.blockDist>15&&m.immuneCycle<m.cycle&&(m.energy+=.00113*Math.min(this.blockDist,800)*level.isReducedRegen,simulation.drawList.push({x:m.pos.x,y:m.pos.y,radius:10,color:m.fieldMeterColor,time:simulation.drawTime})),m.holdingTarget=this.pickUpTarget,m.isHolding=!0;const t=Math.min(5,this.pickUpTarget.mass),e=Vector.mult(Vector.normalise(this.velocity),15*t),o=Vector.mult(player.velocity,player.mass);totalMomentum=Vector.add(o,e),Matter.Body.setVelocity(player,Vector.mult(totalMomentum,1/(m.defaultMass+t))),m.definePlayerMass(m.defaultMass+this.pickUpTarget.mass*m.holdingMassScale),m.holdingTarget.collisionFilter.category=0,m.holdingTarget.collisionFilter.mask=0,this.pickUpTarget=null}}else{m.energy>this.drain&&(m.energy-=this.drain);const t=Vector.sub(this.position,m.pos),e=1+3e-6*Vector.magnitude(t),o=Vector.mult(Vector.normalise(t),e*this.thrustMag*this.mass);this.force.x-=o.x,this.force.y-=o.y,this.grabPowerUp(),this.grabBlocks()}this.draw()},destroyBlocks(){const t=Matter.Query.collides(this,body);if(t.length&&!t[0].bodyA.isNotHoldable){t[0].bodyA.mass>2.5&&this.retract();const e=t[0].bodyA.vertices;Composite.remove(engine.world,t[0].bodyA),body.splice(body.indexOf(t[0].bodyA),1),simulation.ephemera.push({count:25,do(){this.count--,this.count<0&&simulation.removeEphemera(this),ctx.beginPath(),ctx.moveTo(e[0].x,e[0].y);for(let t=1;t<e.length;t++)ctx.lineTo(e[t].x,e[t].y);ctx.lineTo(e[0].x,e[0].y),ctx.lineWidth=2,ctx.strokeStyle=`rgba(0,0,0,${this.count/25})`,ctx.stroke()}})}},pickUpTarget:null,grabBlocks(){if(this.pickUpTarget)Matter.Body.setPosition(this.pickUpTarget,Vector.add(this.vertices[2],this.velocity)),Matter.Body.setVelocity(this.pickUpTarget,{x:0,y:0});else{const t=Matter.Query.collides(this,body);if(t.length)for(let e=0;e<t.length;e++)if("body"===t[e].bodyA.classType&&!t[e].bodyA.isNotHoldable&&t[0].bodyA.mass<40)if(this.retract(),tech.hookNails){b.targetedNail(this.position,3*tech.hookNails);const o=2*Math.PI*Math.random();for(let t=0;t<13;t++)b.nail(this.position,{x:10.5*Math.cos(o),y:10.5*Math.sin(o)},1.2);const i=t[e].bodyA.vertices;Composite.remove(engine.world,t[e].bodyA),body.splice(body.indexOf(t[e].bodyA),1),simulation.ephemera.push({count:25,do(){this.count--,this.count<0&&simulation.removeEphemera(this),ctx.beginPath(),ctx.moveTo(i[0].x,i[0].y);for(let t=1;t<i.length;t++)ctx.lineTo(i[t].x,i[t].y);ctx.lineTo(i[0].x,i[0].y),ctx.lineWidth=2,ctx.strokeStyle=`rgba(0,0,0,${this.count/25})`,ctx.stroke()}})}else this.pickUpTarget=t[e].bodyA,this.blockDist=Vector.magnitude(Vector.sub(this.pickUpTarget.position,m.pos))}},grabPowerUp(){if(this.caughtPowerUp)Matter.Body.setPosition(this.caughtPowerUp,Vector.add(this.vertices[2],this.velocity)),Matter.Body.setVelocity(this.caughtPowerUp,{x:0,y:0});else for(let t=0,e=powerUp.length;t<e;++t){if(tech.isEnergyNoAmmo&&"ammo"===powerUp[t].name)continue;const e=powerUp[t].circleRadius+50;if(Vector.magnitudeSquared(Vector.sub(this.vertices[2],powerUp[t].position))<e*e&&("heal"!==powerUp[t].name||m.health!==m.maxHealth||tech.isOverHeal)){this.caughtPowerUp=powerUp[t],Matter.Body.setVelocity(powerUp[t],{x:0,y:0}),Matter.Body.setPosition(powerUp[t],this.vertices[2]),powerUp[t].collisionFilter.category=0,powerUp[t].collisionFilter.mask=0,this.thrustMag*=.6,this.endCycle+=.5;break}}m.grabPowerUp()},do(){if(input.field?(m.fieldCDcycle<m.cycle+5&&(m.fieldCDcycle=m.cycle+5),this.grabBlocks(),this.grabPowerUp()):this.retract(),input.field&&Matter.Query.collides(this,map).length&&(Matter.Body.setPosition(this,Vector.add(this.position,{x:-20*Math.cos(this.angle),y:-20*Math.sin(this.angle)})),Matter.Query.collides(this,map).length)){if(tech.hookNails){b.targetedNail(this.position,tech.hookNails);const t=2*Math.PI*Math.random();for(let e=0;e<4;e++)b.nail(this.position,{x:10.5*Math.cos(t),y:10.5*Math.sin(t)},1.2)}this.attached=!0,Matter.Body.setVelocity(this,{x:0,y:0}),Matter.Sleeping.set(this,!0),this.endCycle=simulation.cycle+5,this.do=()=>{input.field&&m.fieldCDcycle<m.cycle+5&&(m.fieldCDcycle=m.cycle+5),this.grabPowerUp();const t=Vector.sub(this.vertices[0],{x:m.pos.x+30*Math.cos(m.angle),y:m.pos.y+30*Math.sin(m.angle)});let e=Vector.magnitude(t);if(input.field){this.endCycle=simulation.cycle+10,input.down?(this.isSlowPull=!0,e=0,player.force.y+=3*player.mass*simulation.g):input.up&&(this.isSlowPull=!1,player.force.y-=player.mass*simulation.g),m.energy<this.drain&&(this.isSlowPull=!0);const o=1-30/Math.min(Math.max(100,e),700)-.1*(player.speed>66);Matter.Body.setVelocity(player,{x:player.velocity.x*o,y:player.velocity.y*o});const i=Vector.mult(Vector.normalise(t),4e-4*Math.min(Math.max(15,e),this.isSlowPull?70:200));player.force.x+=i.x,player.force.y+=i.y,e>500&&(m.energy-=this.drain)}else Matter.Sleeping.set(this,!1),this.retract();this.draw()}}this.force.x+=this.thrustMag*this.mass*Math.cos(this.angle),this.force.y+=this.thrustMag*this.mass*Math.sin(this.angle),this.draw()}}),Composite.add(engine.world,bullet[o]),Matter.Body.setVelocity(bullet[o],player.velocity)},harpoon(t,e,o=m.angle,i=1,s=!1,a=35,l=!0,n=.1){const r=bullet.length,c=100*Math.sqrt(i);let h;if(tech.isRebar){const t=tech.isMaul?32:65,e=tech.isMaul?25:5;h=[{x:-t*i,y:e*i,index:0,isInternal:!1},{x:-t*i*1.05,y:0,index:1,isInternal:!1},{x:-t*i,y:-e*i,index:2,isInternal:!1},{x:t*i,y:-e*i,index:3,isInternal:!1},{x:t*i*1.05,y:0,index:4,isInternal:!1},{x:t*i,y:e*i,index:5,isInternal:!1}]}else h=[{x:-40*i,y:2*i,index:0,isInternal:!1},{x:-40*i,y:-2*i,index:1,isInternal:!1},{x:50*i,y:-3*i,index:3,isInternal:!1},{x:30*i,y:2*i,index:4,isInternal:!1}];bullet[r]=Bodies.fromVertices(t.x,t.y,h,{cycle:0,angle:o,friction:1,frictionAir:.4,drain:tech.isRailEnergy?2e-4:.006,turnRate:s?.1:.03,drawStringControlMagnitude:3e3+5e3*Math.random(),drawStringFlip:Math.round(Math.random())?1:-1,dmg:6,classType:"bullet",endCycle:simulation.cycle+2.5*a+40,collisionFilter:{category:cat.bullet,mask:tech.isShieldPierce?cat.map|cat.body|cat.mob|cat.mobBullet:cat.map|cat.body|cat.mob|cat.mobBullet|cat.mobShield},minDmgSpeed:4,lookFrequency:Math.floor(7+3*Math.random()),density:tech.harpoonDensity*(tech.isRebar?.6:1),foamSpawned:0,beforeDmg(t){if(tech.isShieldPierce&&t.isShielded&&(t.isShielded=!1,requestAnimationFrame(()=>{t.isShielded=!0})),tech.fragments&&(b.targetedNail(this.vertices[2],tech.fragments*Math.floor(2+Math.random())),s||(this.endCycle=0)),t.isBadTarget||(s?this.do=this.returnToPlayer:(this.frictionAir=.01,this.do=()=>{this.force.y+=.003*this.mass,this.draw()})),tech.isFoamBall&&this.foamSpawned<55)for(let t=0,e=Math.min(30,2+3*Math.sqrt(this.mass));t<e;t++){const t=5+9*Math.random(),e={x:Math.max(.5,2-.1*t),y:0};b.foam(this.position,Vector.rotate(e,6.28*Math.random()),t),this.foamSpawned++}if(tech.isHarpoonPowerUp&&simulation.cycle-480<tech.harpoonPowerUpCycle?Matter.Body.setDensity(this,1.8*tech.harpoonDensity):tech.isHarpoonFullHealth&&1===t.health&&(Matter.Body.setDensity(this,2.2*tech.harpoonDensity),simulation.ephemera.push({count:2,vertices:this.vertices,do(){this.count--,this.count<0&&simulation.removeEphemera(this),ctx.beginPath(),ctx.moveTo(this.vertices[0].x,this.vertices[0].y);for(let t=1,e=this.vertices.length;t<e;t+=1)ctx.lineTo(this.vertices[t].x,this.vertices[t].y);ctx.lineTo(this.vertices[0].x,this.vertices[0].y),ctx.lineJoin="miter",ctx.miterLimit=20,ctx.lineWidth=40,ctx.strokeStyle="rgba(255,0,100,0.35)",ctx.stroke(),ctx.lineWidth=10,ctx.strokeStyle="#f07",ctx.stroke(),ctx.lineJoin="round",ctx.miterLimit=5,ctx.fillStyle="#000",ctx.fill()}})),tech.isBreakHarpoon&&Math.random()<.1){tech.isBreakHarpoonGain&&(powerUps.spawn(m.pos.x,m.pos.y-50,"research"),powerUps.spawn(m.pos.x-20,m.pos.y+15,"research"),powerUps.spawn(m.pos.x+20,m.pos.y+15,"boost"),b.targetedNail(this.position,Math.floor(1+1.5*Math.random()))),this.endCycle+=60,this.frictionAir=.01,Matter.Body.setAngularVelocity(this,.7*(Math.random()-.5));const t=Vector.normalise(this.velocity);Matter.Body.setVelocity(this,Vector.mult(t,Math.min(this.speed,20))),this.do=()=>{this.force.y+=.005*this.mass}}},caughtPowerUp:null,dropCaughtPowerUp(){this.caughtPowerUp&&(this.caughtPowerUp.collisionFilter.category=cat.powerUp,this.caughtPowerUp.collisionFilter.mask=cat.map|cat.powerUp,this.caughtPowerUp=null)},onEnd(){if(!this.caughtPowerUp||simulation.isChoosing||"heal"===this.caughtPowerUp.name&&m.health===m.maxHealth&&!tech.isOverHeal)this.dropCaughtPowerUp();else{let t=null;for(let e=0,o=powerUp.length;e<o;++e)powerUp[e]===this.caughtPowerUp&&(t=e);null!==t?(powerUps.onPickUp(this.caughtPowerUp),this.caughtPowerUp.effect(),Matter.Composite.remove(engine.world,this.caughtPowerUp),powerUp.splice(t,1),tech.isHarpoonPowerUp&&(tech.harpoonPowerUpCycle=simulation.cycle)):this.dropCaughtPowerUp()}},drawDamageAura(){ctx.beginPath(),ctx.moveTo(this.vertices[0].x,this.vertices[0].y);for(let t=1,e=this.vertices.length;t<e;t+=1)ctx.lineTo(this.vertices[t].x,this.vertices[t].y);ctx.lineTo(this.vertices[0].x,this.vertices[0].y),ctx.lineJoin="miter",ctx.miterLimit=20,ctx.lineWidth=15,ctx.strokeStyle="rgba(255,0,100,0.25)",ctx.stroke(),ctx.lineWidth=4,ctx.strokeStyle="#f07",ctx.stroke(),ctx.lineJoin="round",ctx.miterLimit=5,ctx.fillStyle="#000",ctx.fill()},drawString(){ropeIndex=this.vertices.length-1;const t={x:m.pos.x+30*Math.cos(m.angle),y:m.pos.y+30*Math.sin(m.angle)},e=Vector.sub(t,this.vertices[ropeIndex]),o=Vector.mult(Vector.normalise(Vector.perp(e)),this.drawStringFlip*Math.min(80,10+this.drawStringControlMagnitude/(10+Vector.magnitude(e)))),i=Vector.add(Vector.add(t,Vector.mult(e,-.5)),o);ctx.strokeStyle="#000",ctx.lineWidth=.5,ctx.beginPath(),ctx.moveTo(t.x,t.y),ctx.quadraticCurveTo(i.x,i.y,this.vertices[ropeIndex].x,this.vertices[ropeIndex].y),ctx.stroke()},draw(){},returnToPlayer(){if(Vector.magnitude(Vector.sub(this.position,m.pos))<c){this.endCycle=0;const t=Vector.mult(Vector.sub(this.velocity,player.velocity),m.crouch?1e-4:2e-4);player.force.x+=t.x,player.force.y+=t.y,l&&(b.guns[9].ammo++,simulation.updateGunHUD())}else{const t=Vector.sub(this.position,m.pos),e=1+1e-6*Vector.magnitude(t)*Vector.magnitude(t),o=Vector.mult(Vector.normalise(t),e*n*this.mass);m.energy>this.drain&&(m.energy-=this.drain),m.energy<.05?(this.force.x-=.15*o.x,this.force.y-=.15*o.y):(this.force.x-=o.x,this.force.y-=o.y),this.grabPowerUp()}this.draw()},grabPowerUp(){if(this.caughtPowerUp)Matter.Body.setPosition(this.caughtPowerUp,Vector.add(this.vertices[2],this.velocity)),Matter.Body.setVelocity(this.caughtPowerUp,{x:0,y:0});else for(let t=0,e=powerUp.length;t<e;++t){if(tech.isEnergyNoAmmo&&"ammo"===powerUp[t].name)continue;const e=powerUp[t].circleRadius+50;if(Vector.magnitudeSquared(Vector.sub(this.vertices[2],powerUp[t].position))<e*e&&!powerUp[t].isGrabbed&&("heal"!==powerUp[t].name||m.health!==m.maxHealth||tech.isOverHeal)){powerUp[t].isGrabbed=!0,this.caughtPowerUp=powerUp[t],Matter.Body.setVelocity(powerUp[t],{x:0,y:0}),Matter.Body.setPosition(powerUp[t],this.vertices[2]),powerUp[t].collisionFilter.category=0,powerUp[t].collisionFilter.mask=0,n*=.6,this.endCycle+=.5;break}}},do(){if(this.cycle++,s||e){if(s)if(this.cycle>a){this.do=this.returnToPlayer,this.angularSpeed<.5&&(this.torque+=.001*this.inertia*(Math.random()-.5)),Matter.Sleeping.set(this,!1),this.endCycle=simulation.cycle+240;const t=Vector.mult(Vector.sub(this.velocity,player.velocity),m.crouch?15e-5:3e-4);player.force.x+=t.x,player.force.y+=t.y,requestAnimationFrame(()=>{this.collisionFilter.category=0,this.collisionFilter.mask=0})}else this.grabPowerUp();if(e){const t={x:Math.cos(this.angle),y:Math.sin(this.angle)},o=Vector.normalise(Vector.sub(this.position,e.position));Vector.cross(o,t)>0?Matter.Body.rotate(this,this.turnRate):Matter.Body.rotate(this,-this.turnRate)}this.force.x+=n*this.mass*Math.cos(this.angle),this.force.y+=n*this.mass*Math.sin(this.angle)}this.draw()}}),s||e||(Matter.Body.setVelocity(bullet[r],{x:.7*player.velocity.x+600*n*Math.cos(bullet[r].angle),y:.5*player.velocity.x+600*n*Math.sin(bullet[r].angle)}),bullet[r].frictionAir=.002,bullet[r].do=function(){this.speed<20&&(this.force.y+=5e-4*this.mass),this.draw()}),tech.isHarpoonPowerUp&&simulation.cycle-480<tech.harpoonPowerUpCycle?bullet[r].draw=s?function(){this.drawDamageAura(),this.drawString()}:function(){this.drawDamageAura()}:s&&(bullet[r].draw=function(){this.drawString()}),Composite.add(engine.world,bullet[r])},missile(t,e,o,i=1){tech.isMissileBig&&(i*=1.5,tech.isMissileBiggest&&(i*=1.5));const s=bullet.length;bullet[s]=Bodies.rectangle(t.x,t.y,30*i,4*i,{angle:e,friction:.5,frictionAir:.045,dmg:0,classType:"bullet",endCycle:simulation.cycle+Math.floor((230+40*Math.random())*tech.bulletsLastLonger+120*tech.isMissileBiggest+60*tech.isMissileBig),collisionFilter:{category:cat.bullet,mask:cat.map|cat.body|cat.mob|cat.mobBullet|cat.mobShield},minDmgSpeed:10,lookFrequency:Math.floor(10+3*Math.random()),explodeRad:180+60*Math.random(),density:.02,beforeDmg(){Matter.Body.setDensity(this,1e-4),this.tryToLockOn(),this.endCycle=0},onEnd(){b.explosion(this.position,this.explodeRad*i),tech.fragments&&b.targetedNail(this.position,tech.fragments*Math.floor(2+1.5*Math.random())),tech.isMissileFast&&simulation.ephemera.push({count:35,where:this.position,size:this.explodeRad*i,do(){if(!m.isTimeDilated)if(this.count--,this.count<3)simulation.removeEphemera(this);else if(15===this.count)b.explosion(this.where,this.size*(tech.isMissile2ndExplode?1.7:.8));else if(this.count<17){ctx.beginPath();const t=this.size*(tech.isMissile2ndExplode?1.7:.8);ctx.arc(this.where.x,this.where.y,t,0,2*Math.PI),ctx.strokeStyle="#000",ctx.lineWidth=4,ctx.stroke()}}})},lockedOn:null,tryToLockOn(){let t=1/0;const e=Vector.add(this.position,Vector.mult(this.velocity,30));this.lockedOn=null;for(let o=0,s=mob.length;o<s;++o)if(mob[o].alive&&!mob[o].isBadTarget&&0===Matter.Query.ray(map,this.position,mob[o].position).length&&!mob[o].isInvulnerable){const s=Vector.magnitude(Vector.sub(e,mob[o].position));s<t&&(t=s,this.lockedOn=mob[o]),Vector.magnitude(Vector.sub(this.position,mob[o].position)<this.explodeRad)&&(this.endCycle=0,mob[o].lockedOn.damage(2*i))}this.lockedOn&&Vector.magnitude(Vector.sub(this.position,this.lockedOn.position))<this.explodeRad&&(this.endCycle=0,this.lockedOn.damage(4*i))},do(){if(m.cycle%this.lookFrequency||this.tryToLockOn(),tech.isTargeting&&input.down){const t={x:Math.cos(this.angle),y:Math.sin(this.angle)},e=Vector.normalise(Vector.sub(this.position,simulation.mouseInGame)),o=Vector.dot(e,t),i=Math.min(.08,1*(1+o));Vector.cross(e,t)>0?Matter.Body.rotate(this,i):Matter.Body.rotate(this,-i),this.frictionAir=Math.min(.1,Math.max(.04,1+o)),ctx.strokeStyle="#000",ctx.lineWidth=1,ctx.strokeRect(simulation.mouseInGame.x-40,simulation.mouseInGame.y-40,80,80)}else if(this.lockedOn){const t={x:Math.cos(this.angle),y:Math.sin(this.angle)},e=Vector.normalise(Vector.sub(this.position,this.lockedOn.position)),o=Vector.dot(e,t),i=Math.min(.08,1*(1+o));Vector.cross(e,t)>0?Matter.Body.rotate(this,i):Matter.Body.rotate(this,-i),this.frictionAir=Math.min(.1,Math.max(.04,1+o))}const t=this.angle;this.force.x+=a*Math.cos(t),this.force.y+=a*Math.sin(t),ctx.beginPath(),ctx.arc(this.position.x-Math.cos(this.angle)*(25*i-3)+4*(Math.random()-.5),this.position.y-Math.sin(this.angle)*(25*i-3)+4*(Math.random()-.5),11*i,0,2*Math.PI),ctx.fillStyle="rgba(255,155,0,0.5)",ctx.fill()}});const a=.0066*bullet[s].mass*(tech.isMissileBig?tech.isMissileBiggest?.3:.7:1);Matter.Body.setVelocity(bullet[s],{x:.5*player.velocity.x+o*Math.cos(e),y:.5*player.velocity.y+o*Math.sin(e)}),Composite.add(engine.world,bullet[s]),tech.isMissileFast&&simulation.ephemera.push({name:Math.random(),count:40,who:bullet[s],do(){if(!m.isTimeDilated){const t=.07*this.who.mass;if(this.count--,this.count<0||!this.who)simulation.removeEphemera(this);else if(this.count<3)if(2===this.count&&this.who.tryToLockOn(),this.who.lockedOn){const e=Vector.normalise(Vector.sub(this.who.lockedOn.position,this.who.position)),o=Vector.mult(e,t);this.who.force.x+=o.x,this.who.force.y+=o.y}else{const e={x:Math.cos(this.who.angle),y:Math.sin(this.who.angle)},o=Vector.mult(e,t);this.who.force.x+=o.x,this.who.force.y+=o.y}else Matter.Body.setVelocity(this.who,{x:.7*this.who.velocity.x,y:.7*this.who.velocity.y})}}})},lastAngle:0,wasExtruderOn:!1,isExtruderOn:!1,didExtruderDrain:!1,canExtruderFire:!0,extruder(){const t=.0012;if(m.energy>t&&b.canExtruderFire){m.energy-=t,m.energy<0&&(m.fieldCDcycle=m.cycle+120,m.energy=0),b.isExtruderOn=!0;const e=8+12*tech.isPlasmaRange,o=bullet.length,i=Vector.add(m.pos,player.velocity);bullet[o]=Bodies.polygon(i.x+20*Math.cos(m.angle),i.y+20*Math.sin(m.angle),4,.01,{cycle:-.5,isWave:!0,endCycle:simulation.cycle+40,inertia:1/0,frictionAir:0,isInHole:!0,minDmgSpeed:0,dmg:2.7,classType:"bullet",isBranch:!1,restitution:0,collisionFilter:{category:0,mask:0},beforeDmg(){},onEnd(){},do(){if(this.endCycle<simulation.cycle+1&&(this.isWave=!1),Matter.Query.point(map,this.position).length)this.isBranch=!0,this.do=()=>{this.endCycle<simulation.cycle+1&&(this.isWave=!1)};else for(let t=0,e=mob.length;t<e;t++){const e=Vector.magnitudeSquared(Vector.sub(this.position,mob[t].position)),o=mob[t].radius+tech.extruderRange/2;if(e<o*o){mob[t].speed>2&&(mob[t].isBoss||mob[t].isShielded?Matter.Body.setVelocity(mob[t],{x:.95*mob[t].velocity.x,y:.95*mob[t].velocity.y}):Matter.Body.setVelocity(mob[t],{x:.25*mob[t].velocity.x,y:.25*mob[t].velocity.y}));let e=this.dmg/Math.min(10,mob[t].mass);mob[t].damage(e),mob[t].alive&&mob[t].foundPlayer()}}this.cycle++;const t=(m.crouch?6:12)*Math.cos(.09*simulation.cycle),e=Vector.mult(s,t*Math.cos(.36*this.cycle)),o=Vector.mult(player.velocity,.4);Matter.Body.setPosition(this,Vector.add(o,Vector.add(this.position,e)))}}),Composite.add(engine.world,bullet[o]),Matter.Body.setVelocity(bullet[o],{x:e*Math.cos(m.angle),y:e*Math.sin(m.angle)});const s=Vector.normalise(Vector.perp(bullet[o].velocity));(180-Math.abs(Math.abs(b.lastAngle-m.angle)-180)>.13||!b.wasExtruderOn)&&(bullet[o].isBranch=!0,bullet[o].do=function(){this.endCycle<simulation.cycle+1&&(this.isWave=!1)}),b.lastAngle=m.angle}else b.canExtruderFire=!1},plasma(){const t=75e-5;if(m.energy>t){m.energy-=t,m.energy<0&&(m.fieldCDcycle=m.cycle+120,m.energy=0);let e=tech.isPlasmaRange*(120+(m.crouch?400:300)*Math.sqrt(Math.random()));const o=[{x:m.pos.x+20*Math.cos(m.angle),y:m.pos.y+20*Math.sin(m.angle)},{x:m.pos.x+e*Math.cos(m.angle),y:m.pos.y+e*Math.sin(m.angle)}];let i={x:null,y:null,dist2:1/0,who:null,v1:null,v2:null};if(i=vertexCollision(o[0],o[1],[mob,map,body]),i.dist2!=1/0)if(o[o.length-1]={x:i.x,y:i.y},i.who.alive){const t=.9;if(i.who.damage(t),i.who.locatePlayer(),i.who.speed>3){const t=Vector.mult(Vector.normalise(Vector.sub(m.pos,o[1])),-.005*Math.min(5,i.who.mass));Matter.Body.applyForce(i.who,o[1],t),Matter.Body.setVelocity(i.who,{x:.4*i.who.velocity.x,y:.4*i.who.velocity.y})}else{const t=Vector.mult(Vector.normalise(Vector.sub(m.pos,o[1])),-.01*Math.min(5,i.who.mass));Matter.Body.applyForce(i.who,o[1],t),Matter.Body.setVelocity(i.who,{x:.7*i.who.velocity.x,y:.7*i.who.velocity.y})}simulation.drawList.push({x:o[1].x,y:o[1].y,radius:Math.sqrt(2e3*t*i.who.damageReduction),color:"rgba(255,0,255,0.2)",time:4*simulation.drawTime})}else if(!i.who.isStatic){const t=Vector.mult(Vector.normalise(Vector.sub(m.pos,o[1])),-.007*Math.sqrt(Math.sqrt(i.who.mass)));Matter.Body.applyForce(i.who,o[1],t)}ctx.strokeStyle="rgba(255,0,255,0.1)",ctx.lineWidth=14,ctx.beginPath(),ctx.moveTo(o[0].x,o[0].y),ctx.lineTo(o[1].x,o[1].y),ctx.stroke(),ctx.strokeStyle="#f0f",ctx.lineWidth=2,ctx.stroke();const s=Math.cos(m.angle),a=Math.sin(m.angle);let l=m.pos.x+20*s,n=m.pos.y+20*a;ctx.beginPath(),ctx.moveTo(l,n);const r=Vector.magnitude(Vector.sub(o[0],o[1]))/10;for(let t=0;t<8;t++)l+=r*(s+1.5*(Math.random()-.5)),n+=r*(a+1.5*(Math.random()-.5)),ctx.lineTo(l,n);ctx.lineWidth=2*Math.random(),ctx.stroke()}},laser(t={x:m.pos.x+20*Math.cos(m.angle),y:m.pos.y+20*Math.sin(m.angle)},e={x:t.x+3e3*Math.cos(m.angle),y:t.y+3e3*Math.sin(m.angle)},o=tech.laserDamage,i=tech.laserReflections,s=!1,a=1){const l=1-1/(3*i);let n={x:1,y:1,dist2:1/0,who:null,v1:1,v2:1};const r=[{x:t.x,y:t.y},{x:e.x,y:e.y}],c=function(){n=vertexCollision(r[r.length-2],r[r.length-1],[mob,map,body])},h=function(){if(n.who.alive){if(n.who.locatePlayer(),n.who.damageReduction&&(tech.laserCrit&&!n.who.shield&&Vector.dot(Vector.normalise(Vector.sub(n.who.position,r[r.length-1])),Vector.normalise(Vector.sub(r[r.length-1],r[r.length-2])))>.999-.5/n.who.radius?(o*=1+tech.laserCrit,simulation.drawList.push({x:r[r.length-1].x,y:r[r.length-1].y,radius:Math.sqrt(2500*o*n.who.damageReduction)+5,color:`hsla(${60+283*Math.random()},100%,70%,0.5)`,time:16})):simulation.drawList.push({x:r[r.length-1].x,y:r[r.length-1].y,radius:Math.sqrt(2e3*o*n.who.damageReduction)+2,color:tech.laserColorAlpha,time:simulation.drawTime}),n.who.damage(o)),tech.isLaserPush){const t=r.length-1;Matter.Body.setVelocity(n.who,{x:.97*n.who.velocity.x,y:.97*n.who.velocity.y});const e=Vector.mult(Vector.normalise(Vector.sub(r[t],r[Math.max(0,t-1)])),.003*a*Math.min(6,n.who.mass));Matter.Body.applyForce(n.who,r[t],e)}}else if(tech.isLaserPush&&"body"===n.who.classType){const t=r.length-1;Matter.Body.setVelocity(n.who,{x:.97*n.who.velocity.x,y:.97*n.who.velocity.y});const e=Vector.mult(Vector.normalise(Vector.sub(r[t],r[Math.max(0,t-1)])),.003*a*Math.min(6,n.who.mass));Matter.Body.applyForce(n.who,r[t],e)}},d=function(){const t=Vector.perp(Vector.normalise(Vector.sub(n.v1,n.v2))),e=Vector.sub(r[r.length-1],r[r.length-2]),o=Vector.mult(t,2*Vector.dot(e,t)),i=Vector.normalise(Vector.sub(e,o));r[r.length]=Vector.add(Vector.mult(i,5e3),r[r.length-1])};let u;c();let y=n.who;if(n.dist2!==1/0){r[r.length-1]={x:n.x,y:n.y},h();for(let t=0;t<i&&(d(),c(),n.dist2!==1/0);t++)if(lastReflection=n,r[r.length-1]={x:n.x,y:n.y},o*=l,h(),t%2){if(u===n.who)break}else if(u=n.who,y===n.who)break}if(s)for(let t=1,e=r.length;t<e;++t)ctx.moveTo(r[t-1].x,r[t-1].y),ctx.lineTo(r[t].x,r[t].y);else if(tech.isLaserLens&&1!==b.guns[11].lensDamage){ctx.strokeStyle=tech.laserColor,ctx.lineWidth=2,ctx.lineDashOffset=900*Math.random(),ctx.setLineDash([50+120*Math.random(),50*Math.random()]);for(let t=1,e=r.length;t<e;++t)ctx.beginPath(),ctx.moveTo(r[t-1].x,r[t-1].y),ctx.lineTo(r[t].x,r[t].y),ctx.stroke(),ctx.globalAlpha*=l;ctx.setLineDash([]),ctx.lineWidth=9+2*b.guns[11].lensDamageOn,ctx.globalAlpha=.13,ctx.beginPath();for(let t=1,e=r.length;t<e;++t)ctx.moveTo(r[t-1].x,r[t-1].y),ctx.lineTo(r[t].x,r[t].y);ctx.stroke(),ctx.globalAlpha=1}else{ctx.strokeStyle=tech.laserColor,ctx.lineWidth=2,ctx.lineDashOffset=900*Math.random(),ctx.setLineDash([50+120*Math.random(),50*Math.random()]);for(let t=1,e=r.length;t<e;++t)ctx.beginPath(),ctx.moveTo(r[t-1].x,r[t-1].y),ctx.lineTo(r[t].x,r[t].y),ctx.stroke(),ctx.globalAlpha*=l;ctx.setLineDash([]),ctx.globalAlpha=1}},AoEStunEffect(t,e,o=120+60*Math.random()){for(let i=0,s=mob.length;i<s;++i)!mob[i].alive||mob[i].isShielded||mob[i].shield||mob[i].isBadTarget||Vector.magnitude(Vector.sub(t,mob[i].position))-mob[i].radius<e&&mobs.statusStun(mob[i],o);simulation.drawList.push({x:t.x,y:t.y,radius:e,color:"rgba(0,0,0,0.1)",time:15})},laserMine(t,e={x:0,y:-8}){const o=bullet.length;bullet[o]=Bodies.polygon(t.x,t.y,3,25,{bulletType:"laser mine",angle:m.angle,friction:0,frictionAir:.025,restitution:.5,dmg:0,minDmgSpeed:2,lookFrequency:67+Math.floor(7*Math.random()),drain:.7*tech.laserDrain,isDetonated:!1,torqueMagnitude:3e-6*(Math.round(Math.random())?1:-1),range:1500,endCycle:1/0,classType:"bullet",collisionFilter:{category:cat.bullet,mask:cat.map|cat.body|cat.mob|cat.mobBullet|cat.mobShield},beforeDmg(){},onEnd(){},do(){if(!(simulation.cycle%this.lookFrequency)&&m.energy>this.drain)for(let t=0,e=mob.length;t<e;++t)if(Vector.magnitude(Vector.sub(this.position,mob[t].position))<1300&&!mob[t].isBadTarget&&0===Matter.Query.ray(map,this.position,mob[t].position).length&&0===Matter.Query.ray(body,this.position,mob[t].position).length){tech.isStun&&b.AoEStunEffect(this.position,1300),this.do=this.laserSpin,this.angularSpeed<.5&&(this.torque+=this.inertia*this.torqueMagnitude*200),this.endCycle=simulation.cycle+360+120,this.isDetonated=!0;break}},reflections:Math.max(0,tech.laserReflections-2),laserSpin(){if(m.energy>this.drain){m.energy-=this.drain,this.angularSpeed<.05&&(this.torque+=this.inertia*this.torqueMagnitude),ctx.strokeStyle=tech.laserColor,ctx.lineWidth=1.5,ctx.beginPath();for(let t=0;t<3;t++){const e=this.vertices[t],o=Vector.add(e,Vector.mult(Vector.normalise(Vector.sub(e,this.position)),2500));b.laser(e,o,13*tech.laserDamage,this.reflections,!0)}ctx.stroke()}this.endCycle-60<simulation.cycle&&(this.do=()=>{})}}),Matter.Body.setVelocity(bullet[o],e),Composite.add(engine.world,bullet[o])},mine(t,e,o=0){const i=bullet.length;bullet[i]=Bodies.rectangle(t.x,t.y,45,16,{angle:o,friction:1,frictionStatic:1,frictionAir:0,restitution:0,dmg:0,classType:"bullet",bulletType:"mine",collisionFilter:{category:cat.bullet,mask:cat.map|cat.body|cat.mob|cat.mobBullet|cat.mobShield},minDmgSpeed:5,stillCount:0,isArmed:!1,endCycle:1/0,lookFrequency:0,range:700-300*tech.isFoamMine,beforeDmg(){},onEnd(){if(this.isArmed&&!tech.isMineSentry)if(tech.isFoamMine){for(let t=0;t<12;t++){const t=13+8*Math.random(),e={x:.5+5.5*Math.random(),y:0};b.foam(this.position,Vector.rotate(e,this.angle+1.57+3*(Math.random()-.5)),t)}let t=0,e=()=>{t<50&&(simulation.paused||simulation.isChoosing||(//!(simulation.cycle % 1) &&
t++,b.targetedFoam(this.position)),requestAnimationFrame(e))};requestAnimationFrame(e)}else tech.isSuperMine?b.targetedBall(this.position,22+2*tech.extraSuperBalls):b.targetedNail(this.position,22,40+10*Math.random(),1200,2.2)},do(){this.force.y+=.002*this.mass;let t=Matter.Query.collides(this,map);if(t.length>0){for(let e=0;e<t.length;e++)if(t[e].bodyA.collisionFilter.category===cat.map){const o=Vector.angle(t[e].normal,{x:1,y:0});Matter.Body.setAngle(this,Math.atan2(t[e].tangent.y,t[e].tangent.x));for(let i=0;i<10;i++){if(Matter.Query.collides(this,map).length>0){o>-.2||o<-1.5?(Matter.Body.setVelocity(this,{x:0,y:0}),Matter.Body.setStatic(this,!0),this.collisionFilter.category=0,this.collisionFilter.mask=0):(Matter.Body.setVelocity(this,{x:0,y:0}),Matter.Body.setAngularVelocity(this,0)),this.arm(),setTimeout(()=>{(0===Matter.Query.collides(this,map).length||Matter.Query.point(map,this.position).length>0)&&(this.endCycle=0,this.isArmed=!1,b.mine(this.position,this.velocity,this.angle))},100);break}Matter.Body.setPosition(this,Vector.add(this.position,Vector.mult(t[e].normal,2)))}break}}else this.speed<1&&this.angularSpeed<.01&&this.stillCount++;this.stillCount>25&&this.arm()},arm(){this.collisionFilter.mask=cat.map|cat.body|cat.mob|cat.mobBullet|cat.mobShield|cat.bullet,this.lookFrequency=simulation.cycle+60,this.do=function(){this.force.y+=.002*this.mass,simulation.cycle>this.lookFrequency&&(this.isArmed=!0,this.lookFrequency=55+Math.floor(22*Math.random()),simulation.drawList.push({x:this.position.x,y:this.position.y,radius:10,color:"#f00",time:4}),this.do=function(){if(this.force.y+=.002*this.mass,!(simulation.cycle%this.lookFrequency)){const t=300*Math.random();for(let e=0,o=mob.length;e<o;++e)if(!mob[e].isBadTarget&&!mob[e].isInvulnerable&&Vector.magnitude(Vector.sub(this.position,mob[e].position))<this.range+mob[e].radius+t&&0===Matter.Query.ray(map,this.position,mob[e].position).length&&0===Matter.Query.ray(body,this.position,mob[e].position).length){if(tech.isStun&&b.AoEStunEffect(this.position,this.range+mob[e].radius+t),tech.isMineSentry){this.lookFrequency=Math.floor(5+7*b.fireCDscale+10*(tech.oneSuperBall&&tech.isSuperMine)+Math.floor(2*Math.random())),this.shots=tech.sentryAmmo,this.do=function(){if(this.force.y+=.002*this.mass,!(simulation.cycle%this.lookFrequency)){if(tech.isFoamMine)this.shots-=.6*b.targetedFoam(this.position,1,21+7*Math.random(),1200,!1),b.targetedFoam(this.position,1,21+7*Math.random(),1200,!1);else if(tech.isSuperMine){const t=tech.oneSuperBall?2:.7;this.shots-=t*b.targetedBall(this.position,1,42+12*Math.random(),1200,!1);for(let t=0,e=tech.extraSuperBalls/4;t<e;t++)Math.random()<.33&&b.targetedBall(this.position,1,42+12*Math.random(),1200,!1)}else this.shots-=b.targetedNail(this.position,1,45+5*Math.random(),1100,2.3);this.shots<0&&(this.endCycle=0),simulation.cycle%(6*this.lookFrequency)||simulation.drawList.push({x:this.position.x,y:this.position.y,radius:8,color:"#fe0",time:4})}};break}this.endCycle=0;break}}})}}}),bullet[i].torque+=2e-4*bullet[i].inertia*(.5-Math.random()),Matter.Body.setVelocity(bullet[i],e),Composite.add(engine.world,bullet[i])},worm(t,e=tech.isSporeFreeze){const o=bullet.length,i=6+4.2*tech.wormSize*Math.random();if(o<500){bullet[o]=Bodies.polygon(t.x,t.y,3,3,{inertia:1/0,isFreeze:e,restitution:.5,friction:0,frictionAir:.025,thrust:(tech.isSporeFollow?.0012:55e-5)*(1+.5*(Math.random()-.5)),wormSize:i,wormTail:1+Math.max(4,Math.min(i-2*tech.wormSize,30)),dmg:(tech.isMutualism?9.5:3.2)*i,lookFrequency:100+Math.floor(37*Math.random()),classType:"bullet",collisionFilter:{category:cat.bullet,mask:cat.map|cat.mob|cat.mobBullet|cat.mobShield},endCycle:simulation.cycle+Math.floor((600+Math.floor(420*Math.random()))*tech.bulletsLastLonger),minDmgSpeed:0,playerOffPosition:{x:100*(Math.random()-.5),y:100*(Math.random()-.5)},beforeDmg(t){t.isInvulnerable?Matter.Body.setVelocity(this,Vector.mult(this.velocity,.1)):(tech.isSpawnBulletsOnDeath&&t.alive&&t.isDropPowerUp?setTimeout(()=>{if(!t.alive)for(let t=0;t<3;t++)b.worm(this.position),bullet[bullet.length-1].endCycle=Math.min(simulation.cycle+Math.floor(420*tech.bulletsLastLonger),this.endCycle+180+Math.floor(60*Math.random()));this.endCycle=0},1):this.endCycle=0,this.isFreeze&&mobs.statusSlow(t,90))},onEnd(){tech.isMutualism&&this.isMutualismActive&&!tech.isEnergyHealth&&(m.health+=.02,m.health>m.maxHealth&&(m.health=m.maxHealth),m.displayHealth())},tailCycle:6.28*Math.random(),do(){this.tailCycle+=.025*this.speed,ctx.beginPath(),ctx.moveTo(this.position.x,this.position.y);const t=Math.min(7,this.speed),e=Vector.mult(Vector.normalise(this.velocity),-.6*this.wormTail*t),o=Vector.add(this.position,e),i=Vector.add(Vector.add(o,e),Vector.rotate(e,Math.sin(this.tailCycle)));if(ctx.quadraticCurveTo(o.x,o.y,i.x,i.y),ctx.lineWidth=this.wormSize,ctx.strokeStyle="#000",ctx.stroke(),this.lockedOn&&this.lockedOn.alive)this.force=Vector.mult(Vector.normalise(Vector.sub(this.lockedOn.position,this.position)),this.mass*this.thrust);else{if(!(simulation.cycle%this.lookFrequency)){this.closestTarget=null,this.lockedOn=null;let t=1/0;for(let e=0,o=mob.length;e<o;++e)if(!mob[e].isBadTarget&&0===Matter.Query.ray(map,this.position,mob[e].position).length&&!mob[e].isInvulnerable){const o=Vector.sub(this.position,mob[e].position),i=Vector.magnitude(o)*(Math.random()+.5);if(i<t&&(this.closestTarget=mob[e].position,t=i,this.lockedOn=mob[e],.3>Math.random()))break}}if(tech.isSporeFollow&&null===this.lockedOn){const t=this.position.x-m.pos.x,e=this.position.y-m.pos.y;t*t+e*e>1e4&&(this.force=Vector.mult(Vector.normalise(Vector.sub(m.pos,Vector.add(this.playerOffPosition,this.position))),this.mass*this.thrust))}else{const t=Vector.normalise(this.velocity),e=Vector.mult(Vector.rotate(t,.005*this.playerOffPosition.x),3e-6);this.force.x+=e.x,this.force.y+=e.y}}}});const s=2+1*Math.random(),a=2*Math.PI*Math.random();Matter.Body.setVelocity(bullet[o],{x:s*Math.cos(a),y:s*Math.sin(a)}),Composite.add(engine.world,bullet[o]),tech.isMutualism&&m.health>.5&&(m.health-=.02,m.displayHealth(),bullet[o].isMutualismActive=!0)}},spore(t,e=null){const o=bullet.length;if(o<500){if(bullet[o]=Bodies.polygon(t.x,t.y,4,4,{inertia:1/0,isFreeze:tech.isSporeFreeze,restitution:.5,angle:2*Math.random()*Math.PI,friction:0,frictionAir:.025,thrust:(tech.isSporeFollow?.0011:5e-4)*(1+.3*(Math.random()-.5)),dmg:tech.isMutualism?20:7,lookFrequency:100+Math.floor(117*Math.random()),classType:"bullet",isSpore:!0,collisionFilter:{category:cat.bullet,mask:cat.map|cat.mob|cat.mobBullet|cat.mobShield},endCycle:simulation.cycle+Math.floor((540+Math.floor(420*Math.random()))*tech.bulletsLastLonger),minDmgSpeed:0,playerOffPosition:{x:100*(Math.random()-.5),y:100*(Math.random()-.5)},beforeDmg(t){t.isInvulnerable||(this.endCycle=0,this.isFreeze&&mobs.statusSlow(t,90))},onEnd(){tech.isMutualism&&this.isMutualismActive&&!tech.isEnergyHealth&&(m.health+=.01,m.health>m.maxHealth&&(m.health=m.maxHealth),m.displayHealth())},do(){if(this.lockedOn&&this.lockedOn.alive)this.force=Vector.mult(Vector.normalise(Vector.sub(this.lockedOn.position,this.position)),this.mass*this.thrust);else{if(!(simulation.cycle%this.lookFrequency)){this.closestTarget=null,this.lockedOn=null;let t=1/0;for(let e=0,o=mob.length;e<o;++e)if(!mob[e].isBadTarget&&0===Matter.Query.ray(map,this.position,mob[e].position).length&&!mob[e].isInvulnerable){const o=Vector.sub(this.position,mob[e].position),i=Vector.magnitude(o)*(Math.random()+.5);if(i<t&&(this.closestTarget=mob[e].position,t=i,this.lockedOn=mob[e],.3>Math.random()))break}}if(tech.isSporeFollow&&null===this.lockedOn){const t=this.position.x-m.pos.x,e=this.position.y-m.pos.y;t*t+e*e>1e4&&(this.force=Vector.mult(Vector.normalise(Vector.sub(m.pos,Vector.add(this.playerOffPosition,this.position))),this.mass*this.thrust))}else this.force.y+=1e-4*this.mass}}}),e)Matter.Body.setVelocity(bullet[o],e);else{const t=4+8*Math.random(),e=2*Math.PI*Math.random();Matter.Body.setVelocity(bullet[o],{x:t*Math.cos(e),y:t*Math.sin(e)})}Composite.add(engine.world,bullet[o]),tech.isMutualism&&m.health>.05&&(m.health-=.01,m.displayHealth(),bullet[o].isMutualismActive=!0)}},iceIX(t=0,e=m.angle+2*Math.PI*Math.random(),o={x:m.pos.x+30*Math.cos(m.angle),y:m.pos.y+30*Math.sin(m.angle)}){const i=bullet.length,s=.0018,a=1-.11/tech.bulletsLastLonger;bullet[i]=Bodies.polygon(o.x,o.y,3,18,{angle:e-Math.PI,spin:4e-5*(.1+Math.random())*(Math.round(Math.random())?1:-1),friction:0,frictionAir:.02,restitution:.9,dmg:1.5,lookFrequency:14+Math.floor(8*Math.random()),endCycle:simulation.cycle+65*tech.bulletsLastLonger+Math.floor(25*Math.random()),classType:"bullet",collisionFilter:{category:cat.bullet,mask:cat.map|cat.body|cat.mob|cat.mobBullet|cat.mobShield},minDmgSpeed:0,lockedOn:null,beforeDmg(t){t.isInvulnerable||(tech.iceEnergy&&!t.shield&&!t.isShielded&&t.isDropPowerUp&&t.alive&&m.immuneCycle<m.cycle&&setTimeout(()=>{t.alive||(m.energy+=.8*tech.iceEnergy*level.isReducedRegen)},10),mobs.statusSlow(t,tech.iceIXFreezeTime),this.endCycle=simulation.cycle)},onEnd(){},do(){if(!(simulation.cycle%this.lookFrequency)){Matter.Body.scale(this,a,a),this.lockedOn=null;let t=1/0;for(let e=0,o=mob.length;e<o;++e)if(!mob[e].isBadTarget&&0===Matter.Query.ray(map,this.position,mob[e].position).length&&0===Matter.Query.ray(body,this.position,mob[e].position).length&&!mob[e].isInvulnerable){const o=Vector.sub(this.position,mob[e].position),i=Vector.magnitude(o);i<t&&(t=i,this.lockedOn=mob[e])}}this.lockedOn?this.force=Vector.mult(Vector.normalise(Vector.sub(this.lockedOn.position,this.position)),this.mass*s):this.force=Vector.mult(Vector.normalise(this.velocity),this.mass*s),this.torque+=this.inertia*this.spin}}),Composite.add(engine.world,bullet[i]),Matter.Body.setVelocity(bullet[i],{x:t*Math.cos(e),y:t*Math.sin(e)}),Matter.Body.setAngularVelocity(bullet[i],3e3*bullet[i].spin)},flea(t,e,o=6+3*Math.random()+10*tech.wormSize*Math.random()){const i=bullet.length;bullet[i]=Bodies.polygon(t.x,t.y,5,o,{isFlea:!0,angle:.5*Math.random(),friction:1,frictionStatic:1,frictionAir:0,restitution:0,density:5e-4,lookFrequency:19+Math.floor(7*Math.random()),endCycle:simulation.cycle+Math.floor(900*tech.bulletsLastLonger+420*Math.random()+Math.max(0,150-bullet.length)),classType:"bullet",collisionFilter:{category:cat.bullet,mask:cat.map|cat.body|cat.mob|cat.mobBullet|cat.mobShield},minDmgSpeed:0,lockedOn:null,delay:50,cd:simulation.cycle+10,dmg:0,setDamage(){this.dmg=o*(tech.isMutualism?3.3:1.1)},beforeDmg(t){Matter.Body.setVelocity(this,Vector.mult(Vector.normalise(Vector.sub(this.position,t.position)),10+10*Math.random())),this.cd=simulation.cycle+this.delay,t.isInvulnerable||0===this.dmg||(this.endCycle-=110,tech.isSporeFreeze&&mobs.statusSlow(t,90),tech.isSpawnBulletsOnDeath&&t.alive&&t.isDropPowerUp&&setTimeout(()=>{if(!t.alive)for(let t=0;t<2;t++){const t=10+5*Math.random(),e=2*Math.PI*Math.random();b.flea(this.position,{x:t*Math.cos(e),y:t*Math.sin(e)})}this.endCycle=0},1),setTimeout(()=>{this.dmg=0}))},onEnd(){tech.isMutualism&&this.isMutualismActive&&!tech.isEnergyHealth&&(m.health+=.02,m.health>m.maxHealth&&(m.health=m.maxHealth),m.displayHealth())},gravity:.002+.002*tech.isSporeFollow,do(){if(this.force.y+=this.gravity*this.mass,this.cd<simulation.cycle&&(Matter.Query.collides(this,map).length||Matter.Query.collides(this,body).length)){this.cd=simulation.cycle+this.delay,this.lockedOn=null;let t=1/0;for(let e=0,o=mob.length;e<o;++e)if(!mob[e].isBadTarget&&!mob[e].isInvulnerable&&mob[e].alive&&this.position.y-mob[e].position.y<1500&&this.position.y-mob[e].position.y>-300&&0===Matter.Query.ray(map,this.position,mob[e].position).length&&0===Matter.Query.ray(body,this.position,mob[e].position).length){const o=Vector.sub(this.position,mob[e].position),i=Vector.magnitude(o);i<t&&(t=i,this.lockedOn=mob[e])}if(tech.isSporeFollow&&!this.lockedOn&&0===Matter.Query.ray(map,this.position,m.pos).length&&(this.lockedOn={position:m.pos,velocity:{x:0,y:0}}),this.lockedOn){const e=Vector.add(this.lockedOn.position,Vector.mult(this.lockedOn.velocity,5)),o=Math.max(0,this.position.y-e.y),i=-.06*(this.position.x-e.x)/Math.sqrt(2*o/this.gravity),s=.085*Math.sqrt(this.gravity*o),a=.07+.02*tech.isSporeFollow,l=.12+.04*Math.random()+.05*tech.isSporeFollow,n=t>500?.05+.02*Math.random():.02+.01*Math.random();this.force.x=Math.max(-a,Math.min(a,i))*this.mass,this.force.y=-Math.max(n,Math.min(l,s))*this.mass}else Math.random()<.5?this.force.x=(.01+.03*Math.random())*this.mass*(this.velocity.x>0?1:-1):this.force.x=(.01+.03*Math.random())*this.mass*(Math.random()<.5?1:-1),this.force.y=-(.03+.08*Math.random())*this.mass;Matter.Body.setVelocity(this,{x:0,y:0}),this.setDamage()}}}),Composite.add(engine.world,bullet[i]),Matter.Body.setVelocity(bullet[i],e),tech.isMutualism&&m.health>.05&&(m.health-=.01,m.displayHealth(),bullet[bullet.length-1].isMutualismActive=!0)},delayDrones(t,e=1,o=0){let i=()=>{if(e>0&&(requestAnimationFrame(i),!simulation.paused&&!simulation.isChoosing&&m.alive))if(e--,tech.isDroneRadioactive)b.droneRadioactive({x:t.x+50*(Math.random()-.5),y:t.y+50*(Math.random()-.5)},0);else if(b.drone({x:t.x+50*(Math.random()-.5),y:t.y+50*(Math.random()-.5)},0),tech.isDroneGrab&&o>0){const t=bullet[bullet.length-1];t.isImproved=!0;const e=2.25;t.scale=e,Matter.Body.scale(t,e,e),t.endCycle+=3e3*tech.droneCycleReduction*tech.bulletsLastLonger,o--}};requestAnimationFrame(i)},drone(t={x:m.pos.x+30*Math.cos(m.angle)+20*(Math.random()-.5),y:m.pos.y+30*Math.sin(m.angle)+20*(Math.random()-.5)},e=1){const o=bullet.length,i=.0015,s=m.angle+.2*(Math.random()-.5),a=4.5+3*Math.random();bullet[o]=Bodies.polygon(t.x,t.y,8,a,{angle:s,inertia:1/0,friction:.05,frictionAir:0,restitution:1,density:5e-4,dmg:.34+.12*tech.isDroneTeleport+.15*tech.isDroneFastLook,lookFrequency:55+Math.floor(10*Math.random()),endCycle:simulation.cycle+Math.floor((900+400*Math.random())*tech.bulletsLastLonger*tech.droneCycleReduction)+5*a+Math.max(0,200-bullet.length),classType:"bullet",isDrone:!0,collisionFilter:{category:cat.bullet,mask:cat.map|cat.body|cat.bullet|cat.mob|cat.mobBullet|cat.mobShield},minDmgSpeed:0,lockedOn:null,deathCycles:110+5*a,isImproved:!1,scale:1,beforeDmg(t){if(t.isInvulnerable){const e=Vector.mult(Vector.normalise(Vector.sub(this.position,t.position)),-20);Matter.Body.setVelocity(this,{x:e.x,y:e.y}),this.lockedOn=null}else{const e=Vector.mult(Vector.normalise(Vector.sub(this.position,t.position)),-20);Matter.Body.setVelocity(this,{x:e.x,y:e.y}),this.lockedOn=null,this.endCycle>simulation.cycle+this.deathCycles&&(this.endCycle-=50+30*this.scale,simulation.cycle+this.deathCycles>this.endCycle&&(this.endCycle=simulation.cycle+this.deathCycles))}},onEnd(){if(tech.isDroneRespawn){const t=body.filter(t=>0===Matter.Query.ray(map,this.position,t.position).length&&!t.isNotHoldable&&Vector.magnitude(Vector.sub(this.position,t.position))<70+30*t.mass);if(t.length){const e=t.reduce((t,e)=>Vector.magnitude(Vector.sub(this.position,t.position))<Vector.magnitude(Vector.sub(this.position,e.position))?t:e);e&&m.energy>.041&&(m.energy-=.04,m.fieldUpgrades[4].endoThermic(.4),Composite.remove(engine.world,e),body.splice(body.indexOf(e),1),b.delayDrones(e.position,Math.sqrt(e.mass)),ctx.beginPath(),ctx.moveTo(this.position.x,this.position.y),ctx.lineTo(e.position.x,e.position.y),ctx.strokeStyle="#000",ctx.lineWidth=2,ctx.stroke(),simulation.ephemera.push({count:60,do(){this.count--,this.count<0&&simulation.removeEphemera(this),ctx.beginPath();let t=e.vertices;ctx.moveTo(t[0].x,t[0].y);for(let e=1;e<t.length;e++)ctx.lineTo(t[e].x,t[e].y);ctx.lineTo(t[0].x,t[0].y),ctx.lineWidth=2,ctx.strokeStyle=`rgba(0,0,0,${this.count/60})`,ctx.stroke()}}))}}},doRespawning(){Matter.Body.scale(this,.995,.995),this.bodyTarget?this.force=Vector.mult(Vector.normalise(Vector.sub(this.position,this.bodyTarget.position)),-this.mass*i):this.force.y+=.0012*this.mass},doDying(){this.force.y+=.0012*this.mass;Matter.Body.scale(this,.995,.995)},hasExploded:!1,eatPowerUp(t){if(simulation.ephemera.push({count:5,pos:this.position,PposX:powerUp[t].position.x,PposY:powerUp[t].position.y,size:powerUp[t].size,color:powerUp[t].color,do(){this.count--,this.count<0&&simulation.removeEphemera(this),ctx.strokeStyle="#000",ctx.lineWidth=3,ctx.beginPath(),ctx.moveTo(this.pos.x,this.pos.y),ctx.lineTo(this.PposX,this.PposY),ctx.stroke(),ctx.beginPath(),ctx.arc(this.PposX,this.PposY,this.size*(this.count+2)/7,0,2*Math.PI),ctx.fillStyle=this.color,ctx.fill()}}),powerUps.onPickUp(powerUp[t]),powerUp[t].effect(),Matter.Composite.remove(engine.world,powerUp[t]),powerUp.splice(t,1),tech.isDroneGrab){this.isImproved=!0,this.scale>1&&Matter.Body.scale(this,1/this.scale,1/this.scale);const t=2.25;this.scale=t,Matter.Body.scale(this,t,t),this.endCycle+=3e3*tech.droneCycleReduction*tech.bulletsLastLonger}},do(){if(simulation.cycle+this.deathCycles>this.endCycle)if(tech.isIncendiary&&!this.hasExploded&&(this.hasExploded=!0,b.explosion(this.position,200+110*this.isImproved+60*Math.random())),this.restitution=.2,tech.isDroneRespawn){this.do=this.doRespawning;const t=body.filter(t=>0===Matter.Query.ray(map,this.position,t.position).length&&!t.isNotHoldable);if(t.length){const e=t.reduce((t,e)=>Vector.magnitude(Vector.sub(this.position,t.position))<Vector.magnitude(Vector.sub(this.position,e.position))?t:e);e&&(this.bodyTarget=e)}}else this.do=this.doDying;if(this.force.y+=2e-4*this.mass,!(simulation.cycle%this.lookFrequency)){if(tech.isExponential)if(Matter.Query.collides(this,map).length>1){const t=.9;Matter.Body.scale(this,t,t),this.scale*=t}else{const t=1.03;Matter.Body.scale(this,t,t),this.scale*=t}this.lockedOn=null;let t=1/0;for(let e=0,o=mob.length;e<o;++e)if(!mob[e].isBadTarget&&0===Matter.Query.ray(map,this.position,mob[e].position).length&&0===Matter.Query.ray(body,this.position,mob[e].position).length&&!mob[e].isInvulnerable){const o=Vector.sub(this.position,mob[e].position),i=Vector.magnitude(o);i<t&&(t=i,this.lockedOn=mob[e])}if(tech.isDroneTeleport&&this.lockedOn){const t=Vector.sub(this.lockedOn.position,this.position),e=Vector.magnitude(t),o=Vector.normalise(t);Matter.Body.setVelocity(this,Vector.mult(o,Math.max(20,1.5*this.speed))),ctx.beginPath(),ctx.moveTo(this.position.x,this.position.y),Matter.Body.translate(this,Vector.mult(o,Math.min(350,e-this.lockedOn.radius+10))),ctx.lineTo(this.position.x,this.position.y),ctx.lineWidth=2*a,ctx.strokeStyle="rgba(0,0,0,0.5)",ctx.stroke()}if(!this.isImproved&&!simulation.isChoosing)if(this.lockedOn){for(let t=0,e=powerUp.length;t<e;++t)if(Vector.magnitudeSquared(Vector.sub(this.position,powerUp[t].position))<2e4&&!simulation.isChoosing&&!(m.health>.94*m.maxHealth&&!tech.isOverHeal&&!tech.isDroneGrab&&"heal"===powerUp[t].name||tech.isSuperDeterminism&&"field"===powerUp[t].name||(tech.isEnergyNoAmmo||0===b.inventory.length)&&"ammo"===powerUp[t].name)){this.eatPowerUp(t);break}}else{let t=1/0;for(let e=0,o=powerUp.length;e<o;++e)if(!(m.health>.94*m.maxHealth&&!tech.isOverHeal&&!tech.isDroneGrab&&"heal"===powerUp[e].name||tech.isSuperDeterminism&&"field"===powerUp[e].name||(tech.isEnergyNoAmmo||0===b.inventory.length)&&"ammo"===powerUp[e].name)){if(Vector.magnitudeSquared(Vector.sub(this.position,powerUp[e].position))<2e4&&!simulation.isChoosing){this.eatPowerUp(e);break}if(0===Matter.Query.ray(map,this.position,powerUp[e].position).length){const o=Vector.sub(this.position,powerUp[e].position),i=Vector.magnitude(o);i<t&&(t=i,this.lockedOn=powerUp[e])}}}}this.lockedOn?this.force=Vector.mult(Vector.normalise(Vector.sub(this.position,this.lockedOn.position)),-this.mass*i):this.force=Vector.mult(Vector.normalise(Vector.sub(this.position,simulation.mouseInGame)),-this.mass*i),this.speed>6&&Matter.Body.setVelocity(this,{x:.97*this.velocity.x,y:.97*this.velocity.y})}}),Composite.add(engine.world,bullet[o]),Matter.Body.setVelocity(bullet[o],{x:e*Math.cos(s),y:e*Math.sin(s)})},droneRadioactive(t={x:m.pos.x+30*Math.cos(m.angle)+20*(Math.random()-.5),y:m.pos.y+30*Math.sin(m.angle)+20*(Math.random()-.5)},e=1){const o=bullet.length,i=(tech.isFastDrones?.003:.0012)+5e-4*(Math.random()-.5),s=m.angle+.4*(Math.random()-.5);bullet[o]=Bodies.polygon(t.x,t.y,8,3,{angle:s,inertia:1/0,friction:0,frictionAir:0,restitution:.4+.199*Math.random(),dmg:0,lookFrequency:120+Math.floor(23*Math.random()),endCycle:simulation.cycle+Math.floor((850+110*Math.random())*tech.bulletsLastLonger/tech.droneRadioDamage)+15+Math.max(0,200-2*bullet.length),classType:"bullet",isDrone:!0,collisionFilter:{category:cat.bullet,mask:cat.map|cat.body|cat.bullet|cat.mob|cat.mobBullet|cat.mobShield},minDmgSpeed:0,speedCap:5+2*Math.random(),lockedOn:null,deathCycles:125,isImproved:!1,radioRadius:0,maxRadioRadius:270+Math.floor(90*Math.random()),beforeDmg(){},onEnd(){if(tech.isDroneRespawn){const t=body.filter(t=>0===Matter.Query.ray(map,this.position,t.position).length&&!t.isNotHoldable&&Vector.magnitude(Vector.sub(this.position,t.position))<70+30*t.mass);if(t.length){const e=t.reduce((t,e)=>Vector.magnitude(Vector.sub(this.position,t.position))<Vector.magnitude(Vector.sub(this.position,e.position))?t:e);e&&m.energy>.091&&(m.energy-=.09,m.fieldUpgrades[4].endoThermic(.7),Composite.remove(engine.world,e),body.splice(body.indexOf(e),1),b.delayDrones(e.position,.5*Math.sqrt(e.mass)),ctx.beginPath(),ctx.moveTo(this.position.x,this.position.y),ctx.lineTo(e.position.x,e.position.y),ctx.strokeStyle="#000",ctx.lineWidth=2,ctx.stroke(),simulation.ephemera.push({count:60,do(){this.count--,this.count<0&&simulation.removeEphemera(this),ctx.beginPath();let t=e.vertices;ctx.moveTo(t[0].x,t[0].y);for(let e=1;e<t.length;e++)ctx.lineTo(t[e].x,t[e].y);ctx.lineTo(t[0].x,t[0].y),ctx.lineWidth=2,ctx.strokeStyle=`rgba(0,0,0,${this.count/60})`,ctx.stroke()}}))}}},do(){if(this.radioRadius=.993*this.radioRadius+.007*this.maxRadioRadius,Vector.magnitude(Vector.sub(player.position,this.position))<this.radioRadius){const t=tech.isRadioactiveResistance?.001:.004;m.energy>t?m.immuneCycle<m.cycle&&(m.energy-=t):(m.energy=0,m.takeDamage((tech.isRadioactiveResistance?4e-5:2e-4)*tech.radioactiveDamage*spawn.dmgToPlayerByLevelsCleared()))}let t=(.12+.04*tech.isFastDrones)*tech.droneRadioDamage*tech.radioactiveDamage;for(let e=0,o=mob.length;e<o;e++)Vector.magnitude(Vector.sub(mob[e].position,this.position))<this.radioRadius+mob[e].radius&&(Matter.Query.ray(map,mob[e].position,this.position).length>0&&(t*=.25),mob[e].damage(mob[e].shield?3*t:t),mob[e].locatePlayer());if(ctx.beginPath(),ctx.arc(this.position.x,this.position.y,this.radioRadius,0,2*Math.PI),ctx.globalCompositeOperation="lighter",ctx.fillStyle=`rgba(28, 175, 217,${.13+.07*Math.random()})`,ctx.fill(),ctx.globalCompositeOperation="source-over",simulation.cycle+this.deathCycles>this.endCycle){this.force.y+=.0012*this.mass,this.restitution=.2;const t=.995;Matter.Body.scale(this,t,t),this.maxRadioRadius=0,this.radioRadius=.98*this.radioRadius}else{if(this.force.y+=2e-4*this.mass,!(simulation.cycle%this.lookFrequency)){if(tech.isExponential){const t=1.03;Matter.Body.scale(this,t,t),this.scale*=t,this.radioRadius=this.radioRadius*t}this.lockedOn=null;let t=1/0;for(let e=0,o=mob.length;e<o;++e)if(!mob[e].isBadTarget&&0===Matter.Query.ray(map,this.position,mob[e].position).length&&0===Matter.Query.ray(body,this.position,mob[e].position).length&&!mob[e].isInvulnerable){const o=Vector.sub(this.position,mob[e].position),i=Vector.magnitude(o);i<t&&(t=i,this.lockedOn=mob[e])}if(!this.isImproved&&!simulation.isChoosing)if(this.lockedOn){for(let t=0,e=powerUp.length;t<e;++t)if(Vector.magnitudeSquared(Vector.sub(this.position,powerUp[t].position))<2e4&&!(m.health>.93*m.maxHealth&&!tech.isDroneGrab&&"heal"===powerUp[t].name||tech.isSuperDeterminism&&"field"===powerUp[t].name||(tech.isEnergyNoAmmo||0===b.inventory.length)&&"ammo"===powerUp[t].name)){if(ctx.beginPath(),ctx.moveTo(this.position.x,this.position.y),ctx.lineTo(powerUp[t].position.x,powerUp[t].position.y),ctx.strokeStyle="#000",ctx.lineWidth=4,ctx.stroke(),powerUps.onPickUp(powerUp[t]),powerUp[t].effect(),Matter.Composite.remove(engine.world,powerUp[t]),powerUp.splice(t,1),tech.isDroneGrab){this.isImproved=!0;const t=2.25;this.scale>1&&Matter.Body.scale(this,1/this.scale,1/this.scale),this.scale=t,Matter.Body.scale(this,t,t),this.endCycle+=1e3*tech.bulletsLastLonger,this.maxRadioRadius*=1.25}break}}else{let t=1/0;for(let e=0,o=powerUp.length;e<o;++e)if(!(m.health>.93*m.maxHealth&&!tech.isDroneGrab&&"heal"===powerUp[e].name||tech.isSuperDeterminism&&"field"===powerUp[e].name||(tech.isEnergyNoAmmo||0===b.inventory.length)&&"ammo"===powerUp[e].name)){if(Vector.magnitudeSquared(Vector.sub(this.position,powerUp[e].position))<2e4&&!simulation.isChoosing){if(ctx.beginPath(),ctx.moveTo(this.position.x,this.position.y),ctx.lineTo(powerUp[e].position.x,powerUp[e].position.y),ctx.strokeStyle="#000",ctx.lineWidth=4,ctx.stroke(),powerUps.onPickUp(powerUp[e]),powerUp[e].effect(),Matter.Composite.remove(engine.world,powerUp[e]),powerUp.splice(e,1),tech.isDroneGrab){this.isImproved=!0;const t=2.25;this.scale>1&&Matter.Body.scale(this,1/this.scale,1/this.scale),this.scale=t,Matter.Body.scale(this,t,t),this.endCycle+=1e3*tech.bulletsLastLonger,this.maxRadioRadius*=1.25}break}if(0===Matter.Query.ray(map,this.position,powerUp[e].position).length&&0===Matter.Query.ray(body,this.position,powerUp[e].position).length){const o=Vector.sub(this.position,powerUp[e].position),i=Vector.magnitude(o);i<t&&(t=i,this.lockedOn=powerUp[e])}}}}this.lockedOn?this.force=Vector.mult(Vector.normalise(Vector.sub(this.position,this.lockedOn.position)),-this.mass*i):this.force=Vector.mult(Vector.normalise(Vector.sub(this.position,simulation.mouseInGame)),-this.mass*i),this.speed>this.speedCap&&Matter.Body.setVelocity(this,{x:.97*this.velocity.x,y:.97*this.velocity.y})}}}),Composite.add(engine.world,bullet[o]),Matter.Body.setVelocity(bullet[o],{x:e*Math.cos(s),y:e*Math.sin(s)})},superBall(t,e,o){let i=.001;tech.superBallDelay&&(e=Vector.mult(e,1.4),i*=6);let s=m.angle;const a=bullet.length;bullet[a]=Bodies.polygon(t.x,t.y,12,o,b.fireAttributes(s,!1)),Composite.add(engine.world,bullet[a]),Matter.Body.setVelocity(bullet[a],e),Matter.Body.setDensity(bullet[a],7e-4+7e-4*tech.isSuperHarm+7e-4*tech.isBulletTeleport),bullet[a].endCycle=simulation.cycle+Math.floor(270+90*Math.random()),bullet[a].minDmgSpeed=0,bullet[a].restitution=1,bullet[a].frictionAir=0,bullet[a].friction=0,bullet[a].frictionStatic=0,tech.isSuperHarm?(bullet[a].collidePlayerDo=function(){this.force.y+=this.mass*i,Matter.Query.collides(this,[player]).length&&(this.endCycle=0)},bullet[a].cycle=0,bullet[a].do=function(){this.cycle++,this.cycle>2&&(this.do=this.collidePlayerDo),this.force.y+=.001*this.mass}):tech.isBulletTeleport?(bullet[a].portFrequency=25+Math.floor(10*Math.random()),bullet[a].nextPortCycle=simulation.cycle+bullet[a].portFrequency,bullet[a].do=function(){if(this.force.y+=this.mass*i,this.nextPortCycle<simulation.cycle){this.nextPortCycle=simulation.cycle+this.portFrequency;const t=33*Math.sqrt(o)*Math.random();Matter.Body.setPosition(this,Vector.add(this.position,Vector.rotate({x:t,y:0},2*Math.PI*Math.random()))),Matter.Body.setVelocity(this,Vector.rotate(this.velocity,2*(Math.random()*Math.random()-.25)))}}):bullet[a].do=function(){this.force.y+=this.mass*i},bullet[a].beforeDmg=function(t){if(!t.isInvulnerable){if(tech.oneSuperBall&&mobs.statusStun(t,120),tech.isFoamBall){for(let t=0,e=6*this.mass;t<e;t++){const t=6+9*Math.random(),e={x:Math.max(.5,2-.1*t),y:0};b.foam(this.position,Vector.rotate(e,6.28*Math.random()),t)}this.endCycle=0}if(tech.isIncendiary)b.explosion(this.position,280*this.mass),this.endCycle=0;else if(tech.isSuperBounce){const t=()=>{Matter.Body.setDensity(this,1.33*(7e-4+7e-4*tech.isSuperHarm+7e-4*tech.isBulletTeleport)),this.endCycle=simulation.cycle+Math.floor(300+90*Math.random()),Matter.Body.setVelocity(this,Vector.mult(Vector.normalise(this.velocity),60));let t=5;const e=()=>{t--,t>0&&requestAnimationFrame(e),simulation.drawList.push({x:this.position.x,y:this.position.y,radius:o,color:"rgba(255, 0, 0, 0.33)",time:8})};requestAnimationFrame(e),simulation.drawList.push({x:this.position.x,y:this.position.y,radius:o,color:"rgba(255, 0, 0, 0.33)",time:8})};requestAnimationFrame(t)}}if(tech.isRicochet){const e=1e3,o=[];for(let i=0,s=mob.length;i<s;i++)if(mob[i]!==t&&!mob[i].isInvulnerable&&!mob[i].isBadTarget){const s=Vector.magnitude(Vector.sub(this.position,mob[i].position));s<e+mob[i].radius&&0===Matter.Query.ray(map,this.position,mob[i].position).length&&0===Matter.Query.ray(body,this.position,mob[i].position).length&&Vector.magnitude(Vector.sub(t.position,mob[i].position))<s&&o.push(Vector.add(mob[i].position,Vector.mult(mob[i].velocity,s/60)))}if(o.length){const t=Math.floor(Math.random()*o.length),e=Vector.normalise(Vector.sub(o[t],this.position));requestAnimationFrame(()=>{Matter.Body.setVelocity(this,Vector.mult(e,40+20*tech.isSuperBounce)),this.dmg+=1,simulation.drawList.push({x:o[t].x,y:o[t].y,radius:40,color:"rgba(255, 255, 0, 0.5)",time:8})})}}}},targetedBall(t,e=1,o=42+12*Math.random(),i=1200,s=!0){let a=0;const l=[];for(let e=0,o=mob.length;e<o;e++){const o=Vector.magnitude(Vector.sub(t,mob[e].position));o<i+mob[e].radius&&!mob[e].isBadTarget&&0===Matter.Query.ray(map,t,mob[e].position).length&&0===Matter.Query.ray(body,t,mob[e].position).length&&!mob[e].isInvulnerable&&l.push(Vector.add(mob[e].position,Vector.mult(mob[e].velocity,o/60)))}const n=(11+9*tech.oneSuperBall)*tech.bulletSize;for(let i=0;i<e;i++)if(l.length>0){const e=Math.floor(Math.random()*l.length),i=160/l.length,s={x:l[e].x+i*(Math.random()-.5),y:l[e].y+i*(Math.random()-.5)};b.superBall(t,Vector.mult(Vector.normalise(Vector.sub(s,t)),o),n),a++}else if(s){const e=2*Math.PI*Math.random();b.superBall(t,{x:o*Math.cos(e),y:o*Math.sin(e)},n)}return a},targetedFoam(t,e=1,o=21+7*Math.random(),i=1200,s=!0){let a=0;const l=[];for(let e=0,o=mob.length;e<o;e++){const o=Vector.magnitude(Vector.sub(t,mob[e].position));o<i+mob[e].radius&&!mob[e].isBadTarget&&0===Matter.Query.ray(map,t,mob[e].position).length&&!mob[e].isInvulnerable&&l.push(Vector.add(mob[e].position,Vector.mult(mob[e].velocity,o/60)))}for(let i=0;i<e;i++)if(l.length>0){const e=160/l.length,i=Math.floor(Math.random()*l.length),s=11+12*Math.random(),n={x:l[i].x+e*(Math.random()-.5),y:l[i].y+e*(Math.random()-.5)};b.foam(t,Vector.mult(Vector.normalise(Vector.sub(n,t)),o-.25*s),s),a++}else if(s){const e=2*Math.PI*Math.random();b.foam(t,{x:o*Math.cos(e),y:o*Math.sin(e)},8+11*Math.random())}return a},foam(t,e,o){tech.isFoamCavitation&&Math.random()<.25&&(e=Vector.mult(e,1.35),o=1.2*o+13);const i=bullet.length;bullet[i]=Bodies.polygon(t.x,t.y,20,o,{density:1e-6,inertia:1/0,frictionAir:.003,dmg:0,damage:tech.foamDamage*(tech.isFastFoam?2.8:1)*(tech.isBulletTeleport?1.53:1),scale:1-.006/tech.bulletsLastLonger*(tech.isFastFoam?1.65:1),classType:"bullet",collisionFilter:{category:cat.bullet,mask:cat.mob|cat.mobBullet},minDmgSpeed:0,endCycle:1/0,count:0,radius:o,target:null,targetVertex:null,targetRelativePosition:null,portFrequency:7+Math.floor(5*Math.random()),nextPortCycle:1/0,beforeDmg(t){if(!this.target&&t.alive){if(this.target=t,t.radius<20)this.targetRelativePosition={x:0,y:0};else if(Matter.Query.collides(this,[t]).length>0){const e=Matter.Query.collides(this,[t])[0].normal;this.targetRelativePosition=Vector.rotate(Vector.sub(Vector.sub(this.position,t.position),Vector.mult(e,-this.radius)),-t.angle)}else this.targetRelativePosition=Vector.rotate(Vector.sub(this.position,t.position),-t.angle);this.collisionFilter.category=cat.body,this.collisionFilter.mask=null;let e=1/0,o=null;for(let t=0;t<this.target.vertices.length;t++){const i=Vector.magnitude(Vector.sub(this.position,this.target.vertices[t]));i<e&&(o=t,e=i)}this.targetVertex=o,Matter.Body.setVelocity(this,{x:0,y:0})}},onEnd(){},do(){if(this.count<20){this.count++;const t=1.06;Matter.Body.scale(this,t,t),this.radius*=t}else Matter.Body.scale(this,this.scale,this.scale),this.radius*=this.scale,this.radius<8&&(this.endCycle=0);if(this.target&&this.target.alive){const t=Vector.rotate(this.targetRelativePosition,this.target.angle);if(this.target.isVerticesChange?Matter.Body.setPosition(this,this.target.vertices[this.targetVertex]):Matter.Body.setPosition(this,Vector.add(Vector.add(t,this.target.velocity),this.target.position)),this.target.isBoss?this.target.speed>6.5&&Matter.Body.setVelocity(this.target,Vector.mult(this.target.velocity,.975)):this.target.speed>2.5&&Matter.Body.setVelocity(this.target,Vector.mult(this.target.velocity,.94)),Matter.Body.setAngularVelocity(this.target,.9*this.target.angularVelocity),this.target.isShielded){this.target.damage(this.damage,!0);const t=1-.004/tech.bulletsLastLonger;Matter.Body.scale(this,t,t),this.radius*=t}else this.target.damage(this.damage)}else if(null!==this.target){if(this.collisionFilter.category=cat.bullet,this.collisionFilter.mask=cat.mob,Matter.Body.setVelocity(this,{x:this.target.velocity.x,y:this.target.velocity.y}),tech.isSpawnBulletsOnDeath&&bullet.length<180&&!this.target.isMobBullet){let t=[];for(let e=0,o=mob.length;e<o;e++){Vector.magnitudeSquared(Vector.sub(this.position,mob[e].position))<1e6&&t.push(mob[e])}const e=Math.min(.5*this.radius,9),o=bullet.length<80?2:1;for(let i=0;i<o;i++)if(t.length-i>0){const o=Math.floor(Math.random()*t.length),i=6+6*Math.random(),s=Vector.mult(Vector.normalise(Vector.sub(t[o].position,this.position)),i);b.foam(this.position,Vector.rotate(s,.5*(Math.random()-.5)),e)}else b.foam(this.position,Vector.rotate({x:15+10*Math.random(),y:0},2*Math.PI*Math.random()),e)}this.target=null}else if(Matter.Query.point(map,this.position).length>0){const t=.87;Matter.Body.setVelocity(this,{x:this.velocity.x*t,y:this.velocity.y*t});const e=.97;Matter.Body.scale(this,e,e),this.radius*=e}else if(Matter.Query.point(body,this.position).length>0){const t=.94;Matter.Body.setVelocity(this,{x:this.velocity.x*t,y:this.velocity.y*t});const e=.99;Matter.Body.scale(this,e,e),this.radius*=e}else if(this.force.y+=this.mass*tech.foamGravity,tech.isFoamAttract)for(let t=0,e=mob.length;t<e;t++){const e=Vector.magnitude(Vector.sub(mob[t].position,this.position));if(!mob[t].isBadTarget&&mob[t].alive&&!mob[t].isInvulnerable&&e<500&&0===Matter.Query.ray(map,this.position,mob[t].position).length){const o=.001*Math.min(1,200/e);this.force=Vector.mult(Vector.normalise(Vector.sub(mob[t].position,this.position)),this.mass*o);const i=.98;Matter.Body.setVelocity(this,{x:this.velocity.x*i,y:this.velocity.y*i});break}}if(this.nextPortCycle<simulation.cycle){this.nextPortCycle=simulation.cycle+this.portFrequency;const t=13*Math.sqrt(this.radius)*Math.random();Matter.Body.setPosition(this,Vector.add(this.position,Vector.rotate({x:t,y:0},2*Math.PI*Math.random())))}}}),tech.isBulletTeleport&&(bullet[i].nextPortCycle=simulation.cycle+bullet[i].portFrequency),Composite.add(engine.world,bullet[i]),Matter.Body.setVelocity(bullet[i],e)},targetedBlock(t,e=50-Math.min(20,2*t.mass),o=1600){let i,s;for(let e=0,a=mob.length;e<a;e++)t===mob[e]||mob[e].isBadTarget||mob[e].isInvulnerable||(s=Vector.magnitude(Vector.sub(t.position,mob[e].position)),s<o&&0===Matter.Query.ray(map,t.position,mob[e].position).length&&(i=mob[e],o=s));if(i){const o=Vector.add(i.position,Vector.mult(i.velocity,s/60)),a=Vector.mult(Vector.normalise(Vector.sub(o,t.position)),e);a.y-=Math.abs(t.position.x-i.position.x)/150,Matter.Body.setVelocity(t,a)}},targetedNail(t,e=1,o=40+10*Math.random(),i=1200,s=1.4){let a=0;const l=[];for(let e=0,o=mob.length;e<o;e++){const o=Vector.magnitude(Vector.sub(t,mob[e].position));o<i+mob[e].radius&&!mob[e].isBadTarget&&0===Matter.Query.ray(map,t,mob[e].position).length&&0===Matter.Query.ray(body,t,mob[e].position).length&&!mob[e].isInvulnerable&&l.push(Vector.add(mob[e].position,Vector.mult(mob[e].velocity,o/60)))}for(let i=0;i<e;i++)if(l.length>0){const e=Math.floor(Math.random()*l.length),i=150/l.length,n={x:l[e].x+i*(Math.random()-.5),y:l[e].y+i*(Math.random()-.5)};b.nail(t,Vector.mult(Vector.normalise(Vector.sub(n,t)),o),s),a++}else{const e=2*Math.PI*Math.random();b.nail(t,{x:o*Math.cos(e),y:o*Math.sin(e)},s),a++}return a},crit(t,e){if(!t.shield&&Vector.dot(Vector.normalise(Vector.sub(t.position,e.position)),Vector.normalise(e.velocity))>.999-1/t.radius){if(t.isFinalBoss&&!(Vector.dot(Vector.normalise(Vector.sub(t.position,e.position)),Vector.normalise(e.velocity))>.999999))return;requestAnimationFrame(()=>{if(t.health<.5&&t.damageReduction>0&&t.alive){t.damage(1/0);const e="rgb(255,255,255)";simulation.drawList.push({x:t.position.x,y:t.position.y,radius:1.2*t.radius,color:e,time:8}),simulation.drawList.push({x:t.position.x,y:t.position.y,radius:.75*t.radius,color:e,time:15}),simulation.drawList.push({x:t.position.x,y:t.position.y,radius:.4*t.radius,color:e,time:20})}})}},nail(t,e,o=1){o*=tech.bulletSize;const i=bullet.length;bullet[i]=Bodies.rectangle(t.x,t.y,25*tech.bulletSize,2*tech.bulletSize,b.fireAttributes(Math.atan2(e.y,e.x))),Matter.Body.setVelocity(bullet[i],e),Composite.add(engine.world,bullet[i]),bullet[i].endCycle=simulation.cycle+80+18*Math.random(),bullet[i].dmg=tech.isNailRadiation?0:o,bullet[i].beforeDmg=function(t){tech.isNailRadiation&&mobs.statusDoT(t,o*(tech.isFastRadiation?1.3:.44),tech.isSlowRadiation?360:tech.isFastRadiation?60:180),tech.isNailCrit&&!t.shield&&Vector.dot(Vector.normalise(Vector.sub(t.position,this.position)),Vector.normalise(this.velocity))>.97-1/t.radius&&b.explosion(this.position,80+90*(0===b.activeGun)+30*Math.random()),this.ricochet(t)},bullet[i].ricochet=function(t){if(tech.isRicochet){const e=[];for(let o=0,i=mob.length;o<i;o++){const i=Vector.magnitude(Vector.sub(this.position,mob[o].position));mob[o]!==t&&i<2500+mob[o].radius&&!mob[o].isBadTarget&&!mob[o].isInvulnerable&&0===Matter.Query.ray(body,this.position,mob[o].position).length&&0===Matter.Query.ray(map,this.position,mob[o].position).length&&e.push(Vector.add(mob[o].position,Vector.mult(mob[o].velocity,i/60)))}if(e.length>0){const t=Math.floor(Math.random()*e.length);Matter.Body.setVelocity(this,Vector.mult(Vector.normalise(Vector.sub(e[t],this.position)),45)),Matter.Body.setAngle(this,Math.atan2(this.velocity.y,this.velocity.x)),Matter.Body.setAngularVelocity(this,0)}this.dmg+=2}},bullet[i].do=function(){}},needle(t=m.angle){const e=bullet.length;bullet[e]=Bodies.rectangle(m.pos.x+40*Math.cos(m.angle),m.pos.y+40*Math.sin(m.angle),75*tech.bulletSize,.75*tech.bulletSize,b.fireAttributes(t)),Matter.Body.setDensity(bullet[e],1e-5),bullet[e].immuneList=[],bullet[e].dmg=6,tech.needleTunnel?(bullet[e].dmg*=1.2,bullet[e].endCycle=simulation.cycle+300,bullet[e].collisionFilter.mask=tech.isShieldPierce?0:cat.mobShield,bullet[e].isInMap=!1,bullet[e].do=function(){const t=Matter.Query.collides(this,mob);if(t.length&&this.speed>20){for(let e=0,o=t.length;e<o;e++)if(who=t[e].bodyA,who&&who.mob){let t=!1;for(let e=0;e<this.immuneList.length;e++)if(this.immuneList[e]===who.id){t=!0;break}if(!t){tech.isNailCrit?!who.shield&&Vector.dot(Vector.normalise(Vector.sub(who.position,this.position)),Vector.normalise(this.velocity))>.97-1/who.radius&&b.explosion(this.position,220+50*Math.random()):tech.isCritKill&&b.crit(who,this),this.immuneList.push(who.id);let t=this.dmg*tech.bulletSize;tech.isNailRadiation&&(mobs.statusDoT(who,(tech.isFastRadiation?6:2)*tech.bulletSize,tech.isSlowRadiation?360:tech.isFastRadiation?60:180),t*=.25),tech.isCrit&&who.isStunned&&(t*=4),who.damage(t,tech.isShieldPierce),who.alive&&who.foundPlayer(),who.damageReduction&&simulation.drawList.push({x:this.position.x,y:this.position.y,radius:40*Math.log(t+1.1)*who.damageReduction+3,color:simulation.playerDmgColor,time:simulation.drawTime})}}}else Matter.Query.collides(this,map).length?(this.isInMap||(this.isInMap=!0,Matter.Body.setVelocity(this,Vector.rotate(this.velocity,.25*(Math.random()-.5))),Matter.Body.setAngle(this,Math.atan2(this.velocity.y,this.velocity.x))),Matter.Body.setPosition(this,Vector.add(this.position,Vector.mult(this.velocity,-.98)))):Matter.Query.collides(this,body).length?(Matter.Body.setAngularVelocity(this,0),Matter.Body.setPosition(this,Vector.add(this.position,Vector.mult(this.velocity,-.94)))):this.speed<30&&(this.force.y+=.001*this.mass)}):(bullet[e].endCycle=simulation.cycle+100,bullet[e].collisionFilter.mask=tech.isShieldPierce?cat.body:cat.body|cat.mobShield,bullet[e].do=function(){const t=Matter.Query.collides(this,mob);if(t.length&&this.speed>20){for(let e=0,o=t.length;e<o;e++)if(who=t[e].bodyA,who&&who.mob){let t=!1;for(let e=0;e<this.immuneList.length;e++)if(this.immuneList[e]===who.id){t=!0;break}if(!t){tech.isNailCrit?!who.shield&&Vector.dot(Vector.normalise(Vector.sub(who.position,this.position)),Vector.normalise(this.velocity))>.97-1/who.radius&&b.explosion(this.position,220+50*Math.random()):tech.isCritKill&&b.crit(who,this),this.immuneList.push(who.id);let t=this.dmg*tech.bulletSize;tech.isNailRadiation&&(mobs.statusDoT(who,(tech.isFastRadiation?6:2)*tech.bulletSize,tech.isSlowRadiation?360:tech.isFastRadiation?60:180),t*=.25),tech.isCrit&&who.isStunned&&(t*=4),who.damage(t,tech.isShieldPierce),who.alive&&who.foundPlayer(),who.damageReduction&&simulation.drawList.push({x:this.position.x,y:this.position.y,radius:40*Math.log(t+1.1)*who.damageReduction+3,color:simulation.playerDmgColor,time:simulation.drawTime})}}}else Matter.Query.collides(this,map).length?(this.collisionFilter.mask=0,Matter.Body.setAngularVelocity(this,0),Matter.Body.setVelocity(this,{x:0,y:0}),this.do=function(){Matter.Query.collides(this,map).length||(this.force.y+=.001*this.mass)},tech.isNeedleIce&&(b.iceIX(5+5*Math.random(),2*Math.PI*Math.random(),this.position),.5<Math.random()&&b.iceIX(5+5*Math.random(),2*Math.PI*Math.random(),this.position))):this.speed<30&&(this.force.y+=.001*this.mass)});Matter.Body.setVelocity(bullet[e],{x:.5*player.velocity.x+90*Math.cos(t),y:.5*player.velocity.y+90*Math.sin(t)}),Composite.add(engine.world,bullet[e])},totalBots:()=>tech.dynamoBotCount+tech.foamBotCount+tech.soundBotCount+tech.nailBotCount+tech.laserBotCount+tech.boomBotCount+tech.orbitBotCount+tech.plasmaBotCount+tech.missileBotCount,hasBotUpgrade:()=>tech.isNailBotUpgrade+tech.isFoamBotUpgrade+tech.isBoomBotUpgrade+tech.isLaserBotUpgrade+tech.isOrbitBotUpgrade+tech.isDynamoBotUpgrade+tech.isSoundBotUpgrade,convertBotsTo(t){const e=b.totalBots();let o=0;for(let t=0;t<tech.tech.length;t++)tech.tech[t].count&&tech.tech[t].isBot&&(o+=tech.tech[t].count,tech.removeTech(t));b.zeroBotCount(),b.clearPermanentBots();for(let e=0;e<o;e++)tech.giveTech(t);let i=null;for(let e=0;e<tech.tech.length;e++)if(tech.tech[e].name===t){i=e;break}for(let t=0,s=e-o;t<s;t++)tech.tech[i].effect()},clearPermanentBots(){for(let t=0;t<bullet.length;t++)bullet[t].botType&&bullet[t].endCycle===1/0&&(bullet[t].endCycle=0)},removeBot(){tech.nailBotCount>1?tech.nailBotCount--:tech.laserBotCount>1?tech.laserBotCount--:tech.foamBotCount>1?tech.foamBotCount--:tech.soundBotCount>1?tech.soundBotCount--:tech.boomBotCount>1?tech.boomBotCount--:tech.orbitBotCount>1?tech.orbitBotCount--:tech.dynamoBotCount>1?tech.dynamoBotCount--:tech.missileBotCount>1?tech.missileBotCount--:tech.plasmaBotCount>1&&tech.plasmaBotCount--},zeroBotCount(){tech.dynamoBotCount=0,tech.nailBotCount=0,tech.laserBotCount=0,tech.orbitBotCount=0,tech.foamBotCount=0,tech.soundBotCount=0,tech.boomBotCount=0,tech.plasmaBotCount=0,tech.missileBotCount=0},respawnBots(){for(let t=0;t<tech.dynamoBotCount;t++)b.dynamoBot({x:player.position.x+50*(Math.random()-.5),y:player.position.y+50*(Math.random()-.5)},!level.isSlowBots);for(let t=0;t<tech.laserBotCount;t++)b.laserBot({x:player.position.x+50*(Math.random()-.5),y:player.position.y+50*(Math.random()-.5)},!level.isSlowBots);for(let t=0;t<tech.nailBotCount;t++)b.nailBot({x:player.position.x+50*(Math.random()-.5),y:player.position.y+50*(Math.random()-.5)},!level.isSlowBots);for(let t=0;t<tech.foamBotCount;t++)b.foamBot({x:player.position.x+50*(Math.random()-.5),y:player.position.y+50*(Math.random()-.5)},!level.isSlowBots);for(let t=0;t<tech.soundBotCount;t++)b.soundBot({x:player.position.x+50*(Math.random()-.5),y:player.position.y+50*(Math.random()-.5)},!level.isSlowBots);for(let t=0;t<tech.boomBotCount;t++)b.boomBot({x:player.position.x+50*(Math.random()-.5),y:player.position.y+50*(Math.random()-.5)},!level.isSlowBots);for(let t=0;t<tech.orbitBotCount;t++)b.orbitBot({x:player.position.x+50*(Math.random()-.5),y:player.position.y+50*(Math.random()-.5)},!level.isSlowBots);for(let t=0;t<tech.plasmaBotCount;t++)b.plasmaBot({x:player.position.x+50*(Math.random()-.5),y:player.position.y+50*(Math.random()-.5)});for(let t=0;t<tech.missileBotCount;t++)b.missileBot({x:player.position.x+50*(Math.random()-.5),y:player.position.y+50*(Math.random()-.5)});if(tech.isIntangible&&m.isCloak)for(let t=0;t<bullet.length;t++)bullet[t].botType&&(bullet[t].collisionFilter.mask=cat.map|cat.bullet|cat.mobBullet|cat.mobShield)},randomBot(t=player.position,e=!0,o=!0){Math.random()<.5?tech.isNailBotUpgrade?(b.nailBot(t,e),e&&tech.nailBotCount++):tech.isFoamBotUpgrade?(b.foamBot(t,e),e&&tech.foamBotCount++):tech.isSoundBotUpgrade?(b.soundBot(t,e),e&&tech.soundBotCount++):tech.isBoomBotUpgrade?(b.boomBot(t,e),e&&tech.boomBotCount++):tech.isLaserBotUpgrade?(b.laserBot(t,e),e&&tech.laserBotCount++):tech.isOrbitBotUpgrade?(b.orbitBot(t,e),e&&tech.orbitBotCount++):tech.isDynamoBotUpgrade?(b.dynamoBot(t,e),e&&tech.dynamoBotCount++):Math.random()<.143?(b.soundBot(t,e),e&&tech.soundBotCount++):Math.random()<.166&&o?(b.laserBot(t,e),e&&tech.laserBotCount++):Math.random()<.2?(b.dynamoBot(t,e),e&&tech.dynamoBotCount++):Math.random()<.25?(b.orbitBot(t,e),e&&tech.orbitBotCount++):Math.random()<.33?(b.nailBot(t,e),e&&tech.nailBotCount++):Math.random()<.5?(b.foamBot(t,e),e&&tech.foamBotCount++):(b.boomBot(t,e),e&&tech.boomBotCount++):Math.random()<.143?(b.soundBot(t,e),e&&tech.soundBotCount++):Math.random()<.166&&o?(b.laserBot(t,e),e&&tech.laserBotCount++):Math.random()<.2?(b.dynamoBot(t,e),e&&tech.dynamoBotCount++):Math.random()<.25?(b.orbitBot(t,e),e&&tech.orbitBotCount++):Math.random()<.33?(b.nailBot(t,e),e&&tech.nailBotCount++):Math.random()<.5?(b.foamBot(t,e),e&&tech.foamBotCount++):(b.boomBot(t,e),e&&tech.boomBotCount++)},setDynamoBotDelay(){let t=0;for(let e=0;e<bullet.length;e++)"dynamo"===bullet[e].botType&&t++;let e=0;for(let o=0;o<bullet.length;o++)if("dynamo"===bullet[o].botType){e++;const i=Math.max(60-3*t,10);bullet[o].isKeep?bullet[o].followDelay=i*e%600:bullet[o].followDelay=Math.floor(i*bullet.length*Math.random())%600}},dynamoBot(t=player.position,e=!0){const o=bullet.length;bullet[o]=Bodies.polygon(t.x,t.y,5,10,{isUpgraded:tech.isDynamoBotUpgrade,botType:"dynamo",friction:0,frictionStatic:0,frictionAir:.02,spin:.07*(Math.random()<.5?-1:1),isKeep:e,isSensor:!0,restitution:0,dmg:0,minDmgSpeed:0,endCycle:1/0,classType:"bullet",collisionFilter:{category:cat.bullet,mask:0},beforeDmg(){},onEnd(){b.setDynamoBotDelay()},followDelay:0,phase:Math.floor(60*Math.random()),do(){if(m.immuneCycle<m.cycle&&!((m.cycle+this.phase)%30)&&Vector.magnitude(Vector.sub(this.position,player.position))<250&&m.immuneCycle<m.cycle&&(Matter.Body.setAngularVelocity(this,this.spin),this.isUpgraded?(m.energy+=.12*level.isReducedRegen,simulation.drawList.push({x:this.position.x,y:this.position.y,radius:10,color:m.fieldMeterColor,time:simulation.drawTime})):(m.energy+=.04*level.isReducedRegen,simulation.drawList.push({x:this.position.x,y:this.position.y,radius:5,color:m.fieldMeterColor,time:simulation.drawTime}))),!m.isCloak){const t=33-6*e;q=Matter.Query.region(mob,{min:{x:this.position.x-t,y:this.position.y-t},max:{x:this.position.x+t,y:this.position.y+t}});for(let t=0;t<q.length;t++)if(!q[t].isShielded){Matter.Body.setAngularVelocity(this,this.spin);const e=.5;q[t].damage(e),q[t].alive&&q[t].foundPlayer(),q[t].damageReduction&&simulation.drawList.push({x:this.position.x,y:this.position.y,radius:Math.sqrt(2e3*e*q[t].damageReduction)+2,color:"rgba(0,0,0,0.4)",time:simulation.drawTime})}}let t=m.history[(simulation.cycle-this.followDelay)%600];Matter.Body.setPosition(this,{x:t.position.x,y:t.position.y-t.yOff+24.2859})}}),Composite.add(engine.world,bullet[o]),b.setDynamoBotDelay()},nailBot(t={x:player.position.x+50*(Math.random()-.5),y:player.position.y+50*(Math.random()-.5)},e=!0){const o=bullet.length,i=m.angle,s=12+4*Math.random();bullet[o]=Bodies.polygon(t.x,t.y,4,s,{isUpgraded:tech.isNailBotUpgrade,botType:"nail",angle:i,friction:0,frictionStatic:0,frictionAir:.05,restitution:.6*(1+.5*Math.random()),dmg:0,minDmgSpeed:2,lastLookCycle:simulation.cycle+60*Math.random(),delay:Math.floor((tech.isNailBotUpgrade?22:85)+10*e),acceleration:(e?.005:.001)*(1+.5*Math.random()),range:60*(1+.3*Math.random())+3*b.totalBots()+100*!e,endCycle:1/0,classType:"bullet",collisionFilter:{category:cat.bullet,mask:b.totalBots()<50?cat.map|cat.body|cat.bullet|cat.mob|cat.mobBullet|cat.mobShield:cat.map|cat.body|cat.mob|cat.mobBullet|cat.mobShield},beforeDmg(){},onEnd(){},do(){if(Vector.magnitude(Vector.sub(this.position,m.pos))>this.range)this.force=Vector.mult(Vector.normalise(Vector.sub(m.pos,this.position)),this.mass*this.acceleration);else if(Matter.Body.setVelocity(this,Vector.add(Vector.mult(this.velocity,.9),Vector.mult(player.velocity,.17))),this.lastLookCycle<simulation.cycle&&!m.isCloak){this.lastLookCycle=simulation.cycle+this.delay;for(let t=0,e=mob.length;t<e;t++){const e=Vector.magnitudeSquared(Vector.sub(this.position,mob[t].position));if(!mob[t].isBadTarget&&e<3e6&&0===Matter.Query.ray(map,this.position,mob[t].position).length&&0===Matter.Query.ray(body,this.position,mob[t].position).length&&!mob[t].isShielded&&!mob[t].isInvulnerable){const o=Vector.normalise(Vector.sub(Vector.add(mob[t].position,Vector.mult(mob[t].velocity,Math.sqrt(e)/60)),this.position));if(this.isUpgraded){const t=60;b.nail(this.position,Vector.mult(o,t)),this.force=Vector.mult(o,-.02*this.mass)}else{const t=45;b.nail(this.position,Vector.mult(o,t)),this.force=Vector.mult(o,-.012*this.mass)}break}}}}}),Composite.add(engine.world,bullet[o])},missileBot(t={x:player.position.x+50*(Math.random()-.5),y:player.position.y+50*(Math.random()-.5)},e=!0){const o=bullet.length;bullet[o]=Bodies.rectangle(t.x,t.y,28,11,{botType:"missile",angle:m.angle,friction:0,frictionStatic:0,frictionAir:.04,restitution:.7,dmg:0,minDmgSpeed:2,lookFrequency:26+Math.ceil(6*Math.random()),cd:0,delay:Math.floor(60),range:70+3*b.totalBots(),endCycle:1/0,classType:"bullet",collisionFilter:{category:cat.bullet,mask:b.totalBots()<50?cat.map|cat.body|cat.bullet|cat.mob|cat.mobBullet|cat.mobShield:cat.map|cat.body|cat.mob|cat.mobBullet|cat.mobShield},beforeDmg(){},onEnd(){},do(){if(Vector.magnitude(Vector.sub(this.position,m.pos))>this.range)this.force=Vector.mult(Vector.normalise(Vector.sub(m.pos,this.position)),.006*this.mass);else if(Matter.Body.setVelocity(this,Vector.add(Vector.mult(this.velocity,.9),Vector.mult(player.velocity,.17))),this.cd<simulation.cycle&&!(simulation.cycle%this.lookFrequency)&&!m.isCloak)for(let t=0,e=mob.length;t<e;t++){const e=Vector.magnitudeSquared(Vector.sub(this.position,mob[t].position));if(mob[t].alive&&!mob[t].isBadTarget&&e>4e4&&0===Matter.Query.ray(map,this.position,mob[t].position).length&&!mob[t].isInvulnerable){this.cd=simulation.cycle+this.delay;const e=Vector.angle(this.position,mob[t].position);if(Matter.Body.setAngle(this,e),this.torque+=4e-5*this.inertia*(Math.round(Math.random())?1:-1),this.force=Vector.mult(Vector.normalise(Vector.sub(this.position,mob[t].position)),.02*this.mass),tech.missileCount>1){const t=Math.pow(.85,tech.missileCount),o=Math.sqrt(t),i={x:Math.cos(e),y:Math.sin(e)},s=Vector.mult(Vector.perp(i),.015*t/Math.sqrt(tech.missileCount));for(let t=0;t<tech.missileCount;t++)setTimeout(()=>{b.missile(this.position,e,-8,o),bullet[bullet.length-1].force.x+=s.x*(t-(tech.missileCount-1)/2),bullet[bullet.length-1].force.y+=s.y*(t-(tech.missileCount-1)/2)},40*tech.missileCount*Math.random())}else b.missile(this.position,e,-8);break}}}}),Composite.add(engine.world,bullet[o])},foamBot(t={x:player.position.x+50*(Math.random()-.5),y:player.position.y+50*(Math.random()-.5)},e=!0){const o=bullet.length,i=m.angle,s=10+5*Math.random();bullet[o]=Bodies.polygon(t.x,t.y,6,s,{isUpgraded:tech.isFoamBotUpgrade,botType:"foam",angle:i,friction:0,frictionStatic:0,frictionAir:.05,restitution:.6*(1+.5*Math.random()),dmg:0,minDmgSpeed:2,lookFrequency:60+Math.floor(17*Math.random())-50*tech.isFoamBotUpgrade,cd:0,fireCount:0,fireLimit:5+2*tech.isFoamBotUpgrade-e,delay:Math.floor(200+(tech.isFoamBotUpgrade?0:200)),acceleration:(e?.005:.001)*(1+.5*Math.random()),range:60*(1+.3*Math.random())+3*b.totalBots()+100*!e,endCycle:1/0,classType:"bullet",collisionFilter:{category:cat.bullet,mask:b.totalBots()<50?cat.map|cat.body|cat.bullet|cat.mob|cat.mobBullet|cat.mobShield:cat.map|cat.body|cat.mob|cat.mobBullet|cat.mobShield},beforeDmg(){},onEnd(){},fireTarget:{x:0,y:0},fire(){this.fireCount++,this.fireCount>this.fireLimit&&(this.fireCount=0,this.cd=simulation.cycle+this.delay);const t=5+3*Math.random(),e=Math.max(5,25-.4*t),o=Vector.mult(Vector.normalise(Vector.sub(this.fireTarget,this.position)),e);b.foam(this.position,Vector.rotate(o,.07*(Math.random()-.5)),t+5*this.isUpgraded);const i=Vector.mult(o,1e-4*this.mass*(tech.isFoamCavitation?2:1));this.force.x-=i.x,this.force.y-=i.y},do(){if(0===this.fireCount){if(Vector.magnitude(Vector.sub(this.position,m.pos))>this.range?this.force=Vector.mult(Vector.normalise(Vector.sub(m.pos,this.position)),this.mass*this.acceleration):Matter.Body.setVelocity(this,Vector.add(Vector.mult(this.velocity,.9),Vector.mult(player.velocity,.17))),this.cd<simulation.cycle&&!m.isCloak&&!(simulation.cycle%this.lookFrequency))for(let t=0,e=mob.length;t<e;t++){const e=Vector.magnitudeSquared(Vector.sub(this.position,mob[t].position));if(e<16e5&&!mob[t].isBadTarget&&0===Matter.Query.ray(map,this.position,mob[t].position).length&&!mob[t].isInvulnerable){this.fireTarget=Vector.add(mob[t].position,Vector.mult(mob[t].velocity,Math.sqrt(e)/60)),this.fire();break}}}else this.fire()}}),Composite.add(engine.world,bullet[o])},soundBot(t={x:player.position.x+50*(Math.random()-.5),y:player.position.y+50*(Math.random()-.5)},e=!0){const o=bullet.length,i=m.angle;bullet[o]=Bodies.rectangle(t.x,t.y,12,30,{isUpgraded:tech.isSoundBotUpgrade,botType:"sound",angle:i,friction:0,frictionStatic:0,frictionAir:.05,restitution:.6*(1+.5*Math.random()),dmg:0,minDmgSpeed:2,lookFrequency:17+Math.floor(7*Math.random())-3*tech.isSoundBotUpgrade,cd:0,fireCount:0,fireLimit:5-e,delay:Math.floor(140),acceleration:(e?.005:.001)*(1+.5*Math.random()),range:60*(1+.3*Math.random())+3*b.totalBots()+100*!e,endCycle:1/0,classType:"bullet",collisionFilter:{category:cat.bullet,mask:b.totalBots()<50?cat.map|cat.body|cat.bullet|cat.mob|cat.mobBullet|cat.mobShield:cat.map|cat.body|cat.mob|cat.mobBullet|cat.mobShield},beforeDmg(){},onEnd(){},fireTarget:{x:0,y:0},waves:[],phononWaveCD:0,addWave(t,e){const o=.2*(tech.isBulletTeleport?Math.random()-.5+.66:1)+.04*tech.isSoundBotUpgrade;this.waves.push({position:t,angle:e-o,unit1:{x:Math.cos(e-o),y:Math.sin(e-o)},unit2:{x:Math.cos(e+o),y:Math.sin(e+o)},arc:2*o,radius:25,resonanceCount:0,dmg:(tech.isUpgraded?9:1.5)*tech.wavePacketDamage*tech.waveBeamDamage*(tech.isBulletTeleport?1.5:1)})},fire(){simulation.cycle%6||(this.fireCount++,this.fireCount>this.fireLimit&&(this.fireCount=0,this.cd=simulation.cycle+this.delay),this.addWave({x:this.position.x,y:this.position.y},Math.atan2(this.fireTarget.y-this.position.y,this.fireTarget.x-this.position.x)+.3*tech.isBulletTeleport*(Math.random()-.5)),Matter.Body.setAngle(this,Vector.angle(this.position,this.fireTarget)))},do(){if(0===this.fireCount){if(Vector.magnitude(Vector.sub(this.position,m.pos))>this.range?this.force=Vector.mult(Vector.normalise(Vector.sub(m.pos,this.position)),this.mass*this.acceleration):Matter.Body.setVelocity(this,Vector.add(Vector.mult(this.velocity,.9),Vector.mult(player.velocity,.17))),this.cd<simulation.cycle&&!m.isCloak&&!(simulation.cycle%this.lookFrequency))for(let t=0,e=mob.length;t<e;t++){const e=Vector.magnitudeSquared(Vector.sub(this.position,mob[t].position));if(e<13e5&&!mob[t].isBadTarget&&(0===Matter.Query.ray(map,this.position,mob[t].position).length||e<3e5)&&!mob[t].isInvulnerable){this.fireTarget=Vector.add(mob[t].position,Vector.mult(mob[t].velocity,Math.sqrt(e)/60)),this.fire();break}}}else this.fire();if(!m.isTimeDilated){ctx.strokeStyle="rgba(0,0,0,0.6)",ctx.lineWidth=2*tech.wavePacketDamage,ctx.beginPath();const t=1200*Math.sqrt(tech.bulletsLastLonger);for(let e=this.waves.length-1;e>-1;e--){const o=Vector.add(this.waves[e].position,Vector.mult(this.waves[e].unit1,this.waves[e].radius)),i=Vector.add(this.waves[e].position,Vector.mult(this.waves[e].unit2,this.waves[e].radius));ctx.moveTo(o.x,o.y),ctx.arc(this.waves[e].position.x,this.waves[e].position.y,this.waves[e].radius,this.waves[e].angle,this.waves[e].angle+this.waves[e].arc);let s=Matter.Query.ray(mob,o,i,50);for(let o=0;o<s.length;o++){const i=s[o].body;if(!i.isShielded){i.force.x+=.01*(Math.random()-.5)*i.mass,i.force.y+=.01*(Math.random()-.5)*i.mass,Matter.Body.setVelocity(i,{x:.98*i.velocity.x,y:.98*i.velocity.y});let o=i.vertices;const s=50+.15*i.radius;ctx.moveTo(o[0].x+s*(Math.random()-.5),o[0].y+s*(Math.random()-.5));for(let t=1;t<o.length;t++)ctx.lineTo(o[t].x+s*(Math.random()-.5),o[t].y+s*(Math.random()-.5));if(ctx.lineTo(o[0].x+s*(Math.random()-.5),o[0].y+s*(Math.random()-.5)),i.locatePlayer(),i.damage(this.waves[e].dmg/Math.pow(i.radius,.33)),tech.isPhononWave&&this.phononWaveCD<m.cycle){let o,s;this.phononWaveCD=m.cycle+10*(1+this.waves[e].resonanceCount);let a=t-30*this.waves[e].resonanceCount;for(let t=0,e=mob.length;t<e;t++)i===mob[t]||mob[t].isBadTarget||mob[t].isInvulnerable||(s=Vector.magnitude(Vector.sub(i.position,mob[t].position)),s<a&&(o=mob[t],a=s));o?this.addWave(i.position,Math.atan2(o.position.y-i.position.y,o.position.x-i.position.x)+.3*tech.isBulletTeleport*(Math.random()-.5)):this.addWave(i.position,Math.random()*Math.PI),this.waves[this.waves.length-1].resonanceCount=this.waves[e].resonanceCount+1;break}}}s=Matter.Query.ray(body,o,i,50);for(let t=0,e=Math.min(30,s.length);t<e;t++){const e=s[t].body;e.force.x+=.005*(Math.random()-.5)*e.mass,e.force.y+=(.005*(Math.random()-.5)-.1*simulation.g)*e.mass;let o=e.vertices;const i=25;ctx.moveTo(o[0].x+i*(Math.random()-.5),o[0].y+i*(Math.random()-.5));for(let t=1;t<o.length;t++)ctx.lineTo(o[t].x+i*(Math.random()-.5),o[t].y+i*(Math.random()-.5));ctx.lineTo(o[0].x+i*(Math.random()-.5),o[0].y+i*(Math.random()-.5)),tech.isPhononBlock&&!e.isNotHoldable&&e.speed<5&&e.angularSpeed<.1&&(Math.random()<.5&&b.targetedBlock(e,50-Math.min(25,3*e.mass)),e.torque+=.001*e.inertia*(Math.random()-.5))}this.waves[e].radius+=2*tech.waveBeamSpeed,this.waves[e].radius>t-30*this.waves[e].resonanceCount&&this.waves.splice(e,1)}ctx.stroke()}}}),Composite.add(engine.world,bullet[o])},laserBot(t={x:player.position.x+50*(Math.random()-.5),y:player.position.y+50*(Math.random()-.5)},e=!0){const o=bullet.length,i=m.angle,s=14+6*Math.random();bullet[o]=Bodies.polygon(t.x,t.y,3,s,{botType:"laser",angle:i,friction:0,frictionStatic:0,frictionAir:.008*(1+.3*Math.random()),restitution:.5*(1+.5*Math.random()),acceleration:.0015*(1+.3*Math.random()),playerRange:140+Math.floor(30*Math.random())+2*b.totalBots(),offPlayer:{x:0,y:0},dmg:0,minDmgSpeed:2,lookFrequency:20+Math.floor(7*Math.random())-13*tech.isLaserBotUpgrade,range:(600+375*tech.isLaserBotUpgrade)*(1+.12*Math.random()),drainThreshold:.15+.5*Math.random()+(tech.isEnergyHealth?.3:0),drain:(.57-.43*tech.isLaserBotUpgrade+.08*e)*tech.laserDrain,laserDamage:.75+.75*tech.isLaserBotUpgrade,endCycle:1/0,classType:"bullet",collisionFilter:{category:cat.bullet,mask:b.totalBots()<50?cat.map|cat.body|cat.bullet|cat.mob|cat.mobBullet|cat.mobShield:cat.map|cat.body|cat.mob|cat.mobBullet|cat.mobShield},lockedOn:null,beforeDmg(){this.lockedOn=null},onEnd(){},do(){const t=Vector.add(Vector.add(this.offPlayer,m.pos),Vector.mult(player.velocity,20)),o=Math.max(0,Vector.magnitude(Vector.sub(this.position,t))/this.playerRange),i=Math.min(o,4)*this.mass*this.acceleration;if(this.force=Vector.mult(Vector.normalise(Vector.sub(t,this.position)),i),Matter.Body.setVelocity(this,{x:.95*this.velocity.x,y:.95*this.velocity.y}),!(simulation.cycle%this.lookFrequency)){if(this.lockedOn=null,!m.isCloak){let t=this.range;for(let e=0,o=mob.length;e<o;++e){const o=Vector.magnitude(Vector.sub(this.vertices[0],mob[e].position));!(o-mob[e].radius<t)||mob[e].isShielded||mob[e].isBadTarget&&!mob[e].isMobBullet||0!==Matter.Query.ray(map,this.vertices[0],mob[e].position).length||0!==Matter.Query.ray(body,this.vertices[0],mob[e].position).length||mob[e].isInvulnerable||(t=o,this.lockedOn=mob[e])}}if(Math.random()<.1)if(e){const t=110+4*b.totalBots();this.offPlayer={x:t*(Math.random()-.5),y:t*(Math.random()-.5)-20}}else{const t=110+4*b.totalBots()+100*Math.random();this.offPlayer=Vector.mult(Vector.rotate({x:1,y:0},6.28*Math.random()),t)}}this.lockedOn&&this.lockedOn.alive&&m.energy>this.drainThreshold&&(m.energy-=this.drain,this.laser())},laser(){const t=1-1/(3*tech.laserReflections);let e=this.laserDamage*tech.laserDamage,o={x:1,y:1,dist2:1/0,who:null,v1:1,v2:1};const i=Vector.mult(Vector.rotate({x:1,y:0},m.angle+Math.PI/2),.6*this.lockedOn.radius*Math.sin(simulation.cycle/this.lookFrequency)),s=[{x:this.vertices[0].x,y:this.vertices[0].y},Vector.add(this.lockedOn.position,i)],a=function(){o={x:1,y:1,dist2:1/0,who:null,v1:1,v2:1},o=vertexCollision(s[s.length-2],s[s.length-1],[mob,map,body])},l=function(){if(o.who.alive){if(o.who.locatePlayer(),o.who.damageReduction&&(tech.laserCrit&&!o.who.shield&&Vector.dot(Vector.normalise(Vector.sub(o.who.position,s[s.length-1])),Vector.normalise(Vector.sub(s[s.length-1],s[s.length-2])))>.999-.5/o.who.radius?(e*=1+tech.laserCrit,simulation.drawList.push({x:s[s.length-1].x,y:s[s.length-1].y,radius:Math.sqrt(2500*e*o.who.damageReduction)+5,color:`hsla(${60+283*Math.random()},100%,70%,0.5)`,time:16})):simulation.drawList.push({x:s[s.length-1].x,y:s[s.length-1].y,radius:Math.sqrt(2e3*e*o.who.damageReduction)+2,color:tech.laserColorAlpha,time:simulation.drawTime}),o.who.damage(e)),tech.isLaserPush){const t=s.length-1;Matter.Body.setVelocity(o.who,{x:.97*o.who.velocity.x,y:.97*o.who.velocity.y});const e=Vector.mult(Vector.normalise(Vector.sub(s[t],s[Math.max(0,t-1)])),.003*.4*Math.min(6,o.who.mass));Matter.Body.applyForce(o.who,s[t],e)}}else if(tech.isLaserPush&&"body"===o.who.classType){const t=s.length-1;Matter.Body.setVelocity(o.who,{x:.97*o.who.velocity.x,y:.97*o.who.velocity.y});const e=Vector.mult(Vector.normalise(Vector.sub(s[t],s[Math.max(0,t-1)])),.003*.4*Math.min(6,o.who.mass));Matter.Body.applyForce(o.who,s[t],e)}},n=function(){const t=Vector.perp(Vector.normalise(Vector.sub(o.v1,o.v2))),e=Vector.sub(s[s.length-1],s[s.length-2]),i=Vector.mult(t,2*Vector.dot(e,t)),a=Vector.normalise(Vector.sub(e,i));s[s.length]=Vector.add(Vector.mult(a,3e3),s[s.length-1])};let r;a();let c=o.who;if(o.dist2!==1/0){s[s.length-1]={x:o.x,y:o.y},l();for(let i=0;i<tech.laserReflections&&(n(),a(),o.dist2!==1/0);i++)if(lastReflection=o,s[s.length-1]={x:o.x,y:o.y},e*=t,l(),i%2){if(r===o.who)break}else if(r=o.who,c===o.who)break}ctx.strokeStyle=tech.laserColor,ctx.lineWidth=2,ctx.lineDashOffset=900*Math.random(),ctx.setLineDash([50+120*Math.random(),50*Math.random()]);for(let e=1,o=s.length;e<o;++e)ctx.beginPath(),ctx.moveTo(s[e-1].x,s[e-1].y),ctx.lineTo(s[e].x,s[e].y),ctx.stroke(),ctx.globalAlpha*=t;ctx.setLineDash([]),ctx.globalAlpha=1}}),Composite.add(engine.world,bullet[o])},boomBot(t={x:player.position.x+50*(Math.random()-.5),y:player.position.y+50*(Math.random()-.5)},e=!0){const o=bullet.length,i=m.angle,s=7+2*Math.random();bullet[o]=Bodies.polygon(t.x,t.y,4,s,{isUpgraded:tech.isBoomBotUpgrade,botType:"boom",angle:i,friction:0,frictionStatic:0,frictionAir:.05,restitution:1,dmg:0,minDmgSpeed:0,lookFrequency:43+Math.floor(7*Math.random())-15*tech.isBoomBotUpgrade,acceleration:(e?.005:.001)*(1+.5*Math.random()),attackAcceleration:.012+.005*tech.isBoomBotUpgrade,range:500*(1+.1*Math.random())+250*tech.isBoomBotUpgrade+100*!e,endCycle:1/0,classType:"bullet",collisionFilter:{category:cat.bullet,mask:b.totalBots()<50?cat.map|cat.body|cat.bullet|cat.mob|cat.mobBullet|cat.mobShield:cat.map|cat.body|cat.mob|cat.mobBullet|cat.mobShield},lockedOn:null,explode:0,beforeDmg(){if(this.lockedOn){const t=Math.min(136+230*this.isUpgraded,Vector.magnitude(Vector.sub(this.position,m.pos))-30);t>60&&(this.explode=t),this.lockedOn=null}},onEnd(){},do(){const t=Vector.magnitude(Vector.sub(this.position,player.position));if(t>100)this.explode&&(b.explosion(this.position,Math.max(0,Math.min(this.explode,(t-70)/b.explosionRange()))),this.explode=0),this.force=Vector.mult(Vector.normalise(Vector.sub(player.position,this.position)),this.mass*this.acceleration);else if(t<250&&(Matter.Body.setVelocity(this,Vector.add(Vector.mult(this.velocity,.9),Vector.mult(player.velocity,.17))),!(simulation.cycle%this.lookFrequency||m.isCloak))){this.lockedOn=null;let t=this.range;for(let e=0,o=mob.length;e<o;++e){const o=Vector.magnitude(Vector.sub(this.position,mob[e].position))-mob[e].radius;o<t&&!mob[e].isBadTarget&&0===Matter.Query.ray(map,this.position,mob[e].position).length&&0===Matter.Query.ray(body,this.position,mob[e].position).length&&!mob[e].isInvulnerable&&(t=o,this.lockedOn=mob[e])}}if(this.lockedOn&&this.lockedOn.alive&&!m.isCloak){Vector.magnitude(Vector.sub(this.vertices[0],this.lockedOn.position))-this.lockedOn.radius<this.range&&0===Matter.Query.ray(map,this.position,this.lockedOn.position).length&&(this.force=Vector.add(this.force,Vector.mult(Vector.normalise(Vector.sub(this.lockedOn.position,this.position)),this.attackAcceleration*this.mass)))}}}),Composite.add(engine.world,bullet[o])},plasmaBot(t={x:player.position.x+50*(Math.random()-.5),y:player.position.y+50*(Math.random()-.5)},e=!0){const o=bullet.length,i=m.angle;bullet[o]=Bodies.polygon(t.x,t.y,5,21,{botType:"plasma",angle:i,friction:0,frictionStatic:0,frictionAir:.05,restitution:1,dmg:0,minDmgSpeed:2,lookFrequency:25,cd:0,acceleration:.009,endCycle:1/0,drainThreshold:tech.isEnergyHealth?.5:.05,classType:"bullet",collisionFilter:{category:cat.bullet,mask:b.totalBots()<50?cat.map|cat.body|cat.bullet|cat.mob|cat.mobBullet|cat.mobShield:cat.map|cat.body|cat.mob|cat.mobBullet|cat.mobShield},lockedOn:null,beforeDmg(){this.lockedOn=null},onEnd(){},do(){if(Vector.magnitude(Vector.sub(this.position,m.pos))>150&&(this.force=Vector.mult(Vector.normalise(Vector.sub(m.pos,this.position)),this.mass*this.acceleration)),Matter.Body.setVelocity(this,Vector.add(Vector.mult(this.velocity,.9),Vector.mult(player.velocity,.17))),!(simulation.cycle%this.lookFrequency||(this.lockedOn=null,m.isCloak))){let t=1e3*tech.isPlasmaRange;for(let e=0,o=mob.length;e<o;++e){const o=Vector.magnitude(Vector.sub(this.position,mob[e].position))-mob[e].radius;o<t&&(!mob[e].isBadTarget||mob[e].isMobBullet)&&0===Matter.Query.ray(map,this.position,mob[e].position).length&&0===Matter.Query.ray(body,this.position,mob[e].position).length&&!mob[e].isInvulnerable&&(t=o,this.lockedOn=mob[e])}}if(this.lockedOn&&this.lockedOn.alive&&m.fieldCDcycle<m.cycle){const t=Vector.sub(this.lockedOn.position,this.position),e=Vector.magnitude(t),o=Vector.normalise(t);if(e<450*tech.isPlasmaRange&&m.energy>this.drainThreshold){let t;m.energy-=.001;let e=tech.isPlasmaRange*(120+300*Math.sqrt(Math.random()));const i=[{x:this.position.x,y:this.position.y},{x:this.position.x+e*o.x,y:this.position.y+e*o.y}];if(t={x:null,y:null,dist2:1/0,who:null,v1:null,v2:null},t=vertexCollision(i[0],i[1],[mob,map,body]),t.dist2!=1/0)if(i[i.length-1]={x:t.x,y:t.y},t.who.alive){const e=1.4;if(t.who.damage(e),t.who.locatePlayer(),t.who.speed>3){const e=Vector.mult(Vector.normalise(Vector.sub(m.pos,i[1])),-.004*Math.min(5,t.who.mass));Matter.Body.applyForce(t.who,i[1],e),Matter.Body.setVelocity(t.who,{x:.5*t.who.velocity.x,y:.5*t.who.velocity.y})}else{const e=Vector.mult(Vector.normalise(Vector.sub(m.pos,i[1])),-.01*Math.min(5,t.who.mass));Matter.Body.applyForce(t.who,i[1],e),Matter.Body.setVelocity(t.who,{x:.7*t.who.velocity.x,y:.7*t.who.velocity.y})}t.who.speed>2.5&&Matter.Body.setVelocity(t.who,{x:.75*t.who.velocity.x,y:.75*t.who.velocity.y}),t.who.damageReduction&&simulation.drawList.push({x:i[1].x,y:i[1].y,radius:Math.sqrt(2e3*e*t.who.damageReduction)+2,color:"rgba(255,0,255,0.2)",time:4*simulation.drawTime})}else if(!t.who.isStatic){const e=Vector.mult(Vector.normalise(Vector.sub(m.pos,i[1])),-.007*Math.sqrt(Math.sqrt(t.who.mass)));Matter.Body.applyForce(t.who,i[1],e)}ctx.beginPath(),ctx.moveTo(i[0].x,i[0].y),ctx.lineTo(i[1].x,i[1].y),ctx.strokeStyle="rgba(255,0,255,0.1)",ctx.lineWidth=14,ctx.stroke(),ctx.strokeStyle="#f0f",ctx.lineWidth=2,ctx.stroke();let s=this.position.x+20*o.x,a=this.position.y+20*o.y;ctx.beginPath(),ctx.moveTo(s,a);const l=Vector.magnitude(Vector.sub(i[0],i[1]))/5;for(let t=0;t<4;t++)s+=l*(o.x+1.5*(Math.random()-.5)),a+=l*(o.y+1.5*(Math.random()-.5)),ctx.lineTo(s,a);ctx.lineWidth=2*Math.random(),ctx.stroke()}}}}),Composite.add(engine.world,bullet[o])},orbitBot(t=player.position,e=!0){const o=bullet.length;bullet[o]=Bodies.polygon(t.x,t.y,9,12,{isUpgraded:tech.isOrbitBotUpgrade,botType:"orbit",friction:0,frictionStatic:0,frictionAir:1,isStatic:!0,isSensor:!0,isKeep:e,restitution:0,dmg:0,minDmgSpeed:0,endCycle:1/0,classType:"bullet",collisionFilter:{category:cat.bullet,mask:0},beforeDmg(){},onEnd(){let t=0;for(let e=0;e<bullet.length;e++)"orbit"===bullet[e].botType&&bullet[e]!==this&&bullet[e].isKeep&&t++;let e=0;for(let o=0;o<bullet.length;o++)"orbit"===bullet[o].botType&&bullet[o]!==this&&bullet[o].isKeep&&(bullet[o].phase=e/t*2*Math.PI,e++)},range:160+170*tech.isOrbitBotUpgrade+100*!e*(.5-Math.random()),orbitalSpeed:0,phase:2*Math.PI*Math.random(),do(){if(!m.isCloak){const t=40;q=Matter.Query.region(mob,{min:{x:this.position.x-t,y:this.position.y-t},max:{x:this.position.x+t,y:this.position.y+t}});for(let t=0;t<q.length;t++)if(!q[t].isShielded){mobs.statusStun(q[t],210+90*this.isUpgraded);const e=.4*(this.isUpgraded?4.5:1)*(tech.isCrit?4:1);q[t].damage(e),q[t].alive&&q[t].foundPlayer(),q[t].damageReduction&&simulation.drawList.push({x:this.position.x,y:this.position.y,radius:Math.sqrt(2e3*e*q[t].damageReduction)+2,color:"rgba(0,0,0,0.4)",time:simulation.drawTime})}}const t=simulation.cycle*this.orbitalSpeed+this.phase,e={x:Math.cos(t),y:Math.sin(t)};Matter.Body.setPosition(this,Vector.add(m.pos,Vector.mult(e,this.range)))}}),bullet[o].orbitalSpeed=Math.sqrt(.25/bullet[o].range),Composite.add(engine.world,bullet[o]);let i=0;for(let t=0;t<bullet.length;t++)"orbit"===bullet[t].botType&&bullet[t].isKeep&&i++;let s=0;for(let t=0;t<bullet.length;t++)"orbit"===bullet[t].botType&&bullet[t].isKeep&&(bullet[t].phase=s/i*2*Math.PI,s++)},guns:[{name:"nail gun",descriptionFunction(){return`use compressed air to rapidly drive <strong>nails</strong><br><em>fire rate</em> <strong>increases</strong> the longer you fire<br><strong>${this.ammoPack.toFixed(0)}</strong> nails per ${powerUps.orb.ammo()}`},ammo:0,ammoPack:27,defaultAmmoPack:27,recordedAmmo:0,have:!1,nextFireCycle:0,startingHoldCycle:0,chooseFireMethod(){tech.nailRecoil?tech.isRivets?this.fire=this.fireRecoilRivets:this.fire=this.fireRecoilNails:tech.isRivets?this.fire=this.fireRivets:tech.isNeedles?this.fire=this.fireNeedles:tech.nailInstantFireRate?this.fire=this.fireInstantFireRate:this.fire=this.fireNormal},do(){},fire(){},fireRecoilNails(){this.nextFireCycle+1<m.cycle&&(this.startingHoldCycle=m.cycle);const t=Math.max(11-.06*(m.cycle-this.startingHoldCycle),.99);if(this.nextFireCycle=m.cycle+t*b.fireCDscale,m.fireCDcycle=m.cycle+Math.floor(t*b.fireCDscale),this.baseFire(m.angle+(Math.random()-.5)*(m.crouch?.04:.13)/t,45+6*Math.random()),m.onGround)if(m.crouch){const t=.006;player.force.x-=t*Math.cos(m.angle),player.force.y-=t*Math.sin(m.angle),Matter.Body.setVelocity(player,{x:.5*player.velocity.x,y:.5*player.velocity.y})}else{const t=.03;player.force.x-=t*Math.cos(m.angle),player.force.y-=t*Math.sin(m.angle),Matter.Body.setVelocity(player,{x:.8*player.velocity.x,y:.8*player.velocity.y})}else player.force.x-=.06*Math.cos(m.angle)*Math.min(1,3/(.1+Math.abs(player.velocity.x))),player.force.y-=.006*Math.sin(m.angle)},fireNormal(){this.nextFireCycle+1<m.cycle&&(this.startingHoldCycle=m.cycle);const t=Math.max(11-.06*(m.cycle-this.startingHoldCycle),1);this.nextFireCycle=m.cycle+t*b.fireCDscale,m.fireCDcycle=m.cycle+Math.floor(t*b.fireCDscale),this.baseFire(m.angle+(Math.random()-.5)*(m.crouch?.05:.3)/t)},fireNeedles(){if(m.crouch){function t(){simulation.paused||m.isTimeDilated?requestAnimationFrame(t):(e++,e%2&&b.needle(),e<7&&m.alive&&requestAnimationFrame(t))}m.fireCDcycle=m.cycle+30*b.fireCDscale,b.needle();let e=-1;requestAnimationFrame(t)}else{function t(){simulation.paused||m.isTimeDilated?requestAnimationFrame(t):(o++,o%2&&b.needle(),o<3&&m.alive&&requestAnimationFrame(t))}m.fireCDcycle=m.cycle+22*b.fireCDscale,b.needle();let o=-1;requestAnimationFrame(t)}},fireRivets(){m.fireCDcycle=m.cycle+Math.floor((m.crouch?22:14)*b.fireCDscale);const t=bullet.length,e=8*tech.bulletSize;bullet[t]=Bodies.rectangle(m.pos.x+35*Math.cos(m.angle),m.pos.y+35*Math.sin(m.angle),5*e,e,b.fireAttributes(m.angle)),bullet[t].dmg=tech.isNailRadiation?0:2.75,Matter.Body.setDensity(bullet[t],.002),Composite.add(engine.world,bullet[t]);const o=m.crouch?60:44;if(Matter.Body.setVelocity(bullet[t],{x:o*Math.cos(m.angle),y:o*Math.sin(m.angle)}),bullet[t].endCycle=simulation.cycle+180,bullet[t].beforeDmg=function(t){tech.isIncendiary&&(this.endCycle=0,b.explosion(this.position,100+20*(Math.random()-.5))),tech.isNailCrit?!t.shield&&Vector.dot(Vector.normalise(Vector.sub(t.position,this.position)),Vector.normalise(this.velocity))>.97-1/t.radius&&b.explosion(this.position,300+40*Math.random()):tech.isCritKill&&b.crit(t,this),tech.isNailRadiation&&mobs.statusDoT(t,7*(tech.isFastRadiation?.7:.24),tech.isSlowRadiation?360:tech.isFastRadiation?60:180),this.speed>4&&tech.fragments&&(b.targetedNail(this.position,1.25*tech.fragments*tech.bulletSize),this.endCycle=0)},bullet[t].minDmgSpeed=10,bullet[t].frictionAir=.006,bullet[t].rotateToVelocity=function(){if(this.speed>7){const t={x:Math.cos(this.angle),y:Math.sin(this.angle)},e=.002*this.mass;Vector.cross(Vector.normalise(this.velocity),t)<0?this.torque+=e:this.torque-=e}},tech.isIncendiary?bullet[t].do=function(){this.force.y+=8e-4*this.mass,this.rotateToVelocity(),Matter.Query.collides(this,map).length&&(this.endCycle=0,b.explosion(this.position,300+40*Math.random()))}:bullet[t].do=function(){this.force.y+=8e-4*this.mass,this.rotateToVelocity()},b.muzzleFlash(),m.onGround)if(m.crouch){const t=.01;player.force.x-=t*Math.cos(m.angle),player.force.y-=t*Math.sin(m.angle)}else{const t=.02;player.force.x-=t*Math.cos(m.angle),player.force.y-=t*Math.sin(m.angle)}else{const t=.01;player.force.x-=t*Math.cos(m.angle),player.force.y-=t*Math.sin(m.angle)*.5}},fireRecoilRivets(){this.nextFireCycle+1<m.cycle&&(this.startingHoldCycle=m.cycle);const t=Math.max(25-.14*(m.cycle-this.startingHoldCycle),5);this.nextFireCycle=m.cycle+t*b.fireCDscale,m.fireCDcycle=m.cycle+Math.floor(t*b.fireCDscale);const e=bullet.length,o=8*tech.bulletSize;bullet[e]=Bodies.rectangle(m.pos.x+35*Math.cos(m.angle),m.pos.y+35*Math.sin(m.angle),5*o,o,b.fireAttributes(m.angle)),bullet[e].dmg=tech.isNailRadiation?0:2.75,Matter.Body.setDensity(bullet[e],.002),Composite.add(engine.world,bullet[e]);const i=m.crouch?62:52;if(Matter.Body.setVelocity(bullet[e],{x:i*Math.cos(m.angle),y:i*Math.sin(m.angle)}),bullet[e].endCycle=simulation.cycle+180,bullet[e].beforeDmg=function(t){tech.isIncendiary&&(this.endCycle=0,b.explosion(this.position,100+20*(Math.random()-.5))),tech.isNailCrit?!t.shield&&Vector.dot(Vector.normalise(Vector.sub(t.position,this.position)),Vector.normalise(this.velocity))>.97-1/t.radius&&b.explosion(this.position,300+40*Math.random()):tech.isCritKill&&b.crit(t,this),tech.isNailRadiation&&mobs.statusDoT(t,7*(tech.isFastRadiation?.7:.24),tech.isSlowRadiation?360:tech.isFastRadiation?60:180),this.speed>4&&tech.fragments&&(b.targetedNail(this.position,1.25*tech.fragments*tech.bulletSize),this.endCycle=0)},bullet[e].minDmgSpeed=10,bullet[e].frictionAir=.006,bullet[e].rotateToVelocity=function(){if(this.speed>7){const t={x:Math.cos(this.angle),y:Math.sin(this.angle)},e=.002*this.mass;Vector.cross(Vector.normalise(this.velocity),t)<0?this.torque+=e:this.torque-=e}},tech.isIncendiary?bullet[e].do=function(){this.force.y+=8e-4*this.mass,this.rotateToVelocity(),Matter.Query.collides(this,map).length&&(this.endCycle=0,b.explosion(this.position,100+20*(Math.random()-.5)))}:bullet[e].do=function(){this.force.y+=8e-4*this.mass,this.rotateToVelocity()},b.muzzleFlash(),m.onGround)if(m.crouch){const t=.03;player.force.x-=t*Math.cos(m.angle),player.force.y-=t*Math.sin(m.angle),Matter.Body.setVelocity(player,{x:.4*player.velocity.x,y:.4*player.velocity.y})}else{const t=.1;player.force.x-=t*Math.cos(m.angle),player.force.y-=t*Math.sin(m.angle),Matter.Body.setVelocity(player,{x:.7*player.velocity.x,y:.7*player.velocity.y})}else player.force.x-=.2*Math.cos(m.angle)*Math.min(1,3/(.1+Math.abs(player.velocity.x))),player.force.y-=.02*Math.sin(m.angle)},fireInstantFireRate(){m.fireCDcycle=m.cycle+Math.floor(1*b.fireCDscale),this.baseFire(m.angle+(Math.random()-.5)*(Math.random()-.5)*(m.crouch?1.15:2)/2)},baseFire(t,e=30+6*Math.random()){b.nail({x:m.pos.x+30*Math.cos(m.angle),y:m.pos.y+30*Math.sin(m.angle)},{x:.8*player.velocity.x+e*Math.cos(t),y:.5*player.velocity.y+e*Math.sin(t)}),tech.isIceCrystals&&(bullet[bullet.length-1].beforeDmg=function(t){mobs.statusSlow(t,120),tech.isNailRadiation&&mobs.statusDoT(t,1*(tech.isFastRadiation?1.3:.44),tech.isSlowRadiation?360:tech.isFastRadiation?60:180),tech.isNailCrit&&!t.shield&&Vector.dot(Vector.normalise(Vector.sub(t.position,this.position)),Vector.normalise(this.velocity))>.97-1/t.radius&&b.explosion(this.position,150+30*Math.random()),this.ricochet(t)},m.energy<.01?m.fireCDcycle=m.cycle+60:m.energy-=.005)}},{name:"shotgun",descriptionFunction(){return`fire a wide <strong>burst</strong> of short range <strong>pellets</strong><br>has a slow <strong><em>fire rate</em></strong><br><strong>${this.ammoPack.toFixed(1)}</strong> shots per ${powerUps.orb.ammo()}`},ammo:0,ammoPack:1.6,defaultAmmoPack:1.6,have:!1,do(){},fire(){let t,e;const o=function(){m.crouch?(e=.65,m.fireCDcycle=m.cycle+Math.floor((73+36*tech.shotgunExtraShots)*b.fireCDscale),tech.isShotgunImmune&&m.immuneCycle<m.cycle+Math.floor(60*b.fireCDscale)&&(m.immuneCycle=m.cycle+Math.floor(60*b.fireCDscale)),t=.01):(m.fireCDcycle=m.cycle+Math.floor((56+28*tech.shotgunExtraShots)*b.fireCDscale),tech.isShotgunImmune&&m.immuneCycle<m.cycle+Math.floor(47*b.fireCDscale)&&(m.immuneCycle=m.cycle+Math.floor(47*b.fireCDscale)),e=1.3,t=.1),tech.isShotgunReversed?(player.force.x+=1.5*t*Math.cos(m.angle),player.force.y+=1.5*t*Math.sin(m.angle)-3*player.mass*simulation.g):tech.isShotgunRecoil?(m.fireCDcycle-=56*b.fireCDscale*.66,player.force.x-=2*t*Math.cos(m.angle),player.force.y-=2*t*Math.sin(m.angle)):(player.force.x-=t*Math.cos(m.angle),player.force.y-=t*Math.sin(m.angle)*.5)},i=t=>{for(let o=0;o<t;o++){const t=bullet.length,o=m.angle+(Math.random()-.5)*e;bullet[t]=Bodies.rectangle(m.pos.x,m.pos.y,22,22,b.fireAttributes(o)),Composite.add(engine.world,bullet[t]);const i=52+8*Math.random();Matter.Body.setVelocity(bullet[t],{x:i*Math.cos(o),y:i*Math.sin(o)}),bullet[t].endCycle=simulation.cycle+40*tech.bulletsLastLonger,bullet[t].minDmgSpeed=15,tech.isShotgunReversed&&Matter.Body.setDensity(bullet[t],.0015),bullet[t].frictionAir=.034,bullet[t].do=function(){const t=1-.034/tech.bulletsLastLonger;Matter.Body.scale(this,t,t)}}},s=function(){if(tech.isRivets){const t=bullet.length;bullet[t]=Bodies.rectangle(m.pos.x+35*Math.cos(m.angle),m.pos.y+35*Math.sin(m.angle),56*tech.bulletSize,25*tech.bulletSize,b.fireAttributes(m.angle)),Matter.Body.setDensity(bullet[t],.005*(tech.isShotgunReversed?1.5:1)),Composite.add(engine.world,bullet[t]);const e=m.crouch?50:43;Matter.Body.setVelocity(bullet[t],{x:e*Math.cos(m.angle),y:e*Math.sin(m.angle)}),tech.isIncendiary?(bullet[t].endCycle=simulation.cycle+60,bullet[t].onEnd=function(){b.explosion(this.position,400+60*(Math.random()-.5))},bullet[t].beforeDmg=function(){this.endCycle=0}):bullet[t].endCycle=simulation.cycle+180,bullet[t].minDmgSpeed=7,bullet[t].frictionAir=.004,bullet[t].turnMag=.04*Math.pow(tech.bulletSize,3.75),bullet[t].do=function(){if(this.force.y+=.002*this.mass,this.speed>6){const t={x:Math.cos(this.angle),y:Math.sin(this.angle)};Vector.cross(Vector.normalise(this.velocity),t)<0?this.torque+=this.turnMag:this.torque-=this.turnMag}tech.isIncendiary&&Matter.Query.collides(this,map).length&&(this.endCycle=0)},bullet[t].beforeDmg=function(t){this.speed>4&&(tech.fragments&&(b.targetedNail(this.position,6*tech.fragments*tech.bulletSize),this.endCycle=0),tech.isIncendiary&&(this.endCycle=0),tech.isCritKill&&b.crit(t,this))},i(12)}else if(tech.isIncendiary){e*=.15;const t=Math.floor(m.crouch?8:5),o=9,i=(m.crouch?.3:.8)/o;let s=m.angle-i*o/2;for(let a=0;a<o;a++){s+=i;const o=bullet.length;bullet[o]=Bodies.rectangle(m.pos.x+50*Math.cos(m.angle),m.pos.y+50*Math.sin(m.angle),17,4,b.fireAttributes(s));const a=t+4*Math.random();bullet[o].endCycle=2*a*tech.bulletsLastLonger+simulation.cycle;const l=25*a/t,n=s+(Math.random()-.5)*e;Matter.Body.setVelocity(bullet[o],{x:l*Math.cos(n),y:l*Math.sin(n)}),bullet[o].onEnd=function(){b.explosion(this.position,180*(tech.isShotgunReversed?1.4:1)+30*(Math.random()-.5))},bullet[o].beforeDmg=function(){this.endCycle=0},bullet[o].do=function(){Matter.Query.collides(this,map).length&&(this.endCycle=0)},Composite.add(engine.world,bullet[o])}}else if(tech.isNailShot){e*=.65;const t=2*(tech.isShotgunReversed?1.5:1);if(m.crouch)for(let o=0;o<17;o++){speed=38+15*Math.random();const o=m.angle+(Math.random()-.5)*e,i={x:m.pos.x+35*Math.cos(m.angle)+15*(Math.random()-.5),y:m.pos.y+35*Math.sin(m.angle)+15*(Math.random()-.5)};b.nail(i,{x:speed*Math.cos(o),y:speed*Math.sin(o)},t)}else for(let o=0;o<17;o++){speed=38+15*Math.random();const o=m.angle+(Math.random()-.5)*e,i={x:m.pos.x+35*Math.cos(m.angle)+15*(Math.random()-.5),y:m.pos.y+35*Math.sin(m.angle)+15*(Math.random()-.5)};b.nail(i,{x:speed*Math.cos(o),y:speed*Math.sin(o)},t)}}else if(tech.isSporeFlea){const t={x:m.pos.x+35*Math.cos(m.angle),y:m.pos.y+35*Math.sin(m.angle)},e=2*(tech.isShotgunReversed?1.5:1);for(let o=0;o<e;o++){const e=m.angle+.2*(Math.random()-.5),o=m.crouch?35*(1+.05*Math.random()):30*(1+.15*Math.random());b.flea(t,{x:o*Math.cos(e),y:o*Math.sin(e)}),bullet[bullet.length-1].setDamage()}i(10)}else if(tech.isSporeWorm){const t={x:m.pos.x+35*Math.cos(m.angle),y:m.pos.y+35*Math.sin(m.angle)},e=m.crouch?.02:.07,o=3*(tech.isShotgunReversed?1.5:1);let s=m.angle-(o-1)*e*.5;for(let i=0;i<o;i++){b.worm(t);const o=(30+10*m.crouch)*(1+.2*Math.random());Matter.Body.setVelocity(bullet[bullet.length-1],{x:.5*player.velocity.x+o*Math.cos(s),y:.5*player.velocity.y+o*Math.sin(s)}),s+=e}i(7)}else if(tech.isIceShot){const t=m.crouch?.7:1.2;for(let e=0,o=10*(tech.isShotgunReversed?1.5:1);e<o;e++)b.iceIX(23+10*Math.random(),m.angle+t*(Math.random()-.5));i(10)}else if(tech.isFoamShot){const t=m.crouch?.15:.4,e={x:m.pos.x+25*Math.cos(m.angle),y:m.pos.y+25*Math.sin(m.angle)},o=16*(tech.isShotgunReversed?1.5:1);for(let i=0;i<o;i++){const o=13+4*Math.random(),i=m.angle+t*(Math.random()-.5);b.foam(e,{x:.6*player.velocity.x+o*Math.cos(i),y:.5*player.velocity.y+o*Math.sin(i)},8+7*Math.random())}}else if(tech.isNeedles){const t=9*(tech.isShotgunReversed?1.5:1),e=m.crouch?.03:.05;let o=m.angle-(t-1)*e*.5;for(let i=0;i<t;i++)b.needle(o),o+=e}else i(16)};if(o(),b.muzzleFlash(35),s(),tech.shotgunExtraShots){const t=Math.ceil(7*b.fireCDscale);let e=tech.shotgunExtraShots*t;requestAnimationFrame(function i(){e--,e%t||(o(),b.muzzleFlash(35),s()),e>0&&requestAnimationFrame(i)})}}},{name:"super balls",descriptionFunction(){return`fire <strong>3</strong> balls that retain<br><strong>momentum</strong> and <strong>kinetic energy</strong> after <strong>collisions</strong><br><strong>${this.ammoPack.toFixed(0)}</strong> balls per ${powerUps.orb.ammo()}`},ammo:0,ammoPack:4.05,defaultAmmoPack:4.05,have:!1,do(){},foamBall(){},fireOne(){m.fireCDcycle=m.cycle+Math.floor((m.crouch?27:19)*b.fireCDscale);const t=m.crouch?43:36;b.superBall({x:m.pos.x+30*Math.cos(m.angle),y:m.pos.y+30*Math.sin(m.angle)},{x:t*Math.cos(m.angle),y:t*Math.sin(m.angle)},21*tech.bulletSize)},fireMulti(){m.fireCDcycle=m.cycle+Math.floor((m.crouch?23:15)*b.fireCDscale);const t=m.crouch?.08:.13,e=3+Math.floor(tech.extraSuperBalls*Math.random()),o=m.crouch?43:36;if(tech.isBulletTeleport)for(let t=0;t<e;t++)b.superBall({x:m.pos.x+30*Math.cos(m.angle),y:m.pos.y+30*Math.sin(m.angle)},{x:o*Math.cos(m.angle),y:o*Math.sin(m.angle)},11*tech.bulletSize);else{let i=m.angle-t*(e-1)/2;for(let s=0;s<e;s++)b.superBall({x:m.pos.x+30*Math.cos(i),y:m.pos.y+30*Math.sin(i)},{x:o*Math.cos(i),y:o*Math.sin(i)},11*tech.bulletSize),i+=t}},fireQueue(){m.fireCDcycle=m.cycle+Math.floor((m.crouch?23:15)*b.fireCDscale);const t=5+Math.floor(tech.extraSuperBalls*Math.random()),e=m.crouch?43:36,o=Math.floor((m.crouch?18:12)*b.fireCDscale);m.fireCDcycle=m.cycle+o;let i=0;requestAnimationFrame(function s(){i++,b.superBall({x:m.pos.x+30*Math.cos(m.angle),y:m.pos.y+30*Math.sin(m.angle)},{x:e*Math.cos(m.angle),y:e*Math.sin(m.angle)},11*tech.bulletSize),i<t&&m.alive&&requestAnimationFrame(s),m.fireCDcycle=m.cycle+o})},chooseFireMethod(){tech.oneSuperBall?this.fire=this.fireOne:tech.superBallDelay?this.fire=this.fireQueue:this.fire=this.fireMulti},fire(){}},{name:"wave",descriptionFunction(){return`emit <strong>wave packets</strong> that propagate through <strong>solids</strong><br>waves <strong class='color-s'>slow</strong> mobs<br><strong>${this.ammoPack.toFixed(0)}</strong> wave packets per ${powerUps.orb.ammo()}`},ammo:0,ammoPack:60,defaultAmmoPack:60,have:!1,wavePacketCycle:0,delay:40,phononWaveCD:0,waves:[],chooseFireMethod(){this.waves=[],tech.isLongitudinal?tech.is360Longitudinal?(this.fire=this.fire360Longitudinal,this.do=this.do360Longitudinal):(this.fire=this.fireLongitudinal,this.do=this.doLongitudinal):(this.fire=this.fireTransverse,this.do=this.doTransverse)},do(){},do360Longitudinal(){if(!m.isTimeDilated){ctx.strokeStyle="rgba(0,0,0,0.6)",ctx.lineWidth=2*tech.wavePacketDamage,ctx.beginPath();const t=700*Math.sqrt(tech.bulletsLastLonger),e=2.3*tech.wavePacketDamage*tech.waveBeamDamage*(tech.isBulletTeleport?1.43:1)*(tech.isInfiniteWaveAmmo?.75:1);for(let o=this.waves.length-1;o>-1;o--){ctx.moveTo(this.waves[o].position.x+this.waves[o].radius,this.waves[o].position.y),ctx.arc(this.waves[o].position.x,this.waves[o].position.y,this.waves[o].radius,0,2*Math.PI);for(let t=0,i=mob.length;t<i;t++)if(!mob[t].isShielded){const i=Vector.magnitude(Vector.sub(this.waves[o].position,mob[t].position)),s=mob[t].radius+30;if(i+s>this.waves[o].radius&&i-s<this.waves[o].radius){mob[t].isBadTarget||(mob[t].force.x+=.01*(Math.random()-.5)*mob[t].mass,mob[t].force.y+=.01*(Math.random()-.5)*mob[t].mass),Matter.Body.setVelocity(mob[t],{x:.95*mob[t].velocity.x,y:.95*mob[t].velocity.y});let i=mob[t].vertices;const s=50+.15*mob[t].radius;ctx.moveTo(i[0].x+s*(Math.random()-.5),i[0].y+s*(Math.random()-.5));for(let t=1;t<i.length;t++)ctx.lineTo(i[t].x+s*(Math.random()-.5),i[t].y+s*(Math.random()-.5));ctx.lineTo(i[0].x+s*(Math.random()-.5),i[0].y+s*(Math.random()-.5)),mob[t].locatePlayer(),mob[t].damage(e/Math.sqrt(mob[t].radius)),tech.isPhononWave&&this.phononWaveCD<m.cycle&&(this.phononWaveCD=m.cycle+8*(1+this.waves[o].resonanceCount),this.waves.push({position:mob[t].position,radius:25,resonanceCount:this.waves[o].resonanceCount+1}))}}for(let t=0,e=Math.min(30,body.length);t<e;t++){const e=Vector.magnitude(Vector.sub(this.waves[o].position,body[t].position)),i=20;if(e+i>this.waves[o].radius&&e-i<this.waves[o].radius){const e=body[t];e.force.x+=.01*(Math.random()-.5)*e.mass,e.force.y+=(.01*(Math.random()-.5)-.25*simulation.g)*e.mass;let o=e.vertices;const i=25;ctx.moveTo(o[0].x+i*(Math.random()-.5),o[0].y+i*(Math.random()-.5));for(let t=1;t<o.length;t++)ctx.lineTo(o[t].x+i*(Math.random()-.5),o[t].y+i*(Math.random()-.5));ctx.lineTo(o[0].x+i*(Math.random()-.5),o[0].y+i*(Math.random()-.5)),tech.isPhononBlock&&!e.isNotHoldable&&e.speed<5&&e.angularSpeed<.1&&(Math.random()<.5&&b.targetedBlock(e,50-Math.min(25,3*e.mass)),e.torque+=.001*e.inertia*(Math.random()-.5))}}this.waves[o].radius+=.9*tech.waveBeamSpeed,this.waves[o].radius>t-30*this.waves[o].resonanceCount&&this.waves.splice(o,1)}ctx.stroke()}},fire360Longitudinal(){m.fireCDcycle=m.cycle+Math.floor((m.crouch?4:8)*b.fireCDscale),this.waves.push({position:{x:m.pos.x,y:m.pos.y},radius:25,resonanceCount:0})},doLongitudinal(){if(!m.isTimeDilated){ctx.strokeStyle="rgba(0,0,0,0.6)",ctx.lineWidth=2*tech.wavePacketDamage,ctx.beginPath();const e=1100*tech.bulletsLastLonger,o=2.3*tech.wavePacketDamage*tech.waveBeamDamage*(tech.isBulletTeleport?1.4:1)*(tech.isInfiniteWaveAmmo?.75:1);for(let i=this.waves.length-1;i>-1;i--){const s=Vector.add(this.waves[i].position,Vector.mult(this.waves[i].unit1,this.waves[i].radius)),a=Vector.add(this.waves[i].position,Vector.mult(this.waves[i].unit2,this.waves[i].radius));ctx.moveTo(s.x,s.y),ctx.arc(this.waves[i].position.x,this.waves[i].position.y,this.waves[i].radius,this.waves[i].angle,this.waves[i].angle+this.waves[i].arc);let l=Matter.Query.ray(mob,s,a,50);for(let s=0;s<l.length;s++){const a=l[s].body;if(!a.isShielded){a.force.x+=.01*(Math.random()-.5)*a.mass,a.force.y+=.01*(Math.random()-.5)*a.mass,Matter.Body.setVelocity(a,{x:.95*a.velocity.x,y:.95*a.velocity.y});let s=a.vertices;const l=50+.15*a.radius;ctx.moveTo(s[0].x+l*(Math.random()-.5),s[0].y+l*(Math.random()-.5));for(let t=1;t<s.length;t++)ctx.lineTo(s[t].x+l*(Math.random()-.5),s[t].y+l*(Math.random()-.5));if(ctx.lineTo(s[0].x+l*(Math.random()-.5),s[0].y+l*(Math.random()-.5)),a.locatePlayer(),a.damage(o/Math.sqrt(a.radius)),tech.isPhononWave&&this.phononWaveCD<m.cycle){this.phononWaveCD=m.cycle+8*(1+this.waves[i].resonanceCount);const o=.27;let s,l,n=e-30*this.waves[i].resonanceCount;for(let t=0,e=mob.length;t<e;t++)a===mob[t]||mob[t].isBadTarget||mob[t].isInvulnerable||(l=Vector.magnitude(Vector.sub(a.position,mob[t].position)),l<n&&(s=mob[t],n=l));if(s){const e=Vector.normalise(Vector.sub(s.position,a.position));var t=Math.atan2(e.y,e.x)}else t=2*Math.PI*Math.random();this.waves.push({position:a.position,angle:t-o,unit1:{x:Math.cos(t-o),y:Math.sin(t-o)},unit2:{x:Math.cos(t+o),y:Math.sin(t+o)},arc:2*o,radius:25,resonanceCount:this.waves[i].resonanceCount+1})}}}l=Matter.Query.ray(body,s,a,50);for(let t=0,e=Math.min(30,l.length);t<e;t++){const e=l[t].body;e.force.x+=.01*(Math.random()-.5)*e.mass,e.force.y+=(.01*(Math.random()-.5)-.25*simulation.g)*e.mass;let o=e.vertices;const i=25;ctx.moveTo(o[0].x+i*(Math.random()-.5),o[0].y+i*(Math.random()-.5));for(let t=1;t<o.length;t++)ctx.lineTo(o[t].x+i*(Math.random()-.5),o[t].y+i*(Math.random()-.5));ctx.lineTo(o[0].x+i*(Math.random()-.5),o[0].y+i*(Math.random()-.5)),tech.isPhononBlock&&!e.isNotHoldable&&e.speed<5&&e.angularSpeed<.1&&(Math.random()<.5&&b.targetedBlock(e,50-Math.min(25,3*e.mass)),e.torque+=.001*e.inertia*(Math.random()-.5))}this.waves[i].radius+=1.8*tech.waveBeamSpeed,this.waves[i].radius>e-30*this.waves[i].resonanceCount&&this.waves.splice(i,1)}ctx.stroke()}},fireLongitudinal(){m.fireCDcycle=m.cycle+Math.floor((m.crouch?4:8)*b.fireCDscale);const t=(m.crouch?.0785:.275)*(tech.isBulletTeleport?Math.random()-.5+.66:1),e=m.angle+.3*tech.isBulletTeleport*(Math.random()-.5);this.waves.push({position:{x:m.pos.x+25*Math.cos(m.angle),y:m.pos.y+25*Math.sin(m.angle)},angle:e-t,unit1:{x:Math.cos(e-t),y:Math.sin(e-t)},unit2:{x:Math.cos(e+t),y:Math.sin(e+t)},arc:2*t,radius:25,resonanceCount:0})},doTransverse(){},fireTransverse(){totalCycles=Math.floor(122.5*tech.waveReflections*tech.bulletsLastLonger/Math.sqrt(.5*tech.waveReflections));const t=bullet.length;bullet[t]=Bodies.polygon(m.pos.x+25*Math.cos(m.angle),m.pos.y+25*Math.sin(m.angle),5,4,{angle:m.angle,cycle:-.5,endCycle:simulation.cycle+totalCycles,inertia:1/0,frictionAir:0,slow:0,amplitude:(m.crouch?6:12)*(this.wavePacketCycle%2?-1:1)*Math.sin(.088*this.wavePacketCycle)*Math.sin(.04*this.wavePacketCycle),minDmgSpeed:0,dmg:tech.waveBeamDamage*tech.wavePacketDamage*(tech.isBulletTeleport?1.43:1)*(tech.isInfiniteWaveAmmo?.75:1),dmgCoolDown:0,classType:"bullet",collisionFilter:{category:0,mask:0},beforeDmg(){},onEnd(){},do(){},query(){let t=1;if(Matter.Query.point(map,this.position).length)t=e;else{let e=Matter.Query.point(body,this.position);e.length&&(t=o,Matter.Body.setPosition(this,Vector.add(this.position,e[0].velocity)))}if(t!==this.slow&&(this.slow=t,Matter.Body.setVelocity(this,Vector.mult(Vector.normalise(this.velocity),tech.waveBeamSpeed*t))),this.dmgCoolDown<1){q=Matter.Query.point(mob,this.position);for(let t=0;t<q.length;t++){this.dmgCoolDown=5+Math.floor(8*Math.random()*b.fireCDscale);let e=this.dmg;q[t].damage(e),q[t].alive&&(q[t].foundPlayer(),Matter.Body.setVelocity(q[t],Vector.mult(q[t].velocity,.9))),q[t].damageReduction&&simulation.drawList.push({x:this.position.x,y:this.position.y,radius:40*Math.log(e+1.1)*q[t].damageReduction+3,color:"rgba(0,0,0,0.4)",time:simulation.drawTime})}}else this.dmgCoolDown--},wiggle(){this.cycle++;const t=Vector.mult(i,this.amplitude*Math.cos(this.cycle*tech.waveFrequency));Matter.Body.setPosition(this,Vector.add(this.position,t))}}),tech.isBulletTeleport&&(bullet[t].wiggle=function(){this.cycle++;const t=Vector.mult(i,this.amplitude*Math.cos(this.cycle*tech.waveFrequency));if(Math.random()<.005)if(Math.random()<.33){const e=500*Math.random();Matter.Body.setPosition(this,Vector.add({x:e*(Math.random()-.5),y:e*(Math.random()-.5)},Vector.add(this.position,t)))}else{const e=Vector.mult(this.velocity,50*(Math.random()-.5));Matter.Body.setPosition(this,Vector.add(e,Vector.add(this.position,t)))}else Matter.Body.setPosition(this,Vector.add(this.position,t))});let e=.13,o=.3;tech.isPhaseVelocity&&(e=3.5,o=2,bullet[t].dmg*=1.5),tech.waveReflections?(bullet[t].reflectCycle=totalCycles/tech.waveReflections,bullet[t].do=function(){this.query(),this.cycle>this.reflectCycle&&(this.reflectCycle+=totalCycles/tech.waveReflections,Matter.Body.setVelocity(this,Vector.mult(this.velocity,-1))),this.wiggle()}):bullet[t].do=function(){this.query(),this.wiggle()},Composite.add(engine.world,bullet[t]),Matter.Body.setVelocity(bullet[t],{x:tech.waveBeamSpeed*Math.cos(m.angle),y:tech.waveBeamSpeed*Math.sin(m.angle)});const i=Vector.normalise(Vector.perp(bullet[t].velocity));this.wavePacketCycle++},fire(){}},{name:"missiles",descriptionFunction(){return`launch <strong>homing</strong> missiles that target mobs<br>missiles <strong class='color-e'>explode</strong> on contact with mobs<br><strong>${this.ammoPack.toFixed(1)}</strong> missiles per ${powerUps.orb.ammo()}`},ammo:0,ammoPack:2.3,defaultAmmoPack:2.3,have:!1,fireCycle:0,do(){},fire(){const t=Math.pow(.86,tech.missileCount);m.fireCDcycle=m.cycle+tech.missileFireCD*b.fireCDscale/t;const e={x:Math.cos(m.angle),y:Math.sin(m.angle)};if(tech.missileCount>1){const o=Vector.mult(Vector.perp(e),.2*t/Math.sqrt(tech.missileCount)),i=Math.sqrt(t),s=4;let a=0;const l=()=>{m.crouch?(b.missile({x:m.pos.x+30*e.x,y:m.pos.y+30*e.y},m.angle,20,i),bullet[bullet.length-1].force.x+=.5*o.x*(Math.random()-.5),bullet[bullet.length-1].force.y+=.004+.5*o.y*(Math.random()-.5)):(b.missile({x:m.pos.x+30*e.x,y:m.pos.y+30*e.y},m.angle,-15,i),bullet[bullet.length-1].force.x+=o.x*(Math.random()-.5),bullet[bullet.length-1].force.y+=.005+o.y*(Math.random()-.5))},n=()=>{simulation.paused&&m.alive?requestAnimationFrame(n):(a++,a%s||l(),a<tech.missileCount*s&&m.alive&&requestAnimationFrame(n))};requestAnimationFrame(n)}else m.crouch?b.missile({x:m.pos.x+40*e.x,y:m.pos.y+40*e.y},m.angle,25):(b.missile({x:m.pos.x+40*e.x,y:m.pos.y+40*e.y},m.angle,-12),bullet[bullet.length-1].force.y+=.04*(Math.random()-.2))}},{name:"grenades",descriptionFunction(){return`lob a single <strong>bouncy</strong> projectile<br><strong class='color-e'>explodes</strong> on <strong>contact</strong> or after <strong>1.5</strong> seconds<br><strong>${this.ammoPack.toFixed(0)}</strong> grenades per ${powerUps.orb.ammo()}`},ammo:0,ammoPack:3.2,defaultAmmoPack:3.2,have:!1,do(){},fire(){const t=Math.pow(.93,tech.missileCount);m.fireCDcycle=m.cycle+Math.floor((m.crouch?35:27)*b.fireCDscale/t);const e={x:m.pos.x+30*Math.cos(m.angle),y:m.pos.y+30*Math.sin(m.angle)},o=m.crouch?.12:.2;let i=m.angle-o*(tech.missileCount-1)/2;for(let s=0;s<tech.missileCount;s++)b.grenade(e,i,t),i+=o}},{name:"spores",descriptionFunction(){return`toss a <strong class='color-p' style='letter-spacing: 2px;'>sporangium</strong> that discharges ${b.guns[6].nameString("s")}<br>${b.guns[6].nameString("s")} seek out nearby mobs<br><strong>${this.ammoPack.toFixed(1)}</strong> sporangium per ${powerUps.orb.ammo()}`},ammo:0,ammoPack:1.22,defaultAmmoPack:1.22,have:!1,nameString:(t="")=>tech.isSporeFlea?`<strong class='color-p' style='letter-spacing: -0.8px;'>flea${t}</strong>`:tech.isSporeWorm?`<strong class='color-p' style='letter-spacing: -0.8px;'>worm${t}</strong>`:`<strong class='color-p' style='letter-spacing: 2px;'>spore${t}</strong>`,do(){if(!input.field&&m.crouch){const t=110,e=24,o=.0955,i={x:e*Math.cos(m.angle),y:e*Math.sin(m.angle)};ctx.strokeStyle="rgba(68, 68, 68, 0.2)",ctx.lineWidth=2,ctx.beginPath();for(let e=.5,s=15;e<s+1;e++){const a=t*e/s;ctx.lineTo(m.pos.x+a*i.x,m.pos.y+a*i.y+o*a*a)}ctx.stroke()}},fire(){const t=bullet.length,e=m.angle;bullet[t]=Bodies.polygon(m.pos.x+30*Math.cos(m.angle),m.pos.y+30*Math.sin(m.angle),20,4.5,b.fireAttributes(e,!1)),b.fireProps(m.crouch?40:20,m.crouch?24:18,e,t),Matter.Body.setDensity(bullet[t],1e-6),bullet[t].endCycle=simulation.cycle+480+Math.max(0,120-2*bullet.length),bullet[t].frictionAir=0,bullet[t].friction=.5,bullet[t].radius=4.5,bullet[t].maxRadius=30,bullet[t].restitution=.3,bullet[t].minDmgSpeed=0,bullet[t].totalSpores=8+2*tech.isSporeFreeze+5*tech.isSporeColony,bullet[t].stuck=function(){},bullet[t].beforeDmg=function(){},bullet[t].do=function(){function t(t){t.collisionFilter.mask=0,Matter.Body.setVelocity(t,{x:0,y:0}),t.do=t.grow}const e=Matter.Query.collides(this,mob);if(e.length)t(this),this.stuckTo=e[0].bodyA,tech.isZombieMobs&&(this.stuckTo.isSoonZombie=!0),this.stuckTo.isVerticesChange?this.stuckToRelativePosition={x:0,y:0}:this.stuckToRelativePosition=Vector.rotate(Vector.sub(this.position,this.stuckTo.position),-this.stuckTo.angle),this.stuck=function(){if(this.stuckTo&&this.stuckTo.alive){const t=Vector.rotate(this.stuckToRelativePosition,this.stuckTo.angle);Matter.Body.setPosition(this,Vector.add(Vector.add(t,this.stuckTo.velocity),this.stuckTo.position)),Matter.Body.setVelocity(this,this.stuckTo.velocity)}else this.collisionFilter.mask=cat.map,this.stuck=function(){this.force.y+=6e-4*this.mass}};else{const e=Matter.Query.collides(this,body);e.length?(e[0].bodyA.isNonStick?this.do=this.grow:(t(this),this.stuckTo=e[0].bodyA,this.stuckToRelativePosition=Vector.rotate(Vector.sub(this.position,this.stuckTo.position),-this.stuckTo.angle)),this.stuck=function(){if(this.stuckTo){const t=Vector.rotate(this.stuckToRelativePosition,this.stuckTo.angle);Matter.Body.setPosition(this,Vector.add(Vector.add(t,this.stuckTo.velocity),this.stuckTo.position))}else this.force.y+=7e-4*this.mass}):Matter.Query.collides(this,map).length?t(this):(this.force.y+=7e-4*this.mass,simulation.mouseInGame.x)}ctx.fillStyle="rgba(0,200,125,0.16)",ctx.beginPath(),ctx.arc(this.position.x,this.position.y,this.maxRadius,0,2*Math.PI),ctx.fill()},bullet[t].grow=function(){this.stuck();let t=1.01;if(!tech.isSporeGrowth||simulation.cycle%40)this.stuckTo&&this.stuckTo.alive&&(t=1.03),Matter.Body.scale(this,t,t),this.radius*=t,this.radius>this.maxRadius&&(this.endCycle=0);else{if(tech.isSporeFlea){if(!(simulation.cycle%80)){const t=10+5*Math.random(),e=2*Math.PI*Math.random();b.flea(this.position,{x:t*Math.cos(e),y:t*Math.sin(e)})}}else tech.isSporeWorm?simulation.cycle%80||b.worm(this.position):b.spore(this.position);t=.96,this.stuckTo&&this.stuckTo.alive&&(t=.9),Matter.Body.scale(this,t,t),this.radius*=t}ctx.fillStyle="rgba(0,200,125,0.16)",ctx.beginPath(),ctx.arc(this.position.x,this.position.y,this.maxRadius,0,2*Math.PI),ctx.fill()},bullet[t].onEnd=function(){let t=0;const e=[()=>{b.spore(this.position)},()=>{t++,b.worm(this.position)},()=>{t++;const e=10+5*Math.random(),o=2*Math.PI*Math.random();b.flea(this.position,{x:e*Math.cos(o),y:e*Math.sin(o)})},()=>{b.drone(this.position)},()=>{b.iceIX(1,2*Math.random()*Math.PI,this.position)},()=>{t++,b.missile(this.position,-Math.PI/2+.5*(Math.random()-.5),0,1)},()=>{b.targetedNail(this.position,1,39+6*Math.random())},()=>{const t=2*Math.PI*Math.random();b.superBall(this.position,{x:36*Math.cos(t),y:36*Math.sin(t)},11*tech.bulletSize)}];for(len=this.totalSpores;t<len;t++)tech.isSporeColony&&Math.random()<.33?e[Math.floor(Math.random()*e.length)]():tech.isSporeFlea?e[2]():tech.isSporeWorm?e[1]():e[0]();tech.isStun&&b.AoEStunEffect(this.position,600,270+120*Math.random())}}},{name:"drones",descriptionFunction(){return`deploy <strong>autonomous</strong> <strong>drones</strong> that smash into mobs<br>drones <strong>collect</strong> nearby power ups<br><strong>${this.ammoPack.toFixed(0)}</strong> drones per ${powerUps.orb.ammo()}`},ammo:0,ammoPack:7.8,defaultAmmoPack:7.8,have:!1,do(){},fire(){tech.isDroneRadioactive?m.crouch?(b.droneRadioactive({x:m.pos.x+30*Math.cos(m.angle)+10*(Math.random()-.5),y:m.pos.y+30*Math.sin(m.angle)+10*(Math.random()-.5)},45),m.fireCDcycle=m.cycle+Math.floor(45*b.fireCDscale)):(b.droneRadioactive({x:m.pos.x+30*Math.cos(m.angle)+10*(Math.random()-.5),y:m.pos.y+30*Math.sin(m.angle)+10*(Math.random()-.5)},10),m.fireCDcycle=m.cycle+Math.floor(25*b.fireCDscale)):m.crouch?(b.drone({x:m.pos.x+30*Math.cos(m.angle)+5*(Math.random()-.5),y:m.pos.y+30*Math.sin(m.angle)+5*(Math.random()-.5)},50),m.fireCDcycle=m.cycle+Math.floor(4*b.fireCDscale)):(b.drone({x:m.pos.x+30*Math.cos(m.angle)+10*(Math.random()-.5),y:m.pos.y+30*Math.sin(m.angle)+10*(Math.random()-.5)},15),m.fireCDcycle=m.cycle+Math.floor(3*b.fireCDscale))}},{name:"foam",descriptionFunction(){return`spray bubbly <strong>foam</strong> that <strong>sticks</strong> to mobs<br><strong class='color-s'>slows</strong> mobs and does <strong class='color-d'>damage</strong> over time<br><strong>${this.ammoPack.toFixed(0)}</strong> bubbles per ${powerUps.orb.ammo()}`},ammo:0,ammoPack:12.6,defaultAmmoPack:12.6,have:!1,charge:0,isDischarge:!1,knockBack:5e-4,applyKnock(t){player.force.x-=.7*this.knockBack*t.x,t.y>0?player.force.y-=4.3*this.knockBack*t.y:player.force.y-=this.knockBack*t.y},chooseFireMethod(){tech.isFoamPressure?(this.do=this.doCharges,this.fire=this.fireCharges):(this.do=this.doStream,this.fire=this.fireStream)},doStream(){},fireStream(){const t=m.crouch?.04*(Math.random()-.5)+.09*Math.sin(.12*m.cycle):.23*(Math.random()-.5)+.15*Math.sin(.12*m.cycle),e=5+8*Math.random()+12*(tech.isAmmoFoamSize&&this.ammo<300),o=(m.crouch?1.2:1)*Math.max(2,14-.25*e),i=m.angle+.15*(Math.random()-.5),s={x:.7*player.velocity.x+o*Math.cos(i),y:.5*player.velocity.y+o*Math.sin(i)},a={x:m.pos.x+30*Math.cos(m.angle),y:m.pos.y+30*Math.sin(m.angle)};b.foam(a,Vector.rotate(s,t),e),this.applyKnock(s),m.fireCDcycle=m.cycle+Math.floor(1.5*b.fireCDscale)},doCharges(){if(this.charge>0){ctx.fillStyle="rgba(0,50,50,0.3)",ctx.beginPath();const t=5*Math.sqrt(this.charge),e=11+t;if(ctx.arc(m.pos.x+e*Math.cos(m.angle),m.pos.y+e*Math.sin(m.angle),t,0,2*Math.PI),ctx.fill(),this.isDischarge&&m.cycle%2&&!m.isTimeDilated){const t=(m.crouch?.04:.5)*(Math.random()-.5),e=5+8*Math.random()+12*(tech.isAmmoFoamSize&&this.ammo<300),o=10*(m.crouch?1.2:1)-.4*e+Math.min(5,Math.sqrt(this.charge)),i=m.angle+.15*(Math.random()-.5),s={x:.7*player.velocity.x+o*Math.cos(i),y:.5*player.velocity.y+o*Math.sin(i)},a={x:m.pos.x+30*Math.cos(m.angle),y:m.pos.y+30*Math.sin(m.angle)};b.foam(a,Vector.rotate(s,t),e),this.applyKnock(s),this.charge-=.75,m.fireCDcycle=m.cycle+2}else input.fire||(this.isDischarge=!0)}else this.isDischarge&&(m.fireCDcycle=m.cycle+Math.floor(25*b.fireCDscale)),this.isDischarge=!1},fireCharges(){const t=m.crouch?.04*(Math.random()-.5)+.09*Math.sin(.12*m.cycle):.23*(Math.random()-.5)+.15*Math.sin(.12*m.cycle),e=5+8*Math.random()+12*(tech.isAmmoFoamSize&&this.ammo<300),o=(m.crouch?1.2:1)*Math.max(2,14-.25*e),i=m.angle+.15*(Math.random()-.5),s={x:.7*player.velocity.x+o*Math.cos(i),y:.5*player.velocity.y+o*Math.sin(i)},a={x:m.pos.x+30*Math.cos(m.angle),y:m.pos.y+30*Math.sin(m.angle)};b.foam(a,Vector.rotate(s,t),e),this.applyKnock(s),m.fireCDcycle=m.cycle+Math.floor(1.5*b.fireCDscale),this.charge+=1+tech.isCapacitor},fire(){},do(){}},{name:"harpoon",descriptionFunction(){return`throw a <strong>harpoon</strong> that uses <strong class='color-f'>energy</strong> to <strong>retract</strong><br><strong>harpoons</strong> refund <strong class='color-ammo'>ammo</strong><br><strong>${this.ammoPack.toFixed(1)}</strong> harpoons per ${powerUps.orb.ammo()}`},harpoonName:()=>"<strong>"+(tech.isMaul?"maul":tech.isRebar?"rebar":"harpoon")+"</strong>",ammo:0,ammoPack:.77,defaultAmmoPack:.77,have:!1,fire(){},do(){},chooseFireMethod(){tech.isRailGun?(this.do=this.railDo,this.fire=this.railFire):(this.do=()=>{},this.fire=this.harpoonFire)},charge:0,railDo(){if(this.charge>0){const e=tech.isRailEnergy?0:.002;if(m.energy<e)return m.fireCDcycle=m.cycle+120,this.endCycle=0,this.charge=0,void b.refundAmmo();if(!input.fire&&this.charge>.6){const o={x:m.pos.x+30*Math.cos(m.angle),y:m.pos.y+30*Math.sin(m.angle)},i={distance:1e4,target:null},s=600+500*this.charge;for(let r=0,c=mob.length;r<c;++r)if(!mob[r].isUnblockable){const h=Vector.sub(mob[r].position,m.pos),d=Vector.magnitude(h);if(d<s+mob[r].radius){const u=100+Math.min(s-d+mob[r].radius,1500),y=Vector.mult(Vector.normalise(h),.0015*Math.sqrt(u)*mob[r].mass);mob[r].force.x+=y.x,mob[r].force.y+=y.y;let p=(mob[r].isDropPowerUp?350:1100)*tech.harpoonDensity*this.charge;simulation.drawList.push({x:mob[r].position.x,y:mob[r].position.y,radius:40*Math.log(p+1.1)*mob[r].damageReduction+3,color:"rgba(100, 0, 200, 0.4)",time:15}),mob[r].damage(p)}}for(let g=0,x=body.length;g<x;++g){const f=Vector.sub(body[g].position,m.pos),M=Vector.magnitude(f);if(M<s){const V=Math.min(s-M,500),v=Vector.mult(Vector.normalise(f),.003*Math.sqrt(V)*body[g].mass);body[g].force.x+=v.x,body[g].force.y+=v.y-body[g].mass*simulation.g*1.5}}for(let w=0,B=powerUp.length;w<B;++w){const C=Vector.sub(powerUp[w].position,m.pos),k=Vector.magnitude(C);if(k<s){const D=Math.min(s-k,500),S=Vector.mult(Vector.normalise(C),.002*Math.sqrt(D)*powerUp[w].mass);powerUp[w].force.x+=S.x,powerUp[w].force.y+=S.y-powerUp[w].mass*simulation.g*1.5}}for(let T=0,P=10+25*this.charge;T<P;T++){const F=Vector.rotate({x:1,y:0},6.28*Math.random()),R=Vector.add(m.pos,Vector.mult(F,s*(.6+.3*Math.random())));simulation.drawList.push({x:R.x,y:R.y,radius:5+12*Math.random(),color:"rgba(100, 0, 200, 0.1)",time:Math.floor(5+35*Math.random())})}const a=Vector.mult(Vector.normalise(Vector.sub(o,m.pos)),m.crouch?.03:.06);player.force.x-=a.x,player.force.y-=a.y;const l=tech.isLargeHarpoon?1+.07*Math.sqrt(this.ammo):1,n=.15*this.charge;if(tech.extraHarpoons){let U=0;const A=.06+.05*!m.crouch;let q=m.angle-A*tech.extraHarpoons/2;const L={x:Math.cos(q),y:Math.sin(q)};for(let I=0,O=mob.length;I<O;++I)if(mob[I].alive&&!mob[I].isBadTarget&&!mob[I].shield&&0===Matter.Query.ray(map,m.pos,mob[I].position).length&&!mob[I].isInvulnerable){const Q=Vector.dot(L,Vector.normalise(Vector.sub(mob[I].position,m.pos))),E=Vector.magnitude(Vector.sub(o,mob[I].position));if(Q>.95-Math.min(15e-5*E,.3)&&(b.harpoon(o,m.crouch?null:mob[I],q,l,!1,35,!1,n),q+=A,U++,U>tech.extraHarpoons))break}if(U<tech.extraHarpoons+1){const G=tech.extraHarpoons+1-U;for(let H=0;H<G;H++)b.harpoon(o,null,q,l,!1,35,!1,n),q+=A}simulation.updateGunHUD()}else{const W={x:Math.cos(m.angle),y:Math.sin(m.angle)};for(let N=0,z=mob.length;N<z;++N)if(mob[N].alive&&!mob[N].isBadTarget&&0===Matter.Query.ray(map,m.pos,mob[N].position).length&&!mob[N].isInvulnerable){const $=Vector.dot(W,Vector.normalise(Vector.sub(mob[N].position,m.pos))),K=Vector.magnitude(Vector.sub(o,mob[N].position));K<i.distance&&$>.98-Math.min(14e-5*K,.3)&&(i.distance=K,i.target=mob[N])}b.harpoon(o,i.target,m.angle,l,!1,35,!1,n)}this.charge=0}else{tech.isFireMoveLock&&(Matter.Body.setVelocity(player,{x:0,y:-55*player.mass*simulation.g}),player.force.x=0,player.force.y=0),m.fireCDcycle=m.cycle+10;const J=Math.sqrt(b.fireCDscale)*tech.railChargeRate*(tech.isCapacitor?.6:1)*(m.crouch?.8:1);let X=Math.min(.998,.94+.05*J);this.charge=1-X+this.charge*X,m.energy>e&&(m.energy-=e);const Y=m.pos.x,Z=m.pos.y,j={x:Math.cos(m.angle),y:Math.sin(m.angle)},_=Vector.perp(j);function t(t,e){ctx.moveTo(Y,Z),ctx.bezierCurveTo(Y+j.x*t,Z+j.y*t,Y+j.x*t+_.x*e,Z+j.y*t+_.y*e,Y+_.x*e,Z+_.y*e),ctx.bezierCurveTo(Y-j.x*t+_.x*e,Z-j.y*t+_.y*e,Y-j.x*t,Z-j.y*t,Y,Z)}ctx.fillStyle="rgba(50,0,100,0.05)";const tt=8*this.charge*tech.railChargeRate**3,et=6*this.charge*tech.railChargeRate**3;for(let ot=3;ot<7;ot++){const it=tt*ot*ot*(.93+.07*Math.random()),st=et*ot*ot*(.93+.07*Math.random());ctx.beginPath(),t(it,st),t(it,-st),ctx.fill()}}}},railFire(){m.fireCDcycle=m.cycle+10,this.charge+=1e-5},harpoonFire(){const t={x:m.pos.x+30*Math.cos(m.angle),y:m.pos.y+30*Math.sin(m.angle)},e={distance:1e4,target:null},o=tech.isLargeHarpoon?1+.1*Math.sqrt(this.ammo):1,i=6.5*(tech.isFilament?1+.013*Math.min(110,this.ammo):1)*Math.sqrt(o);if(tech.extraHarpoons&&!m.crouch){const e=.2;let s=m.angle-e*tech.extraHarpoons/2;const a={x:Math.cos(s),y:Math.sin(s)},l=450*(tech.isFilament?1+.012*Math.min(110,this.ammo):1);let n=0;for(let r=0,c=mob.length;r<c;++r)if(mob[r].alive&&!mob[r].isBadTarget&&!mob[r].shield&&0===Matter.Query.ray(map,m.pos,mob[r].position).length&&!mob[r].isInvulnerable){const c=Vector.dot(a,Vector.normalise(Vector.sub(mob[r].position,m.pos)));if(Vector.magnitude(Vector.sub(t,mob[r].position))<l&&c>.9&&this.ammo>0&&(this.ammo--,b.harpoon(t,mob[r],s,o,!0,i),s+=e,n++,n>tech.extraHarpoons))break}if(n<tech.extraHarpoons+1){const t=tech.extraHarpoons-n,s=1;let a=m.angle-e*tech.extraHarpoons/2,l=-1,r=()=>{simulation.paused?requestAnimationFrame(r):(l++,!(l%s)&&this.ammo>0&&(this.ammo--,b.harpoon({x:m.pos.x+30*Math.cos(m.angle),y:m.pos.y+30*Math.sin(m.angle)},null,a,o,!0,i),a+=e),l<t*s&&m.alive&&requestAnimationFrame(r))};requestAnimationFrame(r)}this.ammo++,simulation.updateGunHUD()}else{const s={x:Math.cos(m.angle),y:Math.sin(m.angle)};for(let o=0,i=mob.length;o<i;++o)if(mob[o].alive&&!mob[o].isBadTarget&&0===Matter.Query.ray(map,m.pos,mob[o].position).length&&!mob[o].isInvulnerable){const i=Vector.dot(s,Vector.normalise(Vector.sub(mob[o].position,m.pos))),a=Vector.magnitude(Vector.sub(t,mob[o].position));a<e.distance&&i>.98-Math.min(14e-5*a,.3)&&(e.distance=a,e.target=mob[o])}m.crouch&&m.onGround?b.harpoon(t,null,m.angle,o,!0,1.6*i,!(m.crouch&&tech.crouchAmmoCount&&(tech.crouchAmmoCount-1)%2)):b.harpoon(t,e.target,m.angle,o,!0,i)}m.fireCDcycle=m.cycle+5+35*b.fireCDscale*(tech.isBreakHarpoon?.5:1)+60*(m.energy<.05)+tech.extraHarpoons;const s=Vector.mult(Vector.normalise(Vector.sub(t,m.pos)),m.crouch?.015:.035);player.force.x-=s.x,player.force.y-=s.y}},{name:"mine",descriptionFunction(){return`toss a <strong>proximity</strong> mine that <strong>sticks</strong> to walls<br>refund <strong>undetonated</strong> mines on <strong>exiting</strong> a level<br><strong>${this.ammoPack.toFixed(1)}</strong> mines per ${powerUps.orb.ammo()}`},ammo:0,ammoPack:.77,defaultAmmoPack:.77,have:!1,nameString:(t="")=>tech.isFoamMine?"<strong>foam</strong>":tech.isSuperMine?`<strong>super ball${t}</strong>`:`<strong>nail${t}</strong>`,do(){if(!input.field&&m.crouch&&!tech.isLaserMine){const t=80,e=40,o={x:e*Math.cos(m.angle),y:e*Math.sin(m.angle)};ctx.strokeStyle="rgba(68, 68, 68, 0.2)",ctx.lineWidth=2,ctx.beginPath();for(let e=1.5,i=19;e<i+1;e++){const s=t*e/i;ctx.lineTo(m.pos.x+s*o.x,m.pos.y+s*o.y+.34*s*s)}ctx.stroke()}},fire(){if(m.crouch)if(tech.isLaserMine){const t=30,e={x:t*Math.cos(m.angle),y:t*Math.sin(m.angle)};b.laserMine(m.pos,e),m.fireCDcycle=m.cycle+Math.floor(65*b.fireCDscale)}else{const t={x:m.pos.x+30*Math.cos(m.angle),y:m.pos.y+30*Math.sin(m.angle)};let e=36;Matter.Query.point(map,t).length>0&&(e=-2),b.mine(t,{x:e*Math.cos(m.angle),y:e*Math.sin(m.angle)},0),m.fireCDcycle=m.cycle+Math.floor(55*b.fireCDscale)}else{const t={x:m.pos.x+30*Math.cos(m.angle),y:m.pos.y+30*Math.sin(m.angle)};let e=23;Matter.Query.point(map,t).length>0&&(e=-2),b.mine(t,{x:e*Math.cos(m.angle),y:e*Math.sin(m.angle)},0),m.fireCDcycle=m.cycle+Math.floor(35*b.fireCDscale)}}},{name:"laser",descriptionFunction:()=>`emit a <strong>beam</strong> of collimated coherent <strong class='color-laser'>light</strong><br>reflects off map, <strong class='color-block'>blocks</strong>, and mobs <strong>${tech.isWideLaser||tech.isPulseLaser?0:tech.laserReflections}</strong> times<br>costs <strong>${(6e3*tech.laserDrain).toFixed(1)}</strong> <strong class='color-f'>energy</strong> per second and 0 <strong>ammo</strong>`,ammo:0,ammoPack:1/0,defaultAmmoPack:1/0,have:!1,charge:0,isStuckOn:!1,angle:0,isInsideArc(t){let e=(o=t-this.angle+Math.PI,i=2*Math.PI,o-Math.floor(o/i)*i-Math.PI);var o,i;return Math.abs(e)<this.arcRange},arcRange:.78,lensDamage:1,lensDamageOn:0,lens(){this.stuckOn(),this.angle+=.03,this.isInsideArc(m.angle)?(this.lensDamage=this.lensDamageOn,ctx.lineWidth=6+this.lensDamageOn):(this.lensDamage=1,ctx.lineWidth=2),ctx.beginPath(),ctx.arc(m.pos.x,m.pos.y,60,this.angle-this.arcRange,this.angle+this.arcRange),ctx.strokeStyle="#fff",ctx.stroke()},stuckOn(){tech.isStuckOn&&(this.isStuckOn?(input.fire||this.fire(),m.energy<tech.laserDrain+.06&&(this.isStuckOn=!1)):input.fire&&(this.isStuckOn=!0))},do(){},fire(){},chooseFireMethod(){if(this.lensDamage=1,tech.isLaserLens?this.do=this.lens:this.do=this.stuckOn,tech.isPulseLaser)if(this.fire=()=>{const t=Math.min(.9*m.maxEnergy,.01*(tech.isCapacitor?10:1)/b.fireCDscale);m.energy>t&&this.charge<50*m.maxEnergy&&(m.energy-=t,this.charge+=100*t)},tech.historyLaser){const t=1+tech.historyLaser,e=Math.ceil(30-2*tech.historyLaser);this.do=()=>{if(tech.isLaserLens&&this.lens(),this.charge>0){const o=4.1*Math.sqrt(this.charge);ctx.beginPath();for(let i=0;i<t;i++){const t=m.history[(simulation.cycle-i*e)%600],s=t.yOff-24.2859;ctx.moveTo(t.position.x,t.position.y-s),ctx.ellipse(t.position.x,t.position.y-s,o,.65*o,t.angle,0,2*Math.PI)}if(ctx.fillStyle=`rgba(255,0,0,${.09*Math.sqrt(this.charge)})`,ctx.fill(),!input.fire){if(this.charge>5){m.fireCDcycle=m.cycle+Math.floor(35*b.fireCDscale);for(let o=0;o<t;o++){const t=m.history[(simulation.cycle-o*e)%600],i=t.yOff-24.2859;b.pulse(1.65*this.charge*this.lensDamage,t.angle,{x:t.position.x,y:t.position.y-i})}}this.charge=0}}}}else this.do=()=>{if(tech.isLaserLens&&this.lens(),this.charge>0&&(ctx.beginPath(),ctx.arc(m.pos.x,m.pos.y,4.2*Math.sqrt(this.charge),0,2*Math.PI),ctx.fillStyle=`rgba(255,0,0,${.09*Math.sqrt(this.charge)})`,ctx.fill(),!input.fire)){if(this.charge>5)if(m.fireCDcycle=m.cycle+Math.floor(35*b.fireCDscale),tech.beamSplitter){const t=m.crouch?.15:.35,e=m.angle-tech.beamSplitter*t/2;for(let o=0;o<1+tech.beamSplitter;o++)b.pulse(this.charge,e+o*t)}else b.pulse(1.8*this.charge*this.lensDamage,m.angle);this.charge=0}};else tech.beamCollimator?this.fire=this.fireSplitCollimator:tech.beamSplitter?this.fire=this.fireSplit:tech.historyLaser?this.fire=this.fireHistory:tech.isWideLaser?this.fire=this.fireWideBeam:this.fire=this.fireLaser},fireLaser(){const t=tech.laserDrain/b.fireCDscale;if(m.energy<t)m.fireCDcycle=m.cycle+100;else{m.fireCDcycle=m.cycle,m.energy-=t;const e={x:m.pos.x+20*Math.cos(m.angle),y:m.pos.y+20*Math.sin(m.angle)};b.laser(e,{x:e.x+5e3*Math.cos(m.angle),y:e.y+5e3*Math.sin(m.angle)},tech.laserDamage/b.fireCDscale*this.lensDamage)}},firePulse(){},fireSplit(){const t=tech.laserDrain/b.fireCDscale;if(m.energy<t)m.fireCDcycle=m.cycle+100;else{m.fireCDcycle=m.cycle,m.energy-=t;let e=tech.laserDamage/b.fireCDscale*this.lensDamage;const o={x:m.pos.x+20*Math.cos(m.angle),y:m.pos.y+20*Math.sin(m.angle)},i=m.crouch?.15:.35,s=m.angle-tech.beamSplitter*i/2;for(let t=0;t<1+tech.beamSplitter;t++)b.laser(o,{x:o.x+3e3*Math.cos(s+t*i),y:o.y+3e3*Math.sin(s+t*i)},e,tech.laserReflections,!1)}},fireSplitCollimator(){const t=tech.laserDrain/b.fireCDscale;if(m.energy<t)m.fireCDcycle=m.cycle+100;else{m.fireCDcycle=m.cycle,m.energy-=t;const e=.037,o=tech.beamSplitter+1,i=2*Math.PI/o;for(let t=0;t<o;t++){!(Math.sin(m.cycle*e+i*t+Math.PI/2)>0)&&m.cycle%3||(ctx.globalAlpha=.35);const o=m.angle+(m.crouch?.4:1)*Math.sin(m.cycle*e+i*t),s={x:m.pos.x+30*Math.cos(o),y:m.pos.y+30*Math.sin(o)};b.laser(s,{x:s.x+5e3*Math.cos(m.angle),y:s.y+5e3*Math.sin(m.angle)},tech.laserDamage/b.fireCDscale*this.lensDamage),ctx.globalAlpha=1}}},fireWideBeam(){const t=tech.laserDrain/b.fireCDscale;if(m.energy<t)m.fireCDcycle=m.cycle+100;else{m.fireCDcycle=m.cycle,m.energy-=t;const e={x:5e3*Math.cos(m.angle),y:5e3*Math.sin(m.angle)},o={x:7.5*Math.cos(m.angle+Math.PI/2),y:7.5*Math.sin(m.angle+Math.PI/2)},i={x:7.5*Math.cos(m.angle-Math.PI/2),y:7.5*Math.sin(m.angle-Math.PI/2)},s=.7*tech.laserDamage/b.fireCDscale*this.lensDamage,a={x:m.pos.x+30*Math.cos(m.angle),y:m.pos.y+30*Math.sin(m.angle)},l={x:m.pos.x+15*Math.cos(m.angle),y:m.pos.y+15*Math.sin(m.angle)};ctx.strokeStyle=tech.laserColor,ctx.lineWidth=8,ctx.globalAlpha=.5,ctx.beginPath(),0===Matter.Query.ray(map,l,a).length&&0===Matter.Query.ray(body,l,a).length&&b.laser(l,{x:l.x+e.x,y:l.y+e.y},s,0,!0,.3);for(let t=1;t<tech.wideLaser;t++){let n=Vector.add(a,{x:t*o.x,y:t*o.y});0===Matter.Query.ray(map,l,n).length&&0===Matter.Query.ray(body,l,n).length&&(ctx.moveTo(l.x,l.y),ctx.lineTo(n.x,n.y),b.laser(n,{x:n.x+e.x,y:n.y+e.y},s,0,!0,.3)),n=Vector.add(a,{x:t*i.x,y:t*i.y}),0===Matter.Query.ray(map,l,n).length&&0===Matter.Query.ray(body,l,n).length&&(ctx.moveTo(l.x,l.y),ctx.lineTo(n.x,n.y),b.laser(n,{x:n.x+e.x,y:n.y+e.y},s,0,!0,.3))}ctx.stroke(),tech.isLaserLens&&1!==b.guns[11].lensDamage&&(ctx.lineWidth=20+3*b.guns[11].lensDamageOn,ctx.globalAlpha=.3,ctx.stroke()),ctx.globalAlpha=1}},fireHistory(){if(drain=tech.laserDrain/b.fireCDscale,m.energy<drain)m.fireCDcycle=m.cycle+100;else{m.fireCDcycle=m.cycle,m.energy-=drain;const t=tech.laserDamage/b.fireCDscale*this.lensDamage,e=Math.ceil(23-tech.historyLaser);ctx.beginPath(),b.laser({x:m.pos.x+20*Math.cos(m.angle),y:m.pos.y+20*Math.sin(m.angle)},{x:m.pos.x+3e3*Math.cos(m.angle),y:m.pos.y+3e3*Math.sin(m.angle)},t);for(let o=1,i=1+tech.historyLaser;o<i;o++){const i=m.history[(simulation.cycle-o*e)%600],s=i.yOff-24.2859+2*o;b.laser({x:i.position.x+20*Math.cos(i.angle),y:i.position.y+20*Math.sin(i.angle)-s},{x:i.position.x+3e3*Math.cos(i.angle),y:i.position.y+3e3*Math.sin(i.angle)-s},.7*t,tech.laserReflections,!0)}ctx.strokeStyle=tech.laserColor,ctx.lineWidth=1,ctx.stroke(),tech.isLaserLens&&1!==b.guns[11].lensDamage&&(ctx.strokeStyle=tech.laserColor,ctx.lineWidth=10+2*b.guns[11].lensDamageOn,ctx.globalAlpha=.2,ctx.stroke(),ctx.globalAlpha=1)}}}]};