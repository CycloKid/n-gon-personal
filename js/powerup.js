let powerUp=[];const powerUps={ejectGraphic(e="68, 102, 119"){simulation.drawList.push({x:m.pos.x,y:m.pos.y,radius:100,color:`rgba(${e}, 0.8)`,time:4}),simulation.drawList.push({x:m.pos.x,y:m.pos.y,radius:75,color:`rgba(${e}, 0.6)`,time:8}),simulation.drawList.push({x:m.pos.x,y:m.pos.y,radius:50,color:`rgba(${e}, 0.3)`,time:12}),simulation.drawList.push({x:m.pos.x,y:m.pos.y,radius:25,color:`rgba(${e}, 0.15)`,time:16})},healGiveMaxEnergy:!1,orb:{research(e=1){if(1===e)return'<div class="research-circle"></div> ';let t='<span style="position:relative;">';for(let o=0;o<e;o++)t+=`<div class="research-circle" style="position:absolute; top:1.5px; left:${.6*o}em;"></div>`;t+="</span> &nbsp; &nbsp; ";for(let o=0;o<e;o++)t+="&nbsp; ";return t},ammo(e=1){if(1===e)return'<div class="ammo-circle"></div>';let t='<span style="position:relative;">';for(let o=0;o<e;o++)t+=`<div class="ammo-circle" style="position:absolute; top:1.5px; left:${.6*o}em;"></div>`;t+="</span> &nbsp; &nbsp; ";for(let o=0;o<e;o++)t+="&nbsp; ";return t},heal(e=1){if(powerUps.healGiveMaxEnergy){if(1===e)return'<div class="heal-circle-energy"></div>';let t='<span style="position:relative;">';for(let o=0;o<e;o++)t+=`<div class="heal-circle-energy" style="position:absolute; top:1px; left:${.6*o}em;"></div>`;t+="</span> &nbsp; &nbsp; ";for(let o=0;o<e;o++)t+="&nbsp; ";return t}{if(1===e)return'<div class="heal-circle"></div>';let t='<span style="position:relative;">';for(let o=0;o<e;o++)t+=`<div class="heal-circle" style="position:absolute; top:1px; left:${.6*o}em;"></div>`;t+="</span> &nbsp; &nbsp; ";for(let o=0;o<e;o++)t+="&nbsp; ";return t}},tech:(e=1)=>'<div class="circle-grid tech tooltip" style="width: 1.32em; height: 1.32em;"><span class="tooltiptext color-m">tech</span></div>',field:(e=1)=>'<div class="circle-grid field tooltip"><span class="tooltiptext color-f">field</span></div>',gun:(e=1)=>'<div class="circle-grid gun tooltip"><span class="tooltiptext color-g">gun</span></div>',gunTech:(e=1)=>'<div class="circle-grid tech tooltip" style="position:relative; top:-0.05em; left:0.55em;opacity:0.8;margin-left:-0.55em;"><span class="tooltiptext"><span class="color-g">gun</span><span class="color-m">tech</span></span></div>\n                    <div class="circle-grid gun tooltip" style="position:relative; top:-0.05em; left:-0.55em; opacity:0.65;margin-right:-0.55em;"><span class="tooltiptext"><span class="color-g">gun</span><span class="color-m">tech</span></span></div>',fieldTech:(e=1)=>'<div class="circle-grid tech tooltip" style="position:relative; top:-0.05em; left:0.55em;opacity:0.8;margin-left:-0.55em;"><span class="tooltiptext"><span class="color-f">field</span><span class="color-m">tech</span></span></div>\n                    <div class="circle-grid field tooltip" style="position:relative; top:-0.05em; left:-0.55em;opacity:0.65;margin-right:-0.55em;"><span class="tooltiptext"><span class="color-f">field</span><span class="color-m">tech</span></span></div>',coupling(e=1){if(1===e)return'<div class="coupling-circle"></div>';let t='<span style="position:relative;">';for(let o=0;o<e;o++)t+=`<div class="coupling-circle" style="position:absolute; top:1.5px; left:${.5*o}em;"></div>`;t+="</span> &nbsp; &nbsp;";for(let o=0;o<e;o++)t+="&thinsp; ";return t},boost(e=1){if(1===e)return'<div class="boost-circle"></div>';let t='<span style="position:relative;">';for(let o=0;o<e;o++)t+=`<div class="boost-circle" style="position:absolute; top:1.5px; left:${8*o}px;"></div>`;t+="</span> &nbsp; &nbsp; ";for(let o=0;o<e;o++)t+="&nbsp; ";return t}},totalPowerUps:0,do(){},setPowerUpMode(){tech.duplicationChance()>0||tech.isAnthropicTech?(powerUps.draw=powerUps.drawDup,tech.isPowerUpsVanish?tech.isHealAttract?powerUps.do=()=>{powerUps.dupExplode(),powerUps.draw(),powerUps.attractHeal()}:powerUps.do=()=>{powerUps.dupExplode(),powerUps.draw()}:tech.isHealAttract?powerUps.do=()=>{powerUps.draw(),powerUps.attractHeal()}:powerUps.do=()=>powerUps.draw()):(powerUps.draw=powerUps.drawCircle,tech.isHealAttract?powerUps.do=()=>{powerUps.draw(),powerUps.attractHeal()}:powerUps.do=powerUps.draw)},draw(){},drawCircle(){ctx.globalAlpha=.4*Math.sin(.15*simulation.cycle)+.6;for(let e=0,t=powerUp.length;e<t;++e)ctx.beginPath(),ctx.arc(powerUp[e].position.x,powerUp[e].position.y,powerUp[e].size,0,2*Math.PI),ctx.fillStyle=powerUp[e].color,ctx.fill();ctx.globalAlpha=1},drawDup(){ctx.globalAlpha=.4*Math.sin(.15*simulation.cycle)+.6;for(let e=0,t=powerUp.length;e<t;++e){if(ctx.beginPath(),powerUp[e].isDuplicated){let t=powerUp[e].vertices;ctx.moveTo(t[0].x,t[0].y);for(let e=1;e<t.length;e++)ctx.lineTo(t[e].x,t[e].y);ctx.lineTo(t[0].x,t[0].y)}else ctx.arc(powerUp[e].position.x,powerUp[e].position.y,powerUp[e].size,0,2*Math.PI);ctx.fillStyle=powerUp[e].color,ctx.fill()}ctx.globalAlpha=1},attractHeal(){for(let e=0;e<powerUp.length;e++)if("heal"===powerUp[e].name){let t=Vector.mult(Vector.normalise(Vector.sub(m.pos,powerUp[e].position)),.015*powerUp[e].mass);powerUp[e].force.x+=t.x,powerUp[e].force.y+=t.y-powerUp[e].mass*simulation.g,Matter.Body.setVelocity(powerUp[e],Vector.mult(powerUp[e].velocity,.7))}},dupExplode(){for(let e=0,t=powerUp.length;e<t;++e)if(powerUp[e].isDuplicated){if(Math.random()<.003&&!m.isTimeDilated){b.explosion(powerUp[e].position,175+(11+3*Math.random())*powerUp[e].size),powerUp[e]&&(Matter.Composite.remove(engine.world,powerUp[e]),powerUp.splice(e,1));break}if(Math.random()<.3){const t=Math.max(1,4+powerUp[e].size/5);let o=Vector.rotate({x:t,y:t},2*Math.PI*Math.random()),s={x:powerUp[e].position.x+o.x,y:powerUp[e].position.y+o.y};ctx.beginPath(),ctx.moveTo(s.x,s.y);for(let e=0;e<6;e++)o=Vector.rotate(o,4*(Math.random()-.5)),s=Vector.add(s,o),ctx.lineTo(s.x,s.y);ctx.lineWidth=.5+2*Math.random(),ctx.strokeStyle="#000",ctx.stroke()}}},choose(e,t){if("gun"===e){b.giveGuns(t);let e=`<div class="circle-grid gun"></div> &nbsp; b.giveGuns("<strong class='color-text'>${b.guns[t].name}</strong>")`;if(1===b.inventory.length&&(e+="<br>input.key.gun<span class='color-symbol'>:</span> [\"<span class='color-text'>MouseLeft</span>\"]"),2===b.inventory.length&&(e+=`\n            <br>input.key.nextGun<span class='color-symbol'>:</span> ["<span class='color-text'>${input.key.nextGun}</span>","<span class='color-text'>MouseWheel</span>"]\n            <br>input.key.previousGun<span class='color-symbol'>:</span> ["<span class='color-text'>${input.key.previousGun}</span>","<span class='color-text'>MouseWheel</span>"]`),simulation.inGameConsole(e),tech.isExtraGunTech&&b.inventory.length){const e=b.inventory.length-1,t=[];for(let o=0,s=tech.tech.length;o<s;o++){const s=b.activeGun;if(b.activeGun=b.inventory[e],tech.tech[o].isGunTech&&tech.tech[o].allowed()&&!tech.tech[o].isJunk&&!tech.tech[o].isBadRandomOption&&tech.tech[o].count<tech.tech[o].maxCount){const s=tech.tech[o].requires.search(b.guns[b.inventory[e]].name),n=tech.tech[o].requires.search(" not ");-1!==s&&(-1===n||n>s)&&t.push(o)}b.activeGun=s,b.guns[b.activeGun].have||(0===b.inventory.length?b.activeGun=null:b.activeGun=b.inventory[0],b.inventoryGun=0)}if(t.length){const e=Math.floor(Math.random()*t.length);simulation.inGameConsole(`<span class='color-var'>tech</span>.giveTech("<strong class='color-text'>${tech.tech[t[e]].name}</strong>")`,360),tech.giveTech(t[e]),simulation.boldActiveGunHUD()}}}else if("field"===e){if(m.setField(t),tech.isExtraGunTech){const e=[];for(let t=0,o=tech.tech.length;t<o;t++)tech.tech[t].isFieldTech&&tech.tech[t].allowed()&&!tech.tech[t].isJunk&&!tech.tech[t].isBadRandomOption&&tech.tech[t].count<tech.tech[t].maxCount&&e.push(t);if(e.length){const t=Math.floor(Math.random()*e.length);simulation.inGameConsole(`<span class='color-var'>tech</span>.giveTech("<strong class='color-text'>${tech.tech[e[t]].name}</strong>")`,360),tech.giveTech(e[t]),simulation.boldActiveGunHUD()}}}else"tech"===e&&(simulation.inGameConsole(`<div class="circle-grid tech"></div> &nbsp; <span class='color-var'>tech</span>.giveTech("<strong class='color-text'>${tech.tech[t].name}</strong>")`),tech.giveTech(t));powerUps.endDraft(e)},showDraft(){simulation.isChoosing=!0,document.getElementById("choose-grid").style.pointerEvents="none",document.body.style.cursor="none",setTimeout(()=>{document.body.style.cursor="auto",document.getElementById("choose-grid").style.pointerEvents="auto",document.getElementById("choose-grid").style.transitionDuration="0s"},200),simulation.paused||(tech.isNoDraftPause||level.isNoPause||(simulation.paused=!0),document.getElementById("choose-grid").style.opacity="1",document.getElementById("choose-grid").style.transitionDuration="0.5s",document.getElementById("choose-grid").style.visibility="visible",requestAnimationFrame(()=>{ctx.fillStyle="rgba(150,150,150,0.9)",ctx.fillRect(0,0,canvas.width,canvas.height)})),document.fullscreenElement&&(document.body.addEventListener("mousedown",mouseMove.pointerUnlock,{once:!0}),document.exitPointerLock(),mouseMove.isPointerLocked=!1,mouseMove.reset(),document.body.style.cursor="wait")},endDraft(e,t=!1){if(t){if(tech.isCancelDuplication){const e=.08;tech.duplication+=e,simulation.inGameConsole(`tech.duplicationChance() <span class='color-symbol'>+=</span> ${e}`),simulation.circleFlare(e)}if(tech.isCancelRerolls&&(powerUps.spawnDelay("ammo",4+Math.floor(4*Math.random())),powerUps.spawnDelay("research",4+Math.floor(4*Math.random())),powerUps.spawnDelay("heal",4+Math.floor(4*Math.random()))),tech.isCancelCouple&&powerUps.spawnDelay("coupling",12),tech.isCancelTech&&0===tech.cancelTechCount&&"entanglement"!==e)return tech.cancelTechCount++,void requestAnimationFrame(()=>{powerUps[e].effect()})}if(tech.isAnsatz&&powerUps.research.count<1)for(let e=0;e<3;e++)powerUps.spawn(m.pos.x+40*(Math.random()-.5),m.pos.y+40*(Math.random()-.5),"research",!1);document.getElementById("choose-grid").style.visibility="hidden",document.getElementById("choose-grid").style.opacity="0",document.body.style.cursor="none",simulation.paused&&requestAnimationFrame(cycle),m.alive&&(simulation.paused=!1),simulation.isChoosing=!1,build.unPauseGrid(),m.immuneCycle<m.cycle+5&&(m.immuneCycle=m.cycle+5),m.holdingTarget&&m.drop()},animatePowerUpGrab(e){simulation.ephemera.push({count:25,do(){this.count-=2,this.count<5&&simulation.removeEphemera(this),ctx.beginPath(),ctx.arc(m.pos.x,m.pos.y,Math.max(3,this.count),0,2*Math.PI),ctx.fillStyle=e,ctx.fill()}})},instructions:{name:"instructions",color:"rgba(100,125,140,0.35)",size:()=>130,effect(){Matter.Body.setVelocity(player,{x:0,y:0}),requestAnimationFrame(()=>{ctx.fillStyle="rgba(150,150,150,0.9)",ctx.fillRect(0,0,canvas.width,canvas.height)}),powerUps.animatePowerUpGrab("rgba(0, 0, 0,0.6)"),simulation.paused||(simulation.paused=!0,simulation.isChoosing=!0,document.body.style.cursor="auto",document.getElementById("choose-grid").style.pointerEvents="auto",document.getElementById("choose-grid").style.transitionDuration="0s"),document.getElementById("choose-grid").classList.add("choose-grid-no-images"),document.getElementById("choose-grid").classList.remove("choose-grid"),document.getElementById("choose-grid").style.gridTemplateColumns="800px";let e=`<div class="grid-container" style = "font-size:1rem;padding: 0px;"><pre> <strong>//console commands</strong>\n powerUps.instructions.effect()     //reproduce this message\n powerUps.warp.effect()             //warp to any level\n tech.giveTech("name")              //replace "name" with tech name\n m.setField("name")                 //standing wave  perfect diamagnetism  negative mass  molecular assembler  plasma torch  time dilation  metamaterial cloaking  pilot wave  wormhole  grappling hook\n b.giveGuns("name")                 //nail gun  shotgun  super balls  wave  missiles  grenades  spores  drones  foam  harpoon  mine  laser\n m.damageDone *= 2                  //2x damage\n m.immuneCycle = Infinity           //immune to damage            \n m.coyoteCycles = Infinity          //air jumps\n m.energy = 0                       //set energy\n m.health = 1                       //set health\n m.maxHealth = 1                    //set max health\n m.maxEnergy = 1                    //set max energy\n simulation.enableConstructMode()   //press T to build with mouse\n ${localSettings.loreCount>0?"lore.unlockTesting()               //press T to enter testing":""}\n\n Matter.Body.setPosition(player, simulation.mouseInGame);\n spawn.bodyRect(simulation.mouseInGame.x, simulation.mouseInGame.y, 50, 50)\n spawn.randomLevelBoss(simulation.mouseInGame.x, simulation.mouseInGame.y) \n powerUps.spawn(m.pos.x, m.pos.y, "name") //tech gun field heal ammo research coupling boost instructions entanglement\n \n //this URL downloads newest version of n-gon \n https://codeload.github.com/landgreen/n-gon/zip/refs/heads/master\n\n              <strong>chrome</strong>                     <strong>firefox</strong>\n <strong>Win/Linux:</strong> Ctrl + Shift + J        Ctrl + Shift + J\n       <strong>Mac:</strong> Cmd + Option + J        Cmd + Shift + J</pre></div><div class="choose-grid-module" id="exit" style="text-align: center;font-size: 1.3rem;">exit</div>`;document.getElementById("choose-grid").innerHTML=e,document.getElementById("choose-grid").style.opacity="1",document.getElementById("choose-grid").style.transitionDuration="0.3s",document.getElementById("choose-grid").style.visibility="visible",document.getElementById("exit").addEventListener("click",()=>{level.unPause(),document.body.style.cursor="none",localSettings.isHideImages?(document.getElementById("choose-grid").classList.add("choose-grid-no-images"),document.getElementById("choose-grid").classList.remove("choose-grid")):(document.getElementById("choose-grid").classList.add("choose-grid"),document.getElementById("choose-grid").classList.remove("choose-grid-no-images"))}),document.fullscreenElement&&(document.body.addEventListener("mousedown",mouseMove.pointerUnlock,{once:!0}),document.exitPointerLock(),mouseMove.isPointerLocked=!1,mouseMove.reset())}},warp:{name:"warp",color:"rgb(110,155,160)",size:()=>30,load(e){level.levels[level.onLevel+1]=e,powerUps.warp.exit(),level.nextLevel()},exit(){level.unPause(),document.body.style.cursor="none",localSettings.isHideImages?(document.getElementById("choose-grid").classList.add("choose-grid-no-images"),document.getElementById("choose-grid").classList.remove("choose-grid")):(document.getElementById("choose-grid").classList.add("choose-grid"),document.getElementById("choose-grid").classList.remove("choose-grid-no-images"))},effect(){requestAnimationFrame(()=>{ctx.fillStyle="rgba(150,150,150,0.9)",ctx.fillRect(0,0,canvas.width,canvas.height)}),powerUps.animatePowerUpGrab("rgba(0, 0, 0,0.6)"),simulation.paused||(simulation.paused=!0,simulation.isChoosing=!0,document.body.style.cursor="auto",document.getElementById("choose-grid").style.pointerEvents="auto",document.getElementById("choose-grid").style.transitionDuration="0s"),document.getElementById("choose-grid").classList.add("choose-grid-no-images"),document.getElementById("choose-grid").classList.remove("choose-grid"),document.getElementById("choose-grid").style.gridTemplateColumns="200px";let e='<div class="choose-grid-module" style="font-size: 1.5rem;color:rgb(110,155,160);text-align:center;"><strong>WARP</strong></div>';e+='<div class="choose-grid-module" id="exit" style="font-size: 1rem;color:rgb(110,155,160);text-align:right;padding-right:5px;"><strong>cancel</strong></div>',e+='<div class="choose-grid-module" style="font-size: 1rem;color:rgb(110,155,160);background-color:#444;text-align:center;">level.uniqueLevels</div>';for(let t=0;t<level.uniqueLevels.length;t++)e+=`<div class="choose-grid-module" style="font-size: 1rem;padding-left:5px;" onclick="powerUps.warp.load('${level.uniqueLevels[t]}')">${level.uniqueLevels[t]}</div>`;e+='<div class="choose-grid-module" style="color:rgb(110,155,160);background-color:#444;text-align:center;">level.playableLevels</div>';for(let t=0;t<level.playableLevels.length;t++)e+=`<div class="choose-grid-module" style="padding-left:5px;" onclick="powerUps.warp.load('${level.playableLevels[t]}')">${level.playableLevels[t]}</div>`;e+='<div class="choose-grid-module" style="color:rgb(110,155,160);background-color:#444;text-align:center;">level.communityLevels</div>';for(let t=0;t<level.communityLevels.length;t++)e+=`<div class="choose-grid-module" style="padding-left:5px;" onclick="powerUps.warp.load('${level.communityLevels[t]}')">${level.communityLevels[t]}</div>`;e+='<div class="choose-grid-module" style="color:rgb(110,155,160);background-color:#444;text-align:center;">level.trainingLevels</div>';for(let t=0;t<level.trainingLevels.length;t++)e+=`<div class="choose-grid-module" style="padding-left:5px;" onclick="powerUps.warp.load('${level.trainingLevels[t]}')">${level.trainingLevels[t]}</div>`;document.getElementById("choose-grid").innerHTML=e,document.getElementById("choose-grid").style.opacity="1",document.getElementById("choose-grid").style.transitionDuration="0.3s",document.getElementById("choose-grid").style.visibility="visible",document.getElementById("exit").addEventListener("click",()=>{powerUps.warp.exit()}),document.fullscreenElement&&(document.body.addEventListener("mousedown",mouseMove.pointerUnlock,{once:!0}),document.exitPointerLock(),mouseMove.isPointerLocked=!1,mouseMove.reset())}},difficulty:{name:"difficulty",color:"#000",size:()=>80/Math.pow(localSettings.difficultyMode,1.5),damageDone:1,damageReduction:1,setDamageAndDefense(){simulation.difficultyMode>5?(this.damageReduction=2,this.damageDone=.5):1===simulation.difficultyMode?(this.damageReduction=.5,this.damageDone=2):(this.damageReduction=1,this.damageDone=1),spawn.setMobTypeSpawnOrder()},effect(){const e=simulation.difficultyMode;requestAnimationFrame(()=>{ctx.fillStyle="rgba(150,150,150,0.9)",ctx.fillRect(0,0,canvas.width,canvas.height)}),powerUps.animatePowerUpGrab("rgba(0, 0, 0,0.6)"),simulation.paused||(simulation.paused=!0,simulation.isChoosing=!0,document.body.style.cursor="auto",document.getElementById("choose-grid").style.pointerEvents="auto",document.getElementById("choose-grid").style.transitionDuration="0s"),document.getElementById("choose-grid").classList.add("choose-grid-no-images"),document.getElementById("choose-grid").classList.remove("choose-grid"),document.getElementById("choose-grid").style.gridTemplateColumns="340px";let t=`\n        <div>\n            <div class="grid-container">\n                <div class="left-column">\n                    <input type="range" id="difficulty-slider" name="temp" type="range" step="1" value="1" min="1" max="7" list="values" dir="ltr"/>\n                    <datalist id="values">\n                        <option value="1"></option>\n                        <option value="2"></option>\n                        <option value="3"></option>\n                        <option value="4"></option>\n                        <option value="5"></option>\n                        <option value="6"></option>\n                        <option value="7"></option>\n                    </datalist>\n                </div>\n                <div class="right-column">\n                    <div class="row" id="constraint-1">increase mob <strong class="color-tier">TIER</strong><br>after every <strong>4</strong> levels</div>\n                    <div class="row" id="constraint-2"><strong>0.5x</strong> <strong class='color-d'>damage</strong><br><strong>2x</strong> <strong class='color-defense'>damage taken</strong></div>\n                    <div class="row" id="constraint-3">spawn a <strong>2nd boss</strong><br>bosses spawn <strong>fewer</strong> ${powerUps.orb.tech()}</div>\n                    <div class="row" id="constraint-4">increase mob <strong class="color-tier">TIER</strong><br>after every <strong>3</strong> levels</div>\n                    <div class="row" id="constraint-5"><strong>+1</strong> random <strong class="constraint">constraint</strong><br>fewer initial <strong>power ups</strong></div>\n                    <div class="row" id="constraint-6"><strong>0.5x</strong> <strong class='color-d'>damage</strong><br><strong>2x</strong> <strong class='color-defense'>damage taken</strong></div>\n                    <div class="row" id="constraint-7"><strong>+1</strong> random <strong class="constraint">constraint</strong><br>fewer ${powerUps.orb.tech()} spawn</div>\n                </div>\n                <div class="far-right-column">\n                    <div id = "constraint-1-record">${localSettings.difficultyCompleted[1]?"⚆":" "}</div>\n                    <div id = "constraint-2-record">${localSettings.difficultyCompleted[2]?"⚆":" "}</div>\n                    <div id = "constraint-3-record">${localSettings.difficultyCompleted[3]?"⚆":" "}</div>\n                    <div id = "constraint-4-record">${localSettings.difficultyCompleted[4]?"⚆":" "}</div>\n                    <div id = "constraint-5-record">${localSettings.difficultyCompleted[5]?"⚆":" "}</div>\n                    <div id = "constraint-6-record">${localSettings.difficultyCompleted[6]?"⚇":" "}</div>\n                    <div id = "constraint-6-record">${localSettings.difficultyCompleted[7]?"⚇":" "}</div>\n                </div>\n            </div>\n            <div class="choose-grid-module" id="choose-difficulty">confirm difficulty parameters</div>\n        </div>`;document.getElementById("choose-grid").innerHTML=t,document.getElementById("choose-grid").style.opacity="1",document.getElementById("choose-grid").style.transitionDuration="0.5s",document.getElementById("choose-grid").style.visibility="visible",document.getElementById("choose-difficulty").addEventListener("click",()=>{if(level.unPause(),document.body.style.cursor="none",localSettings.isHideImages?(document.getElementById("choose-grid").classList.add("choose-grid-no-images"),document.getElementById("choose-grid").classList.remove("choose-grid")):(document.getElementById("choose-grid").classList.add("choose-grid"),document.getElementById("choose-grid").classList.remove("choose-grid-no-images")),0===level.levelsCleared&&e!==simulation.difficultyMode){powerUps.difficulty.setDamageAndDefense();for(let e=0;e<powerUp.length;++e)Matter.Composite.remove(engine.world,powerUp[e]);powerUp=[],level.initialPowerUps(),simulation.trails(30)}}),document.fullscreenElement&&(document.body.addEventListener("mousedown",mouseMove.pointerUnlock,{once:!0}),document.exitPointerLock(),mouseMove.isPointerLocked=!1,mouseMove.reset());let o=function(e=!0){for(let e=1;e<8;e++){const t=document.getElementById("constraint-"+e);simulation.difficultyMode<e?t.style.opacity="0.15":t.style.opacity="1"}e&&(lore.setTechGoal(),localSettings.difficultyMode=simulation.difficultyMode,powerUps.difficulty.setDamageAndDefense(),localSettings.levelsClearedLastGame=0,localSettings.entanglement=void 0,localSettings.isAllowed&&localStorage.setItem("localSettings",JSON.stringify(localSettings)))};o(!1),document.getElementById("difficulty-slider").value=simulation.difficultyMode,document.getElementById("difficulty-slider").addEventListener("input",()=>{simulation.difficultyMode=document.getElementById("difficulty-slider").value,o(),level.setConstraints()});for(let e=1;e<8;e++)document.getElementById("constraint-"+e).addEventListener("click",()=>{simulation.difficultyMode=e,document.getElementById("difficulty-slider").value=simulation.difficultyMode,o(),level.setConstraints()})}},coupling:{name:"coupling",color:"#0ae",size:()=>13,effect(){powerUps.animatePowerUpGrab("rgba(0, 170, 238,0.3)"),m.couplingChange(1)}},boost:{name:"boost",color:"#f55",size:()=>11,endCycle:0,duration:null,damage:null,isDefense:!1,effect(){powerUps.animatePowerUpGrab("rgba(255, 0, 0, 0.5)"),powerUps.boost.endCycle=simulation.cycle+Math.floor(.6*Math.max(0,powerUps.boost.endCycle-simulation.cycle))+powerUps.boost.duration},draw(){if(powerUps.boost.endCycle>simulation.cycle){ctx.save(),ctx.translate(m.pos.x,m.pos.y),m.velocitySmooth=Vector.add(Vector.mult(m.velocitySmooth,.8),Vector.mult(player.velocity,.2)),ctx.rotate(Math.atan2(m.velocitySmooth.y,m.velocitySmooth.x)),ctx.beginPath();const e=40,t=8*Vector.magnitude(m.velocitySmooth)+e;ctx.arc(0,0,e,-Math.PI/2,Math.PI/2),ctx.bezierCurveTo(-e,e,-e,0,-t,0),ctx.bezierCurveTo(-e,0,-e,-e,0,-e);const o=Math.min(.5,(powerUps.boost.endCycle-simulation.cycle)/powerUps.boost.duration);ctx.fillStyle=`rgba(255,0,200,${o})`,ctx.fill(),ctx.strokeStyle="#f09",ctx.lineWidth=.3+4*o,ctx.stroke(),ctx.restore()}}},research:{count:0,name:"research",color:"#f7b",size:()=>20,effect(){powerUps.animatePowerUpGrab("rgba(255, 119, 187,0.3)"),powerUps.research.changeRerolls(1)},isMakingBots:!1,changeRerolls(e){if(0!==e&&(powerUps.research.count+=e),tech.isRerollBots&&!this.isMakingBots){let e=()=>{const t=2+Math.floor(2*b.totalBots()/5);m.alive&&powerUps.research.count>=t?(requestAnimationFrame(e),this.isMakingBots=!0,simulation.paused||simulation.isChoosing||simulation.cycle%60||(powerUps.research.expend(t),b.randomBot())):this.isMakingBots=!1};requestAnimationFrame(e)}if(tech.isDeathAvoid&&document.getElementById("tech-anthropic")&&(document.getElementById("tech-anthropic").innerHTML=`-${powerUps.research.count}`),tech.renormalization&&Math.random()<.47&&e<0)for(let t=0,o=-e;t<o;t++)powerUps.spawn(m.pos.x,m.pos.y,"research");tech.isRerollHaste&&(0===powerUps.research.count?(tech.researchHaste=.5,b.setFireCD()):(tech.researchHaste=1,b.setFireCD()))},currentRerollCount:0,expend(e){for(let t=0;t<e;t++)powerUps.research.count>0&&(powerUps.research.changeRerolls(-1),tech.isResearchDamage&&(m.damageDone*=1.03,simulation.inGameConsole("<span class='color-var'>tech</span>.damage *= 1.03 //peer review")),tech.isResearchHeal&&powerUps.spawn(player.position.x+150*(Math.random()-.5),player.position.y+150*(Math.random()-.5),"heal",!1))},use(e){tech.isJunkResearch&&powerUps.research.currentRerollCount<2?tech.addJunkTechToPool(.01):powerUps.research.changeRerolls(-1),tech.isResearchDamage&&(m.damageDone*=1.03,simulation.inGameConsole("<span class='color-var'>tech</span>.damage *= 1.03 //peer review")),tech.isResearchHeal&&powerUps.spawn(player.position.x+150*(Math.random()-.5),player.position.y+150*(Math.random()-.5),"heal",!1),powerUps.research.currentRerollCount++,tech.isResearchReality&&(m.switchWorlds("Ψ(t) collapse"),simulation.trails(),simulation.inGameConsole(`simulation.amplitude <span class='color-symbol'>=</span> ${Math.random()}`)),powerUps[e].effect()}},heal:{name:"heal",color:"#0eb",size:()=>40*Math.sqrt(.35)*simulation.healScale**.25*Math.sqrt(tech.largerHeals*(tech.isHalfHeals?.5:1)),effect(){if(!tech.isEnergyHealth&&m.alive){powerUps.animatePowerUpGrab("rgba(0, 238, 187,0.25)");let e=(this.size/40/simulation.healScale**.25)**2;if(e>0){let t=m.health+e*simulation.healScale-m.maxHealth;const o=Math.min(m.maxHealth-m.health,e)*simulation.healScale;if(m.addHealth(e),o>0&&simulation.inGameConsole(`<div class="circle-grid heal"></div> &nbsp; <span class='color-var'>m</span>.health <span class='color-symbol'>+=</span> ${o.toFixed(3)}`),tech.isOverHeal&&t>0?(tech.extraMaxHealth+=.5*t,m.setMaxHealth(),simulation.inGameConsole(`<div class="circle-grid heal"></div> &nbsp; <span class='color-var'>m</span>.maxHealth <span class='color-symbol'>+=</span> ${(.3*t).toFixed(3)}`),simulation.drawList.push({x:m.pos.x,y:m.pos.y,radius:Math.max(3,100*t*simulation.healScale),color:"#0eb",time:simulation.drawTime})):t>.2&&requestAnimationFrame(()=>{powerUps.directSpawn(this.position.x,this.position.y,"heal",!0,40*Math.min(1,t)*simulation.healScale**.25)}),tech.isHealBrake){const t=1020;let o=!1;for(let s=0;s<simulation.ephemera.length;s++)"healPush"===simulation.ephemera[s].name&&(o=!0,simulation.ephemera[s].count=.5*simulation.ephemera[s].count+t,simulation.ephemera[s].scale=.5*(simulation.ephemera[s].scale+Math.min(Math.max(.6,6*e),2.3)));o||simulation.ephemera.push({count:t,range:0,scale:Math.min(Math.max(.7,4*e),2.2),do(){this.count--,this.count<0&&simulation.removeEphemera(this),this.range=.99*this.range+.01*(300*this.scale+100*Math.sin(.022*m.cycle)),this.count<120&&(this.range-=5*this.scale),this.range=Math.max(this.range,1);for(let e=0;e<mob.length;e++){if(Vector.magnitude(Vector.sub(m.pos,mob[e].position))<this.range){const t=mob[e].isShielded?3:1;mob[e].speed>t&&Vector.dot(mob[e].velocity,Vector.sub(m.pos,mob[e].position))>0&&Matter.Body.setVelocity(mob[e],Vector.mult(Vector.normalise(mob[e].velocity),t))}}ctx.beginPath(),ctx.arc(m.pos.x,m.pos.y,this.range,0,2*Math.PI),ctx.fillStyle="hsla(200,50%,61%,0.18)",ctx.fill()}})}}}powerUps.healGiveMaxEnergy&&(tech.healMaxEnergyBonus+=.15*tech.largerHeals*(tech.isHalfHeals?.5:1),m.setMaxEnergy())},spawn(e,t,o){powerUps.directSpawn(e,t,"heal",!1,o),!level.isNextLevelPowerUps&&Math.random()<tech.duplicationChance()&&(powerUps.directSpawn(e,t,"heal",!1,o),powerUp[powerUp.length-1].isDuplicated=!0)}},ammo:{name:"ammo",color:"#467",size:()=>17,effect(){const e=10===m.fieldMode||0===m.fieldMode?1+.04*m.coupling:1;if(b.inventory.length>0){if(powerUps.animatePowerUpGrab("rgba(68, 102, 119,0.25)"),tech.isAmmoForGun&&null!==b.activeGun&&void 0!==b.activeGun){const t=b.guns[b.activeGun];t.ammo!==1/0&&(tech.ammoCap?t.ammo=Math.ceil(2*t.ammoPack*tech.ammoCap*e):t.ammo+=Math.ceil(2*(Math.random()+Math.random())*t.ammoPack*e))}else for(let t=0,o=b.inventory.length;t<o;t++){const o=b.guns[b.inventory[t]];o.ammo!==1/0&&(tech.ammoCap?o.ammo=Math.ceil(o.ammoPack*tech.ammoCap*e):o.ammo+=Math.ceil((Math.random()+Math.random())*o.ammoPack*e))}simulation.updateGunHUD()}}},cancelText:e=>tech.isSuperDeterminism||"constraint"===e?"<div></div>":tech.isCancelTech&&0===tech.cancelTechCount?`<div class='cancel-card sticky' onclick='powerUps.endDraft("${e}",true)' style="width: 115px;"><span class="color-randomize">randomize</span></div>`:0===level.levelsCleared&&localSettings.isTrainingNotAttempted&&0===b.inventory.length?"<div class='cancel-card sticky'  style=\"visibility: hidden;\"></div>":`<div class='cancel-card sticky' onclick='powerUps.endDraft("${e}",true)' style="width: 85px;">cancel</div>`,researchText(e){let t="";if("entanglement"===e)t+=`<div class='choose-grid-module entanglement flipX sticky' onclick='powerUps.endDraft("${e}",true)'>entanglement</div>`;else if(tech.isJunkResearch&&powerUps.research.currentRerollCount<2)t+=`<div onclick="powerUps.research.use('${e}')" class='research-card sticky'>`,t+='<div><div> <span style="position:relative;">',t+=`<div class="circle-grid junk" style="position:absolute; top:0; left:${15*i}px ;opacity:0.8; border: 1px #fff solid;width: 1.15em;height: 1.15em;"></div>`,t+="</span>&nbsp; <span class='research-select'>pseudoscience</span></div></div></div>";else if(powerUps.research.count>0){t+=`<div onclick="powerUps.research.use('${e}')" class='research-card sticky' >`,t+='<div><div><span style="position:relative;">';for(let e=0,o=Math.min(powerUps.research.count,30);e<o;e++)t+=`<div class="circle-grid research" style="font-size:0.82em; position:absolute; top:0; left:${(18-.21*o)*e}px ;opacity:0.8; border: 1px #fff solid;"></div>`;t+=`</span>&nbsp; <span class='research-select'>${tech.isResearchReality?"<span class='alt'>alternate reality</span>":"research"}</span></div></div></div>`}else t+="<div></div>";return t},researchAndCancelText(e){let t="<div class='research-cancel'>";if("constraint"!==e){if("entanglement"===e)t+=`<span class='research-card entanglement flipX' style="width: 275px;" onclick='powerUps.endDraft("${e}",true)'><span style="letter-spacing: 6px;">entanglement</span></span>`;else if(tech.isJunkResearch&&powerUps.research.currentRerollCount<2)t+=`<span onclick="powerUps.research.use('${e}')" class='research-card' style="width: 275px;float: left;">`,t+='<div><div><span style="position:relative;">',t+=`<div class="circle-grid junk" style="position:absolute; top:0; left:${15*i}px ;opacity:0.8; border: 1px #fff solid;width: 1.15em;height: 1.15em;"></div>`,t+=`</span>&nbsp; <span class='research-select'>${tech.isResearchReality?"<span class='alt'>alternate reality</span>":"research"}</span></div></div></span>`;else if(powerUps.research.count>0){t+=`<span onclick="powerUps.research.use('${e}')" class='research-card' style="width: 275px;float: left;">`,t+='<div><div><span style="position:relative;">';let o=18;tech.isCancelTech&&0===tech.cancelTechCount&&(o-=2),canvas.width<1951&&(o-=3),canvas.width<1711&&(o-=4);for(let e=0,s=Math.min(powerUps.research.count,o);e<s;e++)t+=`<div class="circle-grid research" style="font-size:0.82em; position:absolute; top:0; left:${(18-.21*s)*e}px ;opacity:0.8; border: 1px #fff solid;"></div>`;t+=`</span>&nbsp; <span class='research-select'>${tech.isResearchReality?"<span class='alt'>alternate reality</span>":"research"}</span></div></div></span>`}else t+="<span class='research-card' style=\"width: 275px;float: right; background-color: #aaa;color:#888;\">research</span>";return tech.isSuperDeterminism?t+="<span class='cancel-card' style=\"width: 95px;float: right;background-color: #aaa;color:#888;\">cancel</span>":tech.isCancelTech&&0===tech.cancelTechCount?t+=`<span class='cancel-card' onclick='powerUps.endDraft("${e}",true)' style="width: 115px;float: right;font-size:0.9em;padding-top:5px;"><span class="color-randomize">randomize</span></span>`:0===level.levelsCleared&&localSettings.isTrainingNotAttempted&&0===b.inventory.length?t+="<span class='cancel-card' style=\"visibility: hidden;\">cancel</span>":t+=`<span class='cancel-card' onclick='powerUps.endDraft("${e}",true)' style="width: 95px;float: right;">cancel</span>`,t+"</div>"}},buildColumns(e,t){let o;o=canvas.width<1710?"285px":canvas.width<1950?"340px":"384px";let s="";return localSettings.isHideImages||0===e||1===e||canvas.width<1200?(document.getElementById("choose-grid").style.gridTemplateColumns=o,s+=powerUps.researchAndCancelText(t)):2===e?(document.getElementById("choose-grid").style.gridTemplateColumns=`repeat(2, ${o})`,s+=powerUps.researchText(t),s+=powerUps.cancelText(t)):(document.getElementById("choose-grid").style.gridTemplateColumns=`repeat(3, ${o})`,s+="<div></div>",s+=powerUps.researchText(t),s+=powerUps.cancelText(t)),s},hideStyle:'style="height:auto; border: none; background-color: transparent;"',constraintText:(e,t)=>`<div class="choose-grid-module card-background ${level.blurryChoices&&Math.random()<.6?"blurry-text":""}" onclick="${t}" onauxclick="${t}"${powerUps.hideStyle}>\n        <div class="card-text">\n        <div class="grid-title"><div class="circle-grid field"></div> &nbsp; ${m.fieldUpgrades[e].name}</div>\n        ${m.fieldUpgrades[e].description}</div></div>`,gunText(e,t){const o=localSettings.isHideImages?powerUps.hideStyle:`style="background-image: url('img/gun/${b.guns[e].name}.webp');"`;return`<div class="choose-grid-module card-background ${level.blurryChoices&&Math.random()<.6?"blurry-text":""}" onclick="${t}" onauxclick="${t}" ${o}>\n            <div class="card-text">\n            <div class="grid-title"><div class="circle-grid-title gun"></div> &nbsp; ${b.guns[e].name}</div>\n            ${b.guns[e].descriptionFunction()}</div></div>`},fieldText(e,t){const o=localSettings.isHideImages?powerUps.hideStyle:`style="background-image: url('img/field/${m.fieldUpgrades[e].name}${0===e?Math.floor(10*Math.random()):""}.webp');"`;return`<div class="choose-grid-module card-background ${level.blurryChoices&&Math.random()<.6?"blurry-text":""}" onclick="${t}" onauxclick="${t}"${o}>\n        <div class="card-text">\n        <div class="grid-title"><div class="circle-grid-title field"></div> &nbsp; ${m.fieldUpgrades[e].name}</div>\n        ${m.fieldUpgrades[e].description}</div></div>`},techText(e,t){const o=tech.tech[e].count>0?`(${tech.tech[e].count+1}x)`:"",s=localSettings.isHideImages||tech.tech[e].isLore?powerUps.hideStyle:`style="background-image: url('img/${tech.tech[e].name}.webp');"`;return`<div class="choose-grid-module card-background ${level.blurryChoices&&Math.random()<.6?"blurry-text":""}" onclick="${t}" onauxclick="${t}"${s}>\n                <div class="card-text">\n                <div class="grid-title"><div class="circle-grid-title tech"></div> &nbsp; ${tech.tech[e].name} ${o}</div>\n                ${tech.tech[e].descriptionFunction?tech.tech[e].descriptionFunction():tech.tech[e].description}</div></div>`},instantTechText(e,t){const o=tech.tech[e].count>0?`(${tech.tech[e].count+1}x)`:"",s=localSettings.isHideImages||tech.tech[e].isLore?powerUps.hideStyle:`style="background-image: url('img/${tech.tech[e].name}.webp');"`;return`<div class="choose-grid-module card-background ${level.blurryChoices&&Math.random()<.6?"blurry-text":""}" onclick="${t}" onauxclick="${t}"${s}>\n                <div class="card-text">\n                <div class="grid-title"> <div class="circle-grid-instant"></div> &nbsp; ${tech.tech[e].name} ${o}</div>\n                ${tech.tech[e].descriptionFunction?tech.tech[e].descriptionFunction():tech.tech[e].description}</div></div>`},skinTechText(e,t){const o=tech.tech[e].count>0?`(${tech.tech[e].count+1}x)`:"",s=localSettings.isHideImages?powerUps.hideStyle:`style="background-image: url('img/${tech.tech[e].name}.webp');"`;return`<div class="choose-grid-module card-background ${level.blurryChoices&&Math.random()<.6?"blurry-text":""}" onclick="${t}" onauxclick="${t}"${s}>\n                <div class="card-text">\n                <div class="grid-title">         \n                <span style="position:relative;">\n                    <div class="circle-grid-skin"></div>\n                    <div class="circle-grid-skin-eye"></div>\n                </span>\n                &nbsp; &nbsp; &nbsp; &nbsp; ${tech.tech[e].name} ${o}</div>\n                ${tech.tech[e].descriptionFunction?tech.tech[e].descriptionFunction():tech.tech[e].description}</div></div>`},fieldTechText(e,t){const o=tech.tech[e].count>0?`(${tech.tech[e].count+1}x)`:"",s=localSettings.isHideImages?powerUps.hideStyle:`style="background-image: url('img/${tech.tech[e].name}.webp');"`;return`<div class="choose-grid-module card-background ${level.blurryChoices&&Math.random()<.6?"blurry-text":""}" onclick="${t}" onauxclick="${t}"${s}>\n                <div class="card-text">\n                <div class="grid-title">\n                <span style="position:relative;">\n                    <div class="circle-grid-title tech" style="position:absolute; top:0.12em; left:0;opacity:0.8;"></div>\n                    <div class="circle-grid-title field" style="position:absolute; top:0.12em; left:10px;opacity:0.65;"></div>\n                </span>\n                &nbsp; &nbsp; &nbsp; &nbsp;  &nbsp; ${tech.tech[e].name} ${o}</div>\n                ${tech.tech[e].descriptionFunction?tech.tech[e].descriptionFunction():tech.tech[e].description}</div></div>`},gunTechText(e,t){const o=tech.tech[e].count>0?`(${tech.tech[e].count+1}x)`:"",s=localSettings.isHideImages?powerUps.hideStyle:`style="background-image: url('img/${tech.tech[e].name}.webp');"`;return`<div class="choose-grid-module card-background ${level.blurryChoices&&Math.random()<.6?"blurry-text":""}" onclick="${t}" onauxclick="${t}"${s}>\n                <div class="card-text">\n                <div class="grid-title">         \n                <span style="position:relative;">\n                    <div class="circle-grid-title tech" style="position:absolute; top:0.12em; left:0;opacity:0.8;"></div>\n                    <div class="circle-grid-title gun" style="position:absolute; top:0.12em; left:10px; opacity:0.65;"></div>\n                </span>\n                &nbsp; &nbsp; &nbsp; &nbsp;  &nbsp; ${tech.tech[e].name} ${o}</div>\n                ${tech.tech[e].descriptionFunction?tech.tech[e].descriptionFunction():tech.tech[e].description}</div></div>`},junkTechText(e,t){const o=tech.tech[e].count>0?`(${tech.tech[e].count+1}x)`:"",s=localSettings.isHideImages?powerUps.hideStyle:"style=\"background-size: contain;background-repeat: no-repeat;background-image: url('img/junk.webp');\"";return`<div id = "junk-${e}" class="choose-grid-module card-background ${level.blurryChoices&&Math.random()<.6?"blurry-text":""}" onclick="${t}" onauxclick="${t}"${s}>\n                <div class="card-text">\n                <div class="grid-title"><div class="circle-grid-title junk"></div> &nbsp; ${tech.tech[e].name} ${o}</div>\n                ${tech.tech[e].descriptionFunction?tech.tech[e].descriptionFunction():tech.tech[e].description}</div></div>`},incoherentTechText:(e,t)=>`<div class="choose-grid-module card-background" ${localSettings.isHideImages?powerUps.hideStyle:`style="background-image: url('img/${tech.tech[e].name}.webp');"`}>\n                <div class="card-text" style = "background-color: #efeff5;">\n                <div class="grid-title" style = "color: #ddd;font-weight: normal;">incoherent</div> <br> <br>\n                </div></div>`,gun:{name:"gun",color:"#26a",size:()=>35,effect(){if(m.alive){let t=[];for(let o=0;o<b.guns.length;o++)b.guns[o].have||t.push(o);if(t.length>0||!tech.isSuperDeterminism){let s=2+tech.extraChoices+(tech.isInPilot?1:3)*(8===m.fieldMode)-level.fewerChoices;function e(e){for(let o=0;o<t.length;o++)if(t[o]===e)return void t.splice(o,1)}tech.isCancelTech&&1===tech.cancelTechCount&&(s*=3,tech.cancelTechCount++),tech.isDeterminism&&(s=1),s=Math.min(s,t.length);for(let i=0;i<b.guns.length&&!(t.length-1<s);i++)b.guns[i].isRecentlyShown&&e(i);for(let c=0;c<b.guns.length;c++)b.guns[c].isRecentlyShown=!1;let n=powerUps.buildColumns(s,"gun");for(let a=0;a<s;a++){const l=t[Math.floor(Math.seededRandom(0,t.length))];if(n+=powerUps.gunText(l,`powerUps.choose('gun',${l})`),b.guns[l].isRecentlyShown=!0,e(l),t.length<1)break}if(tech.isExtraBotOption){const r=[];for(let d=0,h=tech.tech.length;d<h;d++)tech.tech[d].isBotTech&&tech.tech[d].count<tech.tech[d].maxCount&&tech.tech[d].allowed()&&r.push(d);if(r.length>0){const p=r[Math.floor(Math.random()*r.length)],u=tech.tech[p].count>0?`(${tech.tech[p].count+1}x)`:"",g=localSettings.isHideImages?powerUps.hideStyle:`style="background-image: url('img/${tech.tech[p].name}.webp');"`;n+=`<div class="choose-grid-module card-background ${level.blurryChoices&&Math.random()<.6?"blurry-text":""}" onclick="powerUps.choose('tech',${p})" ${g}>\n                                    <div class="card-text">\n                                    <div class="grid-title"><span  style = "font-size: 150%;font-family: 'Courier New', monospace;">⭓▸●■</span> &nbsp; ${tech.tech[p].name} ${u}</div>\n                                    ${tech.tech[p].descriptionFunction?tech.tech[p].descriptionFunction():tech.tech[p].description}</div></div>`}}tech.isOneGun&&b.inventory.length>0&&(n+='<div style = "color: #f24">replaces your current gun</div>'),document.getElementById("choose-grid").innerHTML=n,powerUps.showDraft()}}}},field:{name:"field",color:"#0cf",size:()=>45,effect(){if(m.alive){let t=[];for(let s=1;s<m.fieldUpgrades.length;s++)s!==m.fieldMode&&t.push(s);let o=2+tech.extraChoices+(tech.isInPilot?1:3)*(8===m.fieldMode)-level.fewerChoices;function e(e){for(let o=0;o<t.length;o++)if(t[o]===e)return void t.splice(o,1)}tech.isCancelTech&&1===tech.cancelTechCount&&(o*=3,tech.cancelTechCount++),tech.isDeterminism&&(o=1),o=Math.max(1,Math.min(o,t.length));for(let n=0;n<m.fieldUpgrades.length&&!(t.length-1<o);n++)m.fieldUpgrades[n].isRecentlyShown&&e(n);for(let i=0;i<m.fieldUpgrades.length;i++)m.fieldUpgrades[i].isRecentlyShown=!1;if(t.length>0||tech.isExtraBotOption){let c=powerUps.buildColumns(o,"field");for(let a=0;a<o;a++){const l=t[Math.floor(Math.seededRandom(0,t.length))];if(c+=powerUps.fieldText(l,`powerUps.choose('field',${l})`),m.fieldUpgrades[l].isRecentlyShown=!0,e(l),t.length<1)break}if(tech.isExtraBotOption){const r=[];for(let d=0,h=tech.tech.length;d<h;d++)tech.tech[d].isBotTech&&tech.tech[d].count<tech.tech[d].maxCount&&tech.tech[d].allowed()&&r.push(d);if(r.length>0){const p=r[Math.floor(Math.random()*r.length)],u=tech.tech[p].count>0?`(${tech.tech[p].count+1}x)`:"",g=localSettings.isHideImages?powerUps.hideStyle:`style="background-image: url('img/${tech.tech[p].name}.webp');"`;c+=`<div class="choose-grid-module card-background ${level.blurryChoices&&Math.random()<.6?"blurry-text":""}" onclick="powerUps.choose('tech',${p})" ${g}>\n                                    <div class="card-text">\n                                    <div class="grid-title"><span  style = "font-size: 150%;font-family: 'Courier New', monospace;">⭓▸●■</span> &nbsp; ${tech.tech[p].name} ${u}</div>\n                                    ${tech.tech[p].descriptionFunction?tech.tech[p].descriptionFunction():tech.tech[p].description}</div></div>`}}document.getElementById("choose-grid").innerHTML=c,powerUps.showDraft()}}}},tech:{name:"tech",color:"hsl(246,100%,77%)",size:()=>42,effect(){if(m.alive){let t=[];optionLengthNoDuplicates=0;for(let s=0;s<tech.tech.length;s++)if(tech.tech[s].count<tech.tech[s].maxCount&&tech.tech[s].allowed()&&!tech.tech[s].isBanished){tech.tech[s].frequency>0&&optionLengthNoDuplicates++;for(let n=0,i=tech.tech[s].frequency;n<i;n++)t.push(s)}function e(e){for(let o=t.length-1;o>-1;o--)if(e===t[o]&&(t.splice(o,1),optionLengthNoDuplicates--),t.length<1)return}let o=3+tech.extraChoices+(tech.isInPilot?1:3)*(8===m.fieldMode)-level.fewerChoices;if(tech.isCancelTech&&1===tech.cancelTechCount&&(o*=3,tech.cancelTechCount++),tech.isDeterminism&&(o=1),o=Math.max(1,Math.min(o,t.length)),optionLengthNoDuplicates<o+1&&(o=optionLengthNoDuplicates,tech.isBanish)){for(let c=0,a=tech.tech.length;c<a;c++)"decoherence"===tech.tech[c].name&&powerUps.ejectTech(c,!0);simulation.inGameConsole("decoherence <span class='color-var'>tech</span> ejected<br>options reset")}if(tech.tooManyTechChoices&&(tech.tooManyTechChoices=!1,o=optionLengthNoDuplicates),optionLengthNoDuplicates>o)for(let l=0;l<tech.tech.length&&optionLengthNoDuplicates>o;l++)tech.tech[l].isRecentlyShown&&e(l);for(let r=0;r<tech.tech.length;r++)tech.tech[r].isRecentlyShown=!1;if(t.length>0){let d=powerUps.buildColumns(o,"tech");if(addTech=e=>{tech.tech[e].isFieldTech?d+=powerUps.fieldTechText(e,`powerUps.choose('tech',${e})`):tech.tech[e].isGunTech?d+=powerUps.gunTechText(e,`powerUps.choose('tech',${e})`):tech.tech[e].isJunk?d+=powerUps.junkTechText(e,`powerUps.choose('tech',${e})`):tech.tech[e].isSkin?d+=powerUps.skinTechText(e,`powerUps.choose('tech',${e})`):tech.tech[e].isInstant?d+=powerUps.instantTechText(e,`powerUps.choose('tech',${e})`):d+=powerUps.techText(e,`powerUps.choose('tech',${e})`)},tech.isRetain)for(let h=0,p=powerUps.retainList.length;h<p;h++)for(let u=0,g=tech.tech.length;u<g;u++)tech.tech[u].name===powerUps.retainList[h]&&tech.tech[u].count<tech.tech[u].maxCount&&tech.tech[u].allowed()&&tech.tech[u].frequency>0&&addTech(u);for(let v=0;v<o&&!(t.length<1);v++)if(Math.random()<tech.junkChance+level.junkAdded){const y=[];for(let w=0;w<tech.tech.length;w++)tech.tech[w].isJunk&&y.push(w);chooseJUNK=y[Math.floor(Math.random()*y.length)],tech.isRetain&&powerUps.retainList.push(tech.tech[chooseJUNK].name),d+=powerUps.junkTechText(chooseJUNK,`powerUps.choose('tech',${chooseJUNK})`)}else{const f=t[Math.floor(Math.seededRandom(0,t.length))];tech.isBanish&&(tech.tech[f].isBanished=!0,0===v&&simulation.inGameConsole(`options.length = ${optionLengthNoDuplicates} <em class='color-text'>//removed from pool by decoherence</em>`)),e(f),tech.tech[f].isRecentlyShown=!0,tech.isRetain&&!powerUps.retainList.includes(tech.tech[f].name)&&powerUps.retainList.push(tech.tech[f].name),addTech(f)}if(tech.isExtraBotOption){const U=[];for(let x=0,M=tech.tech.length;x<M;x++)tech.tech[x].isBotTech&&tech.tech[x].count<tech.tech[x].maxCount&&tech.tech[x].allowed()&&!tech.tech[x].isRecentlyShown&&U.push(x);if(U.length>0){const $=U[Math.floor(Math.random()*U.length)],C=tech.tech[$].count>0?`(${tech.tech[$].count+1}x)`:"",k=localSettings.isHideImages?powerUps.hideStyle:`style="background-image: url('img/${tech.tech[$].name}.webp');"`;d+=`<div class="choose-grid-module card-background ${level.blurryChoices&&Math.random()<.6?"blurry-text":""}" onclick="powerUps.choose('tech',${$})" ${k}>\n                                    <div class="card-text">\n                                    <div class="grid-title"><span  style = "font-size: 150%;font-family: 'Courier New', monospace;">⭓▸●■</span> &nbsp; ${tech.tech[$].name} ${C}</div>\n                                    ${tech.tech[$].descriptionFunction?tech.tech[$].descriptionFunction():tech.tech[$].description}</div></div>`}}if(tech.isMassProduction)for(let T=0,S=tech.tech.length;T<S;T++)if(tech.tech[T].isMassProduction){const I=localSettings.isHideImages?powerUps.hideStyle:`style="background-image: url('img/${tech.tech[T].name}.webp');"`;d+=`<div class="choose-grid-module card-background ${level.blurryChoices&&Math.random()<.6?"blurry-text":""}" onclick="powerUps.choose('tech',${T})" ${I}>\n                                        <div class="card-text">\n                                        <div class="grid-title">${tech.tech[T].name}</div>\n                                        ${tech.tech[T].descriptionFunction?tech.tech[T].descriptionFunction():tech.tech[T].description}</div></div>`}if(tech.isExtraGunField)if(Math.random()>.5&&b.inventory.length<b.guns.length){let E=[];for(let L=0;L<b.guns.length;L++)b.guns[L].have||E.push(L);const B=E[Math.floor(Math.seededRandom(0,E.length))];d+=powerUps.gunText(B,`powerUps.choose('gun',${B})`)}else{let D=[];for(let R=1;R<m.fieldUpgrades.length;R++)R!==m.fieldMode&&D.push(R);const P=D[Math.floor(Math.seededRandom(0,D.length))];d+=powerUps.fieldText(P,`powerUps.choose('field',${P})`)}if(tech.isBrainstorm&&!tech.isBrainstormActive&&!simulation.isChoosing){tech.isBrainstormActive=!0;let G=1,H=performance.now();const F=e=>{e-H>tech.brainStormDelay*G&&simulation.isChoosing&&(G++,powerUps.tech.effect(),document.getElementById("choose-grid").style.pointerEvents="auto",document.body.style.cursor="auto",document.getElementById("choose-grid").style.transitionDuration="0s"),G<10&&simulation.isChoosing&&tech.isBrainstormActive?requestAnimationFrame(F):tech.isBrainstormActive=!1};requestAnimationFrame(F)}document.getElementById("choose-grid").innerHTML=d,powerUps.showDraft()}}}},retainList:[],entanglement:{name:"entanglement",color:"#fff",size:()=>40,effect(){if(m.alive&&localSettings.entanglement){let e=powerUps.buildColumns(3,"entanglement");if(localSettings.entanglement.fieldIndex&&localSettings.entanglement.fieldIndex!==m.fieldMode){const t=localSettings.entanglement.fieldIndex;e+=powerUps.fieldText(t,`powerUps.choose('field',${t})`)}for(let t=0;t<localSettings.entanglement.gunIndexes.length;t++){const o=localSettings.entanglement.gunIndexes[t];let s=!1;for(let e=0;e<b.inventory.length;e++)b.inventory[e]===o&&(s=!0);s||(e+=powerUps.gunText(o,`powerUps.choose('gun',${o})`))}for(let t=0;t<localSettings.entanglement.techIndexes.length;t++){let o,s=!1;for(let e=0;e<tech.tech.length;e++)if(localSettings.entanglement.techIndexes[t]===tech.tech[e].name){o=e,s=!0;break}if(s&&tech.tech[o]){const t=tech.tech[o].count>0?`(${tech.tech[o].count+1}x)`:"";null===o||tech.tech[o].count+1>tech.tech[o].maxCount||!tech.tech[o].allowed()?e+=powerUps.incoherentTechText(o):tech.tech[o].isFieldTech?e+=powerUps.fieldTechText(o,`powerUps.choose('tech',${o})`):tech.tech[o].isGunTech?e+=powerUps.gunTechText(o,`powerUps.choose('tech',${o})`):tech.tech[o].isLore?e+=`<div class="choose-grid-module" onclick="powerUps.choose('tech',${o})"><div class="grid-title lore-text"><div class="circle-grid-title lore"></div> &nbsp; ${tech.tech[o].name} ${t}</div>${tech.tech[o].descriptionFunction?tech.tech[o].descriptionFunction():tech.tech[o].description}</div>`:tech.tech[o].isJunk?e+=powerUps.junkTechText(o,`powerUps.choose('tech',${o})`):tech.tech[o].isSkin?e+=powerUps.skinTechText(o,`powerUps.choose('tech',${o})`):tech.tech[o].isInstant?e+=powerUps.instantTechText(o,`powerUps.choose('tech',${o})`):e+=powerUps.techText(o,`powerUps.choose('tech',${o})`)}}document.getElementById("choose-grid").innerHTML=e,powerUps.showDraft(),localSettings.entanglement=void 0,localSettings.isAllowed&&localStorage.setItem("localSettings",JSON.stringify(localSettings))}}},spawnDelay(e,t,o=2){t*=o;let s=()=>{if(t>0&&(m.alive&&requestAnimationFrame(s),!simulation.paused&&!simulation.isChoosing&&powerUp.length<300&&!(--t%o))){const t={x:m.pos.x+50*(Math.random()-.5),y:m.pos.y+50*(Math.random()-.5)};powerUps.spawn(t.x,t.y,e)}};requestAnimationFrame(s)},onPickUp(e){powerUps.research.currentRerollCount=0,tech.isTechDamage&&"tech"===e.name&&m.takeDamage(.1),tech.isMassEnergy&&(m.energy+=2*level.isReducedRegen),tech.isMineDrop&&bullet.length<150&&Math.random()<.5&&(tech.isLaserMine&&input.down?b.laserMine(e.position):b.mine(e.position,{x:0,y:0},0)),level.isNoDamage&&(level.noDamageCycle=m.cycle)},spawnRandomPowerUp(e,t){!tech.isEnergyHealth&&Math.random()*Math.random()-.3>Math.sqrt(m.health)||Math.random()<.04?powerUps.spawn(e,t,"heal"):Math.random()<.15&&b.inventory.length>0?powerUps.spawn(e,t,"ammo"):Math.random()<7e-4*(3-b.inventory.length)?powerUps.spawn(e,t,"gun"):Math.random()<.0016?powerUps.spawn(e,t,"field"):tech.isCouplingPowerUps&&Math.random()<.17?powerUps.spawn(e,t,"coupling"):(Math.random()<.02||tech.isBoostPowerUps&&Math.random()<.14)&&powerUps.spawn(e,t,"boost")},randomPowerUpCounter:0,isFieldSpawned:!1,spawnBossPowerUp(e,t){if("final"!==level.levels[level.onLevel]){function o(){powerUps.randomPowerUpCounter++,powerUps.randomPowerUpCounter>.1*Math.max(level.levelsCleared,9)*Math.random()?(powerUps.randomPowerUpCounter=0,Math.random()<.97?powerUps.spawn(e,t,"tech"):powerUps.spawn(e,t,"gun")):m.health<.65&&!tech.isEnergyHealth?(powerUps.spawn(e,t,"heal"),powerUps.spawn(e,t,"heal")):(powerUps.spawn(e,t,"ammo"),powerUps.spawn(e,t,"ammo"))}powerUps.isFieldSpawned?o():(powerUps.isFieldSpawned=!0,powerUps.spawn(e,t,"field")),simulation.difficultyMode<3&&o(),powerUps.spawn(e+25,t-25,"ammo",!1),simulation.difficultyMode>5&&powerUps.spawn(e-25,t-50,"ammo",!1),tech.isAddRemoveMaxHealth&&(powerUps.spawn(e+20,t,"tech",!1),powerUps.spawn(e-20,t,"research",!1),powerUps.spawn(e-40,t,"research",!1),powerUps.spawn(e+40,t,"research",!1),powerUps.spawn(e,t+20,"research",!1),powerUps.spawn(e,t-20,"heal",!1),powerUps.spawn(e,t+40,"heal",!1),powerUps.spawn(e,t-40,"heal",!1)),tech.isResearchReality&&powerUps.spawnDelay("research",6),tech.isBanish&&powerUps.spawnDelay("research",3),tech.isCouplingNoHit&&powerUps.spawnDelay("coupling",9)}},chooseRandomPowerUp(e,t){Math.random()<.5?powerUps.spawn(e,t,"heal",!1):powerUps.spawn(e,t,"ammo",!1)},addResearchToLevel(){if(level.levelsCleared<17-3*simulation.difficultyMode&&mob.length){const e=Math.floor(Math.random()*mob.length);powerUps.spawn(mob[e].position.x,mob[e].position.y,"research")}},spawnStartingPowerUps(e,t){if(level.levelsCleared<4||simulation.difficultyMode<2)if(level.levelsCleared>1&&simulation.difficultyMode<7&&powerUps.spawn(e,t,"tech"),0===b.inventory.length)powerUps.spawn(e,t,"gun",!1);else if(0===tech.totalCount)powerUps.spawn(e-22,t-50,"ammo",!1),powerUps.spawn(e,t,"tech",!1);else if(1===b.inventory.length)if(Math.random()<.4)powerUps.spawn(e,t,"gun",!1);else for(let o=0;o<5;o++)powerUps.spawn(e,t,"ammo",!1);else for(let o=0;o<4;o++)powerUps.spawnRandomPowerUp(e,t);else for(let o=0;o<3;o++)powerUps.spawnRandomPowerUp(e,t)},ejectTech(e="random",t=!1){if(!simulation.isChoosing||t){if("random"===e){const t=[];for(let e=0;e<tech.tech.length;e++)tech.tech[e].count>0&&!tech.tech[e].isInstant&&t.push(e);if(t.length){e=t[Math.floor(Math.random()*t.length)],simulation.inGameConsole(`<span class='color-var'>tech</span>.remove("<strong class='color-text'>${tech.tech[e].name}</strong>")`);for(let t=0;t<tech.tech[e].count;t++)powerUps.directSpawn(m.pos.x,m.pos.y,"tech");return tech.removeCount+=tech.tech[e].count,tech.tech[e].remove(),tech.totalCount-=tech.tech[e].count,tech.tech[e].count=0,tech.tech[e].isLost=!0,simulation.updateTechHUD(),m.fieldCDcycle=m.cycle+30,!0}return!1}if(tech.tech[e].count&&!tech.tech[e].isInstant){simulation.inGameConsole(`<span class='color-var'>tech</span>.remove("<strong class='color-text'>${tech.tech[e].name}</strong>")`);for(let t=0;t<tech.tech[e].count;t++)powerUps.directSpawn(m.pos.x,m.pos.y,"tech");return tech.tech[e].remove(),tech.totalCount-=tech.tech[e].count,tech.removeCount+=tech.tech[e].count,tech.tech[e].count=0,tech.tech[e].isLost=!0,simulation.updateTechHUD(),m.fieldCDcycle=m.cycle+30,!0}return!1}},pauseEjectTech(e){!tech.isPauseEjectTech&&!simulation.testing||simulation.isChoosing||tech.tech[e].isInstant||(tech.tech[e].frequency=0,powerUps.ejectTech(e),m.immuneCycle<m.cycle&&m.takeDamage(.01*tech.pauseEjectTech,!1),tech.pauseEjectTech*=1.3,document.getElementById(`${e}-pause-tech`).style.textDecoration="line-through",document.getElementById(`${e}-pause-tech`).style.animation="",document.getElementById(`${e}-pause-tech`).onclick=null)},randomize(e){const t=Math.min(10,powerUp.length);for(let o=0;o<t;o++){const t=Vector.rotate({x:1,y:0},6.28*Math.random());Matter.Body.setPosition(powerUp[o],Vector.add(e,Vector.mult(t,20+25*Math.random()))),Matter.Body.setVelocity(powerUp[o],Vector.mult(t,20))}let o=["heal","research",tech.isBoostReplaceAmmo?"boost":"ammo"];m.coupling&&o.push("coupling"),tech.isBoostPowerUps&&o.push("boost");let s=[],n=[];for(let e=0;e<powerUp.length;e++)"tech"===powerUp[e].name||"gun"===powerUp[e].name||"field"===powerUp[e].name?s.push(e):n.push(e);if(n.length>2&&Math.random()<.66){for(let e=0;e<3;e++)for(let e=0;e<powerUp.length;e++)if("heal"===powerUp[e].name||"research"===powerUp[e].name||"ammo"===powerUp[e].name||"coupling"===powerUp[e].name||"boost"===powerUp[e].name){Matter.Composite.remove(engine.world,powerUp[e]),powerUp.splice(e,1);break}o=["tech","tech","tech","gun","gun","field"],powerUps.directSpawn(e.x,e.y,o[Math.floor(Math.random()*o.length)],!1)}else if(s.length>0&&Math.random()<.5){const t=s[Math.floor(Math.random()*s.length)];for(let t=0;t<3;t++)powerUps.directSpawn(e.x,e.y,o[Math.floor(Math.random()*o.length)],!1);Matter.Composite.remove(engine.world,powerUp[t]),powerUp.splice(t,1)}else if(n.length>0){const t=Math.floor(Math.random()*powerUp.length);o=o.filter(e=>e!==powerUp[t].name),powerUps.directSpawn(e.x,e.y,o[Math.floor(Math.random()*o.length)],!1),Matter.Composite.remove(engine.world,powerUp[t]),powerUp.splice(t,1)}},spawn(e,t,o,s=!0,n=powerUps[o].size()){tech.isSuperDeterminism&&"research"===o||(tech.isBoostReplaceAmmo&&"ammo"===o&&(n=powerUps[o="boost"].size()),powerUps.directSpawn(e,t,o,s,n),!level.isNextLevelPowerUps&&Math.random()<tech.duplicationChance()&&(powerUps.directSpawn(e,t,o,s,n,!0),powerUp[powerUp.length-1].isDuplicated=!0,tech.isDupEnergy&&(m.energy*=2)))},directSpawn(e,t,o,s=!0,n=powerUps[o].size(),i=!1){if(level.isNextLevelPowerUps)return void powerUps.powerUpStorage.push({name:o,size:n});let c,a=powerUp.length,l={density:.001,frictionAir:.03,restitution:.85,collisionFilter:{group:0,category:cat.powerUp,mask:cat.map|cat.powerUp},color:powerUps[o].color,effect:powerUps[o].effect,name:powerUps[o].name,size:n};i?(c=tech.isPowerUpsVanish?3:Math.floor(4+2*Math.random()),l.isDuplicated=!0):(l.inertia=1/0,c=12),powerUp[a]=Matter.Bodies.polygon(e,t,c,n,l),s&&Matter.Body.setVelocity(powerUp[a],{x:15*(Math.random()-.5),y:-9*Math.random()-3}),Composite.add(engine.world,powerUp[a])},powerUpStorage:[]};